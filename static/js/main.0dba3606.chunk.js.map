{"version":3,"sources":["app/utils/crossIcon-js/ios-cross.svg","app/utils/BackIcon-js/Back.js","../node_modules/@ionic/pwa-elements/dist/esm-es5 lazy /^/.*/.entry/.js$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/@ionic/core/dist/esm-es5 lazy /^/.*/.entry/.js$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm/legacy lazy /^/.*/.entry/.js$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","app/utils/BackIcon-js/ios-BackIcon.svg","app/utils/BackIcon-js/md-BackIcon.svg","app/services/httpServices.tsx","app/services/endPoints.tsx","app/environments/environments.dev.ts","app/environments/environment.ts","app/environments/environments.unt.ts","app/environments/environments.uat.ts","app/environments/environments.prod.ts","app/utils/constants.tsx","app/reducers/Login/reducer.tsx","app/reducers/Home/reducer.tsx","app/reducers/myload/reducer.tsx","app/reducers/Search/reducer.tsx","app/store/CombineReducers.tsx","app/store/index.tsx","app/services/gps.service.ts","app/services/environment.ts","app/actions/Login/action.tsx","app/utils/Analytics.tsx","app/actions/Home/action.tsx","app/actions/Search/action.tsx","app/services/common.services.tsx","app/services/azure-maps.service.ts","app/services/google-maps.service.ts","app/utils/common.tsx","app/actions/App/action.tsx","app/utils/ToastMessage.ts","app/models/userPforile/userProfile.modal.ts","app/services/authentication.service.ts","app/services/vault.service.ts","app/services/Auth.tsx","app/services/Vault.tsx","app/services/browser-auth.plugin.ts","app/services/browser-auth.service.ts","app/pages/Login/Login.page.tsx","app/utils/useNetwork.tsx","app/containers/LoginContainer/LoginContainer.tsx","app/reducers/App/reducer.tsx","app/selectors/selector.tsx","app/containers/PrivateRoute/PrivateRoute.tsx","app/utils/request.tsx","app/actions/Favorite/action.tsx","app/saga/Search/Search.saga.tsx","app/actions/myload/action.tsx","app/utils/mock_Data.tsx","app/actions/BookLoad/action.tsx","app/actions/carrierAssign/action.tsx","app/selectors/Myload/selector.tsx","app/saga/App/saga.tsx","app/saga/MyLoad/saga.tsx","app/saga/CarrierAssign/saga.tsx","app/utils/checkStore.tsx","app/utils/sagaInjectors.tsx","app/utils/injectSaga.tsx","app/utils/reducerInjectors.tsx","app/utils/injectReducer.tsx","app/components/shared/NewUIComponents/DropDown.tsx","app/pages/Home/RecommendedError.tsx","app/models/home/Search.model.tsx","app/components/shared/NewUIComponents/searchResultsDesktop.tsx","app/components/shared/NewUIComponents/OriginInput.tsx","app/components/shared/NewUIComponents/RadiusRange.tsx","app/utils/getTimePeriod.tsx","app/utils/formatData.tsx","app/components/shared/NewUIComponents/DatePicker.tsx","app/components/app/Search/PickupData.tsx","app/components/app/Search/DeliverypData.tsx","app/pages/Search/New/NewPage.page.tsx","app/selectors/Search/selector.tsx","app/models/home/SearchResults.model.tsx","app/containers/SearchContainer/NewContainer/NewContainer.tsx","app/pages/Search/Recent/RecentSearchDesktop.tsx","app/components/PullToRefresh/PullToRefresh.tsx","app/pages/Search/Recent/RecentPage.page.tsx","app/reducers/Recent/reducer.tsx","app/selectors/RecentSearch/selector.tsx","app/saga/Recent/saga.tsx","app/actions/Recent/action.tsx","app/models/home/recent.model.tsx","app/models/home/favorite.model.tsx","app/components/CustomModal/CustomModal.tsx","app/containers/SearchContainer/searchUtility.tsx","app/containers/SearchContainer/RecentContainer/RecentContainer.tsx","app/reducers/Favorite/reducer.tsx","app/selectors/FavouriteSearch/selector.tsx","app/containers/SearchContainer/FavouriteContainer/FavouriteContainer.tsx","app/schemas/Exicution/exicution.schema.tsx","app/components/app/home/Loads.tsx","app/models/stopActivity.model.ts","app/components/app/home/Load-Tile-Header.tsx","app/components/app/home/Load-Tile-Footer.tsx","app/components/app/home/carrier-assign-load-header.tsx","app/components/app/home/Load-Tile.tsx","app/components/core/Dropdown/dropdown.tsx","app/utils/crossIcon-js/cross.mjs","app/components/NetworkErrorToaster/NetworkErrorToaster.tsx","app/components/app/Bars/segment-controll.tsx","app/components/app/Manage/IonImage.tsx","app/components/ImageCapture/ImageCapture.tsx","app/components/app/Bars/Bar-header.tsx","app/pages/Search/SearchResults/SearchResults.page.tsx","app/containers/SearchContainer/SearchResultContainer/SearchResultContainer.tsx","app/containers/SearchContainer/sectionContainer/SectionContainer.tsx","app/pages/Search/search.page.tsx","app/containers/SearchContainer/SearchContainer.tsx","app/components/core/FilterWithSort/FilterWithSort.tsx","app/components/shared/ListItems/index.tsx","app/components/app/Manage/IonUser.tsx","app/pages/Manage/ManageUser/ManageUserEmpty.page.tsx","app/pages/Manage/ManageUser/ManageUserUtil.tsx","app/pages/Manage/ManageUser/ManageUser.page.tsx","app/pages/Manage/ManageUser/ManageUserProfile.page.tsx","app/pages/Manage/ManageUser/ManageUserProfileFormDesktop.page.tsx","app/pages/Manage/ManageUser/ManageProfileDesktop.page.tsx","app/pages/Manage/ManageUser/ManageUserProfileForm.page.tsx","app/actions/manage/action.tsx","app/containers/ManageContainer/ManageUserContainer/ManageUserUtil.tsx","app/containers/ManageContainer/ProfileContainer/ProfileContainer.tsx","app/reducers/manage/reducer.tsx","app/selectors/Manage/selector.tsx","app/models/manage/carrier-profile.model.ts","app/components/app/carrierInsuranceCard/carrierInsuranceCard.tsx","app/components/app/carrierInsuranceCard/CarrierInfoAccordian.tsx","app/pages/Manage/CarrierProfile/CarrierProfile.utils.tsx","app/pages/Manage/CarrierProfile/CarrierProfileDesktop.tsx","app/pages/Manage/CarrierProfile/CarrierProfile.page.tsx","app/containers/ManageContainer/CarrieProfileContainer/CarrierProfileContainer.tsx","app/saga/Manage/ManageCapacitySaga.tsx","app/saga/Manage/ManageUserSaga.tsx","app/saga/Manage/ManageCarrierSaga.tsx","app/saga/Manage/saga.tsx","app/containers/ManageContainer/ManageUserContainer/ManageUserContainer.tsx","app/utils/states.tsx","app/pages/Manage/ManageCapacity/ManagaCapacityUtil.tsx","app/components/app/Manage/CapacityCard.tsx","app/models/manage/capacity.model.ts","app/components/EmptyListComponent/EmptyListComponent.tsx","app/utils/helper.tsx","app/components/core/FilterOnly/FilterOnly.tsx","app/components/shared/dataTableComponent/data-tabel.page.tsx","app/pages/Manage/ManageCapacity/ManageCapacity.page.tsx","app/pages/Manage/ManageCapacity/ManageCapacityViewDesktop.page.tsx","app/pages/Manage/ManageCapacity/ManageCapacityView.page.tsx","app/components/shared/pickupTimeComponent/pickupTimeComponent.tsx","app/components/shared/PickupDays/PickupDaysComponent.tsx","app/components/shared/SelectComponent/SelectComponent.tsx","app/pages/Manage/ManageCapacity/ManageCapacityFormDesktop.page.tsx","app/pages/Manage/ManageCapacity/ManageCapacityForm.page.tsx","app/containers/ManageContainer/ManageCapacityContainer/ManageCapacityContainer.tsx","app/containers/ManageContainer/ManageCapacityContainer/ManageCapacityAddContainer.tsx","app/containers/ManageContainer/ManageCapacityContainer/ManageCapacityEditContainer.tsx","app/containers/ManageContainer/ManageCapacityContainer/ManageCapacityViewContainer.tsx","app/containers/ManageContainer/sectionContainer/SectionContainer.tsx","app/pages/Manage/ManageDesktop.page.tsx","app/pages/Manage/Manage.page.tsx","app/containers/ManageContainer/ManageContainer.tsx","app/pages/Execute/ExecutePage.page.tsx","app/models/ExicutionLoads.model.tsx","app/containers/ExecuteContainer/ExecuteContainer.tsx","app/components/shared/GoogleMap/map/map.type.ts","app/selectors/Home/selector.tsx","app/utils/FilesSaver.ts","app/components/app/StopDetails/TermsAndCondition.tsx","app/components/shared/GoogleMap/map/map.tsx","app/components/shared/GoogleMap/map/directionsService.tsx","app/components/app/LoadMap/LoadMap.tsx","app/schemas/BookLoad/BookLoad.schema.tsx","app/components/app/BookLoadModal/BookLoadModal.tsx","app/components/app/BookLoadModal/BookLoadConfirmModal.tsx","app/models/home/BookLoad.model.tsx","app/models/home/GetShipment.model.tsx","app/components/app/LoadMap/LoadMapSatellite.tsx","app/models/home/CarrierAssign.model.tsx","app/reducers/carrierAssign/reducer.tsx","app/models/home/CarrierAssignLoad.model.tsx","app/selectors/carrierAssign/selector.tsx","app/containers/ExecuteContainer/CarrierAssignedModal/CarrierAssignedModal.tsx","app/models/home/StartTrip.model.ts","app/components/app/ShipmentUpdateScreen/eta.tsx","app/components/app/ShipmentUpdateScreen/arrival.tsx","app/components/app/ShipmentUpdateScreen/departure.tsx","app/components/app/ShipmentUpdateScreen/trailerComboBox.tsx","app/components/app/ShipmentUpdateScreen/trailerIn.tsx","app/components/app/ShipmentUpdateScreen/trailerOut.tsx","app/components/app/ShipmentUpdateScreen/referenceDialog.tsx","app/components/app/ShipmentUpdateScreen/ShipmentStopDetails.tsx","app/components/app/ShipmentUpdateScreen/startTrip.tsx","app/models/home/updateStop.model.tsx","app/models/home/InTransit.model.ts","app/components/app/ShipmentUpdateScreen/ShipmentCard.tsx","app/models/home/StartTripExicution.model.tsx","app/pages/Execute/AssignDriverList/DriverCard.tsx","app/pages/Execute/CarrierAssigned/DriverModalDesktop.tsx","app/pages/LoadDetails/LoadDetails.page.tsx","app/models/home/WatchedLoads.model.tsx","app/containers/LoadDetailsContainer/LoadDetailsContainer.tsx","app/components/app/LogoutPopup/LogoutPopup.tsx","app/pages/Logout/Logout.page.tsx","app/models/home/login.model.tsx","app/containers/LogOutContainer/LogOutContainer.tsx","app/pages/Menu/Menu.page.tsx","app/reducers/Menu/reducer.tsx","app/saga/Menu/saga.tsx","app/actions/Menu/action.tsx","app/containers/MenuContainer/MenuContainer.tsx","app/containers/ManageContainer/ProfileContainer/ProfileEditContainer.tsx","app/pages/Menu/htmlParsingComponent.tsx","app/pages/Menu/FormatTextComponent/formatText.tsx","app/pages/Menu/GetDataType.tsx","app/pages/Menu/faq_menu/cardContent.tsx","app/selectors/Menu/selector.tsx","app/models/home/Menu.model.tsx","app/pages/Menu/SubmitFeedback/Feedback.tsx","app/pages/Menu/faq_menu/Accordion.tsx","app/pages/Menu/faq_menu/menuCommonPage.tsx","app/pages/Menu/DeviceInfo/DeviceInfo.tsx","app/pages/Manage/ManageUser/ManageUserProfileDesktop.page.tsx","app/containers/ManageContainer/ManageUserContainer/ManageUserProfileContainer.tsx","app/containers/ManageContainer/ManageUserContainer/ManageUserProfileAddContainer.tsx","app/containers/ManageContainer/ManageUserContainer/ManageUserProfileEditContainer.tsx","app/components/shared/carrierAssignedDropDown/carrierAssignedDropDown.tsx","app/components/shared/CarrierAssignFilter/DriverNameFilter.tsx","app/utils/getSortedLoads.tsx","app/pages/Execute/CarrierAssigned/CarrierAssignedPage.page.tsx","app/utils/getDriverNameList.tsx","app/pages/Execute/MyloadCommonPage.page.tsx","app/containers/ExecuteContainer/sectionContainer/MyloadSectionContainer.tsx","app/containers/ExecuteContainer/CarrierAssignedContainer/CarrierAssignedContainer.tsx","app/pages/Execute/AddDriver/AddDriver.tsx","app/containers/ExecuteContainer/AddDriverContainer/AddDriverContainer.tsx","app/reducers/driverAssign/reducer.tsx","app/pages/Execute/AssignDriverList/AssignDriverList.tsx","app/containers/ExecuteContainer/AssignDriverContainer/AssignDriverContainer.tsx","app/containers/MyLoadDetailsContainer/MyLoadDetailsContainer.tsx","app/containers/ExecuteContainer/DriverAssignedContainer/DriverAssignedContainer.tsx","app/components/app/LoadMap/LoadMapStartTrip.tsx","app/models/home/CompleteTrip.model.ts","app/components/app/ShipmentUpdateScreen/ShipmentUpdateScreen.tsx","app/containers/ExecuteContainer/InTransitContainer/InTransitContainer.tsx","app/containers/ExecuteContainer/DeliveredContainer/DeliveredContainer.tsx","app/models/home/Loads.model.tsx","app/saga/Home/saga.tsx","app/pages/Home/Segment-content.page.tsx","app/components/core/SortOnly/SortOnly.tsx","app/pages/Home/HomeTitle.tsx","app/pages/Home/Home.page.tsx","app/containers/HomeContainer/HomeContainerUtil.tsx","app/containers/HomeContainer/HomeContainer.tsx","app/components/app/Bars/Bar-bottom.tsx","app/utils/useGeolocation.ts","app/components/PermissionsAlert/PermissionAlert.tsx","app/models/home/DeviceRegister.model.tsx","app/components/Alert/Alert.tsx","app/models/home/contentStack.model.tsx","app/pages/Registration/Registration.page.tsx","app/App.tsx","app/utils/usePushNotification.tsx","app/components/app/hoc/splash/SplashHOC.tsx","index.tsx","app/utils/Bugsnag.tsx"],"names":["module","exports","ios","require","md","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","__HTTP_SERVICES","urlEntity","headers","method","data","key","requests","duration","progress","_serviceUrl","toString","cancel","http","CancelToken","source","values","url","onDownloadProgress","onUploadProgress","timeout","URL_ENDPOINTS","HOME","RECOMMENDED_LOADS","SEARCH","RECENT","FAVORITE","FAVORITE_LOADS","DRIVERS_LIST","FETCH_USER_DETAILS","USER_DETAILS","GET_USER_DETAILS","MYLOAD","CARRIER","BUY_LOAD","MANAGE","MY_CAPACITY","CARRIER_PROFILE","LOCATION_TRACKER","REGISTER_DEVICE","MORETAB","CONFIG","APP_LEVEL","SUBMITFEEDBACK","AZURE_MAPS","ACCESS_TOKEN","getURLDetails","endPoint","urlKey","value","get_Service_Url","_url","keyValue","KEYS","API_HOST","replace","Environments","Environment_Dev","ENVIROMENT_KEYS","CLIENT_ID","DISCOVERY_URL","REDIRECT_URI","FIREBASE_TOKEN","RELEASE","BUGSNAG_KEY","AZURE_MAP_CLIENT_ID","SUBSCRIPTION_KEY","AZURE_API_HOST","AZURE_REDIRECT_URL","AZURE_RESET_URL","Environment_Unt","GEO_PRE_ARRIVAL_RADIUS","GOOGLE_MAPS_API_KEY","Environment_Uat","Environment_Prod","CALL_US_NUMBER","CarrierActionTypes","Environment","enviName","__environment","this","envi","subscriptionKey","token","HTTP","__requestRestApi","response","catch","err","a","_http","__instance","get","__wrapper","__store","storeKey","getVault","vault","getValue","all","__fetchOnlineConfig","onlineConfig","length","storeValue","btoa","JSON","stringify","atob","parse","getKeys","DAEMON","LOGOUT","Anywhere","DryVan","PickUpdateError","dropUpdateError","CityError","PickupError","DropoffError","PickUpdate","Origin","GPS_TRACKING_ERROR_MESSAGE","MESSAGE_TYPE","GEOFENCE_IDENTIFIER","GEOFENCE_ACTION","SOUND_SRC","process","trim","__fetchOfflineConfig","watchedErrorText","NO_NEWORK","PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE","MODULES","HOMEMODULES","MONTH_NAMES","ExecutionStatus","BUTTON","USER_EXIST_MESSAGE","USER_BACK_TITLE","USER_BACK_MESSAGE","EMAIL_ERROR","USER_FORM_ERRORS","firstName","lastName","mobileNumber","tractorNumber","ROLES","carrierGuest","carrierDispatcher","carrierDriver","carrierAdmin","EVENT","SCREEN","TAB","STAR","RATE","sortByOptions","name","recommendedSortByOptions","OOPS_MESSAGE","Days","label","configParamsConstant","paginationSize","gpsTrackingRadiusInMiles","gpsTrackingIntervalInMinutes","geoFencePreArrivalRadiusInMiles","geoFenceEntryRadiusInMiles","roleConfigurations","home","recommended","watched","search","new","recent","favorite","MyLoad","carrierAssigned","driverAssigned","manageFinancial","driverLoads","manage","userProfile","myprofile","mypreferences","carrierprofile","manageusers","managemycapacity","more","LOGIN","ENV","USER_TYPE","Roles","RegisterFrom","EXECUTION_ERRORS","ENABLE_R2_FEATURE","BUTTONS","LOGOUTPOPUP","APPLE_DEVICES","identifier","generation","NO_AUTH_MSG","NO_ACCESS_MSG","dropDownOptions","TRAILER_PARTTEN","CARRIER_PROFILE_FOOTER","ADD_USER","initalState","lastUpdatedDate","loading","loadCount","error","currentUser","hasSession","userData","showPermissionAlert","permissionAlertMessage","permissionAlertTitle","alertError","networkStatus","connected","connectionType","deviceInfo","Hidden","loginToken","deepLinkURI","notificationData","shipmentId","userId","carrierName","carrierId","Timestamp","showPullToRefresh","appReducer","state","action","produce","draft","type","date","count","status","payload","isShowPermissionAlert","console","log","constants","session","access_token","initalHomeState","totalRecords","loaded","filter","selected","direction","apiErrorMessage","showMemberAPIError","items","watchedResults","getUserWatchedLoads","loadPostings","refreshStatus","item","index","findIndex","newItem","loadId","details","message","recpayload","recitems","recommendedResults","recommendedLoads","totalNoRecords","removedLoad","myLoadInitialState","profileImg","myLoadCardData","inTransit","myLoadCount","carrierAssignedCount","driverAssignedCount","inTransitCount","deliveredCount","confirmStart","confirmStartStatusMessage","updateStop","startTrip","buy","shipment","delivered","isGetShipment","buyLoadResponseStatus","warningDialogMessage","Constants","CONFIRM_START_INFORMATION_SUCCESS","CONFIRM_START_INFORMATION_STATUS_MESSAGE","SHOW_WARNING_DIALOG","CLEAR_WARNING_DIALOG","CLEAR_CONFIRM_START_INFORMATION_STATUS_MESSAGE","UPDATE_STOP_INFORMATION_RESPONSE","START_TRIP_INFORMATION_RESPONSE","getShipmentpayload","getShipment","CLEAR_UPDATE_STOP_INFORMATION_RESPONSE","initalSearchState","loads","searchLoads","params","allLoads","showBuyLoadAPIError","isPagination","concat","payload_","load","createReducer","injectedReducers","combineReducers","global","globalReducer","carrier","homeReducer","myload","myloadReducer","searchReducer","rootReducer","shouldClearRedux","undefined","timer","store","initialState","createOffline","offlineConfig","persist","offlineMiddleware","middleware","offlineEnhanceReducer","enhanceReducer","offlineEnhanceStore","enhanceStore","persistConfig","storage","Storage","composeEnhancers","compose","reduxSagaMonitorOptions","sagaMiddleware","createSagaMiddleware","middlewares","push","enhancers","applyMiddleware","createStore","persistReducer","runSaga","run","injectedSagas","configureStore","nativeAzureConfig","clientID","redirectUri","scope","discoveryUrl","audience","logoutUrl","platform","iosWebView","authConfig","androidToolbarColor","logLevel","webAzureConfig","clientSecret","showLoading","isPullToRefresh","hideLoading","logout","SaveDeepLinkURI","FirebaseAnalytics","Plugins","Device","logEvent","parameters","sessionFields","isPlatform","storeData","getState","App","sessionId","getSessionId","uuid","forEach","field","setScreenName","screenName","moment","Date","format","getApplicationInfoBeforeLogin","getInfo","info","channel","infoObj","os","operatingSystem","device_name","model","locationURL","__vault","GPS_Tracking_ShipmentID","sound","Audio","_userId","_carrierId","_shipmentID","_sourceTMS","_activity","_carrierScac","sequenceNo","stopId","locationId","loadDetailsTrackedShipment","lastKnownLocationArrivalGeofence","clearArrivalGeofenceStationary","clearInterval","getGPSinstance","BackgroundGeolocation","getCurrentGPS","getCurrentPosition","location","coords","latitude","longitude","getGeofenceObjects","loadStops","getGeoFence","loadStop","isPreArrivalFence","PRE_ARRIVAL","ARRIVAL","radius","notifyOnEntry","notifyOnExit","extras","messageType","GEOFENCE_PRE_ARRIVAL","GEOFENCE_ARRIVAL","geofences","preArrivalFrnce","arrivalFrnce","updateArrivalTime","currentSequenceNo","i","actualArrivalDateTime","toISOString","updateDepartureTime","isLastStop","actualDepartureDateTime","stopType","stop","removeItem","removeGeofences","cogfigureActiveGeofence","updatedsequenceNo","updateActiveGeofenceSequenceNo","getGeofences","geofence","activeGeofences","addGeofences","success","stopSequenceNo","setGPStrackingShipmentID","shipmentID","validateLoadDetails","_","isEqual","getDistanceBetweenGeolocations","lat1","lon1","lat2","lon2","unit","radlat1","Math","PI","radlat2","theta","radtheta","dist","sin","cos","acos","Session","__token","__auth","AuthSingleton","getInstance","isAuthenticated","dispatch","floor","random","getAuthResponse","id_token","addWatchLoad","removeWatchLoad","removeWatchLoadSuccess","showApiResponseError","showMemberApiError","SEARCH_DATA","loadSearchData","fetchResults","searchParams","isHideLoader","showBuyLoadError","serviceRequests","commonService","responseType","serviceProgress","_endPointEntity","_this","reject","getHeaders","__request","set_TimeOut","pgr","getErrorMessage","requestData","_dataString","isActiveSession","endPointKey","IONICWrapper","parseInt","configuration","serviceTimeout","generateAzureMapsBearerToken","getToken","accessToken","jsonObj","getTime","expires_on","generateAzureMapsAccessToken","Service","searchCurrentAddress","query","getAddress","bearer_token","addresses","removeValue","searchAddress","results","searchTimezoneByCoordinates","getTimezone","TimeZones","getGeoCoderLatLong","cityState","geometry","getRole","userRole","DomainConverter","domain","dto","create","prototype","__carrier_state","__rqData","jsonToGraphQLQuery","input","variables","isEntitled","_tab","_item","__roleConfig","includes","getActiveTab","getConfig","isActive","tab","role","Setting","some","_role","_setting","charAt","toUpperCase","slice","getDashboard","userRoles","_tabName","Tab_Types","_roleSetting","_appVault","_appAuth","_appKeys","_getValue","auth","instance","setObject","_keyName","_obj","set","getObject","_ret","setItem","_key","_value","getItem","remove","clear","GPSWrapper","onLocation","onMotionChange","onActivityChange","activityEvent","onProviderChange","providerEvent","onSchedule","enabled","onHttp","UE_GEO_TRACKING","errorResponseText","responseText","statusCode","getFreshToken","_token","setConfig","onGeofence","UE_GEOFENCE_ANNOUNCEMENT","msgType","ENTER","src","GEOFENCE_PRE_ARRIVAL_ENTRY","EXIT","GEOFENCE_PRE_ARRIVAL_EXIT","GEOFENCE_ARRIVAL_ENTRY","setInterval","maximumAge","desiredAccuracy","samples","GEO_TPOSITION","activity","carrierScac","sourceSystem","currentLocation","GEO_STOP_ARRIVAL","GEOFENCE_ARRIVAL_EXIT","UNT","play","shipmentDetails","shipmentObj","sourceTMS","ready","locationAuthorizationRequest","DESIRED_ACCURACY_MEDIUM","distanceFilter","disableElasticity","useSignificantChangesOnly","LOG_LEVEL_VERBOSE","stopOnTerminate","startOnBoot","debug","allowIdenticalLocations","autoSync","GEO_POSITION","initiateGPSconfig","start","startGPStracking","GEO_START_TRIP_LOCATION","sendGeoStartTripLocation","destroyLocations","loadDetailsRefreshedShipment","setLoadDetailsTrackedShipment","_updatedSequenceNo","R2Configuration","flag","R2ConfigurationFlag","UAT","PROD","AzureMapsWrapper","GoogleMapsWrapper","GetRecent","fetchUserDetails","fetchUserDetailsSuccess","registerDeviceResponseAction","Position","showAlert","moreTabContentResponseDummy","result","showNetworkAlert","isShowAlert","alertMessage","alertTitle","updateSearchParamsInOfflineJSON","updateShipmentInfoInOfflineJSON","registerUserStatusMessage","responseParams","userPrincipalName","companyName","email","liablePartyId","liablePartyName","lastSelectedCustomer","lastSelectedCarrier","internalUser","customer","carrierTier","registered","image","address","addressLine1","addressLine2","addressType","city","postalCode","phone","number","userApplicationDetails","roles","roleId","roleName","updatedTimeStamp","UserDetails","getMembers","__args","getUserDetails","validateUser","mutation","transferMember","confirmTransfer","addMember","member","updateMember","registerMember","Toast","ToastMessage","show","BOTTOM","toastController","color","position","mode","cssClass","toast","present","open","args","options","showUndo","buttons","text","btnTitle","handler","callback","PinMode","AuthenticationService","vaultService","config","setAuthMode","AuthMode","SecureStorage","tokenStorageProvider","tabName","onVaultLockChange","isLoggedIn","autorun","setLoginState","isLocked","startsWith","login","Role_Type","__role","tabSession","setSession","isVaultLocked","authResult","hasStoredSession","getIdToken","getAccessToken","idTokenInfo","accessTokenString","tokens","user","getAuth","runInAction","hasSessionStored","getUserInfo","idToken","emails","Array","sub","userDetails","getRequestPayload","upn","body","IonicAuth","observable","VaultService","browserAuthPlugin","restoreSessionOnReady","unlockOnReady","unlockOnAccess","lockAfter","hideScreenOnBackground","storedSession","authMode","BiometricAndPasscode","BiometricOrPasscode","setAuthModeState","BiometricOnly","InMemoryOnly","PasscodeOnly","biometricsEnabled","passcodeEnabled","secureStorageEnabled","isPasscodeSetRequest","pinMode","New","Unlock","when","Dismiss","pin","IonicIdentityVaultUser","AuthContext","React","createContext","AuthProvider","Consumer","props","Provider","children","useAuthService","context","useContext","VaultContext","VaultProvider","BrowserAuthPlugin","browserAuthService","onReady","BrowserAuthService","descriptor","username","vaultId","isBiometricsEnabled","isPasscodeEnabled","isPasscodeSetupNeeded","isSecureStorageModeEnabled","passcode","usingPasscode","PropTypes","any","bool","func","isRequired","Component","Network","LoginContainer","useState","setNetworkStatus","setHandler","addListener","_netStatus","getNetworkStatus","getStatus","netStatus","useNetwork","openModal","getOpenModal","R2FeatureEnable","setR2FeatureEnable","showR2ConfigurationModal","setShowR2ConfigurationModal","authService","useEffect","res","SV_GET_STARTED","screen","GET_STARTED","tryAction","fn","defaultError","UE_SIGN_IN","onClickR2Configuration","isOpen","className","CONFIGURATION_TXT","lines","checked","onIonChange","detail","ENABLE_R2_FEATURE_TXT","size","class","onClick","OKAY","NO_NETWORK_TITLE","NO_NETWORK_TEXT","Ok_TEXT","data-test","GET_STARTED_TEXT","SIGNUP_TEXT","alt","bind","GPSData","deviceRegistration","moreContent","offlineJSON","configParams","pullToRefreshState","shipmentParams","selectGlobal","globalState","selectApp","getLoading","createSelector","getUserData","getPlatform","getDeepLinkURI","getRefreshStatus","getSearchParams","appInititalState","getShipmentParams","getPullToRefreshState","getRegisterUserStatusMessage","AppComponent","observer","path","render","to","exact","Wrapper","mapStateToProps","createStructuredSelector","connect","browserPlugin","WrappedComponent","component","sessionEval","request","post","getFavoriteData","updateFavoriteData","updateFavoriteDataReducer","updateUserSearchHistory","updateFavoriteError","getFavorite","searchData","fetchSearchResults","rootSaga","put","call","repos","searchReqestQuery","domainToData","responseData","searchLoadPostings","takeLatest","GetMyLoadCardData","confirmStartInformationSuccess","confirmStartInformationStatusMessage","clearConfirmStartInformationStatusMessage","clearUpdateStopInformationResponse","ManageCardData","cradImg","profileHeading","profileRouting","getMyloadData","title","myLoadRouting","NewDropDownData","buyLoadShipmentRequest","loadCarrierData","AssignDriver","requestDriverList","SelectDriverList","addDriverSuccess","loadAssignedrData","driverAssignedLoadsFromPush","fetchShipments","callBack","inTransitData","shipmentForStartTrip","SHIPMENT_FOR_STARTTRIP","shipmentForStartTripTimestamp","timestamp","SHIPMENT_FOR_STARTTRIP_TIMESTAMP","startTripInformationResponse","completeTripApiResponse","COMPLETE_TRIP_API_RESPONSE","deliveredData","selectData","getIdParam","_state","match","getModule","makeMyLoadCardData","getCount","getDriverAssignedLoads","getCarrierAssignedLoads","getInTransitLoads","getCarrierLoad","loaddata","find","x","getConfirmStartInformation","getStartTripShipmentStatusMessage","shipmentData","updateGpsData","fetchRecentResults","fetchFavoriteData","fetchUserDetailsSaga","registerDeviceSaga","fetchDriverrAssignedLoadsFromPush","fetchMoreTabContent","MyLoadCardDataData","fetchConfigJSON","Registeruser","findSearchDataAPI","findShipmentInfoAPI","gps","checkTimeInterval","interval","getTimeInMilliSeconds","currentTimeInMilliSeconds","getInterval","searchParamsSelector","select","searchParamsState","pullToRefreshSelector","RecentSearch","RecentSearchInterval","recentReqestQuery","toUTCString","FavouriteSearch","FavouriteSearchInterval","favoriteRequestQuery","fetchFavoriteResults","queryPayloads","registerDivceQuery","deviceRegisterResult","errors","getShipments","getSgipmentQuery","fetchhResults","driverAssignedShipments","carrierAssginedShipments","inTransitShipments","moreTabContentQuery","termsAndConditions","eula","privacy","contactOptions","videoWalkthroughs","aboutSchneider","becomingCarrier","faq","schneiderOfferings","registerQuery","regiserUser","RecommendedLoads","RecommendedLoadsInterval","WatchedLoads","WatchedLoadsInterval","shipmentInterval","completeTripSaga","stratTrip","confirmStartSaga","buyLoadResults","getShipmentResults","shipmentParamsSelector","shipmentParamsState","driverShipments","driverAssignmentPendingShipments","driverShipmentCount","driverAssignedPendingCount","deliveredShipments","completeTrip","queryParams","bookloadRequest","dataToMutation","bookloadresponse","getShipmentRequest","getShipmentResponse","selectors","myLoadStore","CARRIER_ASSIGNED_MODULE","selectedValue","obj","DRIVER_ASSIGNED_MODULE","INTRANSIT_MODULE","RECENTLY_DELIVERED_MODULE","takeEvery","CONFIRM_START_INFORMATION","UPDATE_STOP_INFORMATION","START_TRIP","COMPLETE_TRIP_API_REQUEST","fetchDriverListResults","assignDriverToShipmentSaga","driverlistReqestQuery","driverList","mutationQuery","assignDriverToShipment","ASSIGN_DRIVER_TO_SHIPMENT_RESPONSE","ASSIGN_DRIVER_TO_SHIPMENT","checkStore","shape","isFunction","subscribe","replaceReducer","isObject","invariant","conformsTo","allowedModes","checkKey","isString","isEmpty","checkDescriptor","saga","injectSagaFactory","isValid","newDescriptor","hasSaga","Reflect","has","task","ejectSagaFactory","InjectSaga","injectors","injectSaga","ejectSaga","contextType","ReactReduxContext","displayName","hoistNonReactStatics","injectReducerFactory","reducer","ReducerInjector","injectReducer","NewDropDown","memo","labelName","TrailerType","handleChange","showOptions","setShowOptions","clickedOption","setclickedOption","selectedOption","setselectedOption","backdropDismiss","onDidDismiss","option","k","hideDropdownMenu","event","target","onConfrim","RecommendedError","width","height","constantText","expand","constantButton","addCapacity","getR2FeatureEnable","PureComponent","Search","__distance","page","sortColumn","sortDirection","transportMode","loadPostingStatus","hasAppointments","isHazardous","isHighValue","isTemperatureControlled","totalDistance","distanceUOM","totalWeight","weightUOM","numberOfStops","rate","binRateIdentifier","binSource","totalCharge","lineHaulCharge","charge","unitCharge","quantity","chargeDescription","rateQualifier","fuelCharge","accessorials","accessorialCode","accessorialDescription","accessorialType","accessorialCharge","specialServices","serviceDesc","specialServiceDesc","country","appointmentFrom","appointmentTo","timeZone","deadHead","stopSequence","_loads","originCountry","destinationCountry","originCity","originState","originRadius","pickUpdate","destinationCity","destinationState","destinationRadius","dropDate","trailerType","searchModel","freeze","customSort","rows","sort","b","SearchResultDesktop","searchInput","pageName","sortable","setSortable","changeSortColumn","pageSize","changePageSize","selectedPage","changePage","totalPages","modelSearch","userID","handleSortingPagination","SV_SEARCH_RESULT","SEARCH_RESULT","lead","starVisible","setStarVisible","setSrc","columns","selector","style","fontWeight","fontSize","colorName","minWidth","cell","row","segmentName","_src","formatDate","_dst","_to","year","getFullYear","time","month","day","from","_date","_year","_month","toLocaleString","_day","getDate","_hours","getHours","_AmOrPm","array","stopDetails","origin","destination","origin_city","origin_from_date","origin_deadhead","origin_load_type","destination_city","destination_from_date","destination_deadhead","destination_load_type","trailer","price","highlightOnHover","sortFunction","onRowClicked","isNetworkAvailable","pagination","paginationServer","paginationServerOptions","persistSelectedOnPageChange","persistSelectedOnSort","paginationDefaultPage","paginationResetDefaultPage","paginationTotalRows","paginationPerPage","paginationRowsPerPageOptions","onChangePage","totalRows","onChangeRowsPerPage","currentRowsPerPage","currentPage","sortServer","onSort","column","NewInput","disabled","currentLocationOff","onTimeZoneChange","labelValue","InputValue","InputName","getLocalTime","keyboardshowHandler","locationValue","keyboardhideHandler","deFaultValue","isDestination","useHandler","setErrorValue","placeholder","onFocus","confirmStartLocationInp","setOptions","selectedCity","setSelectedCity","lat","lng","latLng","onChangeLatLng","showSuggention","setShowSuggention","edited","setEdited","palceholder","setPlaceholder","cityName","setcurrentLocation","showError","setShowError","backClicked","setBackClicked","setCountry","valueSelected","setSelect","focusOut","setFocusOut","pattern","long","fetchOriginCity","callAPI","useCallback","debounce","fetchCityList","municipality","indexOf","split","countrySubdivision","timeZones","localTime","ReferenceTime","WallTime","Id","countryCode","cityList","cityObj","myArr","prop","uniqueValues","pos","arr","mapObj","selectCity","SearchCity","latlon","lon","preValue","test","handleValueChange","onIonFocus","onIonBlur","slot","onMouseDown","readonly","RadiusRange","divClassName","rangeDisabled","setSelectedValue","SliderWithTooltip","createSliderWithTooltip","Slider","min","marks","25","50","75","100","125","150","175","200","225","250","left","step","max","onChange","tipFormatter","v","fromTime","toTime","disPlayTime","_to_year","_to_month","_to_day","_to_time","dateString","timeString","_min","getAppointmentTime","appointmentEarlyDateTime","appointmentLateDateTime","actualETADateTime","plannedEtaDateTime","getStopService","stopDetail","stopActivity","join","formatedData","fdProp","tdProp","idProp","tMProp","showInitial","stopDetailsList","load1","load2","driverName","shipmentInvolvedParties","partyType","partyName","fName","LName","getYearValues","currentYear","currentMonth","getMonth","years","DatePicker","yearValues","displayFormat","PickupData","originError","pickUpdateError","defaultValue","updateLocalCurrentTime","pickUpLocalTime","showDate","rangeOriginDisable","display-timezone","DeliverypData","destinationError","dropdate","dropLocalTime","rangeDisable","currentDate","NewPage","showDelivaryfields","searchResultPage","isCityError","newSearch","showResults","isRecentSearch","placeSearch","SelectedOriginVal","SelectedDestinationVal","dateUpdated","dropDateUpdated","document","getElementsByClassName","classList","add","pickUpdateValue","setState","dropDownChange","Apply","UE_SEARCH_SEE_RESULTS","SEARCH_FILTER","NEW","preventDefault","pickupLocal","dropLocal","__searchParams","assign","submitForm","history","getSearchInputes","searchdata","__model","destinationArray","originArray","srchParams","feildName","pickupdate","SV_SEARCH_FILTER","DestinationRadius","SEARCHED","withRouter","makeSearch","SearchResults","withConnect","fectchData","clearLoads","withReducer","useInjectReducer","withSaga","useInjectSaga","setSearchInput","dataToDomain","inputs","RecentSearchDesktop","recentDataState","setrecentDataState","favoriteFlag","recentData","originradius","destinationradius","favouritesearchindicator","stopPropagation","updateFavorite","newState","columnsFav","ID","trailertype","searchdate","userid","carrierid","originPostalCode","destinationPostalCode","onRedirectToTab","showLoadDetails","PullToRefresh","setEvent","complete","onIonRefresh","event1","updatePullToRefreshState","onPullToRefresh","pullingText","refreshingSpinner","RecentCard","fav","setFav","cardClick","durationDays","toLowerCase","newPickUpDate","newDropDate","range","abs","setDate","onSearchResult","getFavoriteSearchList","getRecentSearchList","isInPullToRefresh","getLoads","undo","makeRecent","updateFavoriteDataFunc","updatefavoritemutation","updateUserSearchHistoryAsFavorite","errorMessage","GetrecentData","Recent","__recent_state","favourite","findUserRecentSearchHistory","Favorite","_favorite_state","findUserFavouriteSearchHistory","userSearchHistory","CustomModal","dangerouslySetInnerHTML","__html","button","_srchParams","onSearch","RecentContainer","__modelF","ISOpickupdate","ISOsearchdate","ISOdropdate","newData","updateFavoriteLoads","updateFavoriteLoadCheckDuplicate","undoClicked","updateFavoriteLoad","recentLoads","fetchData","showErrorPopup","pathname","recentSearchLoads","clearErrorState","errorData","recentSearch","favoriteSearch","initialFavouriteState","updatedId","makeFavorite","FavouriteContainer","pop","favoriteLoads","getFavoritePayload","favoriteLoadsData","EquipmentFlow","ValidationStatus","Loads","defaultStopActivity","equipmentFlow","NA","equipmentId","equipmentOwner","equipmentType","execActivity","seqNo","tmsActivity","stopActivityProps","getStopActivity","activity1","activity2","Number","activityNames","StopDetails","showAddress","setShowAddress","showExpandView","locationName","service","isCarrierLoad","appointment","LoadTileHeader","sortedLoadStops","isLoadDetails","calculateTime","LoadTileFooter","stopOffs","showLoadNo","dat-test","trunc","round","shipmentServices","serviceDescription","CariierAssignLoadTileHeader","CardContent","driverAssignmentStatus","assignmentTransaction","onButtonClick","isCarrier","buttonName","isWatch","toggleWatchLoad","isButtonHidden","hidden","LoadTile","_updatedLoads","_source","_destination","getNavigationUrl","onCardClick","onRowCallback","shipmentLoad","stopCount","routerLink","Dropdown","slectedValue","asc","sortBy","dropdownClick","isDropdown","sortedData","loadData","upArrow","downArrow","show-backdrop","backdrop-dismiss","SegmentControll","getSegment","segments","activeSegment","IonImage","big","xlarge","normal","ImageCapture","reduce","current","isRolesShow","setRolesShow","backUrl","isAddDriver","isMap","editData","viewMap","isDeviceInfo","viewDeviceInfo","isSearch","History","isStar","isMyLoad","isWatched","addPage","customBackUrl","imageCapature","displayValue","navigate","icon","cross","BackIcon","SearchResultPage","onResetPagination","getCurrentModel","searchParamData","searchOnPull","OnScroll","currentTarget","getScrollElement","scrollTop","isPageEnd","dateFormatChange","editSearch","prevProps","scrollEvents","onIonScrollEnd","scrollable","entries","SectionContainer","section","renderSwitch","segment","setSegment","setRecentSearch","setSearchParms","SearchContainer","FilterWithSort","dropdown","setFilter","isDesktop","selectedOptions","isModalOpen","setModalOpen","setSelectedOptions","filterOption","setFilterOptions","sortOrder","setSortOrder","selectItems","sortData","item-left","opion","setFilterOption","ListItems","IonUser","onUserClick","ManageUserEmpty","fetchAddressList","list","streetName","handleAlphaNumeric","handlePhoneNumber","isValidString","formatPhoneNumber","isCountryCode","cleaned","intlCode","removeSpecial","rolesList","desc","driverFields","validate","userProfileFields","carrierField","defaultForm","addressDTOs","getSelectedRoles","EnumType","getAddressValue","getUsersList","users","selectedUser","filters","usersList","setUsersList","filterParam","user1","user2","reverse","filterData","defaultMobileNumber","renderData","ManageUserProfilePage","isEditable","isSelf","isAlertOpen","setShowAlert","alertProps","CANCEL","OK","changePassword","SV_VIEW_MY_PROFILE","MY_PROFILE","profile","ManageUserProfileFormDesktopPage","setShowRoleOptions","showRoleOptions","isUserRoleAdmin","roleTitle","roleDesc","roleSelection","handleRoleSelection","emailAddressError","formFields","isUserNotExist","isEdit","formErrors","setFormFields","maxlength","isDriverSelected","setAddressEdit","isAddressEdit","showAddressList","addressList","handleAddressSelection","handleDelinkClick","data-kind","handleBackButton","handleSubmit","validateNow","ManageProfileDesktopPage","setEditMode","setAlertProps","Fragment","isFormEdit","resetData","handleBackMethod","isFormValid","handleChangePassword","ManageUserProfileFormPage","isSelfDesktop","validateUserDetails","isUserValid","resetValidateUser","setRoleSelection","setEmailAddressError","setUserNotExist","setDriverSelected","setAddressList","setShowAddressList","setFormErrors","setFormEdit","setFormValid","setAddress","setUserRoleAdmin","formatRoles","selectedRoles","isCarrierAdmin","defaultRoles","finalRoles","roleSelectionList","isDriver","getFormatedFormFields","handleUserExistModal","showUserModal","requester","isAdmin","currentCarrierId","requestedCarrierId","handleTransfer","getBackPath","handleAddress","errorsText","isTractorValid","isMobValid","handleErrors","emailAddress","validateUserAction","isManadatoryEmpty","validateErrors","fields","handleDelink","transferUser","transferRequest","addUserDetails","editUserDetails","removeUserDetails","addManageCapacity","PATH","userProfileModel","backToPage","restData","isCarrierSame","transferUserAction","azureLogout","stopGPS","isProfile","delinkUserAction","handleUpdateSubmit","isManageProfile","updateUserAction","manageCardData","selectedProfile","transfer","isRequested","capacity","carrierProfile","capacityItem","capacityId","isRefresh","capacityList","getSelectedManageUser","isUserValidated","getValidateUserDetails","getSelectedManageCapacity","CarrierProfileModel","getCarrierProfile","carrierMCNo","carrierUsDOTNo","commonCarrierId","carrierStatusCode","carrierModeTruckloadInd","carrierModeLTLInd","carrierModeIMInd","primaryContact","contactFirstName","contactLastName","contactType","contactPhoneNumber","contactFaxNumber","contactEmail","otherContacts","insurances","insuranceId","policyNumber","coverageAmount","maxInsuranceLimit","insuranceTypeCode","insuranceTypeDesc","insuranceStatusCode","insuranceCertificateId","policyEffectiveDate","policyExpirationDate","certifications","certificationCode","certificationDesc","certificateExpireDate","qualificationStatus","CarrierInsuranceCard","insurance","showAccordian","accordianClick","carrierHeader","CarrierInfoAccordian","carrierData","manageCarrierdata","manageContactdata","CarrierProfileDesktop","certificate","showCarrier","setShowCarrier","showContact","setShowContact","showCarrierInsurance","setShowCarrierInsurance","capitalize","CarrierProfilePage","cprops","loadCarrierProfile","carrierProfileModel","getProfile","SV_VIEW_CARRIER_PROFILE","getManageCapaityList","updateManageCapacity","removeManageCapacity","queryValue","getCarrierCapacity","formatData","lastUpdatedBy","lastUpdatedByEmail","userEmail","lastUpdatedByPhoneNumber","userPhone","lastUpdatedDateTime","destinationLatitude","destinationLongitude","originLatitude","originLongitude","addCarrierCapacity","capacityID","lastUpdatedByUserName","updateCarrierCapacity","deleteCarrierCapacity","getManageUsersList","addUser","updateUser","removeUser","fetchAllUsersQuery","fetchAllUsersValue","fetchAllUsersResponse","anyList","queryDetails","isCarrierAssign","itemRoles","ManageCardDataData","isUsersListLoaded","getUsersListFn","getMembersList","setSelectedUser","resetUsersLoaded","userDetailsModel","getUsers","resetLoaded","SV_MANAGE_USERS","MANAGE_USERS","states","originDetails","destinationDetails","capacityType","handleDelete","stateItems","setDetails","formatStatesList","CardDetails","isOrigin","isTruck","fromDate","toDate","CapacityCard","handleClick","pickUpFromDate","pickUpToDate","destinationStates","CapacityModel","criteria","preferredDays","__variables","VariableType","EmptyListComponent","str","lower","deviceModel","device","operationSystem","osVersion","version","FilterOnly","DataTableComponent","redirect","showEndofList","showHeader","titleText","headerText","ManageCapacity","getCapacityList","isNetWorkAvailable","removeCapacityAction","setCapacityFilter","onPageScroll","capacityListItems","setCapacityListItems","capacityListDesktop","setCapacityListDesktop","capacityModel","routePath","SV_MANAGE_CAPACITY","MANAGE_CAPACITY","filterCapacityItems","filterValue","desktopList","originDate","deleteCapacity","addCapacityItem","undoCapacity","setSelectedCapacityAction","listItem","ManageCapacityViewDesktop","listItems","childrens","slug","ManageCapacityViewPage","selectedCapacity","SV_MANAGE_CAPACITY_ADDEDIT","MANAGE_CAPACITY_ADDEDIT","pickupDateType","substr","window","href","CallNumber","callNumber","handleError","consecYears","PickupDaysComponent","daysList","setDaysList","allDaysSelected","setAllDaysSelected","setError","selectedDays","isAllSelected","setPickupDays","selectedDay","SelectComponent","setSelectedOption","handleSelectChange","ManageCapacityFormDesktop","setShowCapacityOptions","showCapacityOptions","capacityOptions","setCapacityType","setStatesShow","isOriginEdit","setOriginEdit","pickupFromDate","pickupToDate","pickupTimeError","setPickuptimeError","setPreferredDays","pickupDaysError","setPickupDaysError","isStatesShow","stateError","statesList","handleStateChange","Destination","isDestinationEdit","setDestinationEdit","ManageCapacityFormPage","setTrailerType","setOriginDetails","showOrigin","setShowOrigin","setOriginRadius","setPickUpLocalTime","setPickupFromDate","setPickupToDate","setShowDelivaryfields","setDestinationDetails","setDestinationRadius","setOriginError","setDestinationError","setStatesError","setStatesList","setSelectedData","useIonViewWillEnter","clearFields","isLoading","isCapacityLoaded","getCapacityListAction","setSelectedCapacity","setCurrentPage","isCapacityEnd","setCapacityEnd","resetValues","getList","itemsCount","UE_MANAGE_CAPACITY_SUCCESS","UE_MANAGE_CAPACITY_FAILED","updateCapacityItem","updateCapacity","ManageDesktopPage","manageCards","card","ManagePage","isTransferRequest","transferDetails","transferRequestReset","SetManageCards","SV_MANAGE_PROFILE","MANAGE_PROFILE","cards","manageCard","convertToCamel","confirm","defaultProps","feature","words","featureName","len","tempStr","profileData","navigateToPage","manageData","profileImageSet","confirmTransferRequest","ExecutePage","onTileClick","stopTripClicked","isShowStopButton","getGPStrackingShipmentID","isShowFinanceAlert","SV_VIEW_MYLOADS","MYLOADS","prevState","myLoadCard","getUserLoads","ExicutionLoads","user_details","driverId","loadDetails","lineOfBusiness","assignedCarrierId","assignedTMSCarrierId","isAppointmentConfirmed","isFreezeProtected","executionStatus","masterBillOfLoading","startState","startCity","startCountry","startDateTime","estimatedArrivalDateTime","plannedArrivalDateTime","estimatedStopDuration","plannedDepartureDateTime","partyId","partyEmail","partyPhone","transactionId","MapType","TravelMode","UnitSystem","ControlPosition","ExecuteContainer","modelLoad","driverAssignmentPending","myLoadData","prevUserDetails","currentUserDetails","hideLoader","makeSelectRecommended","makeSelectWatched","getApiErrorMessage","Filesystem","FileSaver","_data","FilesystemDirectory","Documents","fileName","writeFile_Mobile","writeFile","directory","Cache","getUri","Capacitor","convertFileSrc","uri","writeFile_Web","startIndex","b64","substring","byteCharacters","byteNumbers","ArrayBuffer","byteArray","Uint8Array","charCodeAt","fileBlob","Blob","URL","createObjectURL","TermsAndCondition","showTerms","setshowTerms","setTermsAndConState","GoogleMap","mapContainer","createRef","initMap","defaultCenter","zoom","mapTypeId","disableDefaultUI","mapTypeControl","scaleControl","streetViewControl","zoomControl","fullscreenControl","center","google","maps","Map","roadmap","directionsService","DirectionsService","directionsRenderer","DirectionsRenderer","suppressMarkers","setMap","isMapReady","renderChildren","Children","child","cloneElement","mapCenter","translate","opacity","ref","initiallyLoaded","markers","markerLocation","isOriginIdentified","isDestinationIdentified","icons","waypoint","end","nfr","renderDirections","travelMode","DRIVING","waypoints","optimizeWaypoints","directionRenderCallback","serviceWaypoints","LatLng","stopover","originLat","originLng","destinationLat","destinationLng","clearAllMarker","clearMarkerLocations","route","routes","legs","total","addMarkerLocations","allDestination","locationType","drawMarkerWithCustomPin","start_location","start_address","end_location","end_address","_map","getMap","setDirections","setZoom","startLocation","startAddress","destinationIndex","iconPath","locationResponse","addMarkerToTheLocation","createMarker","marker","Marker","isShowAddrInfoWindow","infoWindow","InfoWindow","content","addDomListener","_markerLocations","locationParts","locationMatched","countSubstr","isMarkerAdded","Currency","LoadMap","isMapVisible","getLocations","totalPoints","setLatLngByCityName","place","isShowMap","locationDetails","oldLocationDetails","spinner","display","overflow","top","BookLoadModal","isBookLoadModal","closeBookLoadModal","bookedDetails","buyLoad","declineBookLoad","decimalTotalCharge","toFixed","bookloadName","bookLoad","UE_LOAD_RATE_ACCEPT","LOAD_DETAILS_RATE","BookLoadTable","decimalCharge","BookLoadConfirmModal","confirmModal","setConfirmModal","bookLoadResponse","data-test-id","confirmBookLoad","GetShipmentModal","isGetShipmentModal","setisGetShipmentModal","BookLoad","__BookLoad_state","binRateId","amount","currency","lhlCharges","fsrCharges","GetShipment","__GetShipment_state","shipmentIds","readyDateTime","readyDateTimeZone","predecessorShipmentId","successorShipmentId","assignmentStatus","estimatedStopDurationUom","isTrailerInSet","stopReference","shipmentReferences","LoadMapSatellite","container","infowindow","showSatelliteMap","pposition","setContent","setTimeout","onDismissSatelliteMap","animated","fullscreen","DriverList","__DriverList_state","carrierAssignInitialState","showToaster","assignShipmentDriverResponse","CLEAR_ASSIGN_DRIVER_TO_SHIPMENT_RESPONSE","CarrierLoads","__carrier_loads_state","transactionType","driverPhone","driverEmail","carrierLoadModal","selctCarrierData","selctAssignedData","selctIntransitData","selctDeliveredData","getCarrierLoads","getDriverList","getAssignedLoads","getInTransitLoad","getStartTripShipment","getDeliveredLoad","StopDetailsOnDialog","carrierLoad","driverLoad","clearAssignShipmentDriverResponse","fetchCarrierAssigned","CarrierAssignedModal","onDismiss","driverDetails","showDriverDialog","useHistory","dispatcherDetails","dismissDialog","loadStopsOriginDestination","totalStops","toggleAlert","showDialog","toggleDialog","toggleErrorToast","_assignDriver","dispatcherEmail","dispatcherId","dispatcherName","dispatcherPhone","assignShipmentToDriver","UE_ASSIGN_DRIVER_SUCCESS","MYLOADS_DRIVER_ASSIGNMENT","StartTripModel","getTimeForIOS","localZone","guess","openStop","isConfirmStartButtonDisabled","isOtmType","isOTMTypeShipment","_trailerIn","getTrailerIn","_trailerIout","getTrailerOut","trailerIn","trailerOut","allStopCompleted","COMPLETED","etaTime","isNextStop","arrival_input","arrivalTime","departure_input","deaprtureTime","hr","arrivalVal","isOTypeTrailer","updateStopInfo","TRAILER_IN","TRAILER_OUT","newActivity","isOTMType","oType","departure","tzoffset","getTimezoneOffset","now","ETA","eta","getETA","pickerFormat","isETAReadonly","minuteValues","Arrival","arrivalDate","getArrival","yearVales","getArrivalLabelName","isArrivalReadonly","isError","Departure","departureDate","getDeparture","readyonly","isDepartureReadonly","getDepartureLabelName","ComboBox","showDropDown","setShowDropDown","TValue","setTValue","textPattern","dropDownValues","setDropDownValues","refVariable","useRef","isValueExists","newOptions","setFocus","textAlign","TrailerIn","changeActivity","expandCurrentStopForcefully","TrailerOut","ReferenceDialog","referenceModal","setReferenceModal","showToast","setShowToast","shipmentReference","references","closeReferenceModal","SV_VIEW_REFERENCE","MYLOADS_NEEDS_PPWK","reference","ShipmentStopDetails","exicutionProgress","startTripModel","isExpanded","toggleLoadDetails","isEndExecution","ETA_VALUE","setETA","ARRIVAL_VALUE","setARRIVAL","DEPARTURE_VALUE","setDEPARTURE","setTRAILERIN","setTRAILEROUT","TRAILER_IN_ACTIVITY","setTRAILERINACTIVITY","TRAILER_OUT_ACTIVITY","setTRAILEROUTACTIVITY","showProgressBar","setShowProgressBar","showDotteedLine","setShowDottedLine","progressBarHeight","setProgressBarHeight","isErrorOnArrival","onArrivalErrorChange","isErrorOnDeparture","onDepartureErrorChange","showTrailerFeild","setShowTrailerFeild","expandedStop","calculateHeight","getTimeWithTimezone","setMinutes","getMinutes","_arrival","_departure","grid","getElementById","gridHeight","offsetHeight","updateStopInformation","onShowError","ARRIVAL_ERROR","UE_STOP_UPDATE_FAILURE","stopID","DEPARTURE_ERROR","DEPARTURE_ARRIVAL_ERROR","isOTypeStop","TRAILER_IN_ERROR","TRAILER_OUT_ERROR","VALID_TRAILER_OUT","VALID_TRAILER_IN","stopInfo","carrierPro","stopNumber","parseFloat","positionDateTime","stopTrailerActivity","changeExpandStop","GPSEnabledEvent","UE_STOP_UPDATE_SUCCESS","expandLoadForcely","clearWarningDialogMessage","isAllStopCompleted","openSatelliteMap","etaValue","valueEntered","arivalEntered","isFirstStop","isShipmentTripCompleted","areStopActivitiesMissing","showTrailerInError","isPreviousStop","showTrailerOutError","StartTrip","isConfirmStartButton","setisConfirmStartButton","setLocationName","timezone","settimezone","setoriginError","setlat","setlng","setcurrentLocationName","setcurrentLocationCountryName","setcurrentLocationLat","setcurrentLocationLng","setCurrentLocationTimezone","currentLocationTimezoneStatus","setCurrentLocationTimezoneStatus","getCurrentTimeInISO","ActualStart","setActualStart","setIsLoadRefreshed","setisError","isCurrentLocationAvailable","setCurrentLocationStatus","confirmationStart","confirmStartInformation","handleChangeEvent","hideConfirmStart","_startDate","locationOriginValue","UpdateStopModel","locationNotes","InTransitModel","ShipmentUpdateCard","startDate","_model","confirmStartLoadInformation","refreshShipmentInDriverLoads","getCurrentOpenStop","isLoadRefreshed","getActualStartTime","startingDate","actualStartDateTime","monthName","hour","minute","hour12","updateExicutionProgress","stopIndex","tripCompleted","shipmentloadStop","sortShipmentsStop","getStartingLocation","getStartingDateTime","confrimStartProgres","stopProgress","getProgress","updateShipmentStopInformation","updateStopInformationResponse","refreshShipmentsLoads","showDottedBorder","barHeight","isLocationExpand","currentLocationName","paddingBottom","showErrorMessage","isTripCompleted","completeTripRequest","StartTripExicution","shipment_details","shipmentNotes","DriverCard","showAssignDriverDialog","driver","DriverImg","DriverModal","popupHeader","closeModal","DesktopDriverList","isShow","LoadDetailsPage","pdfbase64","binaryData","gpsActivatedShipmentID","isUpdated","sendAnalyticsEvent","screen1","SV_VIEW_SHIPMENT","SHIPMENT_DETAILS","RECOMMENDED_MODULE","SV_LOAD_DETAILS","LOAD_DETAILS","RECOMMENDED","WATCHED_MODULE","WATCHED","SEARCH_RESULTS","SV_VIEW_CARRIER_ASSIGNED","CARRIER_ASSIGNED","SV_ASSIGN_DRIVER","DRIVER_ASSIGNED","UE_WATCH_LOAD","isTermsAndConditionExpanded","UE_VIEW_LOAD_TERMS","getShipmentBookLoad","__getShipmentmodel","getRequestShipmentPayload","bookedLoad","getShipmentDetails","shipments","setValue","isBookLoad","carrierLoads","removeLoadsFromStore","isGetShipmentErr","showPdf","showModal","onPDFLoadComplete","getloadData","assignDriverBtn","activatedShipment","alert","ERROR_MESSAGE_1","ERROR_MESSAGE_2","navigateToShipmentUpdateScreen","callusClick","UE_CONTACT_FOR_PRICE","UE_BOOK_LOAD_NOW","isGPStrackingDisabled","DriverAssignedStartTrip","setShipmentForStartTrip","isStartTrip","isLocation","isCurrentLocationOn","withGPS","startTripShipment","moduleName","soure","party","PRIMARY_DRIVER","startTracking","showMessageForPendingLoad","closeDriverModal","isDriverModal","configs","OTM","MG","UE_VIEW_LOAD_CALL_US","chatusClick","isPopupHeader","isStartTripDesktop","isInTransit","completeTripClick","isCompleteTrip","getConfirmStartStatus","startTripShipmentStatusMessage","getConfirmStartMessage","modelExicution","getLoadDetails","shipmentToStartTrip","closeBookloadconfirm","isBookloadConfirm","UE_LOAD_RATE_DENY","USD","CAD","buyLoadRequest","UE_BOOK_FAILED","removeSearchResults","removeRecommendedResults","removewatchedResults","bookLoadStatus","buyLoadStatusRemove","UE_BOOK_SUCCESS","toggleBtn","showDocument","showStops","isTripStarted","openAssignDriverDialog","satelliteLocation","shipmetCardLoaddetails","showCTAButton","showCallNow","loadTerms","loadDocuments","SV_LOAD_DETAILS_RATE","STARTED","setTripDetails","leadName","SV_VIEW_LOAD","UE_VIEW_LOAD","isForceUpdate","confirmStartInfo","_shipment","bookloadStatus","prevModule","clearConfirmReasponse","buyLoadApiError","header","setBuyLoadError","buyloadShipmentStatus","clearResponse","tripInfo","clearBuyLoadShipmentStatus","WatchedLoadModel","__watch_state","validLoad","newUserWatchedLoads","deleteUserWatchedLoads","LoadDetailsContainer","watchDate","watchLoadModel","watchLoadCallback","recommendedeLoad","watchedLoadList","recommendedLoadList","BuyLoad","hasShipment","renderCallback","withIonLifeCycle","LogoutPopUp","showLogoutModal","setShowModal","Logout_TEXT","isRegistrationPage","REGISTRATION_ALERT_MESSAGE","ALERT_MESSAGE","closeShowModal","Cancel_TEXT","logOut","LogOutPage","setShowLogoutModal","showLgoutPopUp","LogIn","LogOutContainer","_clear","clearToken","ListItem","heading","headings","subHeading","group","lable","uid","urlName","menuData","getUserHelpContent","menuEntries","contextData","ionItemClick","menuItem","MenuPage","SV_MORE_MENU","MORE_MENU","menuHeadingList","menuItems","AppVersion","getVersionNumber","appVersion","submitFeedback","initialMenuState","submitFeedbackQuery","fetchFeedback","feedback","MenuContainer","HtmlParseComponent","richText","isRichText","ReactHtmlParser","FormatText","dataType","renderText","getType","fieldName","valueDataType","schema","fieldType","groupData","youtubePlay","setYoutubePlay","getDataType","richTextDescription","description","video","playing","controls","volume","Menu","Feedback","__submit_feedback","rating","devicePlatform","deviceOSVersion","deviceManufacturer","deviceUUID","Browser","FeedbackComponent","onSubmitFeedbackClick","appVersionNumber","manufacturer","feedBackCallback","submitFeedbackCall","isShowPopup","isShowModal","feedbackHandler","notNowButtonClick","notNowClick","onSureClick","onStarClick","nextValue","prevValue","onDidPresent","starCount","starColor","renderStarIcon","Accordion","isShowContent","setIsShowContent","onCardHeaderClick","CommonMenuPage","sections","dataTypes","menuHeading","detailList","DeviceInfoPage","ManageUserProfileDesktopPage","addUserAction","CarrierAssignedDropdown","opt","loadsCount","DriverNameFilter","showList","setShowList","dispalyText","setDisplayText","setSelected","chosed","setChosed","setCount","filterCriteria","setFilterCriteria","filteredByDriver","onNameselect","record","involvedParties","onSelect","curentModule","filteredDriverNameD","filteredDriverNameI","countText","driverNameList","newFilterCriteria","sortLoads","noLoadStopArray","loadStopArray","loadA","loadB","loadAFromTime","loadBFromTime","shipmentId1","shipmentId2","shipmentSortValue","CarrierAssignedPage","MYLOADS_CARRIER_ASSIGNED","SV_VIEW_DRIVER_ASSIGNED","MYLOADS_DRIVER_ASSIGNED","SV_VIEW_IN_TRANSIT","MYLOADS_IN_TRANSIT","SV_VIEW_RECENTLY_DEL","MYLOADS_RECENTLY_DEL","dismiss","chnageValue","selectDriver","AssignDriverbtn","filterByDriver","filteredData","startTripOk","subModule","selectedLoad","isUserCarrierDriver","dismissSortingLoader","isSorting","getShipmentmodel","clearUpdateStopInfo","actualData","getToasterValue","showFilter","driverNames","MyloadPage","actualLoad","currentSegment","driverAFilterData","isDriverFiltered","inTranistFilterData","isTranistFiltered","deliveredFilterData","deliveredFiltered","filteredDriverName","getRelatedLoads","componentDidMount","getModuleName","componentDidUpdate","getSubHeader","inTransitLoads","deliveredLoads","getFormatedLoads","MyloadSectionContainer","AssignDriverBtn","modelList","element","pathName","lastIndexOf","desktopDriverList","CarrierAssignedContainer","changeToasterValue","assignDriverButton","getCarrierAssignLoads","carrierModel","updateData","ShowToaster","AddDriverPage","useProfileModel","loadModule","AddDriver","DriverAssignList","isPopup","AssignDriverContainer","getShowToasterValue","showToasterValue","getloadDetails","getPathname","makeHideTabBar","HideTabBar","MyLoadDetailsContainer","bookload","DriverAssignedContainer","getDriverLoads","driverModel","LoadMapStartTrip","CompleteTripModel","ShipmentUpdateScreen","currentHistory","enableGPS","IN_TRANSIT","UE_START_TRIP","disableGPS","DELIVERED","isConfirmStartClicked","STOP_TRIP","sendGPSstartPing","getLoadStops","getValueFromHistoryState","ignoreCase","getUpdatedShipment","refreshDriverList","refreshDriverLoads","removeLoadsFromDriverToIntransit","removeLoadsFromIntransitToDelivered","refreshInTransitLoad","recentDelivered","refereshRecentDelivered","showHybridSatelliteMap","hybridSatelliteLocation","satelliteLatLng","objModel","shipmentCompleteTrip","UE_COMPLETE_TRIP","starTripModel","completeTripApiRequest","InTransitContainer","__Model","DeliveredContainer","RecommendedModel","__recommended_state","activityType","watchedLoads","watchedReqestQuery","recommendedReqestQuery","sorRefresh","SegmentContent","recommendedloads","watchedLoad","setView","isloaded","isWatchLoadEnd","isRecommendedLoadEnd","columns2","isRecommended","redirectTo","SortOnly","storeOptions","HomeTitle","setWatchedFilter","recommendedDropdownOptions","setRecommendedFilter","recommendedfilter","sortProps","recommendedloadData","totalRecommendedRecords","totalWatchedRecords","Home","pullToRefreshStatus","pages","maxPages","setWatchedLoadEnd","getWatchedLoads","onAnalyticsLoadPosting","recommendedpagination","recommenedPages","maxrecommendedpages","isRecommendedEnd","recommendedCurrentpage","recommendedPage","setRecommendedcurrentPage","getRecommendedLoads","setRecommendedLoadEnd","apiError","clearApiResponseError","onIonInfinite","loadingSpinner","loadingText","UE_VIEW_WATCHED_TAB","UE_SCROLL_RECOMMENDATIONS","getRecSortingValues","isAsc","filterBy","doSorting","getRecommendedLoadsData","firstpickupLoad","secondpickupLoad","priceLoads","noPriceLoads","getWatchedLoadsData","isRecommenedLoaded","isWatchedLoaded","watchedData","setWatchedLoadFilter","setRecommendedLoadFilter","recommendedData","recommendedLoadsRequest","setRecommendedLoad","setWatchedLoad","setPaginationValues","setRecPaginationValues","defSortDirection","_RecommendedModel","_WatchedLoadModel","sortWatchedData","sortedList","sortRecommendedData","SV_HOME","UE_VIEW_RECOMMENDED_TAB","navCheck","AuthWrapper","validSession","setValidSession","HomeContainer","ProfileEditContainer","ProfileContainer","CarrierProfileContainer","ManageCapacityEditContainer","ManageCapacityAddContainer","ManageCapacityViewContainer","ManageCapacityContainer","ManageUserProfileEditContainer","ManageUserProfileContainer","ManageUserProfileAddContainer","ManageUserContainer","sexact","ManageContainer","Geolocation","GeolocationOptions","PermissionAlert","close","DeviceRegister","__device_register_state","uuId","deviceToken","registerDevice","deviceOs","deviceOsVersion","Alert","ContentStack","contentParams","menuSequence","tags","textpattern","numericPattern","RegisterComponent","slectedNo","corporateZipCode","allowToSave","roleError","usDotError","mobileNumberError","zipcodeEror","firstNameError","lastNameError","companyNameError","USDOTNO","UE_REGISTER_NOW","REGISTRATION","userInput","carrierUsDotNo","carrierMcNo","registerUser","optionClicked","selectedRole","selectedValues","validateFeilds","enteredValue","SV_REGISTRATION","onBlur","fullDate","configVer","UserId","hiddenbarBottom","deviceResult","appState","driverAssignedLoads","carrierAssignedLoads","getOfflineData","getConfigParams","recentLoadsData","getRegisterUserStatus","memberApiError","updateGpsCoordinates","closePermissionAlert","clearDeepLinkURI","initializeModule","lastVer","createOfflineJSON","updateOfflineContent","updatedContent","findSearchData","findShipmentInfo","fetchDriverShipments","updateNetworkStatus","hideAlert","getMoreTabContent","storeAccessToken","setMemberApiError","favReducer","favoriteReducer","recentInjectReducer","recentReducer","searchInjectSaga","searchSaga","myLoadInjectSaga","myLoadSaga","carrierAssignedSaga","currentPosition","watchCurrentPosition","useGeolocation","registerPush","PushNotifications","addPushListeners","FCMPlugin","removeAllListeners","newToken","deviceID","__deviceRegister","notification","presentAlertConfirm","createElement","appendChild","_userDetails","requestPermissions","register","requestPermission","unRegisterPush","usePushNotification","isRegistered","setRegistered","showCarrierAlert","setShowCarrierAlert","apiCalled","setApiCalled","setMessage","hasUpdateLoads","sethasUpdateLoads","UE_LOGIN_SUCCESS","contentModel","offlineDataPerUserStart","cleanNotification","showNetworkError","myLoadNotificationFlow","manageUserNotificationFlow","errorMsg","netWorkCheck","UE_REGISTER_SUCCESS","UE_REGISTER_FAILED","newKey","modelRecent","modelFavorite","isDriverAssignedLoad","isCarrierAssignedLoad","isIntransitLoad","currentShipmentID","isBarBottom","requestPayload","SplashHOC","splash","showSplash","clearTimeout","AppContainer","ErrorBoundary","bugsnagClient","bugsnag","apiKey","releaseStage","use","bugsnagReact","getPlugin","Bugsnag","ReactDOM","defineCustomElements"],"mappings":"qJAAAA,EAAOC,QAAU,IAA0B,uC,oMCA3CD,EAAOC,QAAwB,CAC3BC,IAAKC,EAAQ,KACbC,GAAID,EAAQ,O,0DCFhB,IAAIE,EAAM,CACT,8BAA+B,CAC9B,IACA,IAED,uCAAwC,CACvC,IACA,IAED,8BAA+B,CAC9B,IACA,KAED,wBAAyB,CACxB,IACA,KAED,uBAAwB,CACvB,IACA,MAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,WACzC,OAAOJ,EAAoBS,MAG7BX,EAAoBY,KAAO,WAC1B,OAAOC,OAAOD,KAAKb,IAEpBC,EAAoBW,GAAK,IACzBjB,EAAOC,QAAUK,G,oBCxCjB,IAAID,EAAM,CACT,2CAA4C,CAC3C,IACA,IAED,kCAAmC,CAClC,IACA,IAED,iCAAkC,CACjC,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,iCAAkC,CACjC,IACA,IAED,gCAAiC,CAChC,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,gCAAiC,CAChC,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,qBAAsB,CACrB,IACA,IAED,uCAAwC,CACvC,IACA,IAED,sCAAuC,CACtC,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,mCAAoC,CACnC,IACA,IAED,kCAAmC,CAClC,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,kCAAmC,CAClC,IACA,IAED,iCAAkC,CACjC,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,iCAAkC,CACjC,IACA,IAED,gCAAiC,CAChC,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,gCAAiC,CAChC,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,gCAAiC,CAChC,IACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,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NjK,KAAM,MAER,CACEiK,KAAM,UACNjK,KAAM,MAER,CACEiK,KAAM,OACNjK,KAAM,MAER,CACEiK,KAAM,SACNjK,KAAM,MAER,CACEiK,KAAM,QACNjK,KAAM,MAER,CACEiK,KAAM,WACNjK,KAAM,MAER,CACEiK,KAAM,UACNjK,KAAM,MAER,CACEiK,KAAM,OACNjK,KAAM,MAER,CACEiK,KAAM,SACNjK,KAAM,MAER,CACEiK,KAAM,WACNjK,KAAM,MAER,CACEiK,KAAM,YACNjK,KAAM,MAER,CACEiK,KAAM,QACNjK,KAAM,MAER,CACEiK,KAAM,mBACNjK,KAAM,MAER,CACEiK,KAAM,WACNjK,KAAM,MAER,CACEiK,KAAM,gBACNjK,KAAM,MAER,CACEiK,KAAM,WACNjK,KAAM,MAER,CACEiK,KAAM,YACNjK,KAAM,MAER,CACEiK,KAAM,cACNjK,KAAM,MAER,CACEiK,KAAM,WACNjK,KAAM,MAER,CACEiK,KAAM,UACNjK,KAAM,MAER,CACEiK,KAAM,WACNjK,KAAM,MAER,CACEiK,KAAM,SACNjK,KAAM,MAER,CACEiK,KAAM,gBACNjK,KAAM,MAER,CACEiK,KAAM,aACNjK,KAAM,MAER,CACEiK,KAAM,aACNjK,KAAM,MAER,CACEiK,KAAM,WACNjK,KAAM,MAER,CACEiK,KAAM,iBACNjK,KAAM,MAER,CACEiK,KAAM,eACNjK,KAAM,MAER,CACEiK,KAAM,2BACNjK,KAAM,MAER,CACEiK,KAAM,OACNjK,KAAM,MAER,CACEiK,KAAM,WACNjK,KAAM,MAER,CACEiK,KAAM,SACNjK,KAAM,MAER,CACEiK,KAAM,QACNjK,KAAM,MAER,CACEiK,KAAM,eACNjK,KAAM,MAER,CACEiK,KAAM,cACNjK,KAAM,MAER,CACEiK,KAAM,eACNjK,KAAM,MAER,CACEiK,KAAM,iBACNjK,KAAM,MAER,CACEiK,KAAM,eACNjK,KAAM,MAER,CACEiK,KAAM,YACNjK,KAAM,MAER,CACEiK,KAAM,QACNjK,KAAM,MAER,CACEiK,KAAM,OACNjK,KAAM,MAER,CACEiK,KAAM,UACNjK,K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","file":"static/js/main.0dba3606.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ios-cross.05cab4f5.svg\";","module.exports = /*#__PURE__*/ {\n    ios: require('./ios-BackIcon.svg'),\n    md: require('./md-BackIcon.svg')\n  };\n","var map = {\n\t\"./pwa-action-sheet.entry.js\": [\n\t\t615,\n\t\t98\n\t],\n\t\"./pwa-camera-modal-instance.entry.js\": [\n\t\t616,\n\t\t99\n\t],\n\t\"./pwa-camera-modal.entry.js\": [\n\t\t617,\n\t\t100\n\t],\n\t\"./pwa-camera.entry.js\": [\n\t\t618,\n\t\t101\n\t],\n\t\"./pwa-toast.entry.js\": [\n\t\t619,\n\t\t102\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 340;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-action-sheet-controller_8.entry.js\": [\n\t\t623,\n\t\t45\n\t],\n\t\"./ion-action-sheet-ios.entry.js\": [\n\t\t624,\n\t\t46\n\t],\n\t\"./ion-action-sheet-md.entry.js\": [\n\t\t625,\n\t\t47\n\t],\n\t\"./ion-alert-ios.entry.js\": [\n\t\t626,\n\t\t26\n\t],\n\t\"./ion-alert-md.entry.js\": [\n\t\t627,\n\t\t27\n\t],\n\t\"./ion-app_8-ios.entry.js\": [\n\t\t628,\n\t\t13\n\t],\n\t\"./ion-app_8-md.entry.js\": [\n\t\t629,\n\t\t14\n\t],\n\t\"./ion-avatar_3-ios.entry.js\": [\n\t\t630,\n\t\t48\n\t],\n\t\"./ion-avatar_3-md.entry.js\": [\n\t\t631,\n\t\t49\n\t],\n\t\"./ion-back-button-ios.entry.js\": [\n\t\t632,\n\t\t50\n\t],\n\t\"./ion-back-button-md.entry.js\": [\n\t\t633,\n\t\t51\n\t],\n\t\"./ion-backdrop-ios.entry.js\": [\n\t\t634,\n\t\t83\n\t],\n\t\"./ion-backdrop-md.entry.js\": [\n\t\t635,\n\t\t84\n\t],\n\t\"./ion-button_2-ios.entry.js\": [\n\t\t636,\n\t\t52\n\t],\n\t\"./ion-button_2-md.entry.js\": [\n\t\t637,\n\t\t53\n\t],\n\t\"./ion-card_5-ios.entry.js\": [\n\t\t638,\n\t\t54\n\t],\n\t\"./ion-card_5-md.entry.js\": [\n\t\t639,\n\t\t55\n\t],\n\t\"./ion-checkbox-ios.entry.js\": [\n\t\t640,\n\t\t56\n\t],\n\t\"./ion-checkbox-md.entry.js\": [\n\t\t641,\n\t\t57\n\t],\n\t\"./ion-chip-ios.entry.js\": [\n\t\t642,\n\t\t58\n\t],\n\t\"./ion-chip-md.entry.js\": [\n\t\t643,\n\t\t59\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t644,\n\t\t85\n\t],\n\t\"./ion-datetime_3-ios.entry.js\": [\n\t\t645,\n\t\t22\n\t],\n\t\"./ion-datetime_3-md.entry.js\": [\n\t\t646,\n\t\t23\n\t],\n\t\"./ion-fab_3-ios.entry.js\": [\n\t\t647,\n\t\t60\n\t],\n\t\"./ion-fab_3-md.entry.js\": [\n\t\t648,\n\t\t61\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t649,\n\t\t86\n\t],\n\t\"./ion-infinite-scroll_2-ios.entry.js\": [\n\t\t650,\n\t\t41\n\t],\n\t\"./ion-infinite-scroll_2-md.entry.js\": [\n\t\t651,\n\t\t42\n\t],\n\t\"./ion-input-ios.entry.js\": [\n\t\t652,\n\t\t62\n\t],\n\t\"./ion-input-md.entry.js\": [\n\t\t653,\n\t\t63\n\t],\n\t\"./ion-item-option_3-ios.entry.js\": [\n\t\t654,\n\t\t64\n\t],\n\t\"./ion-item-option_3-md.entry.js\": [\n\t\t655,\n\t\t65\n\t],\n\t\"./ion-item_8-ios.entry.js\": [\n\t\t656,\n\t\t66\n\t],\n\t\"./ion-item_8-md.entry.js\": [\n\t\t657,\n\t\t67\n\t],\n\t\"./ion-loading-ios.entry.js\": [\n\t\t658,\n\t\t28\n\t],\n\t\"./ion-loading-md.entry.js\": [\n\t\t659,\n\t\t29\n\t],\n\t\"./ion-menu_4-ios.entry.js\": [\n\t\t660,\n\t\t20\n\t],\n\t\"./ion-menu_4-md.entry.js\": [\n\t\t661,\n\t\t21\n\t],\n\t\"./ion-modal-ios.entry.js\": [\n\t\t662,\n\t\t16\n\t],\n\t\"./ion-modal-md.entry.js\": [\n\t\t663,\n\t\t17\n\t],\n\t\"./ion-nav_5.entry.js\": [\n\t\t664,\n\t\t15\n\t],\n\t\"./ion-popover-ios.entry.js\": [\n\t\t665,\n\t\t18\n\t],\n\t\"./ion-popover-md.entry.js\": [\n\t\t666,\n\t\t19\n\t],\n\t\"./ion-progress-bar-ios.entry.js\": [\n\t\t667,\n\t\t68\n\t],\n\t\"./ion-progress-bar-md.entry.js\": [\n\t\t668,\n\t\t69\n\t],\n\t\"./ion-radio_2-ios.entry.js\": [\n\t\t669,\n\t\t34\n\t],\n\t\"./ion-radio_2-md.entry.js\": [\n\t\t670,\n\t\t35\n\t],\n\t\"./ion-range-ios.entry.js\": [\n\t\t671,\n\t\t70\n\t],\n\t\"./ion-range-md.entry.js\": [\n\t\t672,\n\t\t71\n\t],\n\t\"./ion-refresher_2-ios.entry.js\": [\n\t\t673,\n\t\t43\n\t],\n\t\"./ion-refresher_2-md.entry.js\": [\n\t\t674,\n\t\t44\n\t],\n\t\"./ion-reorder_2-ios.entry.js\": [\n\t\t675,\n\t\t39\n\t],\n\t\"./ion-reorder_2-md.entry.js\": [\n\t\t676,\n\t\t40\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t677,\n\t\t87\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t678,\n\t\t72\n\t],\n\t\"./ion-searchbar-ios.entry.js\": [\n\t\t679,\n\t\t30\n\t],\n\t\"./ion-searchbar-md.entry.js\": [\n\t\t680,\n\t\t31\n\t],\n\t\"./ion-segment_2-ios.entry.js\": [\n\t\t681,\n\t\t73\n\t],\n\t\"./ion-segment_2-md.entry.js\": [\n\t\t682,\n\t\t74\n\t],\n\t\"./ion-select_3-ios.entry.js\": [\n\t\t683,\n\t\t36\n\t],\n\t\"./ion-select_3-md.entry.js\": [\n\t\t684,\n\t\t37\n\t],\n\t\"./ion-slide_2-ios.entry.js\": [\n\t\t685,\n\t\t88\n\t],\n\t\"./ion-slide_2-md.entry.js\": [\n\t\t686,\n\t\t89\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t687,\n\t\t75\n\t],\n\t\"./ion-split-pane-ios.entry.js\": [\n\t\t688,\n\t\t90\n\t],\n\t\"./ion-split-pane-md.entry.js\": [\n\t\t689,\n\t\t91\n\t],\n\t\"./ion-tab-bar_2-ios.entry.js\": [\n\t\t690,\n\t\t76\n\t],\n\t\"./ion-tab-bar_2-md.entry.js\": [\n\t\t691,\n\t\t77\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t692,\n\t\t38\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t693,\n\t\t78\n\t],\n\t\"./ion-textarea-ios.entry.js\": [\n\t\t694,\n\t\t79\n\t],\n\t\"./ion-textarea-md.entry.js\": [\n\t\t695,\n\t\t80\n\t],\n\t\"./ion-toast-ios.entry.js\": [\n\t\t696,\n\t\t32\n\t],\n\t\"./ion-toast-md.entry.js\": [\n\t\t697,\n\t\t33\n\t],\n\t\"./ion-toggle-ios.entry.js\": [\n\t\t698,\n\t\t24\n\t],\n\t\"./ion-toggle-md.entry.js\": [\n\t\t699,\n\t\t25\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t700,\n\t\t92\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 346;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t704,\n\t\t108\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 348;\nmodule.exports = webpackAsyncContext;","module.exports = __webpack_public_path__ + \"static/media/ios-BackIcon.d2c0eae0.svg\";","module.exports = __webpack_public_path__ + \"static/media/md-BackIcon.d2c0eae0.svg\";","import http from 'axios';\r\n/**\r\n * To make service API alls with AXIOS Library.\r\n */\r\nclass __HTTP_SERVICES {\r\n    /**\r\n     * To make service calls with http methods.\r\n     * @param {*} urlEntity formed URL.\r\n     * @param {*} headers consolidated Headers. \r\n     * @param {*} method Http methods. \r\n     * @param {*} data request data. \r\n     * @param {strijg} key end point key. \r\n     * @param {array} requests service requests collection. \r\n     * @param {array} progress callback for monitoring the service progress. \r\n     * @returns {promie} result of the Service API.\r\n     */\r\n    __request(urlEntity: string, headers: any, method: string, data: any, key: string, requests: any, duration: number, progress: any) {\r\n        const _serviceUrl = urlEntity.toString();\r\n        if (requests[key]) {\r\n            requests[key].cancel();\r\n        } else {\r\n            requests[key] = http.CancelToken.source();\r\n        }\r\n        const values: any = {\r\n            //Http methods\r\n            method: method,\r\n            //Service endpoint URL\r\n            url: _serviceUrl,\r\n            //Consolidated Headers\r\n            headers: headers,\r\n            //Request data\r\n            data: data,\r\n            //Download progress event\r\n            onDownloadProgress: progress,\r\n            //Upload progress evnt\r\n            onUploadProgress: progress,\r\n            //setting timeout for request\r\n            timeout: duration\r\n        }\r\n        return http(values);\r\n    }\r\n\r\n     /**\r\n     * To make service calls with http methods for Rest API.\r\n     * @param {*} urlEntity formed URL.\r\n     * @param {*} headers consolidated Headers. \r\n     * @param {*} method Http methods. \r\n     * @param {*} data request data.\r\n     */\r\n    __requestRestApi(urlEntity: string, headers: any, method: string, data?: any) {\r\n        const _serviceUrl = urlEntity.toString();\r\n        const values: any = {\r\n            //Http methods\r\n            method: method,\r\n            //Service endpoint URL\r\n            url: _serviceUrl,\r\n            //Consolidated Headers\r\n            headers: headers,\r\n            //Request data\r\n            data: data,\r\n        }\r\n        return http(values);\r\n    }\r\n\r\n    __instance(){\r\n        return http;\r\n    }\r\n}\r\n\r\nexport default __HTTP_SERVICES;\r\n","import { KEYS } from '../utils/constants';\n\ninterface EndPoints {\n  [index: string]: any;\n  HOME: Keys;\n}\ninterface Keys {\n  [index: string]: string;\n  RECOMMENDED_LOADS: string;\n}\n\nexport const URL_ENDPOINTS: EndPoints = {\n  HOME: {\n    RECOMMENDED_LOADS: \"/recommended/v1/recommended/loads\"\n  },\n  SEARCH: {\n    SEARCH: \"/load/v1/loadposting\"\n  },\n  RECENT: {\n    RECENT: \"/usersearch/v1/history\"\n  },\n  FAVORITE: {\n    FAVORITE_LOADS: \"/usersearch/v1/history\"\n  },\n  DRIVERS_LIST: {\n    DRIVERS_LIST: \"/carriermember/v1/member\"\n  },\n  FETCH_USER_DETAILS: {\n    USER_DETAILS: \"/carriermember/v1/member\",\n    GET_USER_DETAILS: \"/carriermember/v1/member\"\n  },\n  MYLOAD: {\n    CARRIER: \"/v1/shipment\",\n    BUY_LOAD: '/load/v1/loadposting'\n  },\n  MANAGE: {\n    MY_CAPACITY: '/laneandtruck/v1/laneandtruck',\n    CARRIER_PROFILE: '/masterdata/v1/carrierdata'\n  },\n  LOCATION_TRACKER: {\n    LOCATION_TRACKER: \"/devicelocation/v1/location\"\n  },\n  REGISTER_DEVICE: {\n    REGISTER_DEVICE: \"/devicemanage/v1/manage\"\n  },\n  MORETAB: {\n    MORETAB: \"/contentstack/v1/contentstack\"\n  },\n  CONFIG: {\n    APP_LEVEL: \"/contentstack/v1/content-stack/config?env={configEnv}\"\n  },\n  SUBMITFEEDBACK: {\n    SUBMITFEEDBACK: \"/devicemanage/v1/manage\"\n  },\n  AZURE_MAPS:{\n    ACCESS_TOKEN: \"/zipcode/v1/oauth2/token\"\n  }\n\n};\n\n/**\n * To build request URL with provided inputs.\n * @param {string} endPoint URL category name.\n * @param {string} urlKey endpoint key name.\n * @param {*} value query string value to append to the url.\n */\n\nexport default function getURLDetails(\n  endPoint: string,\n  urlKey: string,\n  value?: any\n) {\n  return {\n    get_Service_Url: function () {\n      let _url: string = \"\";\n      let keyValue = URL_ENDPOINTS[endPoint][urlKey];\n      if (keyValue) {\n        _url = \"https://\" + KEYS.API_HOST + keyValue;\n        _url = value ? _url.replace(\"{upn}\", value).replace(\"{configEnv}\", value) : _url;\n      } else {\n        throw new Error(\n          \"key value of End point URL is not matching with provided key name.\"\n        );\n      }\n      return _url;\n    }\n  };\n}\n","export const Environment_Dev = {ENVIROMENT_KEYS : () => ({\n\n//Azure clientID to be used for Azure B2C tenant Application. \nCLIENT_ID: \"f045d15c-3dbe-41c8-a229-aafa5394318b\",\n\n//Azure redirection URL to be used for Azure B2C tenant Application.\nDISCOVERY_URL: \"https://schneidercarexpdev.b2clogin.com/schneidercarexpdev.onmicrosoft.com/v2.0/.well-known/openid-configuration?p=B2C_1A_signup_signin\",\n\nREDIRECT_URI: \"https://www.jwt.ms\",\n\n//Token to be used for consuming Firebase notification features.\nFIREBASE_TOKEN: \"\",\n\n//App release name for Bugsnag release stage\nRELEASE: \"development\",\n\n//Key to be used to enable the Bugsnag logger & reporting features.\nBUGSNAG_KEY: \"8b19859bf35d89eb8ce3d0c6ca5f8277\",\n\n//Key to be used to consume Azure map features.\nAZURE_MAP_CLIENT_ID: \"eaf9747e-2b9c-4f09-93e0-697caf0cad36\",\n\n//Host url to be used to trigger carrier Api services.\nAPI_HOST: \"dev-api.sndrio.com/external/005/carrier\",\n\n//Subscription key to be used to athorize the API endpoints.\nSUBSCRIPTION_KEY: \"96918226b93f451481b875e74d581ab0\",\n\n//Azure scope url to be used as part of Azure authentication.\nAZURE_API_HOST: \"https://schneidercarexpdev.onmicrosoft.com\",\n\n//Azure redirect url to be navigated upon authentication.\nAZURE_REDIRECT_URL: \"https://sni-carrier-experience.dev-aks.sndrio.com/login\",\n\n//Azure redirect url to be navigated upon authentication.\nAZURE_RESET_URL: \"https://schneidercarexpdev.b2clogin.com/schneidercarexpdev.onmicrosoft.com/v2.0/.well-known/openid-configuration?p=B2C_1A_PasswordReset\"\n\n})\n}\n","import HTTP from '../services/httpServices';\nimport getURLDetails from \"../services/endPoints\";\nimport { Environment_Dev } from '../environments/environments.dev';\nimport { Environment_Unt } from '../environments/environments.unt';\nimport { Environment_Uat } from '../environments/environments.uat';\nimport { Environment_Prod } from '../environments/environments.prod';\n\n// Environments :-\n// 1: prod -> Production Envirionment\n// 2: uat -> User Acceptance Environment\n// 3: unt -> User Acceptance Environment\n// 4: dev -> Develpoment Environment\nexport enum Environments {\n  prod,\n  alpha,\n  uat,\n  unt,\n  dev\n}\ntype EnviName = keyof typeof Environments;\n\n/**\n * To get configurable information for the specified Environment.\n * @param {string} enviName environment name.\n */\nexport default class Environment {\n  __environment: EnviName;\n\n  constructor(enviName: EnviName) {\n    this.__environment = enviName;\n  }\n\n  /**\n     * To fetch offline Kyes information for the specified environment.\n     * * @returns {object} json object with list of key-value pairs.\n     */\n  __fetchOfflineConfig() {\n    let envi: any = null;\n    switch (this.__environment) {\n      case 'dev':\n        envi = Environment_Dev;\n        break;\n      case 'unt': envi = Environment_Unt;\n        break;\n      case 'uat': envi = Environment_Uat;\n        break;\n      case 'alpha':\n      case 'prod': envi = Environment_Prod;\n        break;\n    }\n    return envi.ENVIROMENT_KEYS();\n  }\n\n  /**\n     * To fetch online Keys information for the specified environment.\n     * * @returns {object} promise object with list of key-value pairs.\n     */\n  async __fetchOnlineConfig(subscriptionKey: string, token: string, endPoint: string) {\n    return await (new HTTP()).__requestRestApi(getURLDetails(\"CONFIG\", \"APP_LEVEL\", \"default\").get_Service_Url(), {\"Content-Type\": \"application/json\", \"Ocp-Apim-Subscription-Key\": subscriptionKey, \"Authorization\": `Bearer ${token}`},\"get\")\n      .then((response: any) => {\n        return response.data[0];\n      }).catch(async function (err: any) {\n        const _http: any = (new HTTP()).__instance();\n        return await _http.get(\"./online-mock.json\").then((response: any) => {\n          return response.data[0];\n        });\n      });\n  }\n\n  /**\n     * To get Headers information for the specified servcie API.\n     * @param {*} __wrapper common service to maintain keys.\n     * @param {*} __wrteKeys to set key-values pairs in store.\n     * @param {*} __readKeys to get key-values pairs from store\n     * @returns {object} promise object.\n     */\n  async getConfig(__wrapper: any, __store: any, subscriptionKey: string, token: string, endPoint: string): Promise<void> {\n\n    if (!__store) {\n      throw new Error(\n        \"Store service is not provided to share Keys accross the Applciation\"\n      );\n      return\n    }\n\n    const storeKey = \"config\";\n    const vault =  await __store.getVault();\n    if (!await vault.getValue(storeKey)) {\n      try {\n        const [onlineConfig] = (await Promise.all([\n          this.__fetchOnlineConfig(subscriptionKey, token, endPoint)\n        ])) as [any];\n        if (Object.keys(onlineConfig).length) {\n          vault.storeValue(storeKey, btoa(JSON.stringify({ ...onlineConfig })));\n          __wrapper.getKeys(JSON.parse(atob(await vault.getValue(storeKey))));\n        }\n      } catch (err) {\n        throw new Error(err);\n      }\n    } else {\n      __wrapper.getKeys(JSON.parse(atob(await vault.getValue(storeKey))));\n    }\n  }\n}\n","export const Environment_Unt = {ENVIROMENT_KEYS : () => ({\n\n//Azure clientID to be used for Azure B2C tenant Application. \nCLIENT_ID: \"f045d15c-3dbe-41c8-a229-aafa5394318b\",\n\n//Azure redirection URL to be used for Azure B2C tenant Application.\nDISCOVERY_URL: \"https://schneidercarexpdev.b2clogin.com/schneidercarexpdev.onmicrosoft.com/v2.0/.well-known/openid-configuration?p=B2C_1A_signup_signin\",\n\n//Token to be used for consuming Firebase notification features.\nFIREBASE_TOKEN: \"\",\n\n//App release name for Bugsnag release stage\nRELEASE: \"development\",\n\n//Key to be used to enable the Bugsnag logger & reporting features.\nBUGSNAG_KEY: \"8b19859bf35d89eb8ce3d0c6ca5f8277\",\n\n//Key to be used to consume Azure map features.\nAZURE_MAP_CLIENT_ID: \"eaf9747e-2b9c-4f09-93e0-697caf0cad36\",\n\n//Host url to be used to trigger carrier Api services.\nAPI_HOST: \"api.unt.schneider.com/external/005/carrier\",\n\n//Subscription key to be used to athorize the API endpoints.\nSUBSCRIPTION_KEY: \"0393ee4ccd0d4e46a2c0e0e0f97be467\",\n\n//Azure scope url to be used as part of Azure authentication.\nAZURE_API_HOST: \"https://schneidercarexpdev.onmicrosoft.com\",\n\n//Azure redirect url to be navigated upon authentication.\nAZURE_REDIRECT_URL: \"https://sni-carrier-experience-carrier-freight.apps.unt.schneider.com/login\",\n\n//Azure redirect url to be navigated upon authentication.\nAZURE_RESET_URL: \"https://schneidercarexpdev.b2clogin.com/schneidercarexpdev.onmicrosoft.com/v2.0/.well-known/openid-configuration?p=B2C_1A_PasswordReset\",\n\n//GPS env custom filter\nGEO_PRE_ARRIVAL_RADIUS: 1600, // Approximately 1 mile\n\n//Google Maps API key\nGOOGLE_MAPS_API_KEY: \"AIzaSyAQeA7e4GAx_nR7Jgw_upi6pITh-x73Fyc\"\n\n})\n}\n","export const Environment_Uat = {ENVIROMENT_KEYS : () => ({\n\n    //Azure clientID to be used for Azure B2C tenant Application. \n    CLIENT_ID: \"5028ac47-6697-4cf4-8a0d-fd8a9010390c\",\n    \n    //Azure redirection URL to be used for Azure B2C tenant Application.\n    DISCOVERY_URL: \"https://schneidercarrieruat.b2clogin.com/schneidercarrieruat.onmicrosoft.com/v2.0/.well-known/openid-configuration?p=B2C_1A_signup_signin\",\n    \n    REDIRECT_URI: \"https://www.jwt.ms\",\n\n    //Token to be used for consuming Firebase notification features.\n    FIREBASE_TOKEN: \"\",\n\n    //App release name for Bugsnag release stage\n    RELEASE: \"uat\",\n    \n    //Key to be used to enable the Bugsnag logger & reporting features.\n    BUGSNAG_KEY: \"8b19859bf35d89eb8ce3d0c6ca5f8277\",\n    \n    //Key to be used to consume Azure map features.\n    AZURE_MAP_CLIENT_ID: \"eaf9747e-2b9c-4f09-93e0-697caf0cad36\",\n\n    //Host url to be used to trigger carrier Api services.\n    API_HOST: \"api.uat.schneider.com/external/005/carrier\",\n    \n    //Subscription key to be used to athorize the API endpoints.\n    SUBSCRIPTION_KEY: \"eed85d63a6224e05a592fde1e7842134\",\n    \n    //Azure scope url to be used as part of Azure authentication.\n    AZURE_API_HOST: \"https://schneidercarrieruat.onmicrosoft.com\",\n\n    //Azure redirect url to be navigated upon authentication.\n    AZURE_REDIRECT_URL: \"https://sni-carrier-experience-carrier-freight.apps.uat.schneider.com/login\",\n\n    //Azure redirect url to be navigated upon authentication.\n    AZURE_RESET_URL: \"https://schneidercarrieruat.b2clogin.com/schneidercarrieruat.onmicrosoft.com/v2.0/.well-known/openid-configuration?p=B2C_1A_PasswordReset\",\n    \n    // GPS env custom filter\n    GEO_PRE_ARRIVAL_RADIUS: 1600, // Approximately 1 mile\n\n    //Google Maps API key\n    GOOGLE_MAPS_API_KEY: \"AIzaSyAQeA7e4GAx_nR7Jgw_upi6pITh-x73Fyc\"\n    \n    })\n}\n","export const Environment_Prod = {ENVIROMENT_KEYS : () => ({\n\n    //Azure clientID to be used for Azure B2C tenant Application. \n    CLIENT_ID: \"19bdee4a-2166-40a9-bfa9-f9aaf19f2950\",\n\n    //Azure redirection URL to be used for Azure B2C tenant Application.\n    DISCOVERY_URL: \"https://schneidercarrier.b2clogin.com/schneidercarrier.onmicrosoft.com/v2.0/.well-known/openid-configuration?p=B2C_1A_signup_signin\",\n\n    REDIRECT_URI: \"https://www.jwt.ms\",\n\n    //Token to be used for consuming Firebase notification features.\n    FIREBASE_TOKEN: \"\",\n    \n    //App release name for Bugsnag release stage\n    RELEASE: \"production\",\n\n    //Key to be used to enable the Bugsnag logger & reporting features.\n    BUGSNAG_KEY: \"8b19859bf35d89eb8ce3d0c6ca5f8277\",\n    \n    //Key to be used to consume Azure map features.\n    AZURE_MAP_CLIENT_ID: \"2dbbcf05-3325-4a60-b6cf-7d594264ec8e\",\n\n    //Host url to be used to trigger carrier Api services.\n    API_HOST: \"api.schneider.com/external/005/carrier\",\n    \n    //Subscription key to be used to athorize the API endpoints.\n    SUBSCRIPTION_KEY: \"6569aea3d9e943e0b610c320ca62a92a\",\n    \n    //Azure scope url to be used as part of Azure authentication.\n    AZURE_API_HOST: \"https://schneidercarrier.onmicrosoft.com\",\n\n    //Azure redirect url to be navigated upon authentication.\n    AZURE_REDIRECT_URL: \"https://sni-carrier-experience-carrier-freight.apps.schneider.com/login\",\n    \n    //Azure redirect url to be navigated upon authentication.\n    AZURE_RESET_URL: \"https://schneidercarrier.b2clogin.com/schneidercarrier.onmicrosoft.com/v2.0/.well-known/openid-configuration?p=B2C_1A_PasswordReset\",\n\n    // GPS env custom filter\n    GEO_PRE_ARRIVAL_RADIUS: 3300, // Approximately 2 miles\n    \n    //Google Maps API key\n    GOOGLE_MAPS_API_KEY: \"AIzaSyAQeA7e4GAx_nR7Jgw_upi6pITh-x73Fyc\"\n    \n    })\n}\n","import Environment from \"../environments/environment\";\nimport { ISortOption } from \"../schemas/Home/Home.schema\";\n\nexport const APP_VERSION = \"1.18.12-RestructuringAPICalls\";\n\nexport const RESTART_ON_REMOUNT = \"@@saga-injector/restart-on-remount\";\nexport const DAEMON = \"@@saga-injector/daemon\";\nexport const ONCE_TILL_UNMOUNT = \"@@saga-injector/once-till-unmount\";\n\nexport const LAST_UPDATED_DATE = \"LAST_UPDATED_DATE\";\nexport const TOGGLE_LOADING = \"TOGGLE_LOADING\";\n\nexport const OFFLINE_MODE_START = \"OFFLINE_MODE_START\";\nexport const CREATE_OFFLINE_JSON = \"CREATE_OFFLINE_JSON\";\nexport const GET_CONFIG_PARAMS = \"GET_CONFIG_PARAMS\";\nexport const UPDATE_OFFLINE_CONTENT = \"UPDATE_OFFLINE_CONTENT\";\nexport const FIND_SEARCH_DATA = \"FIND_SEARCH_DATA\";\nexport const FIND_SHIPMENT_INFO = \"FIND_SHIPMENT_INFO\";\nexport const UPDATE_SEARCH_PARAMS_OFFLINE = \"UPDATE_SEARCH_PARAMS_OFFLINE\";\nexport const UPDATE_SHIPMENT_INFO_OFFLINE = \"UPDATE_SHIPMENT_INFO_OFFLINE\";\nexport const UPDATE_SEARCH_PARAMS_REDUX = \"UPDATE_SEARCH_PARAMS_REDUX\";\nexport const UPDATE_PULL_TO_REFRESH_STATE = \"UPDATE_PULL_TO_REFRESH_STATE\";\nexport const STORE_ACCESS_TOKEN = \"STORE_ACCESS_TOKEN\";\n\nexport const LOGIN_INPROGRESS = \"LOGIN_INPROGRESS\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";\n\nexport const FETCH_USER_DETAILS = \"FETCH_USER_DETAILS\";\nexport const FETCH_USER_DETAILS_SUCCESS = \"FETCH_USER_DETAILS_SUCCESS\";\nexport const FETCH_USER_DETAILS_FAILED = \"FETCH_USER_DETAILS_FAILED\";\n\nexport const LOGOUT = \"LOGOUT\";\n\nexport const SESSION = \"SESSION\";\n\nexport const UPDATE_DATA = \"UPDATE_DATA\";\nexport const WATCHEDLOAD_DATA_REQUEST = \"WATCHEDLOAD_DATA_REQUEST\";\nexport const WATCHEDLOAD_DATA_SUCCESS = \"WATCHED_DATA_SUCCESS\";\nexport const LOAD_DATA = \"LOAD_DATA\";\nexport const SEARCH_DATA = \"SEARCH_DATA\";\nexport const LOAD_ALL_SEARCH_DATA = \"LOAD_ALL_SEARCH_DATA\";\nexport const SAVE_ALL_SEARCH_DATA = \"SAVE_ALL_SEARCH_DATA\";\nexport const RECENT_LOADS = \"RECENT_LOADS\";\nexport const GET_RECENT = \"GET_RECENT\";\nexport const FAVORITE_LOADS = \"FAVORITE_LOADS\";\nexport const FAVORITE_LOADS_DATA = \"FAVORITE_LOADS_DATA\";\nexport const UPDATE_FAVORITE_LOADS = \"UPDATE_FAVORITE_LOADS\";\nexport const GET_FAVORITE = \"GET_FAVORITE\";\nexport const UPDATE_FAVORITE_LOADS_REDUCER = \"UPDATE_FAVORITE_LOADS_REDUCER\";\nexport const UPDATE_FAVORITE_ERROR = \"UPDATE_FAVORITE_ERROR\";\nexport const CLEAR_FAVORITE_ERROR = \"CLEAR_FAVORITE_ERROR\";\nexport const PROFILE_IMAGE_SET = \"PROFILE_IMAGE_SET\";\nexport const MANAGE_CARD_DATA = \"MANAGE_CARD_DATA\";\nexport const GET_MANAGE_CARD_DATA = \"GET_MANAGE_CARD_DATA\";\nexport const CARRIER_MANAGE_DATA_REQUEST = \"CARRIER_MANAGE_DATA_REQUEST\";\nexport const CARRIER_MANAGE_DATA_SUCCESS = \"CARRIER_MANAGE_DATA_SUCCESS\";\nexport const CARRIER_MANAGE_DATA_FAILURE = \"CARRIER_MANAGE_DATA_FAILURE\";\nexport const PERMISSION_ALERT_MESSAGE = \"PERMISSION_ALERT_MESSAGE\";\nexport const MYLOAD_CARD_DATA = \"MYLOAD_CARD_DATA\";\nexport const GET_MYLOAD_CARD_DATA = \"GET_MYLOAD_CARD_DATA\";\nexport const CLOSE_PERMISSION_ALERT = \"CLOSE_PERMISSION_ALERT\";\nexport const GET_CARRIER_CONTACT_DATA = \"GET_CARRIER_CONTACT_DATA\";\nexport const CARRIER_CONTACT_DATA = \"CARRIER_CONTACT_DATA\";\nexport const HIDE_TAB_BAR = \"HIDE_TAB_BAR\";\nexport const GET_HIDE_TAB_BAR = \"GET_HIDE_TAB_BAR\";\n\nexport const UPDATE_GPS_COORDS = \"UPDATE_GPS_COORDS\";\nexport const UPDATE_NETWORK_STATUS = \"UPDATE_NETWORK_STATUS\";\nexport const UPDATE_DEVICE_INFO = \"UPDATE_DEVICE_INFO\";\n\nexport const GPS_TIME = 30000;\n\nexport const USER_PROFILE_DATA = \"USER_PROFILE_DATA\";\nexport const GET_USER_PROFILE_DATA = \"GET_USER_PROFILE_DATA\";\n\nexport const SHOW_TOASTER_VALUE = \"SHOW_TOASTER_VALUE\";\nexport const TOKEN_DATA = \"TOKEN_DATA\";\nexport const SAVE_DEEPLINK_URI = \"SAVE_DEEPLINK_URI\";\nexport const CLEAR_DEEPLINK_URI = \"CLEAR_DEEPLINK_URI\";\n\nexport const Anywhere = \"Anywhere\";\nexport const ANYWHERE = \"anywhere\";\nexport const DryVan = \"Dry Van\";\nexport const PickUpdateError = \"Please provide a correct pickup date.\";\nexport const dropUpdateError = \"Please provide correct delivery date\";\nexport const CityError = \"Kindly provide your correct city name\";\nexport const PickupError = \"Please provide a correct pickup location.\";\nexport const DropoffError = \"Please provide a correct drop off location.\";\n\nexport const RequiredField = \"Field is required\";\nexport const origin_Radius = \"originRadius\";\nexport const DestinationRadius = \"destinationRadius\";\nexport const PickUpdate = \"pickUpdate\";\nexport const PickupDateSerachResults = \"Pickup Date\";\nexport const Dropdate = \"dropdate\";\nexport const Origin = \"origin\";\nexport const Destination = \"destination\";\nexport const Trailer = \"TrailerType\";\nexport const NewHeader =\n  \"Enter criteria and click apply to see matching loads.\";\n\nexport const AddFavorite = \"Add as Favorite\";\nexport const addDriverHeader = \"Carry and update the status of loads\";\n\nexport const ASSIGN_DRIVER = \"ASSIGN_DRIVER\";\nexport const ASSIGN_DRIVER_LIST = \"ASSIGN_DRIVER_LIST\";\nexport const FETCH_SEARCH_RESULTS = \"FETCH_SEARCH_RESULTS\";\nexport const CLEAR_SEARCH_RESULST = \"CLEAR_SEARCH_RESULST\";\nexport const ADD_DRIVER_SUCCESS = \"ADD_DRIVER_SUCCESS\";\n\nexport const LOCATION_TRACKER = \"LOCATION_TRACKER\";\nexport const LOCATION_TRACKER_RESULTS = \"LOCATION_TRACKER_RESULTS\";\n\nexport const USER_ID = \"133444\";\nexport const CARRIER_ID = \"SL0977\";\nexport const SHIPMENT_ID = \"SDF9864\";\nexport const DEVICE_ID = \"iPhone 11\";\nexport const MOBILE = \"mobile\";\nexport const FETCH_CARRIER_ASSIGNED_LOADS = \"FETCH_CARRIER_ASSIGNED_LOADS\";\nexport const LOAD_CARRIER_DATA = \"LOAD_CARRIER_DATA\";\n\nexport const FETCH_DRIVER_ASSIGNED_LOADS = \"FETCH_DRIVER_ASSIGNED_LOADS\";\nexport const DRIVER_ASSIGNED_DATA = \"DRIVER_ASSIGNED_DATA\";\nexport const FETCH_MYLOADS = \"FETCH_MYLOADS\";\n\nexport const ADD_WATCH_LOAD = \"ADD_WATCH_LOAD\";\nexport const ADD_WATCH_LOAD_SUCCESS = \"ADD_WATCH_LOAD_SUCCESS\";\nexport const REMOVE_WATCH_LOAD = \"REMOVE_WATCH_LOAD\";\nexport const REMOVE_WATCH_LOAD_SUCCESS = \"REMOVE_WATCH_LOAD_SUCCESS\";\nexport const WATCHED_LOAD_FILTER = \"WATCHED_LOAD_FILTER\";\nexport const SUBMIT_FEEDBACK = \"SUBMIT_FEEDBACK\";\nexport const GET_SUBMIT_FEEDBACK = \"GET_SUBMIT_FEEDBACK\";\nexport const END_USER_TITLE = \"End User Licensing Agreement\";\nexport const FREQUENTLY_ASKED_QUESTIONS_TITLE = \"Frequently Asked Questions\";\nexport const ADD_DRIVER_DISPATCHER_TITLE = \"Add Driver/Dispatcher\";\nexport const MENU_TITLE = \"Menu\";\nexport const SEARCH_TITLE = \"Search\";\nexport const LOADS_TITLE = \"Loads\";\n\nexport enum CALL_US_NUMBER {\n  OTM = \"833-391-8735\",\n  MG = \"855-476-4786\"\n}\n\nexport enum CarrierActionTypes {\n  ASSIGN_DRIVER_TO_SHIPMENT = \"ASSIGN_DRIVER_TO_SHIPMENT\",\n  ASSIGN_DRIVER_TO_SHIPMENT_RESPONSE = \"ASSIGN_DRIVER_TO_SHIPMENT_RESPONSE\",\n  CLEAR_ASSIGN_DRIVER_TO_SHIPMENT_RESPONSE = \"CLEAR_ASSIGN_DRIVER_TO_SHIPMENT_RESPONSE\",\n  SHOW_ASSIGN_DRIVER_TO_SHIPMENT_DIALOG = \"SHOW_ASSIGN_DRIVER_TO_SHIPMENT_DIALOG\",\n  HIDE_ASSIGN_DRIVER_TO_SHIPMENT_DIALOG = \"HIDE_ASSIGN_DRIVER_TO_SHIPMENT_DIALOG\",\n  CONFIRM_START_INFORMATION = \"CONFIRM_START_INFORMATION\",\n  CONFIRM_START_INFORMATION_SUCCESS = \"CONFIRM_START_INFORMATION_SUCCESS\",\n  CONFIRM_START_INFORMATION_STATUS_MESSAGE = \"CONFIRM_START_INFORMATION_STATUS_MESSAGE\",\n  CLEAR_CONFIRM_START_INFORMATION_STATUS_MESSAGE = \"CLEAR_CONFIRM_START_INFORMATION_STATUS_MESSAGE\",\n  SHIPMENT_FOR_STARTTRIP = \"SHIPMENT_FOR_STARTTRIP\",\n  SHIPMENT_FOR_STARTTRIP_TIMESTAMP = \"SHIPMENT_FOR_STARTTRIP_TIMESTAMP\",\n  UPDATE_STOP_INFORMATION = \"UPDATE_STOP_INFORMATION\",\n  UPDATE_STOP_INFORMATION_RESPONSE = \"UPDATE_STOP_INFORMATION_REPONSE\",\n  START_TRIP = \"START_TRIP\",\n  START_TRIP_INFORMATION_RESPONSE = \"START_TRIP_INFORMATION_RESPONSE\",\n  COMPLETE_TRIP_API_REQUEST = \"COMPLETE_TRIP_API_REQUEST\",\n  COMPLETE_TRIP_API_RESPONSE = \"COMPLETE_TRIP_API_RESPONSE\",\n  SHOW_WARNING_DIALOG = \"SHOW_WARNING_DIALOG\",\n  CLEAR_WARNING_DIALOG = \"CLEAR_WARNING_DIALOG\",\n  CLEAR_UPDATE_STOP_INFORMATION_RESPONSE = \"CLEAR_UPDATE_STOP_INFORMATION_REPONSE\",\n}\n\nexport const REGISTER_DEVICE_ACTION = \"REGISER DEVICE ACTION\";\nexport const FETCH_DRIVER_ASSIGNED_LOADS_FROM_PUSH =\n  \"FETCH_DRIVER_ASSIGNED_LOADS_FROM_PUSH\";\nexport const REGISTER_DEVICE_RESPONSE_ACTION =\n  \"REGISTER_DEVICE_RESPONSE_ACTION\";\nexport enum GPS_TRACKING_ERROR_MESSAGE {\n  ERROR_MESSAGE_1 = \"You have an active trip, Shipment #\",\n  ERROR_MESSAGE_2 = \". Please complete that trip, to start tracking a new shipment.\"\n}\n\nexport const FUNCTIONALITY_COMMING_SOON = \"Functionality coming soon\";\nexport const PULL_TO_REFRESH_LOADING = \"PULL_TO_REFRESH_LOADING\";\n//exporting keys based on Environment.\nexport const KEYS = new Environment(\n  ((process.env.REACT_APP_ENV && process.env.REACT_APP_ENV.trim()) ||\n    \"uat\") as any\n).__fetchOfflineConfig();\nexport const recommendedErrorText =\n  \"We don't have any recommendations right now. Please come back later.\";\nexport const watchedEmptyText = \"You haven't Watched any loads yet\";\nexport const watchedErrorText =\n  \"It looks like your shipment details was updated from other sources. Please check & try again\";\nexport const recommendedErrorButton = \"Search for loads\";\nexport const searchResultsErrorText =\n  \"We don't have any result right now. Please refine your search.\";\nexport const searchResultsErrorButton = \"Reset search\";\n\nexport const SHIPMENT_LOADS = \"SHIPMENT_LOADS\";\nexport const LOAD_INTRANSIT_DATA = \"LOAD_INTRANSIT_DATA\";\n\nexport const CHECK_NETWORK_MESSAGE = \"Please check your network connection.\";\nexport const MANAGE_FINANCE_URL = \"https://secure.triumphpay.com/\";\n\nexport const SHOW_ALERT_MESSAGE = \"SHOW_ALERT_MESSAGE\";\nexport const HIDE_ALERT_MESSAGE = \"HIDE_ALERT_MESSAGE\";\nexport const NO_NEWORK = \"No network connection\";\n\nexport const GET_MORE_TAB_CONTENT = \"GET_MORE_TAB_CONTENT\";\nexport const MORE_TAB_CONTENT_RESPONSE = \"MORE_TAB_CONTENT_RESPONSE\";\nexport const MORE_TAB_CONTENT_RESPONSE_DUMMY =\n  \"MORE_TAB_CONTENT_RESPONSE_DUMMY\";\n\nexport const PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE =\n  \"Please check your network connectivity and try again.\";\n\n// Splash Screen properties\nexport const splashShowDuration = 10000;\nexport const splashImage = \"assets/images/splash.gif\";\n\n//----------GPS plugin custom proterties------------\nexport const DB_GPS_ACTIVATED_SHIPMENT = \"DB_GPS_ACTIVATED_SHIPMENT\"; // DB name for GPS activated shipment data storage\nexport const distanceFilter = 800; //Approximately 800 meters\nexport const STRING_STOP_TRACKING_TRIP = \"Stop Tracking Trip #\";\n//export const GEO_PRE_ARRIVAL_RADIUS = 8000; // Approximately 5 miles\nexport const GEO_ARRIVAL_RADIUS = 400; // Approximately .25 miles\n\n// Interval time in milliseconds for stationary state identification\nexport const STATIONARY_IDENTIFIER_INTERVAL = 120000; //2 min, time in milliseconds\n\nexport const STATIONARY_IDENTIFIER_MAX_DISTANCE = 200; // 200 meters                            // 0.00621371 miles or 10 meter\n\nexport enum MESSAGE_TYPE {\n  GEO_START_TRIP_LOCATION = \"Geo-Start-Trip-Location\", // Workflow: (When trip start) Message Type will send to code system without any convertion from BE\n  GEO_POSITION = \"Geo-Position\", // Geo: (GPS Tracking normal pings) Message Type will send to code system without any convertion from BE\n  GEOFENCE_PRE_ARRIVAL = \"Geo-Fence-Pre-Arrival-\", // Geofence: (Pre-Arrival Fence) converted by BE based on REST API request \"action\", ie: \"action\": \"ENTER\" <Geo-Fence-Pre-Arrival>, \"action\": \"EXIT\" <Geo-Stop-Depart>\n  GEOFENCE_ARRIVAL = \"Geo-Fence-\", // Geofence: (Arrival Fence) converted by BE based on REST API request \"action\", ie: \"action\": \"ENTER\" <Geo-Fence-Entry>, \"action\": \"EXIT\" <Geo-Fence-Exit>\n  GEO_STOP_ARRIVAL = \"Geo-Stop-Arrival\", // Workflow: (stationary state) Message Type will send to code system without any convertion from BE\n  GEO_TPOSITION = \"Geo-TPosition\"\n}\n\nexport enum GEOFENCE_IDENTIFIER {\n  PRE_ARRIVAL = \"PRE_ARRIVAL\",\n  ARRIVAL = \"ARRIVAL\"\n}\n\nexport enum GEOFENCE_ACTION {\n  ENTER = \"ENTER\",\n  EXIT = \"EXIT\"\n}\n\nexport enum SOUND_SRC {\n  START_TRIP = \"assets/sound/location-services-on.mp3\",\n  STOP_TRIP = \"assets/sound/location-services-off.mp3\",\n  GEOFENCE_PRE_ARRIVAL_ENTRY = \"assets/sound/geofence-enter.mp3\",\n  GEOFENCE_PRE_ARRIVAL_EXIT = \"assets/sound/geofence-exit.mp3\",\n  GEOFENCE_ARRIVAL_ENTRY = \"assets/sound/tslocationmanager_beep_trip_dry.mp3\",\n  GEOFENCE_ARRIVAL_EXIT = \"assets/sound/tslocationmanager_beep_trip_up_dry.mp3\"\n}\n\nexport const MONTH_NAMES = [\n  \"Jan\",\n  \"Feb\",\n  \"Mar\",\n  \"Apr\",\n  \"May\",\n  \"Jun\",\n  \"Jul\",\n  \"Aug\",\n  \"Sep\",\n  \"Oct\",\n  \"Nov\",\n  \"Dec\"\n];\n\nexport const ISSUE_WITH_ASSIGNED_LOAD =\n  \"There seems to be some issue with the assigned load. Kindly try after some time.\";\n\nexport const UPDATE_STOP_CTA_TEXT = \"Update Stop information\";\nexport const STOP_OFF_TEXT = \"Stop off \";\nexport const COMPLETE_TRIP_CTA_TEXT = \"Complete Trip\";\nexport const CALL_US_TEXT = \"Call us\";\nexport const CHAT_TEXT = \"Chat with us\";\nexport const INTRANSIT_TEXT = \"INTRANSIT\";\nexport const DELIVERED = \"MyLoad/Delivered\";\nexport const CONFRIM_START_CTA_TEXT = \"Confirm start information\";\nexport const START_LOCATION_LABEL_TEXT = \"Start Location\";\nexport const ACTUAL_START_LABEL_TEXT = \"Actual Start\";\nexport const ASSIGN_DRIVER_CTA_TEXT = \"Assign Driver\";\nexport const BOOK_LOAD_CTA_TEXT = \"Book Now\";\nexport const CONTACT_FOR_PRICE_CTA_TEXT = \"Contact for Price\";\nexport const BOOKLOAD_ACCEPT_CTA_TEXT = \"Accept\";\nexport const BOOKLOAD_DECLINE_CTA_TEXT = \"Decline\";\nexport const VIEW_RATE_DETAILS = \"View Rate details\";\nexport const CHARGE_DESCRIPTION = \"Charge Description\";\nexport const RATE_QUALIFIER = \"Rate/ Qualifier\";\nexport const BOOLOAD_QTY = \"Qty\";\nexport const BOOKLOAD_TOTAL = \"Total\";\nexport const BOOK_LOAD_MODAL_ACCEPT =\n  \"By accepting you agree to the terms & conditions listed for this load and upon a successful buy, the load will be assigned to you.\";\nexport const BOOKLOAD_THANK_YOU_MESSAGE =\n  \"Thank you for booking #{{LOAD_ID}} Tender will be sent to your email momentarily.  Click OK to view the execution details and assign your driver.\";\nexport const BOOKLOAD_THANK_YOU_ERROR_MESSAGE =\n  \"Your load assignment is taking more time than expected.  Please check back after 15 minutes under My Loads - Carrier Assigned.\";\nexport const BOOK_LOAD_THANK_YOU_REJECTION_MESSAGE =\n  \"The request to buy was unsuccessful. Refresh and try again.\";\nexport const BOOKLOAD_THANKYOU_HEADER = \"Thank You\";\nexport const BOOKLOAD_REQUEST_REJECTED_HEADER = \"Error\";\nexport enum MODULES {\n  CARRIER_ASSIGNED_MODULE = \"MyLoad/CarrierAssigned\",\n  DRIVER_ASSIGNED_MODULE = \"MyLoad/DriverAssigned\",\n  INTRANSIT_MODULE = \"MyLoad/InTransit\",\n  RECENTLY_DELIVERED_MODULE = \"MyLoad/Delivered\",\n  SEARCH_RESULTS = \"search/results\"\n}\nexport enum HOMEMODULES {\n  RECOMMENDED_MODULE = \"home/recommended\",\n  WATCHED_MODULE = \"home/watched\"\n}\n\nexport const TERM_AND_CONDITION_1 =\n  \"A shipment tender document will be sent to you once assigned within the Schneider Transportation Management System. The carrier must follow this shipment tender documentation, any changes to the shipment will cause an updated tender which would include updated payment information.\";\nexport const TERM_AND_CONDITION_2 =\n  \"This transaction is subject to and governed by the written agreement between you and Schneider Transportation Management, a division of Schneider National Carriers, Inc. and the terms of this site.\";\n\nexport const REFERENCE = \"References\";\nexport const REFERENCE_TYPE_TEXT = \"Reference Type\";\nexport const REFERENCE_VALUE_TEXT = \"Reference Value\";\nexport const SR_NO_TEXT = \"Sr no\";\nexport const REFERENCE_DAILOAG_HEADING = \"References\";\n\nexport const START_TRIP_MESSAGE_FOR_PENDING_LOADS =\n  \"The Driver assignment for the load is not confirmed yet. Kindly refresh the page or try after some time.\";\nexport const START_TRIP_TEXT = \"Start Trip\";\n\nexport enum ExecutionStatus {\n  PENDING = \"PENDING\",\n  ACCEPTED = \"ACCEPTED\",\n  STARTED = \"STARTED\",\n  IN_TRANSIT = \"IN_TRANSIT\",\n  DELIVERED = \"DELIVERED\",\n  COMPLETED = \"COMPLETED\"\n}\nexport const STOP_TRACKING_TEXT = \"Stop Tracking\";\n\n/**\n * Manage User Constants\n */\n\nexport const USER_EXIST_TITLE = \"Send Request\";\nexport const USER_EXIST_MESSAGE = \"{{EMAIL}} already exists.  Do you want to send a request to {{NAME}} to join your carrier account?\";\nexport const USER_BACK_TITLE = \"Are you sure you want to navigate back?\";\nexport const USER_BACK_MESSAGE = \"You have not saved the new user information.\";\nexport const EMAIL_ERROR = \"Please enter valid email address\";\nexport const USER_FORM_ERRORS: any = {\n  firstName: \"Please enter first name\",\n  lastName: \"Please enter last name\",\n  mobileNumber: \"Please enter valid mobile number\",\n  tractorNumber: \"Please enter valid tractor number\"\n};\nexport const MANAGE_USER_REQUEST = \"MANAGE_USER_REQUEST\";\nexport const MANAGE_USER_SUCCESS_MESSAGE =\n  \"User details has been addedd successfully\";\nexport const MANAGE_USER_UPDATE_SUCCESS =\n  \"User details has been updated successfully\";\nexport const MANAGE_USER_REMOVE_SUCCESS_TEXT =\n  \"User has been delink successfully\";\nexport const MANAGE_USER_TRANSFER_EXIST =\n  \"User already exist in current carrier\";\nexport const MANAGE_USER_CONFIRM_TRANSFER_TITLE = \"New carrier request\";\nexport const MANAGE_USER_CONFIRM_TRANSFER_MESSAGE =\n  '{{COMPANY}} wants to add you as a user. Tap on \"Agree\" to join.';\nexport const MANAGE_USER_TRANSFER_MESSAGE = \"Request sent to {{NAME}}\";\nexport const MANAGE_USER_TRANSFER_REQUEST = \"MANAGE_USER_TRANSFER_REQUEST\";\nexport const MANAGE_USER_TRANSFER_REQUEST_RESET =\n  \"MANAGE_USER_TRANSFER_REQUEST_RESET\";\nexport const MANAGE_USER_TRANSFER_COFIRM_REQUEST =\n  \"MANAGE_USER_TRANSFER_COFIRM_REQUEST\";\nexport const MANAGE_USER_TRANSFER_COFIRM = \"MANAGE_USER_TRANSFER_COFIRM\";\nexport const GET_MANAGE_USERS_LIST = \"GET_MANAGE_USERS_LIST\";\nexport const MANAGE_USERS_LIST_SUCCESS = \"MANAGE_USERS_LIST_SUCCESS\";\nexport const MANAGE_USER_SELECTED = \"MANAGE_USER_SELECTED\";\nexport const MANAGE_USER_FILTER = \"MANAGE_USER_FILTER\";\nexport const MANAGE_USER_TRANSFER = \"MANAGE_USER_TRANSFER\";\nexport const MANAGE_USER_VALIDATE = \"MANAGE_USER_VALIDATE\";\nexport const MANAGE_USER_VALIDATE_RESET = \"MANAGE_USER_VALIDATE_RESET\";\nexport const MANAGE_USER_VALIDATE_STATUS = \"MANAGE_USER_VALIDATE_STATUS\";\nexport const MANAGE_USER_ADD = \"MANAGE_USER_ADD\";\nexport const MANAGE_USER_ADD_SUCCESS = \"MANAGE_USER_ADD_SUCCESS\";\nexport const MANAGE_USER_EDIT = \"MANAGE_USER_EDIT\";\nexport const MANAGE_USER_EDIT_SUCCESS = \"MANAGE_USER_EDIT_SUCCESS\";\nexport const MANAGE_USER_REMOVE = \"MANAGE_USER_REMOVE\";\nexport const MANAGE_USER_REMOVE_SUCCESS = \"MANAGE_USER_REMOVE_SUCCESS\";\nexport const MANAGE_USER_LOADED_RESET = \"MANAGE_USER_LOADED_RESET\";\n\nexport const MANAGE_USERS_TITLE = \"List of users\";\n\nexport const ROLES: any = {\n  carrierGuest: \"Guest\",\n  carrierDispatcher: \"Dispatcher\",\n  carrierDriver: \"Driver\",\n  carrierAdmin: \"Admin\"\n};\nexport const BUYLOAD_DATA_REQUEST = \"BUYLOAD_DATA_REQUEST\";\nexport const BUYLOAD_DATA_SUCCESS = \"BUYLOAD_DATA_SUCCESS\";\n\nexport const BUYLOAD_RESPONSE_REJECTED =\n  \"Invalid Request, Please Check your Inputs.\";\nexport const BUYLOAD_REJECTED_RESPONSE =\n  \"This load is currently on hold. Please check back in a few minutes or call Schneider at 855-476-4786., Another carrier is interested in this load.\";\nexport const BOOKLOAD_STATUS_OK = \"OK\";\nexport const BOOKLOAD_STATUS_REJECTED = \"REJECTED\";\nexport const BOOKLOAD_MESSAGE_OK = \"Assignment Successful.\";\nexport const BOOKLOAD_CANCELLED = \"CANCELLED\";\nexport const BOOKLOAD_ONHOLD = \"ON_HOLD\";\nexport const BUYLOAD_REMOVE_STATUS = \"BUYLOAD_REMOVE_STATUS\";\nexport const BOOKLOAD_NOT_AVAIABLE_RESPONSE =\n  \"This load has been Cancelled Please search for another Load\";\nexport const BOOKLOAD_NOT_AVAILABLE = \"NOT AVAILABLE\";\nexport const BOOKLOAD_INPROGRESS = \"IN_PROGRESS\";\nexport const BOOKLOAD_INPROGRESS_RESPONSE =\n  \"Transaction is in progress Try again Later\";\nexport const NOT_LIKELY = \"Not at all likely\";\nexport const VERY_LIKELY = \"Very likely\";\nexport const IMPROVING_SERVICE = \"How can we improve our app or service?\";\nexport const GOOD_RATING = \"Awesome !\";\nexport const APPSTORE_REVIEW = \"We would love an App store review.\";\nexport const MORE_FEEDBACK =\n  \"We would like to hear more about application from you.\";\nexport const isGetshipemntError = \"isGetshipemntError\";\n\n// LoadDetailsPage\nexport enum BUTTON {\n  START_TRIP = \"Start Trip\",\n  STOP_TRACKING = \"Stop Tracking\"\n}\n\nexport const STAR: any = {\n  STAR_TRUE: \"assets/icon/star-color.svg\",\n  STAR_FALSE: \"assets/icon/star.svg\"\n};\n\nexport const ORIGIN_FROM_DATE = \"origin_from_date\";\nexport const TOTAL_DISTANCE = \"totalDistance\";\nexport const ORIGIN_DEADHEAD = \"origin_deadhead\";\nexport const DESTINATION_DEADHEAD = \"destination_deadhead\";\nexport const PRICE = \"Price\";\nexport const DISTANCE = \"Distance\";\nexport const RATE = \"rate\";\nexport const TOTAL_CHARGE = \"totalCharge\";\nexport const LOAD_STOP = \"loadStop\";\nexport const APPOINTMENT_FROM = \"appointmentFrom\";\n\nexport const ASC_DIRECTION = \"asc\";\nexport const DESC_DIRECTION = \"desc\";\n\nexport const sortByOptions: Array<ISortOption> = [\n  { value: ORIGIN_FROM_DATE, name: \"Pick-up date\" },\n  { value: TOTAL_DISTANCE, name: \"Distance\" }\n];\n\nexport const recommendedSortByOptions: Array<ISortOption> = [\n  { value: ORIGIN_FROM_DATE, name: \"Pick-up date\" },\n  { value: TOTAL_DISTANCE, name: \"Distance\" },\n  { value: PRICE, name: \"Price\" }\n];\n\nexport const DELINK_ACCOUNT_TITLE = \"Delink User account\";\nexport const DELINK_ACCOUNT_MESSAGE =\n  '<span class=\"sub-heading\">Are you sure you want to delink the user account?</span> <br />This process can\\'t be undone.';\n\nexport const BUYLOAD_DATA_OK = \"BUYLOAD_DATA_OK\";\nexport const BUYLOAD_SHIPMENT_REQUEST = \"BUYLOAD_SHIPMENT_REQUEST\";\nexport const BUYLOAD_SHIPMENT_SUCCESS = \"BUYLOAD_SHIPMENT_SUCCESS\";\nexport const REMOVE_SEARCH_RESULTS = \"REMOVE_SEARCH_RESULTS\";\n\nexport const NO_TRUCKS_MESSAGE =\n  \"We don't have any trucks/lanes right now. <br /> Please click on <b>Add</b> to add new button.\";\nexport const OOPS_MESSAGE = \"Oops something went wrong\";\n\nexport const ADD_CAPACITY_SUCCESS = \"Your details has been saved successfully\";\nexport const EDIT_CAPACITY_SUCCESS =\n  \"Your details has been updated successfully\";\nexport const GET_MANAGE_CAPACITY_LIST = \"GET_MANAGE_CAPACITY_LIST\";\nexport const MANAGE_CAPACITY_LIST_SUCCESS = \"MANAGE_CAPACITY_LIST_SUCCESS\";\nexport const MANAGE_CAPACITY_SELECTED = \"MANAGE_CAPACITY_SELECTED\";\nexport const MANAGE_CAPACITY_ADD = \"MANAGE_CAPACITY_ADD\";\nexport const MANAGE_CAPACITY_ADD_SUCCESS = \"MANAGE_CAPACITY_ADD_SUCCESS\";\nexport const MANAGE_CAPACITY_EDIT = \"MANAGE_CAPACITY_EDIT\";\nexport const MANAGE_CAPACITY_EDIT_SUCCESS = \"MANAGE_CAPACITY_EDIT_SUCCESS\";\nexport const MANAGE_CAPACITY_REMOVE = \"MANAGE_CAPACITY_REMOVE\";\nexport const MANAGE_CAPACITY_REMOVE_SUCCESS = \"MANAGE_CAPACITY_REMOVE_SUCCESS\";\nexport const MANAGE_CAPACITY_FILTER = \"MANAGE_CAPACITY_FILTER\";\n\nexport const Days = [\n  {\n    label: \"MON\",\n    value: \"MONDAY\"\n  },\n  {\n    label: \"TUE\",\n    value: \"TUESDAY\"\n  },\n  {\n    label: \"WED\",\n    value: \"WEDNESDAY\"\n  },\n  {\n    label: \"THU\",\n    value: \"THURSDAY\"\n  },\n  {\n    label: \"FRI\",\n    value: \"FRIDAY\"\n  },\n  {\n    label: \"SAT\",\n    value: \"SATURDAY\"\n  },\n  {\n    label: \"SUN\",\n    value: \"SUNDAY\"\n  }\n];\n\nexport const configParamsConstant = {\n  paginationSize: 10,\n\n  gpsTrackingRadiusInMiles: 5,\n\n  gpsTrackingIntervalInMinutes: 15,\n\n  geoFencePreArrivalRadiusInMiles: 1,\n\n  geoFenceEntryRadiusInMiles: 1,\n\n  roleConfigurations: {\n    home: {\n      recommended: {\n        carrierGuest: false,\n        carrierDriver: false,\n        carrierDispatcher: true,\n        carrierAdmin: false\n      },\n      watched: {\n        carrierGuest: false,\n        carrierDriver: false,\n        carrierDispatcher: true,\n        carrierAdmin: false\n      }\n    },\n    search: {\n      new: {\n        carrierGuest: true,\n        carrierDriver: false,\n        carrierDispatcher: true,\n        carrierAdmin: false\n      },\n      recent: {\n        carrierGuest: true,\n        carrierDriver: false,\n        carrierDispatcher: true,\n        carrierAdmin: false\n      },\n      favorite: {\n        carrierGuest: true,\n        carrierDriver: false,\n        carrierDispatcher: true,\n        carrierAdmin: false\n      }\n    },\n    MyLoad: {\n      carrierAssigned: {\n        carrierGuest: false,\n        carrierDriver: false,\n        carrierDispatcher: true,\n        carrierAdmin: true\n      },\n      driverAssigned: {\n        carrierGuest: false,\n        carrierDriver: true,\n        carrierDispatcher: true,\n        carrierAdmin: true\n      },\n      manageFinancial: {\n        carrierGuest: false,\n        carrierDriver: false,\n        carrierDispatcher: true,\n        carrierAdmin: true\n      },\n      driverLoads: {\n        carrierGuest: false,\n        carrierDriver: true,\n        carrierDispatcher: false,\n        carrierAdmin: true\n      }\n    },\n    manage: {\n      userProfile: {\n        carrierGuest: true,\n        carrierDriver: true,\n        carrierDispatcher: true,\n        carrierAdmin: true\n      },\n      myprofile: {\n        carrierGuest: true,\n        carrierDriver: true,\n        carrierDispatcher: true,\n        carrierAdmin: true\n      },\n      mypreferences: {\n        carrierGuest: true,\n        carrierDriver: true,\n        carrierDispatcher: true,\n        carrierAdmin: true\n      },\n      carrierprofile: {\n        carrierGuest: true,\n        carrierDriver: true,\n        carrierDispatcher: true,\n        carrierAdmin: true\n      },\n      manageusers: {\n        carrierGuest: false,\n        carrierDriver: false,\n        carrierDispatcher: true,\n        carrierAdmin: true\n      },\n      managemycapacity: {\n        carrierGuest: true,\n        carrierDriver: true,\n        carrierDispatcher: true,\n        carrierAdmin: true\n      }\n    },\n    more: {\n      more: {\n        carrierGuest: true,\n        carrierDriver: true,\n        carrierDispatcher: true,\n        carrierAdmin: true\n      }\n    }\n  }\n};\n\n// Analytics implementation\nexport enum EVENT {\n  SV_GET_STARTED = \"sv_get_started\",\n  SV_REGISTRATION = \"sv_registration\",\n  UE_REGISTER_NOW = \"ue_register_now\",\n  UE_REGISTER_SUCCESS = \"ue_register_success\",\n  UE_REGISTER_FAILED = \"ue_register_failed\",\n  UE_SIGN_IN = \"ue_sign_in\",\n  UE_LOGIN_SUCCESS = \"ue_login_success\",\n  UE_LOGIN_FAILED = \"ue_login_failed\",\n  SV_HOME = \"sv_home\",\n  UE_VIEW_RECOMMENDED_TAB = \"ue_view_recommended_tab\",\n  UE_SCROLL_RECOMMENDATIONS = \"ue_scroll_recommendations\",\n  UE_VIEW_WATCHED_TAB = \"ue_view_watched_tab\",\n  //Search\n  SV_SEARCH_FILTER = \"sv_search_filter\",\n  SV_SEARCH_RESULT = \"sv_search_result\",\n  SV_VIEW_LOAD = \"sv_view_load\",\n  UE_SEARCH_SEE_RESULTS = \"ue_search_see_results\",\n  //Book It Now\n  UE_BOOK_LOAD_NOW = \"ue_book_load_now\",\n  SV_LOAD_DETAILS_RATE = \"sv_load_details_rate\",\n  UE_LOAD_RATE_ACCEPT = \"ue_load_rate_accept\",\n  UE_LOAD_RATE_DENY = \"ue_load_rate_deny\",\n  UE_BOOK_SUCCESS = \"ue_book_success\",\n  UE_BOOK_FAILED = \"ue_book_failed\",\n\n  UE_START_TRIP = \"ue_start_trip\",\n  UE_GEO_TRACKING = \"ue_geo_tracking\",\n  UE_GEOFENCE_ANNOUNCEMENT = \"ue_geofence_announcement\",\n  //myloads\n  SV_VIEW_MYLOADS = \"sv_view_myloads\",\n  SV_VIEW_CARRIER_ASSIGNED = \"sv_view_carrier_assigned\",\n  SV_ASSIGN_DRIVER = \"sv_assign_driver\",\n  UE_ASSIGN_DRIVER_SUCCESS = \"ue_assign_driver_success\",\n\n  SV_VIEW_DRIVER_ASSIGNED = \"sv_view_driver_assigned\",\n  //In Transit\n  SV_VIEW_IN_TRANSIT = \"sv_view_in_transit\",\n  SV_VIEW_RECENTLY_DEL = \"sv_view_recently_del\",\n  //Load Posting\n  SV_LOAD_DETAILS = \"sv_load_details\",\n  UE_VIEW_LOAD = \"ue_view_load\",\n  UE_WATCH_LOAD = \"ue_watch_load\",\n  UE_VIEW_LOAD_TERMS = \"ue_view_load_terms\",\n  UE_VIEW_LOAD_CALL_US = \"ue_view_load_call_us\",\n  UE_CONTACT_FOR_PRICE = \"ue_contact_for_price\",\n  // Load Details\n  SV_VIEW_SHIPMENT = \"sv_view_shipment\",\n  //Manage Profile\n  SV_MANAGE_PROFILE = \"sv_manage_profile\",\n  SV_VIEW_MY_PROFILE = \"sv_view_my_profile\",\n  SV_VIEW_CARRIER_PROFILE = \"sv_view_carrier_profile\",\n  SV_MANAGE_USERS = \"sv_manage_users\",\n  SV_MANAGE_CAPACITY = \"sv_manage_capacity\",\n  SV_MANAGE_CAPACITY_ADDEDIT = \"sv_manage_capacity_addedit\",\n  UE_MANAGE_CAPACITY_SUCCESS = \"ue_manage_capacity_success\",\n  UE_MANAGE_CAPACITY_FAILED = \"ue_manage_capacity_failed\",\n  //More Menu\n  SV_MORE_MENU = \"sv_more_menu\",\n  // ShipmentStopDetails\n  UE_STOP_UPDATE_SUCCESS = \"ue_stop_update_success\",\n  UE_STOP_UPDATE_FAILURE = \"ue_stop_update_failure\",\n  UE_COMPLETE_TRIP = \"ue_complete_trip\",\n  //Map view\n  SV_LOAD_DETAILS_MAP = \"sv_load_details_map\",\n  // Reference\n  SV_VIEW_REFERENCE = \"sv_view_reference\"\n}\n\nexport enum SCREEN {\n  REGISTRATION = \"registration\",\n  HOME = \"home\",\n  GET_STARTED = \"get-started\",\n  SHIPMENT_DETAILS = \"shipment_details\",\n  //Search\n  SEARCH_FILTER = \"search_filter\",\n  SEARCH_RESULT = \"search_result\",\n  //Book It Now\n  LOAD_DETAILS = \"load_details\",\n  LOAD_DETAILS_RATE = \"load_details_rate\",\n  //myloads\n  MYLOADS = \"myloads\",\n  MYLOADS_CARRIER_ASSIGNED = \"myloads_carrier_assigned\",\n  MYLOADS_DRIVER_ASSIGNMENT = \"myloads_driver_assignment\",\n  MYLOADS_IN_TRANSIT = \"myloads_in_transit\",\n  MYLOADS_RECENTLY_DEL = \"myloads_recently_del\",\n  MYLOADS_DRIVER_ASSIGNED = \"myloads_driver_assigned\",\n  // Load details\n  //Manage Profile\n  MANAGE_PROFILE = \"manage_profile\",\n  MY_PROFILE = \"my_profile\",\n  CARRIER_PROFILE = \"carrier_profile\",\n  MANAGE_USERS = \"manage_users\",\n  MANAGE_CAPACITY = \"manage_capacity\",\n  MANAGE_CAPACITY_ADDEDIT = \"manage_capacity_addedit\",\n  //More Menu\n  MORE_MENU = \"more_menu\",\n  //Map view\n  LOAD_DETAILS_MAP = \"load_details_map\",\n  //Reference\n  MYLOADS_NEEDS_PPWK = \"myloads_needs_ppwk\"\n}\n\nexport enum TAB {\n  RECOMMENDED = \"recommended\",\n  WATCHED = \"watched\",\n  NEW = \"new\",\n  RECENT = \"recent\",\n  FAVORITE = \"favorite\",\n  SEARCHED = \"searched\",\n  CARRIER_ASSIGNED = \"CarrierAssigned\",\n  DRIVER_ASSIGNED = \"DriverAssigned\"\n}\n\nexport const NA = \"NA\";\n\nexport const LOAD_DELIVERED_DATA = \"LOAD_DELIVERED_DATA\";\n\nexport enum LOGIN {\n  NO_NETWORK_TITLE = \"No Network\",\n  NO_NETWORK_TEXT = \"Please check your network connectivity and try again.\",\n  Ok_TEXT = \"Ok\",\n  GET_STARTED_TEXT = \"Get Started\",\n  SIGNUP_TEXT = \"Start with signing up or sign in\"\n}\n\nexport const OTMASSET: string = \"OTMASSET\";\n\nexport const PICKUP_DAYS_ERROR = \"Kindly select atleast one day\";\n\nexport const AUTH_SESSION_NAME: string = \"auth-session\";\n\nexport const REGISTER_USER = \"REGISTER_USER\";\n\nexport const REGISTER_USER_STATUS_MESSAGE = \"REGISTER_USER_STATUS_MESSAGE\";\n\nexport const CLEAR_REGISTER_USER_STATUS_MESSAGE =\n  \"CLEAR_REGISTER_USER_STATUS_MESSAGE\";\n\nexport const RECOMMENDED_LOADS_REQUEST = \"RECOMMENDED_LOADS_REQUEST\";\n\nexport const RECOMMENDED_LOADS_SUCCESS = \"RECOMMENDED_LOADS_SUCESS\";\n\nexport const REMOVE_RECOMMENDEDRESULTS = \"REMOVE_RECOMMENDEDRESULTS\";\n\nexport const CLEARBUYLOAD_RESPONSE = \"CLEARBUYLOAD_RESPONSE\";\n\nexport enum ENV {\n  UNT = \"development\",\n  UAT = \"uat\",\n  PROD = \"production\"\n}\n\nexport enum USER_TYPE {\n  PRIMARY_DRIVER = \"PRIMARY DRIVER\"\n}\n\nexport const INVITED_USER_CREDENTIALS_DOESNT_MATCH =\n  \"The invited user and logged in user credential doesn't match. Kindly contact the carrier.\";\nexport const WARNING_TITLE = \"Warning\";\n\nexport const RECOMMENDED_LOADS_LOADDETAILS = \"RECOMMENDED_LOADS_LOADDETAILS\";\nexport enum Roles {\n  carrierGuest = \"carrierGuest\",\n  carrierAdmin = \"carrierAdmin\",\n  carrierDispatcher = \"carrierDispatcher\",\n  carrierDriver = \"carrierDriver\"\n}\n\nexport enum RegisterFrom {\n  firstName = \"firstName\",\n  lastName = \"lastName\",\n  mobileNumber = \"mobileNumber\",\n  companyName = \"companyName\",\n  corporateZipCode = \"corporateZipCode\"\n}\nexport enum EXECUTION_ERRORS {\n  ARRIVAL_ERROR = \"Arrival time can't be more than 60 mins in future\",\n  DEPARTURE_ERROR = \"Departure time can't be more than 60 mins in future\",\n  DEPARTURE_ARRIVAL_ERROR = \"Arrival time can't be greater than the departure time\",\n  TRAILER_IN_ERROR = \"Trailer in is mandatory!!!\",\n  TRAILER_OUT_ERROR = \"Trailer out is mandatory!!!\",\n  MISSING_ACTIVITY = \"Stop Activity Missing, Trailer Information can't be updated. Please contact Schneider.\",\n  NO_MAPPING_ACTIVITY = \"Stop Activity mapping not found, Trailer Information can't be updated. Please contact Schneider.\",\n  VALID_TRAILER_IN = \"Please enter valid Trailer IN value\",\n  VALID_TRAILER_OUT = \"Please enter valid Trailer OUT value\"\n}\n\nexport const SHOW_API_RESPONSE_ERROR = \"SHOW_API_RESPONSE_ERROR\";\n\nexport const SHOW_MEMBER_API_ERROR = \"SHOW_MEMBER_API_ERROR\";\n\nexport const MEMBER_API_ERROR_MESSAGE =\n  \"User registration validation failed, Kindly login again after sometime\";\n\nexport const CLEAR_API_RESPONSE_ERROR = \"CLEAR_API_RESPONSE_ERROR\";\n\nexport const SESSION_INFO = \"SESSION_INFO\";\nexport const WATCHED_LOAD_REMOVE = \"Watched load removed\";\n\nexport const SORTING_PICKUPDATE = \"Pick-up date\";\n\nexport const SORTING_ORDER_ASC = \"asc\";\nexport const SORTING_ORDER_DESC = \"desc\";\nexport const PICKUPDATE_DROPDOWN = \"Pickupdate\";\nexport const RECOMMENDED_TAB = \"recommended\";\nexport const WATCHED_TAB = \"watched\";\n\nexport const UNKNOWN = \"UNKNOWN\";\nexport const RECOMMENDATION_COUNT = \"Recommendation\";\nexport const RECOMMENDATION_COUNTS = \"Recommendations\";\nexport const WATCHED_COUNT = \"Watched Load\";\nexport const WATCHED_COUNTS = \"Watched Loads\";\nexport const RECOMMENDED_LOAD_FILTER = \"RECOMMENDED_LOAD_FILTER\";\nexport const BUYLOAD_MODULE = \"BUYLOAD_MODULE\";\n\n//R2 Configuration\nexport enum ENABLE_R2_FEATURE {\n  CONFIGURATION_TXT = \"Configuration\",\n  ENABLE_R2_FEATURE_TXT = \"Enable R2 feature\",\n  OKAY = \"Okay\"\n}\n\nexport const OFFLINE_MODE_STATE = true;\nexport const CHANGE_PASSWORD_TITLE = \"Redirected to external site\";\nexport const CHANGE_PASSWORD_MESSAGE =\n  \"You will be redirect to the secure site to change your password.\";\nexport enum BUTTONS {\n  OK = \"Ok\",\n  CANCEL = \"Cancel\",\n  DELINK = \"Delink\"\n}\n\nexport const APPLE_DEVICES = [\n  {\n    identifier: \"iPhone5,1\",\n    generation: \"iPhone 5\"\n  },\n  {\n    identifier: \"iPhone5,2\",\n    generation: \"iPhone 5\"\n  },\n  {\n    identifier: \"iPhone5,3\",\n    generation: \"iPhone 5c\"\n  },\n  {\n    identifier: \"iPhone5,4\",\n    generation: \"iPhone 5c\"\n  },\n  {\n    identifier: \"iPhone6,1\",\n    generation: \"iPhone 5s\"\n  },\n  {\n    identifier: \"iPhone6,2\",\n    generation: \"iPhone 5s\"\n  },\n  {\n    identifier: \"iPhone7,2\",\n    generation: \"iPhone 6\"\n  },\n  {\n    identifier: \"iPhone7,1\",\n    generation: \"iPhone 6 Plus\"\n  },\n  {\n    identifier: \"iPhone8,1\",\n    generation: \"iPhone 6s\"\n  },\n  {\n    identifier: \"iPhone8,2\",\n    generation: \"iPhone 6s Plus\"\n  },\n  {\n    identifier: \"iPhone12,8\",\n    generation: \"iPhone SE\"\n  },\n  {\n    identifier: \"iPhone8,4\",\n    generation: \"iPhone SE\"\n  },\n  {\n    identifier: \"iPhone9,3\",\n    generation: \"iPhone 7\"\n  },\n  {\n    identifier: \"iPhone9,1\",\n    generation: \"iPhone 7\"\n  },\n  {\n    identifier: \"iPhone9,4\",\n    generation: \"iPhone 7 Plus\"\n  },\n  {\n    identifier: \"iPhone9,4\",\n    generation: \"iPhone 7 Plus\"\n  },\n  {\n    identifier: \"iPhone10,1\",\n    generation: \"iPhone 8\"\n  },\n  {\n    identifier: \"iPhone10,4\",\n    generation: \"iPhone 8\"\n  },\n  {\n    identifier: \"iPhone10,2\",\n    generation: \"iPhone 8 Plus\"\n  },\n  {\n    identifier: \"iPhone10,5\",\n    generation: \"iPhone 8 Plus\"\n  },\n  {\n    identifier: \"iPhone10,3\",\n    generation: \"iPhone X\"\n  },\n  {\n    identifier: \"iPhone10,6\",\n    generation: \"iPhone X\"\n  },\n  {\n    identifier: \"iPhone11,2\",\n    generation: \"iPhone XS\"\n  },\n  {\n    identifier: \"iPhone11,4\",\n    generation: \"iPhone XS Max\"\n  },\n  {\n    identifier: \"iPhone11,6\",\n    generation: \"iPhone XS Max\"\n  },\n  {\n    identifier: \"iPhone11,8\",\n    generation: \"iPhone XR\"\n  },\n  {\n    identifier: \"iPhone12,1\",\n    generation: \"iPhone 11\"\n  },\n  {\n    identifier: \"iPhone12,3\",\n    generation: \"iPhone 11 Pro\"\n  },\n  {\n    identifier: \"iPhone12,5\",\n    generation: \"iPhone 11 Pro Max\"\n  },\n  {\n    identifier: \"iPad6,7\",\n    generation: 'iPad Pro (12.9\")'\n  },\n  {\n    identifier: \"iPad6,8\",\n    generation: 'iPad Pro (12.9\")'\n  },\n  {\n    identifier: \"iPad6,3\",\n    generation: 'iPad Pro (9.7\")'\n  },\n  {\n    identifier: \"iPad6,4\",\n    generation: 'iPad Pro (9.7\")'\n  },\n  {\n    identifier: \"iPad7,1\",\n    generation: 'iPad Pro (12.9\")(2nd generation)'\n  },\n  {\n    identifier: \"iPad7,2\",\n    generation: 'iPad Pro (12.9\")(2nd generation)'\n  },\n  {\n    identifier: \"iPad7,3\",\n    generation: \"iPad Pro (10.5-inch)\"\n  },\n  {\n    identifier: \"iPad7,4\",\n    generation: \"iPad Pro (10.5-inch)\"\n  },\n  {\n    identifier: \"iPad8,1\",\n    generation: \"iPad Pro (11-inch)\"\n  },\n  {\n    identifier: \"iPad8,2\",\n    generation: \"iPad Pro (11-inch)\"\n  },\n  {\n    identifier: \"iPad8,3\",\n    generation: \"iPad Pro (11-inch)\"\n  },\n  {\n    identifier: \"iPad8,4\",\n    generation: \"iPad Pro (11-inch)\"\n  },\n  {\n    identifier: \"iPad8,5\",\n    generation: 'iPad Pro (12.9\") (3rd generation)'\n  },\n  {\n    identifier: \"iPad8,6\",\n    generation: 'iPad Pro (12.9\") (3rd generation)'\n  },\n  {\n    identifier: \"iPad8,7\",\n    generation: 'iPad Pro (12.9\") (3rd generation)'\n  },\n  {\n    identifier: \"iPad8,8\",\n    generation: 'iPad Pro (12.9\") (3rd generation)'\n  },\n  {\n    identifier: \"iPad8,11\",\n    generation: 'iPad Pro (12.9\") (4th generation)'\n  },\n  {\n    identifier: \"iPad8,11\",\n    generation: 'iPad Pro (12.9\") (4th generation)'\n  },\n  {\n    identifier: \"iPad8,9\",\n    generation: \"iPad Pro (11-inch) (2nd generation)\"\n  },\n  {\n    identifier: \"iPad8,10\",\n    generation: \"iPad Pro (11-inch) (2nd generation)\"\n  },\n  {\n    identifier: \"iPad4,1\",\n    generation: \"iPad Air\"\n  },\n  {\n    identifier: \"iPad4,2\",\n    generation: \"iPad Air\"\n  },\n  {\n    identifier: \"iPad4,3\",\n    generation: \"iPad Air\"\n  },\n  {\n    identifier: \"iPad5,3\",\n    generation: \"iPad Air 2\"\n  },\n  {\n    identifier: \"iPad5,3\",\n    generation: \"iPad Air 2\"\n  },\n  {\n    identifier: \"iPad11,3\",\n    generation: \"iPad Air (3rd generation)\"\n  },\n  {\n    identifier: \"iPad11,4\",\n    generation: \"iPad Air (3rd generation)\"\n  }\n];\n\nexport const BOBTAIL = \"BOBTAIL\";\n\nexport const BOOKLOAD_SUCCESS_REDIRECTION = \"BOOKLOAD_SUCCESS_REDIRECTION\";\n\nexport const TIMEZONE = \"US/Central\";\nexport const SEARCH_PARAMS = \"SEARCH_PARAMS\";\n\nexport const NO_REFERENCE_MSG = \"No references for the stop\";\n\nexport const NO_AUTH_MSG =\n  \"We are having trouble signing you in. Please try again later.\";\n\nexport const NO_ACCESS_MSG = \"Contact Schneider to get full access\"\n\nexport const CALL_NOW = 'Call Now';\n\nexport const dropDownOptions = [\"TA\", \"SNLU\", \"BOBTAIL\"];\n\nexport const TRAILER_PARTTEN = /^(SNLU[0-9]{6}$)|(TA[0-9]{6}$)|(BOBTAIL)$/;\n\nexport const CARRIER_PROFILE_INFO =\n  \"Contact Schneider if any of the fields need to be updated\";\nexport const CARRIER_PROFILE_INSURENCE =\n  \"New insurance certs will show starting at the effective date. If your cert is close to expiring, please send insurance cert to xxxxxx@rmis.com\";\nexport const CARRIER_INFO = \"Carrier Info\";\nexport const CARRIER_CONTACT_DETAILS = \"Contact Details\";\nexport const CARRIER_INSURENCE = \"Carrier Insurance\";\nexport const CARRIER_CERITIFCATION = \"Certification\";\nexport const CARRIER_QUALIFICATION_STATUS = \"Qualification Status\";\nexport const CARRIER_PROFILE_FOOTER =\n  'Contact Schneider at <a href=\"mailto:stmcarrier@schneider.com\" className=\"email\">stmcarrier@schneider.com</a> <span>if any of the fields need to be updated</span>';\n\nexport enum LOGOUTPOPUP {\n    ALERT_MESSAGE = \"Are you sure you want to logout?\",\n    Logout_TEXT = \"Logout\",\n    Cancel_TEXT = \"Cancel\",\n    REGISTRATION_ALERT_MESSAGE = \"Are you sure you want to log out without completing registration?\"\n  }\n\nexport const FAVORITE_SEARCH_REMOVED = 'Favorite search removed';\nexport const CAPACITY_REMOVED = \"{{CAPACITY}} removed\";\nexport const FAVORITE_ALREADY_EXIST_TITLE = 'Record Exist';\nexport const FAVORITE_ALREADY_EXIST_MESSAGE = 'This record already exists in your Favorites List.  Please update your search criteria to save the search as a Favorite.';\n\nexport const ASSIGN_DRIVER_POPUP_TITLE = 'Are you sure you want to assign load #{{LOAD_ID}} to {{DRIVER_NAME}}';\nexport const LOAD_ASSIGN_SUCCESS = 'Load #{{LOAD_ID}} assigned successfully to {{DRIVER_NAME}}.';\nexport const LOAD_ASSIGN_FAIL = 'Driver assignment was unsuccessful. Please try again.';\nexport const BOOKLOAD_ON_HOLD = \"Warning\";\nexport const BOOKLOAD_CANCELLED_MESSAGE = \"Error\";\nexport const YES = \"Yes\";\nexport const NO = \"No\";\nexport const ADD_USER = 'Add Driver/Dispatcher';\nexport const EDIT_USER = 'Edit User';\nexport const EDIT_PROFILE = 'Edit Profile';\nexport const TRACTOR_NUMBER = \"tractorNumber\";\n\nexport const SHOW_BUYLOAD_API_ERROR = \"SHOW_BUYLOAD_API_ERROR\";\n\nexport const BUYLOAD_API_ERROR_MESSAGE = \"Your load assignment is taking longer than expected. Kindly contact Schneider to verify assignment, if you don't receive email tender in the next 5 minutes.\";\n\nexport const US = 'US';\nexport const USA = 'USA';\n\n","import produce from \"immer\";\nimport * as constants from \"../../utils/constants\";\nimport { GlobalState } from \"../../schemas/schema\";\n\nexport const initalState: GlobalState = {\n  lastUpdatedDate: \"\",\n  loading: false,\n  loadCount: 0,\n  error: false,\n  currentUser: false,\n  hasSession: 0,\n  userData: null,\n  showPermissionAlert: false,\n  permissionAlertMessage: \"\",\n  permissionAlertTitle: \"\",\n  alertError: false, //  not using this.\n  networkStatus: { connected: false, connectionType: \"none\" },\n  deviceInfo: {},\n  Hidden: true,\n  loginToken: \"\",\n  deepLinkURI: \"\",\n  notificationData: {\n    shipmentId: \"\",\n    userId: \"\",\n    carrierName: \"\",\n    carrierId: \"\",\n    Timestamp: \"\",\n    deepLinkURI: \"\",\n  },\n  showPullToRefresh: false\n};\n\n\nconst appReducer = (state = initalState, action: any) =>\n  produce(state, draft => {\n    switch (action.type) {\n      case constants.LAST_UPDATED_DATE:\n        draft.lastUpdatedDate = action.date;\n        break;\n      case constants.TOGGLE_LOADING:\n        const count = action.status ? draft.loadCount + 1 : draft.loadCount - 1;\n        draft.loadCount = count >= 0 ? count : 0;\n        draft.loading = count > 0 ? true : false;\n        break;\n      case constants.PERMISSION_ALERT_MESSAGE:\n        draft.showPermissionAlert = action.payload.isShowPermissionAlert;\n        draft.permissionAlertMessage = action.payload.permissionAlertMessage;\n        draft.permissionAlertTitle = action.payload.permissionAlertTitle;\n        break;\n      case constants.CLOSE_PERMISSION_ALERT:\n        draft.showPermissionAlert = false;\n        draft.permissionAlertMessage = \"\";\n        draft.permissionAlertTitle = \"\";\n        break;\n      case constants.LOGIN_INPROGRESS:\n        draft.error = false;\n        break;\n      case constants.LOGIN_SUCCESS:\n        draft.currentUser = true;\n        draft.userData = action.data;\n        break;\n      case constants.LOGIN_ERROR:\n        draft.error = true;\n        break;\n      case constants.HIDE_TAB_BAR:\n        draft.Hidden = false;\n        console.log(draft.Hidden, \"draft.Hidden\");\n        break;\n      case constants.LOGOUT:\n        draft = initalState;\n        break;\n      case constants.SESSION:\n        draft.hasSession = action.session;\n        break;\n      case constants.UPDATE_NETWORK_STATUS:\n        console.log(\"NETWORK RDUCR\", action.data);\n        draft.networkStatus = action.data;\n        break;\n      case constants.UPDATE_DEVICE_INFO:\n        console.log(\"DVC DATA\", action.data);\n        draft.deviceInfo = action.data;\n        break;\n      case constants.TOKEN_DATA:\n        draft.loginToken = action.data.access_token;\n        break;\n      case constants.SAVE_DEEPLINK_URI:\n        draft.notificationData = action.data;\n        draft.deepLinkURI = `${action.data.deepLinkURI}/${(action.data.shipmentId ? action.data.shipmentId : \"\")}`;\n        break;\n      case constants.CLEAR_DEEPLINK_URI:\n        draft.deepLinkURI = \"\";\n        draft.notificationData = {\n          shipmentId: \"\",\n          userId: \"\",\n          carrierName: \"\",\n          carrierId: \"\",\n          Timestamp: \"\",\n          deepLinkURI: \"\",\n        };\n        break;\n      case constants.PULL_TO_REFRESH_LOADING:\n        draft.showPullToRefresh = action.status;\n        break;\n    }\n  });\n\nexport default appReducer;\n\n// {\n//   type: \"SAVE_DEEPLINK_URI\",\n//   data:{  \"shipmentId\" : \"\" , \"carrierId\" : \"123452\",\"userId\":\"pattnaiks@schneider.com\", \"deepLinkURI\": \"/app/manage/ManageUser\"}\n//   }\n\n// {\n//   type: \"SAVE_DEEPLINK_URI\",\n//   data:{  \"shipmentId\" : \"ST126390056\" , \"carrierId\" : \"SPS669077\",\"userId\":\"rakeshac@gmail.com\", \"deepLinkURI\": \"/app/MyLoad/shipmentUpdateScreen\"}\n//   }\n\n// {\n//   type: \"SAVE_DEEPLINK_URI\",\n//   data:{  \"shipmentId\" : \"SL100086638\" , \"carrierId\" : \"SPS669077\",\"userId\":\"raja20k@gmail.com\", \"deepLinkURI\": \"/app/MyLoad/shipmentUpdateScreen\"}\n//   }\n\n","import { ActionType, HomeState } from \"../../schemas/Home/Home.schema\";\nimport * as Constants from \"../../utils/constants\";\nimport produce from \"immer\";\n\nexport const initalHomeState: HomeState = {\n  watched: {\n    data: [],\n    totalRecords: 0,\n    loaded: false,\n    filter: {\n      selected: [],\n      direction: \"asc\",\n    },\n  },\n\n  apiErrorMessage: \"\",\n  showMemberAPIError: false,\n  recommended: {\n    totalRecords: 0,\n    loaded: false,\n    data: [],\n    filter: {\n      selected: [],\n      direction: \"asc\",\n    },\n  },\n};\n\nexport default (state = initalHomeState, action: ActionType) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case Constants.WATCHEDLOAD_DATA_REQUEST:\n        draft.watched.loaded = true;\n        break;\n      case Constants.WATCHEDLOAD_DATA_SUCCESS:\n        const payload = action.payload && (action.payload as any);\n        let items =\n          (payload &&\n            payload.watchedResults &&\n            payload.watchedResults.data &&\n            payload.watchedResults.data.getUserWatchedLoads &&\n            payload.watchedResults.data.getUserWatchedLoads.loadPostings) ||\n          [];\n        const totalRecords =\n          (payload &&\n            payload.watchedResults &&\n            payload.watchedResults.data &&\n            payload.watchedResults.data.getUserWatchedLoads &&\n            payload.watchedResults.data.getUserWatchedLoads.totalRecords) ||\n          0;\n        items = payload.refreshStatus\n          ? items\n          : [...draft.watched.data, ...items];\n        items = items.filter((item: any, index: number) => {\n          const findIndex = items.findIndex(\n            (newItem: any) => newItem.loadId === item.loadId\n          );\n          return index === findIndex;\n        });\n        draft.watched.data = items;\n        draft.watched.loaded = true;\n        draft.watched.totalRecords = totalRecords;\n        break;\n      case Constants.ADD_WATCH_LOAD_SUCCESS:\n        const data = [...draft.watched.data, action.payload];\n        draft.watched.data = data;\n        draft.watched.totalRecords = draft.watched.totalRecords + 1;\n        break;\n      case Constants.REMOVE_WATCH_LOAD_SUCCESS:\n        draft.watched.data = draft.watched.data.filter(\n          (details) => details.loadId !== (action.payload as any).loadId\n        );\n        draft.watched.totalRecords = draft.watched.totalRecords - 1;\n        break;\n      case Constants.WATCHED_LOAD_FILTER:\n        draft.watched.filter = (action.payload as any).filter;\n        break;\n        case Constants.RECOMMENDED_LOAD_FILTER:\n        draft.recommended.filter = (action.payload as any).filter;\n        break;\n      case Constants.SHOW_API_RESPONSE_ERROR:\n        draft.apiErrorMessage = (action.payload as any).message;\n        break;\n      case Constants.CLEAR_API_RESPONSE_ERROR:\n        draft.apiErrorMessage = \"\";\n        break;\n      case Constants.RECOMMENDED_LOADS_SUCCESS:\n        const recpayload = action.payload && (action.payload as any);\n\n        let recitems =\n          (recpayload &&\n            recpayload.recommendedResults &&\n            recpayload.recommendedResults.data &&\n            recpayload.recommendedResults.data.recommendedLoads &&\n            recpayload.recommendedResults.data.recommendedLoads.loadPostings &&\n            recpayload.recommendedResults.data.recommendedLoads.loadPostings) ||\n          [];\n        const totalNoRecords =\n          (recpayload &&\n            recpayload.recommendedResults &&\n            recpayload.recommendedResults.data &&\n            recpayload.recommendedResults.data.recommendedLoads &&\n            recpayload.recommendedResults.data.recommendedLoads.totalRecords) ||\n          0;\n        draft.recommended.data =  recpayload.refreshStatus ? recitems : [...draft.recommended.data, ...recitems];\n        draft.recommended.totalRecords = totalNoRecords;\n        draft.recommended.loaded = true;\n        break;\n      case Constants.REMOVE_RECOMMENDEDRESULTS:\n        const removedLoad = action.payload && (action.payload as any);\n        draft.recommended.data =draft.recommended.data.filter(\n            (details: any) => details.loadId !== removedLoad.loadId\n        );\n        draft.recommended.totalRecords = draft.recommended.totalRecords - 1;\n        break;\n        case Constants.SHOW_MEMBER_API_ERROR:\n          draft.showMemberAPIError = action.payload && (action.payload as any);\n    }\n  });\n","import { MyLoadState } from \"../../schemas/myload/myload.Schema\";\nimport * as Constants from \"../../utils/constants\";\nimport produce from \"immer\";\n\nexport const myLoadInitialState: MyLoadState = {\n  profileImg: [],\n  myLoadCardData: [],\n  carrierAssigned: [],\n  driverAssigned: [],\n  inTransit: [],\n  myLoadCount: {\n    carrierAssignedCount: 0,\n    driverAssignedCount: 0,\n    inTransitCount: 0,\n    deliveredCount: 0,\n  },\n  confirmStart: {},\n  confirmStartStatusMessage: {},\n  updateStop: {},\n  startTrip: {},\n  buy: {\n    status: \"\",\n    message: \"\",\n  },\n  shipment: [],\n  delivered: [],\n  isGetShipment: false,\n  buyLoadResponseStatus: \"\",\n  warningDialogMessage: \"\",\n};\n\nexport default (state = myLoadInitialState, action: any) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case Constants.GET_MYLOAD_CARD_DATA:\n        draft.myLoadCardData = action.payload;\n        break;\n\n      case Constants.LOAD_CARRIER_DATA:\n        draft.carrierAssigned = action.payload.data;\n        draft.myLoadCount.carrierAssignedCount = action.payload.count;\n        break;\n\n      case Constants.DRIVER_ASSIGNED_DATA:\n        draft.driverAssigned = action.payload.data;\n        draft.myLoadCount.driverAssignedCount = action.payload.count;\n        break;\n\n      case Constants.LOAD_INTRANSIT_DATA:\n        draft.inTransit = action.payload.data;\n        draft.myLoadCount.inTransitCount = action.payload.count;\n        break;\n\n      case Constants.CarrierActionTypes.CONFIRM_START_INFORMATION_SUCCESS:\n        draft.confirmStart = action.payload;\n        break;\n\n      case Constants.LOGOUT:\n        draft.myLoadCardData = draft.carrierAssigned = draft.driverAssigned = draft.inTransit = draft.delivered = [];\n        draft.myLoadCount.carrierAssignedCount = draft.myLoadCount.driverAssignedCount = draft.myLoadCount.inTransitCount = draft.myLoadCount.deliveredCount = 0;\n        break;\n\n      case Constants.CarrierActionTypes\n        .CONFIRM_START_INFORMATION_STATUS_MESSAGE:\n        draft.confirmStartStatusMessage = action.payload;\n        break;\n\n      case Constants.CarrierActionTypes.SHOW_WARNING_DIALOG:\n        draft.warningDialogMessage =\n          (action.payload && action.payload.message) || \"\";\n        break;\n\n      case Constants.CarrierActionTypes.CLEAR_WARNING_DIALOG:\n        draft.warningDialogMessage = \"\";\n        break;\n\n      case Constants.CarrierActionTypes\n        .CLEAR_CONFIRM_START_INFORMATION_STATUS_MESSAGE:\n        draft.confirmStartStatusMessage = {};\n        break;\n\n      case Constants.CarrierActionTypes.UPDATE_STOP_INFORMATION_RESPONSE:\n        draft.updateStop = action.payload.data;\n        break;\n\n      case Constants.CarrierActionTypes.START_TRIP_INFORMATION_RESPONSE:\n        draft.startTrip = action.payload;\n        break;\n      case Constants.BUYLOAD_DATA_SUCCESS:\n        const payload = action.payload && (action.payload as any);\n        draft.buy = payload.data.buy;\n        break;\n      case Constants.LOAD_DELIVERED_DATA:\n        draft.delivered = action.payload.data;\n        draft.myLoadCount.deliveredCount = action.payload.count;\n        break;\n      case Constants.BUYLOAD_SHIPMENT_SUCCESS:\n        const getShipmentpayload = action.payload && (action.payload as any);\n        draft.shipment = (getShipmentpayload.data && getShipmentpayload.data.getShipment) || {};\n        break;\n      case Constants.BUYLOAD_REMOVE_STATUS:\n        draft.buy = { status: \"\", message: \"\" };\n        break;\n      case Constants.isGetshipemntError:\n        draft.isGetShipment = action.payload;\n        break;\n      case Constants.CLEARBUYLOAD_RESPONSE:\n        draft.buyLoadResponseStatus = action.payload;\n        break;\n      case Constants.CarrierActionTypes.CLEAR_UPDATE_STOP_INFORMATION_RESPONSE:\n        draft.updateStop = {};\n        break;\n    }\n  });\n","import { ActionType, SearchState } from \"../../schemas/Search/Search.schema\";\nimport * as Constants from \"../../utils/constants\";\nimport produce from \"immer\";\n\nexport const initalSearchState: SearchState = {\n  loads: {\n    searchLoads: [],\n    totalRecords: 0,\n  },\n  params: {},\n  allLoads: [],\n  showBuyLoadAPIError: false\n};\n\nexport default (state = initalSearchState, action: ActionType) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case Constants.SEARCH_DATA:\n        draft.params = action.payload;\n        break;\n      case \"loadSearchData\":\n        const payload = action.payload && (action.payload as any);\n        const isPagination = payload.isPagination;\n        draft.loads = {\n          searchLoads: isPagination\n            ? draft.loads.searchLoads.concat(\n                (payload && payload.data && payload.data.searchLoads) || []\n              )\n            : (payload && payload.data && payload.data.searchLoads) || [],\n          totalRecords:\n            (payload && payload.data && payload.data.totalRecords) || 0,\n        };\n        break;\n      case Constants.SAVE_ALL_SEARCH_DATA:\n        const payload_ = action.payload && (action.payload as any);\n        const load = {\n          searchLoads:\n            (payload_ && payload_.data && payload_.data.searchLoads) || [],\n          totalRecords:\n            (payload_ && payload_.data && payload_.data.totalRecords) || 0,\n        };\n        draft.allLoads = [...draft.allLoads, load];\n        break;\n      case Constants.CLEAR_SEARCH_RESULST:\n        draft.loads = action.payload;\n        break;\n      case Constants.REMOVE_SEARCH_RESULTS:\n        const removedLoad = action.payload && (action.payload as any);\n        draft.loads.searchLoads = draft.loads.searchLoads.filter(\n          (details: any) => details.loadId !== removedLoad\n        );\n        draft.loads.totalRecords = draft.loads.searchLoads.length;\n        break;\n      case Constants.SHOW_BUYLOAD_API_ERROR:\n        draft.showBuyLoadAPIError = action.payload && (action.payload as any);\n    }\n  });\n","/**\n * Combine all reducers in this file and export the combined reducers.\n */\n\nimport { combineReducers } from \"redux\";\nimport globalReducer from \"../reducers/Login/reducer\";\nimport homeReducer from \"../reducers/Home/reducer\";\nimport myloadReducer from \"../reducers/myload/reducer\";\nimport searchReducer from \"../reducers/Search/reducer\";\nimport * as Constants from '../utils/constants';\n\n/**\n * Merges the main reducer with the router state and dynamically injected reducers\n */\n// export interface IStoreState {\n//   global: GlobalState;\n//   carrier: HomeState;\n//   myload: MyLoadState;\n// }\n\nexport default function createReducer(injectedReducers = {}) {\n  const appReducer = combineReducers({\n    global: globalReducer,\n    carrier: homeReducer,\n    myload: myloadReducer,\n    search: searchReducer,\n    ...injectedReducers\n  });\n  const rootReducer = (state:any, action:any) => {\n    const shouldClearRedux = action.type === Constants.LOGOUT;\n    return appReducer(shouldClearRedux ? undefined: state, action);\n  };\n  return rootReducer;\n}\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport createReducer from \"./CombineReducers\";\nimport { createLogger } from \"redux-logger\";\nimport { createOffline } from \"@redux-offline/redux-offline\"; //Anil Addition\nimport offlineConfig from \"@redux-offline/redux-offline/lib/defaults\"; //anil Addition\nimport { persistReducer, persistStore } from \"redux-persist\"; //anil Addition\nimport Storage from \"redux-persist/lib/storage\"; //anil Addition\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__: any;\n  }\n}\n\nfunction configureStore(initialState = {}) {\n  //Anil Addition Start\n  const {\n    middleware: offlineMiddleware,\n    enhanceReducer: offlineEnhanceReducer,\n    enhanceStore: offlineEnhanceStore\n  } = createOffline({\n    ...offlineConfig,\n    persist: () => false\n  });\n\n  const persistConfig = {\n    key: \"root\",\n    storage: Storage\n    //  transform: [encryptor]\n  };\n  //Anil Addition - End\n  let composeEnhancers = compose;\n  const reduxSagaMonitorOptions = {};\n\n  // If Redux Dev Tools and Saga Dev Tools Extensions are installed, enable them\n  /* istanbul ignore next */\n  if (process.env.NODE_ENV !== \"production\" && typeof window === \"object\") {\n    /* eslint-disable no-underscore-dangle */\n    if (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__)\n      composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({});\n  }\n\n  const sagaMiddleware = createSagaMiddleware(reduxSagaMonitorOptions);\n\n  // Create the store with two middlewares\n  // 1. sagaMiddleware: Makes redux-sagas work\n  const middlewares: Array<any> = [sagaMiddleware];\n\n  if (process.env.NODE_ENV !== \"production\" && typeof window === \"object\") {\n    // middlewares.push(createLogger());\n  }\n\n  middlewares.push(offlineMiddleware); //Anil Addition\n\n  const enhancers = [offlineEnhanceStore, applyMiddleware(...middlewares)]; //Anil Addition\n\n  //const enhancers = [applyMiddleware(...middlewares)];\n\n  const store: any = createStore(\n    // createReducer(),\n    persistReducer(persistConfig, offlineEnhanceReducer(createReducer())), //Anil addition\n    initialState,\n    composeEnhancers(...enhancers)\n  );\n\n  // Extensions\n  store.runSaga = sagaMiddleware.run;\n  store.injectedReducers = {}; // Reducer registry\n  store.injectedSagas = {}; // Saga registry\n\n  return store;\n}\nexport const store = configureStore();\n","\nimport BackgroundGeolocation, {\n    State,\n    Config,\n    Location,\n    LocationError,\n    Geofence,\n    GeofenceEvent,\n    GeofencesChangeEvent,\n    HeartbeatEvent,\n    HttpEvent,\n    MotionActivityEvent,\n    MotionChangeEvent,\n    ProviderChangeEvent,\n    ConnectivityChangeEvent\n} from \"cordova-background-geolocation-lt\";\nimport { getItem, R2Configuration, removeItem } from \"../utils/common\";\nimport getURLDetails from './endPoints';\nimport { store } from '../store';\nimport { session } from \"../actions/Login/action\";\nimport { logEvent } from \"../utils/Analytics\";\nimport {\n    KEYS,\n    DB_GPS_ACTIVATED_SHIPMENT,\n    MESSAGE_TYPE, SOUND_SRC,\n    distanceFilter,\n    // GEO_PRE_ARRIVAL_RADIUS,\n    GEO_ARRIVAL_RADIUS,\n    STATIONARY_IDENTIFIER_INTERVAL,\n    GEOFENCE_ACTION,\n    GEOFENCE_IDENTIFIER,\n    EVENT,\n    ENV,\n    STATIONARY_IDENTIFIER_MAX_DISTANCE\n} from '../utils/constants';\nimport { AuthSingleton } from '../services/authentication.service';\nimport _ from \"lodash\";\n\n//Location REST API service URL\nvar locationURL = getURLDetails(\"LOCATION_TRACKER\", \"LOCATION_TRACKER\", null).get_Service_Url();\n//Azure Authentication vault data, i.f id_token, access_token, refresh_token\nvar __vault = \"\";\n// Shipment ID which is enabled for GPS tracking \nvar GPS_Tracking_ShipmentID: any = null;\n\nvar sound = new Audio();\n\nvar _userId = \"\";\nvar _carrierId = \"\";\nvar _shipmentID = \"\";\nvar _sourceTMS = \"\";\nvar _activity = \"\";\nvar _carrierScac = \"\";\n\n// All geofence for a Load. Geofence are push to activate Geofences array which will be active\n// var geofences: Array<Geofence>;\n// Stop sequence No\nvar sequenceNo = 1;\n\nvar stopId =\"\";\nvar locationId=\"\";\n\nvar loadDetailsTrackedShipment: any = null;\n\nvar timer: any;\nvar distance = 0;\nvar lastKnownLocationArrivalGeofence: any = null;;\n\n/**\n     * Initialize the BackgroundGeolocation plugin Configuration\n     * The Basic Configuration properlies are set. \n     * Rest of the custom properlies will be set as per need basis  \n     * * @param\n     * @returns null.\n     */\nexport function initiateGPSconfig() {\n\n    const session: Session = new Session();\n\n    //let locationURL = getURLDetails(\"LOCATION_TRACKER\", \"LOCATION_TRACKER\", null).get_Service_Url();\n    //var __vault = \"\"; //await IONICWrapper.details.auth.tokens;\n    //Expired token just to short circuit\n    // var __accessToken1 = \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6ImZwQ2RwVW13em5sbnJ0ZTZtZmo3cjFvQmF0OGloVFBYUUZqWFVoQV9qbmsifQ.eyJpc3MiOiJodHRwczovL3NjaG5laWRlcmNhcnJpZXJ1YXQuYjJjbG9naW4uY29tLzZjYmI0ODllLTkyYmQtNDEwNC05MGJmLTA4OWNmN2FlYjQ4My92Mi4wLyIsImV4cCI6MTU5MzgzMjk4OCwibmJmIjoxNTkzODI5Mzg4LCJhdWQiOiI1MDI4YWM0Ny02Njk3LTRjZjQtOGEwZC1mZDhhOTAxMDM5MGMiLCJzdWIiOiJmNDA5MzJiYy1mNDA0LTQzYWUtODA1Mi0xMzNjMjJjODUxMTgiLCJzaWduSW5OYW1lcy5lbWFpbEFkZHJlc3MiOiJrYW1hcmFqckBzY2huZWlkZXIuY29tIiwiZ2l2ZW5fbmFtZSI6IlJhamEiLCJmYW1pbHlfbmFtZSI6IkRpc3BhdGNoZXJQcm9maWxlIiwicm9sZXMiOlsiY2FycmllckRpc3BhdGNoZXIiXSwidGlkIjoiNmNiYjQ4OWUtOTJiZC00MTA0LTkwYmYtMDg5Y2Y3YWViNDgzIiwiY2xpZW50SVAiOiIxNzQuMTAzLjE5OS4xNjgiLCJ1cG4iOiJrYW1hcmFqckBzY2huZWlkZXIuY29tIiwibm9uY2UiOiJiMGJNbi5IOVM2SW94R0hxNktmTiIsInNjcCI6InJlYWRzY29wZSB3cml0ZXNjb3BlIiwiYXpwIjoiNTAyOGFjNDctNjY5Ny00Y2Y0LThhMGQtZmQ4YTkwMTAzOTBjIiwidmVyIjoiMS4wIiwiaWF0IjoxNTkzODI5Mzg4fQ.qWQJcMwcyAf0o01GU-GtbfBHipk3uir5Rea7IbFBaioza5tx0h8N_Qb5xhlINzSDLib6WJrXKJy-dIOP8Gyuy2nnawUIiBuHrDJnDl0eh8UgGKHO49VIZAUDHgiBBQbT5JrG2OHd_iSMCl4l8FbEjjO0l3F3wb8MVfyiddpl4wfzvgkfDOkCSxIP_PlG-po1WuX-u5qy_1Ljk8UtCAOHk0GSn8brYXTvIMH8zMbSivjLTkd97yn3X1Z_tDLqErnAeRhzEDQ0NwXtyurk_Id39oTY59sSZkEQIXlfWcmURBnaDEocrBP5PcCiCLICqA1tBsvqebkfyBmGxe-Gz0RM3A\";\n    // let _shipmentID = null;\n    // let _sourceTMS = null;\n    // let _shipmentDetails = (await getItem(DB_GPS_ACTIVATED_SHIPMENT)).value;\n    // if (_shipmentDetails) {\n    //     _shipmentID = JSON.parse(_shipmentDetails).shipmentID;\n    //     _sourceTMS = JSON.parse(_shipmentDetails).sourceTMS;\n    // }\n\n    // This handler fires whenever bgGeo receives a location update.\n    BackgroundGeolocation.onLocation(location => {\n        // console.log(\"[location] \", location);\n    }, error => {\n        // console.log(\"[location] ERROR: \", error);\n    });\n\n    // This handler fires when movement states changes (stationary->moving; moving->stationary)\n    BackgroundGeolocation.onMotionChange(location => {\n        // console.log(\"[motionchange] \", location);\n    });\n\n    // This event fires when a change in motion activity is detected\n    BackgroundGeolocation.onActivityChange(activityEvent => {\n        // console.log(\"[activitychange] \", activityEvent);\n    });\n\n    // This event fires when the user toggles location-services authorization\n    BackgroundGeolocation.onProviderChange(providerEvent => {\n        // console.log(\"[providerchange] \", providerEvent);\n    });\n\n    // Listen to #onSchedule events:\n    BackgroundGeolocation.onSchedule((state) => {\n        let enabled = state.enabled;\n        // console.log(\"[onSchedule] - enabled? \", enabled);\n    });\n\n    BackgroundGeolocation.onHttp(response => {\n        console.log('[event] http: ', response);\n        if (response.status == 200) {\n            // Analytics implementation\n            logEvent(EVENT.UE_GEO_TRACKING,\n                {\n                    carrierId: _carrierId,\n                    shipmentId: _shipmentID\n                });\n\n        } else {\n            let errorResponseText = response.responseText && response.responseText != \"\" ? JSON.parse(response.responseText) : { message: \"\" };\n            if (response.status == 401 && errorResponseText.statusCode == 401 && errorResponseText.message == \"Unauthorized\") {\n\n                session.getFreshToken().then(function (_token) {\n                    __vault = _token;\n                    BackgroundGeolocation.setConfig({\n                        headers: {\n                            'Ocp-Apim-Subscription-Key': KEYS.SUBSCRIPTION_KEY,\n                            \"Authorization\": \"Bearer \" + __vault\n                        }\n                    })\n                });\n            }\n        }\n    });\n\n    // Listen to geofence events\n    BackgroundGeolocation.onGeofence(async geofence => {\n        // Analytics implementation\n        logEvent(EVENT.UE_GEOFENCE_ANNOUNCEMENT,\n            {\n                carrierId: geofence.location.extras!!.carrierId,\n                shipmentId: geofence.location.extras!!.shipmentId,\n                msgType: geofence.extras!!.messageType + GEOFENCE_ACTION.ENTER\n\n            });\n\n        if (geofence.extras) {\n            if (geofence.identifier.includes(GEOFENCE_IDENTIFIER.PRE_ARRIVAL)) {\n                if (geofence.action == GEOFENCE_ACTION.ENTER) {\n                    sound.src = SOUND_SRC.GEOFENCE_PRE_ARRIVAL_ENTRY;\n\n                } else if (geofence.action == GEOFENCE_ACTION.EXIT) {\n                    sound.src = SOUND_SRC.GEOFENCE_PRE_ARRIVAL_EXIT;\n                    updateDepartureTime(geofence.extras.sequenceNo);\n                    clearArrivalGeofenceStationary();\n                }\n            } else if (geofence.identifier.includes(GEOFENCE_IDENTIFIER.ARRIVAL)) {\n                if (geofence.action == GEOFENCE_ACTION.ENTER) {\n                    sound.src = SOUND_SRC.GEOFENCE_ARRIVAL_ENTRY;\n                    clearArrivalGeofenceStationary();\n                    lastKnownLocationArrivalGeofence = geofence.location;\n                    timer = setInterval(() => {\n                        BackgroundGeolocation.getCurrentPosition({\n                            timeout: 30,          // 30 second timeout to fetch location\n                            maximumAge: 5000,     // Accept the last-known-location if not older than 5000 ms.\n                            desiredAccuracy: 10,  // Try to fetch a location with an accuracy of `10` meters.\n                            samples: 1,           // How many location samples to attempt.});\n                            extras: {             // Custom meta-data.\n                                messageType: MESSAGE_TYPE.GEO_TPOSITION,\n                                activity: geofence.location.extras!!.activity,\n                                shipmentId: geofence.location.extras!!.shipmentId,\n                                carrierScac: geofence.location.extras!!.carrierScac,\n                                userId: geofence.location.extras!!.userId,\n                                sourceSystem: geofence.location.extras!!.sourceSystem,\n                                carrierId: geofence.location.extras!!.carrierId,\n                                stopId: geofence.extras!!.stopId,\n                                sequenceNo: geofence.extras!!.sequenceNo,\n                                locationId: geofence.extras!!.locationId\n                            }\n                        }, (currentLocation: any) => {\n\n                            distance = getDistanceBetweenGeolocations(\n                                lastKnownLocationArrivalGeofence.coords.latitude\n                                , lastKnownLocationArrivalGeofence.coords.longitude\n                                , currentLocation.coords.latitude\n                                , currentLocation.coords.longitude\n                                , \"meters\");\n                                if(distance < STATIONARY_IDENTIFIER_MAX_DISTANCE) {\n                                BackgroundGeolocation.getCurrentPosition({\n                                    timeout: 30,          // 30 second timeout to fetch location\n                                    maximumAge: 5000,     // Accept the last-known-location if not older than 5000 ms.\n                                    desiredAccuracy: 10,  // Try to fetch a location with an accuracy of `10` meters.\n                                    samples: 1,           // How many location samples to attempt.});\n                                    extras: {             // Custom meta-data.\n                                        messageType: MESSAGE_TYPE.GEO_STOP_ARRIVAL,\n                                        activity: geofence.location.extras!!.activity,\n                                        shipmentId: geofence.location.extras!!.shipmentId,\n                                        carrierScac: geofence.location.extras!!.carrierScac,\n                                        userId: geofence.location.extras!!.userId,\n                                        sourceSystem: geofence.location.extras!!.sourceSystem,\n                                        carrierId: geofence.location.extras!!.carrierId,\n                                        stopId: geofence.extras!!.stopId,\n                                        sequenceNo: geofence.extras!!.sequenceNo,\n                                        locationId: geofence.extras!!.locationId\n                                    }\n                                });\n                                clearArrivalGeofenceStationary();\n                                updateArrivalTime(geofence.extras!!.sequenceNo);\n                            } else {\n                                lastKnownLocationArrivalGeofence = currentLocation;\n                            }\n                        }, (error: any) => {\n                            // Error\n                        });\n                    }, STATIONARY_IDENTIFIER_INTERVAL);\n\n                } else if (geofence.action == GEOFENCE_ACTION.EXIT) {\n                    sound.src = SOUND_SRC.GEOFENCE_ARRIVAL_EXIT;\n                    clearArrivalGeofenceStationary();\n                }\n            }\n            if (KEYS.RELEASE == ENV.UNT) {\n                sound.play();\n            }\n        }\n    });\n\n    getItem(DB_GPS_ACTIVATED_SHIPMENT).then((shipmentDetails: any) => {\n\n        var shipmentObj = null;\n\n        try {\n            if (shipmentDetails.value) {\n                shipmentObj = JSON.parse(shipmentDetails.value);\n            }\n            if (shipmentObj) {\n                // _activity = _activity;\n                _activity = '';\n                _shipmentID = shipmentObj.shipmentID;\n                _carrierScac = shipmentObj.carrierScac;\n                _userId = shipmentObj.userId;\n                _sourceTMS = shipmentObj.sourceTMS;\n                _carrierId = shipmentObj.carrierId;\n                GPS_Tracking_ShipmentID = shipmentObj.shipmentID;\n            }\n        } catch (error) {\n            // console.log(\"error:::\", error);\n\n        }\n\n        // Geolocation Config\n        BackgroundGeolocation.ready({\n            locationAuthorizationRequest: \"Always\",\n            desiredAccuracy: BackgroundGeolocation.DESIRED_ACCURACY_MEDIUM,\n            distanceFilter: distanceFilter,  //Approximately 800 meters\n            disableElasticity: true,\n            useSignificantChangesOnly: false, //set either useSignificantChangesOnly or distanceFilter; not both\n            logLevel: BackgroundGeolocation.LOG_LEVEL_VERBOSE,\n            stopOnTerminate: false,\n            startOnBoot: true,\n            debug: false,\n            // locationUpdateInterval: 60000,  // Android only\n            // fastestLocationUpdateInterval: 60000, // Android only\n            //-----------------------\n            //The Android plugin will ignore a received location when it is identical to the last location. \n            //Set true to override this behaviour and record every location, regardless if it is identical \n            //to the last location.\n            allowIdenticalLocations: true, // Android only\n\n            //-------Rest API config properties--------------------------\n            autoSync: true,\n            url: locationURL,\n            headers: {\n                'Ocp-Apim-Subscription-Key': KEYS.SUBSCRIPTION_KEY,\n                //** */ this is the original flow for build\n                \"Authorization\": \"Bearer \" + __vault\n                //*\n                //** */ this is the Testing flow for mimicking the unauthorized scenario \n                //*\n                // \"Authorization\": \"Bearer \" + __accessToken1\n            },\n            extras: {\n                messageType: MESSAGE_TYPE.GEO_POSITION,\n                activity: _activity,\n                shipmentId: _shipmentID,\n                carrierScac: _carrierScac,\n                userId: _userId,\n                sourceSystem: _sourceTMS,\n                carrierId: _carrierId,\n                stopId: stopId,\n                sequenceNo: sequenceNo,\n                locationId: locationId\n            }\n        }, (state) => {\n            session.getFreshToken().then(function (_token) {\n                __vault = _token;\n                BackgroundGeolocation.setConfig({\n                    headers: {\n                        'Ocp-Apim-Subscription-Key': KEYS.SUBSCRIPTION_KEY,\n                        \"Authorization\": \"Bearer \" + __vault\n                    }\n                }).then((state) => {\n                    console.log(\"[setConfig] success: \", state);\n                });\n            });\n        });\n    });\n}\n\n/**\n     *  Clear Arrival Geofence Stationary data and timer\n     * * @param\n     * @returns BackgroundGeolocation object.\n     */\nfunction clearArrivalGeofenceStationary() {\n    distance = 0;\n    lastKnownLocationArrivalGeofence = null;\n    if (timer) {\n        clearInterval(timer);\n        timer = null;\n    }\n}\n\n/**\n     *  BackgroundGeolocation Object will be returned to access as globally \n     * * @param\n     * @returns BackgroundGeolocation object.\n     */\nexport function getGPSinstance() {\n    return BackgroundGeolocation;\n}\n\n/**\n     *  This method provides the current location latitude and longitude\n     * * @param {*} get CurrentGPS callback to process the current location lat, long.\n     * @returns null.\n     */\nexport async function getCurrentPosition(getCurrentGPS: any) {\n    BackgroundGeolocation.getCurrentPosition({ persist: false }, (location: any) => {\n        getCurrentGPS(location.coords.latitude,\n            location.coords.longitude);\n    }, (error) => {\n        // Error\n    });\n};\n\n/**\n     *  This will start the GPS tracking as well as geofence tracking.\n     * * @param shipmentDetails to strat the GPS tracking as well as geofence\n     *  i.g. activity,shipmentId, carrierScac, userId, sourceSystem\n     * @returns null.\n     */\nexport function startGPStracking(shipmentDetails: any) {\n\n    GPS_Tracking_ShipmentID = shipmentDetails.shipmentID;\n    validateLoadDetails(shipmentDetails.loadStops);\n    \n\n    if (loadDetailsTrackedShipment) {\n            cogfigureActiveGeofence();\n        }\n    const session: Session = new Session();\n    session.getFreshToken().then(function (_token) {\n        __vault = _token;\n        BackgroundGeolocation.setConfig({\n            distanceFilter: distanceFilter, //Approximately 800 meters\n            disableElasticity: true,\n            url: locationURL,\n            headers: {\n                'Ocp-Apim-Subscription-Key': KEYS.SUBSCRIPTION_KEY,\n                \"Authorization\": \"Bearer \" + __vault\n            },\n            extras: {\n                messageType: MESSAGE_TYPE.GEO_POSITION,\n                activity: shipmentDetails.activity,\n                shipmentId: shipmentDetails.shipmentID,\n                carrierScac: shipmentDetails.carrierScac,\n                userId: shipmentDetails.userId,\n                sourceSystem: shipmentDetails.sourceTMS,\n                carrierId: shipmentDetails.carrierId,\n                stopId: stopId,\n                sequenceNo: sequenceNo,\n                locationId: locationId\n            }\n        }).then((state) => {\n            BackgroundGeolocation.start().then(() => {\n                console.log(\"BackgroundGeolocation: started \", state);\n            });\n        });\n    });\n}\n\nfunction getGeofenceObjects(loadStops: any) {\n    const getGeoFence = (loadStop: any, isPreArrivalFence: boolean) => ({\n        identifier: (isPreArrivalFence ? (loadStop.stopId + \"_\" + GEOFENCE_IDENTIFIER.PRE_ARRIVAL) : (loadStop.stopId + \"_\" + GEOFENCE_IDENTIFIER.ARRIVAL)),\n        radius: isPreArrivalFence ? KEYS.GEO_PRE_ARRIVAL_RADIUS : GEO_ARRIVAL_RADIUS,\n        latitude: loadStop.latitude,\n        longitude: loadStop.longitude,\n        notifyOnEntry: true,\n        notifyOnExit: true,\n        extras: {\n            messageType: isPreArrivalFence ? MESSAGE_TYPE.GEOFENCE_PRE_ARRIVAL : MESSAGE_TYPE.GEOFENCE_ARRIVAL,\n            stopId: loadStop.stopId,\n            sequenceNo: loadStop.sequenceNo,\n            locationId: loadStop.locationId\n        }\n    })\n\n    const geofences: Array<Geofence> = [];\n    loadStops.map((loadStop: any, index: any) => {\n        if (loadStop.sequenceNo == sequenceNo) {\n            const preArrivalFrnce = getGeoFence(loadStop, true);\n            geofences.push(preArrivalFrnce);\n            const arrivalFrnce = getGeoFence(loadStop, false);\n            geofences.push(arrivalFrnce);\n        }\n\n    });\n    return geofences;\n}\n\nfunction updateArrivalTime(currentSequenceNo: any) {\n    for (let i = 0; i < loadDetailsTrackedShipment.length; i++) {\n        if (loadDetailsTrackedShipment[i].sequenceNo == currentSequenceNo) {\n            loadDetailsTrackedShipment[i].actualArrivalDateTime = new Date().toISOString();\n        }\n    }\n}\n\nfunction updateDepartureTime(currentSequenceNo: any) {\n    let isLastStop = false;\n    for (let i = 0; i < loadDetailsTrackedShipment.length; i++) {\n        if (loadDetailsTrackedShipment[i].sequenceNo == currentSequenceNo) {\n            if (loadDetailsTrackedShipment[i].actualArrivalDateTime) {\n                loadDetailsTrackedShipment[i].actualDepartureDateTime = new Date().toISOString();\n                if (loadDetailsTrackedShipment[i].stopType == \"D\"\n                    && loadDetailsTrackedShipment.length == currentSequenceNo) {\n\n                    isLastStop = true;\n                    BackgroundGeolocation.stop().then(() => {\n                        console.log(\"- stop success\");\n                        removeItem(DB_GPS_ACTIVATED_SHIPMENT).then(() => {\n                            console.log(\"- data removed from DB\");\n                        });\n                    });\n                    BackgroundGeolocation.removeGeofences();   //Destroy all [[Geofence]].\n                }\n            }\n        }\n    }\n    if (!isLastStop) {\n        cogfigureActiveGeofence();\n    }\n}\n\nasync function cogfigureActiveGeofence() {\n    // Only 1 pair of geo-fences to be active at any point of time.\n    // Once current Stop will be departed, next Stop geofence pair will be activated\n    // Remove Geofences before add new Geofences\n    let updatedsequenceNo = updateActiveGeofenceSequenceNo();\n\n    let currentSequenceNo;\n    let geofences = await BackgroundGeolocation.getGeofences();\n    geofences.forEach((geofence: any, index: any) => {\n        currentSequenceNo = geofence.extras.sequenceNo;\n    });\n    if (currentSequenceNo != updatedsequenceNo) {  // this check to avoid multiple execution for same load in componentDidUpdate\n\n        // Before Configure the Geofence Clean the Arrival Geofence Stationary timer and data\n        clearArrivalGeofenceStationary();\n  \n        sequenceNo = updatedsequenceNo;\n        BackgroundGeolocation.removeGeofences();\n        const activeGeofences = getGeofenceObjects(loadDetailsTrackedShipment);\n        // Add a geofences.\n        if (activeGeofences.length > 0) {  // Geofences will be added when activeGeofences has data\n            BackgroundGeolocation.addGeofences(activeGeofences, (success: any) => {\n                //console.log(\"[Geofences] - Added geofences\" + JSON.stringify(activeGeofences));\n                //alert(\"[Geofences] - Added geofences\" + JSON.stringify(activeGeofences));\n            }, (error: any) => {\n                //console.log(\"[Geofences] - \", 'Add geofences error', error);\n                //alert(\"[Geofences] - Add geofences error ::: \" + error);\n\n            });\n        }\n    } else {\n        for(let index=0; index< loadDetailsTrackedShipment.length; index++) {\n            if (loadDetailsTrackedShipment[index].sequenceNo == currentSequenceNo \n                && loadDetailsTrackedShipment[index].actualArrivalDateTime){\n                     // Before Configure the Geofence Clean the Arrival Geofence Stationary timer and data\n                    clearArrivalGeofenceStationary();\n            }\n        }\n    }\n}\n\n/**\n     *  This will update the active Geofence sequenceNo\n     * * @param\n     * @returns null.\n     */\nfunction updateActiveGeofenceSequenceNo() {\n    let stopSequenceNo = 99;\n    for (var i = 0; i < loadDetailsTrackedShipment.length; i++) {\n        if ((!loadDetailsTrackedShipment[i].actualArrivalDateTime\n            || !loadDetailsTrackedShipment[i].actualDepartureDateTime)) {\n            if (stopSequenceNo > loadDetailsTrackedShipment[i].sequenceNo) {\n                stopSequenceNo = loadDetailsTrackedShipment[i].sequenceNo;\n                stopId = loadDetailsTrackedShipment[i].stopId;\n                locationId = loadDetailsTrackedShipment[i].locationId;      \n\n            }\n        }\n    }\n    return stopSequenceNo;\n}\n\n/**\n     *  This will send pings for Geo Start Trip Location\n     * * @param shipmentDetails to send the Geo Start Trip Location\n     *  i.g. activity,shipmentId, carrierScac, userId, sourceSystem\n     * @returns null.\n     */\nexport function sendGeoStartTripLocation(shipmentDetails: any) {\n    BackgroundGeolocation.getCurrentPosition({\n        timeout: 30,          // 30 second timeout to fetch location\n        maximumAge: 5000,     // Accept the last-known-location if not older than 5000 ms.\n        desiredAccuracy: 10,  // Try to fetch a location with an accuracy of `10` meters.\n        samples: 1,           // How many location samples to attempt.});\n        extras: {             // Custom meta-data.\n            messageType: MESSAGE_TYPE.GEO_START_TRIP_LOCATION,\n            activity: shipmentDetails.activity,\n            shipmentId: shipmentDetails.shipmentID,\n            carrierScac: shipmentDetails.carrierScac,\n            userId: shipmentDetails.userId,\n            sourceSystem: shipmentDetails.sourceTMS,\n            carrierId: shipmentDetails.carrierId,\n            stopId: stopId,\n            sequenceNo: sequenceNo,\n            locationId: locationId\n        }\n    });\n}\n\n/**\n     *  This will provide the GPS tracking enabled Shipment ID\n     * * @param\n     * @returns GPS_Tracking_ShipmentID.\n     */\nexport function getGPStrackingShipmentID() {\n    return GPS_Tracking_ShipmentID;\n}\n\n/**\n     *  This will set the GPS tracking enabled Shipment ID\n     * * @param GPS_Tracking_ShipmentID\n     * @returns null.\n     */\nexport function setGPStrackingShipmentID(shipmentID: any) {\n    GPS_Tracking_ShipmentID = shipmentID;\n}\n\n/**\n     *  This will provide the GPS tracking enabled Shipment ID\n     * * @param \n     * @returns GPS_Tracking_ShipmentID.\n     */\nexport function getGeofenceSequenceNo() {\n    return sequenceNo;\n}\n\n/**\n     *  This will provide the loadDetailsTrackedShipment object\n     * * @param\n     * @returns loadDetailsTrackedShipment.\n     */\nexport function getLoadDetailsTrackedShipment() {\n    return loadDetailsTrackedShipment;\n}\n\n/**\n     *  This will set the GPS tracking enabled Shipment ID\n     * * @param GPS_Tracking_ShipmentID\n     * @returns null.\n     */\nexport function setGeofenceSequenceNo(_updatedSequenceNo: any) {\n    if (_updatedSequenceNo > sequenceNo) {\n        sequenceNo = _updatedSequenceNo;\n    }\n}\n\n/**\n     *  This will set the refreshed loadDetails object\n     * * @param loadDetailsRefreshedShipment\n     * @returns null.\n     */\nexport function setLoadDetailsTrackedShipment(loadDetailsRefreshedShipment: any) {\n    validateLoadDetails(loadDetailsRefreshedShipment);\n}\n\n/**\n     * Validation for any data change is happened for refreshed loadDetails object or not\n     * * @param loadStops\n     * @returns null.\n     */\nfunction validateLoadDetails(loadStops: any) {\n    if (!_.isEqual(loadStops, loadDetailsTrackedShipment)) {\n        if (loadStops.length > 0 && loadStops[0].stopId) {\n            loadDetailsTrackedShipment = loadStops;\n            if (loadDetailsTrackedShipment) {\n                cogfigureActiveGeofence();\n            }\n        }\n    }\n}\n\n/**\n * This routine calculates the distance between two points (given the\n * latitude/longitude of those points). It is being used to calculate\n * the distance between two locations using GeoDataSource (TM) prodducts\n * \n *  Definitions:\n * South latitudes are negative, east longitudes are positive\n * Passed to function:\n * lat1, lon1 = Latitude and Longitude of point 1 (in decimal degrees)\n * unit = the unit you desire for results\n * where: 'M' is statute miles (default) \n * 'meters' is meters\n * * @param lat1, lon1, lat2, lon2, unit\n * @returns distance\n */\nfunction getDistanceBetweenGeolocations(lat1:any, lon1:any, lat2:any, lon2:any, unit:any) {\n\tif ((lat1 == lat2) && (lon1 == lon2)) {\n\t\treturn 0;\n\t}\n\telse {\n\t\tconst radlat1 = Math.PI * lat1/180;\n\t\tconst radlat2 = Math.PI * lat2/180;\n\t\tconst theta = lon1-lon2;\n\t\tconst radtheta = Math.PI * theta/180;\n\t\tlet dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n\t\tif (dist > 1) {\n\t\t\tdist = 1;\n\t\t}\n\t\tdist = Math.acos(dist);\n\t\tdist = dist * 180/Math.PI;\n\t\tdist = dist * 60 * 1.1515;\n\t\tif (unit==\"meters\") { dist = dist * 1.609344 * 1000 }\n        // if (unit==\"M\") { dist = dist * 0.8684}\n\t\treturn dist;\n\t}\n}\n\n/**\n     *  This Session class object will generate the refresh token, once it will be expired.\n     * *\n     */\nclass Session {\n    __token: any;\n    async getFreshToken() {\n\n        const __auth = AuthSingleton.getInstance();\n        const isActiveSession = await __auth.isAuthenticated();\n        if (!isActiveSession) {\n            store.dispatch(session(Math.floor(Math.random() * 100)));\n            return null;\n        }\n        this.__token = (await __auth.getAuthResponse()).id_token;\n        return this.__token;\n    }\n}\n","import { IonicAuthOptions } from '@ionic-enterprise/auth';\nimport { KEYS } from '../utils/constants';\n\nexport const nativeAzureConfig: IonicAuthOptions = {\n  // client or application id for provider\n  clientID: KEYS.CLIENT_ID,\n  // This is the expected redirectUri from the login page.\n  redirectUri: 'com.schneider.fp.carriers://callback',\n  // requested scopes from provider\n  scope:\n    'openid offline_access '+KEYS.AZURE_API_HOST+'/api/readscope '+KEYS.AZURE_API_HOST+'/api/writescope',\n  // The discovery url for the provider\n  discoveryUrl: KEYS.DISCOVERY_URL,\n  // The audience if applicable\n  audience: '',\n  // The expected logout url\n  logoutUrl: '',\n  // The platform which we are running on\n  platform: 'capacitor',\n  // The type of iOS webview to use. 'shared' will use a webview that can share session/cookies\n  // on iOS to provide SSO across multiple apps but will cause a prompt for the user which asks them\n  // to confirm they want to share site data with the app. 'private' uses a webview which will not\n  // prompt the user but will not be able to share session/cookie data either for true SSO across\n  // multiple apps.\n  iosWebView: 'private',\n  // The auth provider.\n  authConfig: 'azure',\n  // This sets the color of the toolbar at the top of the login webview for android.\n  //  Red is just to call attention to what is being set (you don't want to use Red)\n  androidToolbarColor: '',\n  logLevel: 'DEBUG',\n};\n\nexport const webAzureConfig: IonicAuthOptions = {\n  // client or application id for provider\n  clientID: KEYS.CLIENT_ID,\n  // This is the expected redirectUri from the login page.\n  redirectUri: \"https://l04660.github.io/login\",\n  // requested scopes from provider\n  scope:\n  'openid offline_access '+KEYS.AZURE_API_HOST+'/api/readscope '+KEYS.AZURE_API_HOST+'/api/writescope',\n  // The discovery url for the provider\n  discoveryUrl: KEYS.DISCOVERY_URL,\n  // The audience if applicable\n  audience: 'https://graph.microsoft.com',\n  // The expected logout url\n  logoutUrl: 'https://l04660.github.io/login',\n  // The platform which we are running on\n  platform: 'web',\n  // The auth provider.\n  authConfig: 'azure',\n  logLevel: 'DEBUG',\n  clientSecret: 'Tvol14SMF_cK@AQNalVdbbxoZ1v4O@Q:',\n};\n\nexport const environment = {\n  production: false,\n  // dataService: 'http://localhost:5000' // switch to this to run local\n  dataService: 'https://cs-demo-api.herokuapp.com',\n};\n  ","import * as constants from '../../utils/constants';\n\nexport const updateDate = () => ({\n    type: constants.LAST_UPDATED_DATE,\n    date: new Date().toISOString()\n});\n\nexport const showLoading = (isPullToRefresh = false) => ({\n    type: isPullToRefresh ? constants.PULL_TO_REFRESH_LOADING : constants.TOGGLE_LOADING,\n    status: true\n});\n\nexport const hideLoading = (isPullToRefresh = false) => ({\n    type: isPullToRefresh ? constants.PULL_TO_REFRESH_LOADING : constants.TOGGLE_LOADING,\n    status: false\n});\n\n\nexport const doLogin = (username: string, password: string, rememberme: boolean) => ({\n    type: constants.LOGIN_INPROGRESS,\n    payload: { username, password, rememberme }\n})\n\nexport const loginSuccess = (data: any) => ({\n    type: constants.LOGIN_SUCCESS,\n    data\n});\n\nexport const loginError = (data: any) => ({\n    type: constants.LOGIN_ERROR,\n    data\n})\n\nexport const logout = () => ({\n    type: constants.LOGOUT\n})\n\nexport const session = (session:any) => ({\n    type: constants.SESSION,session\n})\n\nexport const showPermissionAlert = (data: any) => ({\n    type: constants.PERMISSION_ALERT_MESSAGE,\n    payload: data\n});\n\nexport const closePermissionAlert = () => ({\n    type: constants.CLOSE_PERMISSION_ALERT\n\n});\n\nexport const updateNetworkStatus = (data: any) => ({\n    type: constants.UPDATE_NETWORK_STATUS,\n    data\n\n});\nexport const updateDevicInfo = (data: any) => ({\n    type: constants.UPDATE_DEVICE_INFO,\n    data\n})\nexport const HideTabBar = () => ({\n    type: constants.HIDE_TAB_BAR\n})\nexport const tokenData = (data: any) => {\n    return ({\n        type: constants.TOKEN_DATA,\n        data\n    })\n}\n\nexport const SaveDeepLinkURI = (data: any) => {\n    return ({\n        type: constants.SAVE_DEEPLINK_URI,\n        data\n    })\n}\nexport const clearDeepLinkURI = () => {\n    return ({\n        type: constants.CLEAR_DEEPLINK_URI\n    })\n}\n\nexport const showPullToRefresh = () => ({\n    type: constants.PULL_TO_REFRESH_LOADING,\n    status: true\n});\n\nexport const hidePullToRefresh = () => ({\n    type: constants.PULL_TO_REFRESH_LOADING,\n    status: false\n});\n","import \"@capacitor-community/firebase-analytics\";\nimport { Plugins } from '@capacitor/core';\nimport moment from 'moment';\nimport { isPlatform } from '@ionic/react';\nimport { IONICWrapper } from './common';\nimport { store } from '../store';\n\nconst { FirebaseAnalytics, Device } = Plugins;\n\n/**\n *\n * LogEvent Method used to log events\n *\n * @param name\n * @param parameters\n * @param sessionFields\n */\nexport const logEvent = (name: string, parameters: object, sessionFields: string[] = []) => {\n    if(isPlatform('desktop')) {\n        return true;\n    }\n    if(name) {\n        const storeData = (store.getState());\n        const session = (storeData && storeData.App && storeData.App.session);\n        let params:any = parameters;\n        if(session) {\n            params = {...params, sessionId: getSessionId(session.uuid)};\n            /**\n             *  Session Fields Array includes required fields  from session\n             */\n            sessionFields.forEach(field => {\n                params[field] = session[field] || '';\n            });\n        }\n        FirebaseAnalytics.logEvent({ name,  params});\n    }\n};\n\n/**\n *  SetUserId Method used to set the unique userid\n */\nexport const setUserId = (userId: string) => {\n    if(isPlatform('desktop')) {\n        return true;\n    }\n    if(userId) {\n        FirebaseAnalytics.setUserId({ userId });\n    }\n}\n\n/**\n *  SetUserProperty Method used to set the user properties\n */\nexport const setUserProperty = (name: string, value: string) => {\n    if(isPlatform('desktop')) {\n        return true;\n    }\n    if(name && value) {\n        FirebaseAnalytics.setUserProperty({name, value});\n    }\n}\n\n/**\n *  SetScreenName Method used to log screen navigationss\n */\nexport const setScreenName = (screenName: string) => {\n    if(isPlatform('desktop')) {\n        return true;\n    }\n    if(screenName) {\n        FirebaseAnalytics.setScreenName({screenName});\n    }\n}\n\nexport const getSessionId = (id: string): string => {\n  return id + moment(new Date()).format('MMDDYYYYHHmmss');\n};\n\nconst fetchCurrentTime = (): string => {\n  const month = new Date().getMonth() + 1;\n  const date = new Date().getDate();\n  const year = new Date().getFullYear();\n  const hour = new Date().getHours();\n  const minute = new Date().getMinutes();\n  const seconds = new Date().getSeconds();\n  const monthStr = month / 10 < 1 ? `0${month.toString()}` : month.toString();\n  const dateStr = date / 10 < 1 ? `0${date.toString()}` : date.toString();\n  const yearStr = (year % 100).toString();\n  const hourStr = hour / 10 < 1 ? `0${hour.toString()}` : hour.toString();\n  const minuteStr = minute / 10 < 1 ? `0${minute.toString()}` : minute.toString();\n  const secondsStr = seconds / 10 < 1 ? `0${seconds.toString()}` : seconds.toString();\n  return monthStr + dateStr + yearStr + hourStr + minuteStr + secondsStr;\n};\n\nexport const getApplicationInfo = async () => {\n  const info = await Device.getInfo();\n  let channel = null;\n  if (info.platform === 'web') {\n    channel = 'web-app';\n  } else if (info.platform === 'android' || info.platform === 'ios') {\n    channel = 'mobile-app';\n  }\n  const timeString = fetchCurrentTime();\n  const uuidLastFour = info.uuid;\n  const infoObj = {\n    os: info.operatingSystem,\n    device_name: info.model,\n    model: info.model,\n    channel,\n    uuid: uuidLastFour.substring(uuidLastFour.length - 4),\n    sessionId: uuidLastFour.substring(uuidLastFour.length - 4) + timeString,\n    userId: IONICWrapper.details.auth.user.upn,\n    roles: IONICWrapper.details.auth.user.roles.join(',')\n  };\n  return infoObj;\n};\n\nexport const getApplicationInfoBeforeLogin = async () => {\n  const info = await Device.getInfo();\n  let channel = null;\n  if (info.platform === 'web') {\n    channel = 'web-app';\n  } else if (info.platform === 'android' || info.platform === 'ios') {\n    channel = 'mobile-app';\n  }\n  const infoObj = {\n    os: info.operatingSystem,\n    device_name: info.model,\n    model: info.model,\n    channel\n  };\n  return infoObj;\n};\n","import * as Constants from '../../utils/constants';\n\nexport const updateData = () => ({\n  type: Constants.UPDATE_DATA\n});\n\nexport const loadData = (data: any) => ({\n  type: Constants.LOAD_DATA,\n  payload: data\n});\n\nexport const watchedLoadsRequest = (payload: any) => ({\n  type: Constants.WATCHEDLOAD_DATA_REQUEST,\n  payload\n});\n\nexport const watchLoadsResponse = (payload: any) => ({\n  type: Constants.WATCHEDLOAD_DATA_SUCCESS,\n  payload\n});\n\nexport const addWatchLoad = (payload: any) => ({\n  type: Constants.ADD_WATCH_LOAD,\n  payload\n});\n\nexport const addWatchLoadSuccess = (payload: any) => ({\n  type: Constants.ADD_WATCH_LOAD_SUCCESS,\n  payload\n});\n\nexport const removeWatchLoad = (payload: any) => ({\n  type: Constants.REMOVE_WATCH_LOAD,\n  payload\n});\n\nexport const removeWatchLoadSuccess = (payload: any) => ({\n  type: Constants.REMOVE_WATCH_LOAD_SUCCESS,\n  payload\n});\n\nexport const setWatchedLoadFilter = (payload: any) => ({\n  type: Constants.WATCHED_LOAD_FILTER,\n  payload\n});\n\nexport const setRecommendedLoadFilter = (payload: any) => ({\n  type: Constants.RECOMMENDED_LOAD_FILTER,\n  payload\n});\n\nexport const showApiResponseError = (payload: any) => ({\n  type: Constants.SHOW_API_RESPONSE_ERROR,\n  payload\n});\n\nexport const clearApiResponseError = () => ({\n  type: Constants.CLEAR_API_RESPONSE_ERROR\n});\n\nexport const recommendedLoadsRequest = (payload: any) => ({\n  type: Constants.RECOMMENDED_LOADS_REQUEST,\n  payload\n});\n\nexport const recommendedLoadsSuccess = (payload: any) => ({\n  type: Constants.RECOMMENDED_LOADS_SUCCESS,\n  payload\n});\n\nexport const removeRecommendedResults = (payload: any) => ({\n  type: Constants.REMOVE_RECOMMENDEDRESULTS,\n  payload\n});\n\nexport const showMemberApiError = (payload: any) => ({\n  type: Constants.SHOW_MEMBER_API_ERROR,\n  payload\n});\n","import * as Constants from \"../../utils/constants\";\n\nexport const SEARCH_DATA = (data: any) => ({\n  type: Constants.SEARCH_DATA,\n  payload: data\n});\n\nexport const loadSearchData = (data: any, isPagination: boolean) => ({\n  type: \"loadSearchData\",\n  payload: {\n    data,\n    isPagination\n  }\n});\n\nexport const saveAllSearchData = (data: any, isPagination: boolean) => ({\n  type: Constants.SAVE_ALL_SEARCH_DATA,\n  payload: {\n    data,\n    isPagination\n  }\n});\n\nexport const clearLoads = () => ({\n    type: Constants.CLEAR_SEARCH_RESULST,\n    payload: []\n})\n\nexport const fetchResults = (searchParams: any, isPagination: boolean, isHideLoader = false) =>({\n        type: Constants.FETCH_SEARCH_RESULTS,\n        payload: {\n            searchParams,\n            isPagination,\n            isHideLoader\n        }\n    })\n\nexport const removeSearchResults = (payload:any) =>({\n      type: Constants.REMOVE_SEARCH_RESULTS,\n      payload\n    })\n\nexport const setSearchParams = (payload: any) =>({\n    type: Constants.SEARCH_DATA,\n    payload\n});\n\nexport const showBuyLoadError = (payload: any) => ({\n  type: Constants.SHOW_BUYLOAD_API_ERROR,\n  payload\n});\n","import getURLDetails from \"./endPoints\";\nimport HTTP from \"./httpServices\";\nimport { KEYS } from \"../utils/constants\";\nimport { store } from \"../store\";\nimport { session } from \"../actions/Login/action\";\nimport { showApiResponseError, showMemberApiError } from \"../actions/Home/action\";\nimport { AuthSingleton } from '../services/authentication.service';\nimport { IONICWrapper} from \"../utils/common\";\nimport { showBuyLoadError } from \"app/actions/Search/action\";\n\n/**\n * This common service is used to make GET and POST Web API calls.\n */\nvar serviceRequests = {};\nvar hasSession = true;\n\nclass commonService<T> {\n\n  /*\n  * To get the error message based on the API status code\n  * @status - API response status\n  */\n  private getErrorMessage(status: number) {\n    let message: string = \"\";\n    if (status >= 300 && status < 400) {\n      message = \"Server is not working, please try again later\";\n    } else if (status >= 400 && status < 500) {\n      message = \"Not authorized, please logging out and try again later\";\n    } else if (status >= 500 && status < 600) {\n      message = \"Internal serve error, please try again later\";\n    }\n\n    return message;\n  }\n  /**\n   * To fetch data from the Web Service API.\n   * @param {string} endPoint end point value.\n   * @param {string} urlKey url key value.\n   * @param {*} data request data to be transfered.\n   * @param {*} token token value.\n   * @param {*} responseType response type.\n   * @param {*} serviceProgress callback for monitoring service progress.\n   * @returns {promise} result of the Service API.\n   */\n\n  get(\n    endPoint: string,\n    urlKey: string,\n    data?: any,\n    token?: string,\n    responseType?: string,\n    serviceProgress?: Function\n  ) {\n    var _endPointEntity = getURLDetails(endPoint, urlKey, data);\n    var _this = this;\n    return new Promise(function (resolve: any, reject: any) {\n      _this.getHeaders(endPoint, responseType).then((headers: any) => {\n        if (_endPointEntity) {\n          new HTTP()\n            .__request(\n              _endPointEntity.get_Service_Url(),\n              headers,\n              \"get\",\n              null,\n              urlKey,\n              serviceRequests,\n              _this.set_TimeOut(),\n              function (pgr: any) {\n                serviceProgress && serviceProgress(pgr);\n              }\n            )\n            .then((response: any) => {\n              // Success\n              if (response && response.status >= 200 && response.status < 300) {\n                resolve(response.data);\n              } else {\n                const message = _this.getErrorMessage(response.status);\n                reject(new Error(message));\n              }\n            })\n            .catch((error: any) => {\n              const message = _this.getErrorMessage(\n                error && error.response && error.response.status\n              );\n              store.dispatch(showApiResponseError({ message }));\n              reject(error);\n            });\n        } else {\n          reject(\"No URL is provided for Service Request\");\n        }\n      }); //testing\n    });\n  }\n\n  /**\n   * To post data to the Web Service API.\n   * if there is no specic functional programming is designated for the post API, the above GET methods will be changed to single common metohd in future based on the excersize.\n   * @param {string} endPoint end_point.\n   * @param {string} urlKey url key value.\n   * @param {*} data request data to be transfered.\n   * @param {*} token token value.\n   * @param {*} responseType response type.\n   * @param {*} serviceProgress callback for monitoring service progress.\n   * @returns {promise} result of the Service API.\n   */\n\n  post(\n    endPoint: string,\n    urlKey: string,\n    data: any,\n    token?: string,\n    requestData?: T,\n    responseType?: any,\n    serviceProgress?: any\n  ) {\n    var _endPointEntity = getURLDetails(endPoint, urlKey, data);\n    var _dataString = requestData;\n    var _this = this;\n    return new Promise(function (resolve: any, reject: any) {\n      _this.getHeaders(endPoint, responseType).then((headers: any) => {\n        if (_endPointEntity && headers) {\n          new HTTP()\n            .__request(\n              _endPointEntity.get_Service_Url(),\n              headers,\n              \"post\",\n              _dataString,\n              urlKey,\n              serviceRequests,\n              _this.set_TimeOut(),\n              function (pgr: any) {\n                serviceProgress && serviceProgress(pgr);\n              }\n            )\n            .then((response) => {\n              if (response && response.status >= 200 && response.status < 300) {\n                resolve(response.data);\n              } else {\n                const message = _this.getErrorMessage(response.status);\n                reject(new Error(message));\n              }\n            })\n            .catch((error) => {\n              const message = _this.getErrorMessage(\n                error && error.response && error.response.status\n              );\n              if (urlKey === \"GET_USER_DETAILS\") {\n                store.dispatch(showMemberApiError(true));\n              } else {\n                if (message === '' && urlKey === \"BUY_LOAD\"){\n                  let status =  error && error.response && error.response.status;\n                  if(!status || status === 202 || status === \"error\" ||status === \"UNKNOWN\") {\n                    store.dispatch(showBuyLoadError(true))\n                  }\n                }else {\n                  store.dispatch(showApiResponseError({ message }));\n                }\n              }\n              reject(error);\n            });\n        } else {\n          reject(\"No URL is provided for Service Request\");\n        }\n      });\n    });\n  }\n\n  /**\n   * To get Headers information for the specified servcie API.\n   * @param {*} endPoint API end point.\n   * @param {*} responseType response type.\n   * @returns {object} consolidated header list.\n   */\n  async getHeaders(endPoint?: string, responseType?: string) {\n    //Redirecting to the landing screen when session is expired.\n    const __auth = AuthSingleton.getInstance();\n\n    if (hasSession) {\n      hasSession = false;\n      const isActiveSession = await __auth.isAuthenticated();\n      hasSession = true;\n      if (!isActiveSession) {\n        store.dispatch(session(Math.floor(Math.random() * 100)));\n        return null;\n      }\n    }\n    var __token = (await __auth.getAuthResponse()).id_token;\n\n    var headers: any = {\n      \"Content-Type\": \"application/json\",\n      'Cache-Control': 'no-cache,no-store,max-age=0,must-revalidate',\n      'Pragma': 'no-cache',\n      'Expires': '-1',\n      'X-XSS-Protection': '1; mode=block',\n      'X-Frame-Options': 'SAMEORIGIN',\n      'Content-Security-Policy': \"script-src 'self'\",\n      'X-Content-Type-Options': 'nosniff',\n      'Allow': 'GET, POST, HEAD',\n      'Content-Encoding': 'deflate, gzip',\n      'Transfer-Encoding': 'compress',\n      \"Ocp-Apim-Subscription-Key\": KEYS.SUBSCRIPTION_KEY,\n    };\n\n    if (__token) {\n      headers[\"Authorization\"] = \"Bearer \" + __token;\n    } else {\n      return null;\n    }\n\n    return headers;\n  }\n\n  /**\n   * To cancel request\n   * @param {string} endPointKey response type.\n   */\n  cancelRequest(endPointKey: string) {\n    var __currentReqest = JSON.parse(JSON.stringify(serviceRequests))[\n      endPointKey\n    ];\n    __currentReqest.cancel(\n      endPointKey + \" Service Request has been cancelled by Agent\"\n    );\n  }\n  /**\n   * To set timeout for request\n   * @returns {number} specific time out based on end point key.\n   */\n  set_TimeOut() {\n    const minTimeOut = 40;\n    const timeOut = IONICWrapper.details.keys && parseInt(IONICWrapper.details.keys.configuration.serviceTimeout);\n    return (timeOut || minTimeOut) * 1000; //Default timeout 40 seconds for any API Call.\n  }\n}\n\nexport default commonService;\n\n","import { IONICWrapper} from \"../utils/common\";\nimport HTTP from '../services/httpServices';\nimport { KEYS } from '../utils/constants';\nimport Service from \"../services/common.services\";\n\n/**\n     * Generate Azure Maps Bearer Token.\n     * Bearer Token is valid for 60 minutes. If the Token will expire new token will be generated.\n     * * @param {*} getToken callback for Azure Maps Bearer Token. \n     * @returns null.\n     */\nexport async function generateAzureMapsBearerToken(getToken: any) {\n    let accessToken = IONICWrapper.details.vault && ( await IONICWrapper.details.vault.getValue('AZURE_MAPS_ACCESS_TOKEN'));\n    if (accessToken) {\n        let jsonObj = JSON.parse(accessToken);\n        let currentUnixTime = (new Date()).getTime() / 1000;\n        if (currentUnixTime < jsonObj.expires_on) {\n            getToken(\"Bearer \" + jsonObj.access_token);\n        } else {\n            await generateAzureMapsAccessToken(getToken);\n        }\n    } else {\n        await generateAzureMapsAccessToken(getToken);\n    }\n}\n\n/**\n     * Generate Azure Maps Access Token and store in local DB.\n     *@param {*} getToken callback for Azure Maps Bearer Token. \n     * @returns null.\n     */\nexport async function generateAzureMapsAccessToken(getToken: any) {\n    const commonService = new Service();\n    const response: any = await commonService.get(\"AZURE_MAPS\", \"ACCESS_TOKEN\");\n    IONICWrapper.details.vault && await IONICWrapper.details.vault.storeValue('AZURE_MAPS_ACCESS_TOKEN', JSON.stringify(response));\n    getToken(\"Bearer \" + response.access_token);\n}\n\n/**\n     * Search current Address based on geo coordinates (lat, long).\n     * * @param {string} query string for Azure Maps search.\n     *@param {*} getAddress callback for Azure Maps address search. \n     * @returns null.\n     */\nexport async function searchCurrentAddress(query: string, getAddress: any) {\n    await generateAzureMapsBearerToken((bearer_token: any) => {\n        (new HTTP()).__requestRestApi(\n            `https://atlas.microsoft.com/search/address/reverse/json?api-version=1.0&query=${query}`,\n            {\n                \"x-ms-client-id\": KEYS.AZURE_MAP_CLIENT_ID,\n                \"Authorization\": bearer_token\n            },\n            'get'\n        ).then((response: any) => {\n            getAddress(response.data.addresses);\n        }).catch(async (error: any) => {\n            IONICWrapper.details.vault && await IONICWrapper.details.vault.removeValue('AZURE_MAPS_ACCESS_TOKEN');\n        });\n    });\n}\n\n/**\n     * Search list of address based on search address query params.\n     * * @param {string} query string for Azure Maps search.\n     *@param {*} getAddress callback for Azure Maps address search. \n     * @returns null.\n     */\nexport async function searchAddress(query: string, getAddress: any) {\n    await generateAzureMapsBearerToken((bearer_token: any) => {\n        (new HTTP()).__requestRestApi(\n            `https://atlas.microsoft.com/search/address/json?typeahead=true&api-version=1.0&language=en-US&countrySet=US,CA&view=Auto&query=${query}`,\n            {\n                \"x-ms-client-id\": KEYS.AZURE_MAP_CLIENT_ID,\n                \"Authorization\": bearer_token\n            },\n            'get'\n        ).then((response: any) => {\n            getAddress(response.data.results);\n        }).catch(async (error: any) => {\n            IONICWrapper.details.vault && await IONICWrapper.details.vault.removeValue('AZURE_MAPS_ACCESS_TOKEN');\n        });\n    });\n}\n\n/**\n     * Search Timezone By Coordinates.\n     * * @param {string} query string for Azure Maps search.\n     *@param {*} getTimezone callback for Azure Maps Timezone search. \n     * @returns null.\n     */\nexport async function searchTimezoneByCoordinates(query: any, getTimezone: any) {\n    await generateAzureMapsBearerToken((bearer_token: any) => {\n        (new HTTP()).__requestRestApi(\n            `https://atlas.microsoft.com/timezone/byCoordinates/json?api-version=1.0&language=en-US&countrySet=US,CA&view=Auto&query=${query}`,\n            {\n                \"x-ms-client-id\": KEYS.AZURE_MAP_CLIENT_ID,\n                \"Authorization\": bearer_token\n            },\n            'get'\n        ).then((response: any) => {\n            getTimezone(response.data.TimeZones);\n        }).catch(async (error: any) => {\n            IONICWrapper.details.vault && await IONICWrapper.details.vault.removeValue('AZURE_MAPS_ACCESS_TOKEN');\n        });\n    });\n}\n\n\n","import HTTP from './httpServices';\nimport { KEYS } from 'app/utils/constants';\n\n/**\n   * Provide the Geo location (latitude, longitude) from city state name\n     * Google API is used to search the location\n     *@param {*} {string} postal code \n     * @returns geo coordinates (latitude, longitude)\n     */\nexport function getGeoCoderLatLong(cityState: string) {\n    return new Promise(function (resolve: any, reject: any) {\n        (new HTTP()).__requestRestApi(\n            `https://maps.googleapis.com/maps/api/geocode/json?key=${KEYS.GOOGLE_MAPS_API_KEY}&address=${cityState}`,\n            {},\n            'get'\n        ).then((response: any) => {\n            console.log(\"response.data.results[0].geometry.location:::\", response.data.results[0].geometry.location);\n            resolve(response.data.results[0].geometry.location);\n        }).catch((error: any) => {\n            reject(new Error(error));\n        });\n    });\n}\n","import { jsonToGraphQLQuery } from 'json-to-graphql-query';\nimport { Plugins } from '@capacitor/core';\nimport { initiateGPSconfig,\n    getGPSinstance,\n    getCurrentPosition,\n    startGPStracking,\n    getGPStrackingShipmentID,\n    setGPStrackingShipmentID,\n    sendGeoStartTripLocation,\n    setGeofenceSequenceNo,\n    getGeofenceSequenceNo,\n    getLoadDetailsTrackedShipment,\n    setLoadDetailsTrackedShipment} from '../services/gps.service';\nimport { searchCurrentAddress, searchAddress, searchTimezoneByCoordinates } from '../services/azure-maps.service';\nimport { DB_GPS_ACTIVATED_SHIPMENT, AUTH_SESSION_NAME, KEYS, ENV, Roles } from './constants';\nimport { getGeoCoderLatLong } from '../services/google-maps.service';\n\nconst { Storage } = Plugins;\nvar getRole: string;\nvar userRole: any;\nexport interface Type<T> extends Function {\n  new(...args: any[]): T;\n}\n\nexport class DomainConverter {\n\n  static dataToDomain<T>(domain: Type<T>, dto: any) {\n    const __instance = Object.create(domain.prototype);\n    __instance.__carrier_state = dto;\n    return __instance as T;\n  }\n\n  static domainToData<T>(domain: any) {\n    const __rqData: any = { query: `${jsonToGraphQLQuery(domain as T)}` }\n    console.log(__rqData);\n    return JSON.stringify(__rqData);\n  }\n\n  static dataToMutation<T>(domain: any, input: any) {\n    const __rqData: any = { query: `mutation ${jsonToGraphQLQuery(domain as T)}`, variables: { input}}\n    console.log(__rqData);\n    return JSON.stringify(__rqData);\n  }\n}\n\n\n/**\n * To determine the entirleemnt of specified feature.\n* @param {string} _tab Application navigation tab name.\n* @param {string} _item feature of specified tab.\n* @returns {boolean} status of access on the specified feature.\n*/\nexport function isEntitled(_tab: string, _item?: string) {\n  return ((_tab, _item) => {\n    var __roleConfig = IONICWrapper.details.keys && IONICWrapper.details.keys.configuration.roleConfigurations;\n    var tabScreen = \"screen\";\n    if (!IONICWrapper.details.keys) {\n      return;\n    }\n    if (userRole.length == 1 && userRole.includes(Roles.carrierGuest)) {\n      if (_item) {\n        return _item == tabScreen ? getActiveTab(_tab, userRole[0], __roleConfig) : getConfig(_tab, _item, userRole[0], __roleConfig);\n      } else {\n        return true;\n      }\n    } else {\n      var isActive = false;\n      for (var i = 0; i <= userRole.length - 1; i++) {\n        isActive = (_item === tabScreen || !_item) ? getActiveTab(_tab, userRole[i], __roleConfig) : getConfig(_tab, _item, userRole[i], __roleConfig);\n        if (isActive) {\n          break;\n        }\n      }\n      return isActive;\n    }\n  })(_tab, _item)\n}\n\n/**\n * To get the active tab when Application is initiated.\n* @param {string} tab Application navigation tab name.\n* @param {string} role role name.\n* @param {Object} Setting role configuration details.\n* @returns {boolean} status of access on the specified feature.\n*/\nfunction getActiveTab(tab: any, role: any, Setting: any) {\n  return Object.keys(Setting).filter((item:string)=>item.includes(tab) && Setting[item]).map((item:any)=> Setting[item][Object.keys(Setting[item])[0]][role]).some(item => item);\n}\n\n/**\n * To get the specific feature details as per the Role.\n* @param {string} _tab Application navigation tab name.\n* @param {string} _item feature name.\n* @param {string} _role role name.\n* @param {Object} _setting role configuration details.\n* @returns {boolean} status of access on the specified feature.\n*/\nfunction getConfig(_tab: string, _item:string, _role: any, _setting: any) {\n  const __key = _tab +\".\"+(_item && _item.charAt(0).toUpperCase() + _item.slice(1));\n  return _setting[__key][_item][_role];\n}\n\n/**\n * To get the tab name to be landed when Application is launched.\n* @param {string} role role name.\n* @param {Array} userRoles multirole names.\n* @returns {boolean} status of access of specified feature.\n*/\nexport async function getDashboard(role?: any, userRoles?:any) {\n  var _tabName = \"\";\n  var _tabActive = false;\n  enum Tab_Types {home, search, myLoad, manage, more};\n  const _roleSetting = IONICWrapper.details.keys.configuration.roleConfigurations;\n\n  if (!_roleSetting) {\n    return\n  }\n  userRole = userRoles;\n  if (role) {\n    getRole = role;\n  }\n\n  for (var i = 0; i <= Object.keys(Tab_Types).length; i++) {\n    _tabActive = getActiveTab(Tab_Types[i], getRole, _roleSetting);\n    if (_tabActive) {\n      _tabName = Tab_Types[i];\n      break;\n    }\n  }\n  return _tabName;\n}\n\n/**\n* To get authentication information and storage API.\n*/\nexport class IONICWrapper {\n  private _appVault: any;\n  private _appAuth: any;\n  private _appKeys: any;\n  private _getValue:any = {};\n  public static accessToken: any;\n  private static instance: IONICWrapper;\n  static get details(): IONICWrapper {\n    if (!IONICWrapper.instance) {\n      IONICWrapper.instance = new IONICWrapper();\n    }\n    return IONICWrapper.instance;\n  }\n\n  /**\n   * To get authentication information.\n   * @returns {object} consolidated token and user info list.\n   */\n  get auth() {\n    return this._appAuth;\n  }\n\n  get keys() {\n    return this._appKeys;\n  }\n  get getValue() {\n    return this._getValue;\n  }\n  /**\n * To get authentication information.\n * @returns {object} gives storeValue and getValue methods to for storing in Vault.\n */\n  get vault() {\n    return this._appVault;\n  }\n  getVault(vault?: any) {\n    this._appVault = vault || {};\n  }\n  getAuth(auth?: any) {\n    this._appAuth = auth || {};\n  }\n  getKeys(key?: any) {\n    this._appKeys = key || {};\n  }\n\n  set setValue(value: any) {\n    this._getValue = value || {};\n  }\n}\n\n\nexport async function setObject(_keyName: string, _obj: any) {\n  await Storage.set({\n    key: _keyName,\n    value: JSON.stringify(_obj)\n  });\n}\n\nexport async function getObject(_keyName: string) {\n  const _ret: any = await Storage.get({ key: _keyName });\n  return _ret.value && JSON.parse(_ret.value);\n}\n\nexport async function setItem(_key: any, _value: any) {\n  await Storage.set({\n    key: _key,\n    value: _value\n  });\n}\n\nexport async function getItem(_keyName: string) {\n  const _value = await Storage.get({ key: _keyName });\n  return _value;\n}\n\nexport async function removeItem(_keyName: string) {\n  await Storage.remove({ key: _keyName });\n}\n\nexport async function keys() {\n  const _keys = await Storage.keys();\n  return _keys;\n}\n\nexport async function clear() {\n  await Storage.clear();\n}\n/**\n   * method to check if session is active or not. if not, user will be redirected to landing screen.\n   * * @param\n   * @returns GPSWrapper boolean.\n   */\nexport async function isAuthExpired() {\n  const _expiresAt = await getObject(AUTH_SESSION_NAME);\n  const _currentTme = Math.floor(new Date().getTime());\n  const isExpired:any = (Math.floor(_currentTme - _expiresAt)/1000) > 3600;\n  return isExpired;\n}\n\nexport class GPSWrapper {\n\n  private static instance: GPSWrapper;\n\n  /**\n     * singleton design pattern is used to restricts the instantiation of a class to one \"single\" instance.\n     * * @param\n     * @returns GPSWrapper object.\n     */\n  static get details(): GPSWrapper {\n    if (!GPSWrapper.instance) {\n      GPSWrapper.instance = new GPSWrapper();\n    }\n    return GPSWrapper.instance;\n  }\n\n  /**\n     * This is a wrapper method of initiateGPSconfig.\n     * initiateGPSconfig method initialize the BackgroundGeolocation plugin Configuration.\n     * The Basic Configuration properlies are set. \n     * Rest of the custom properlies will be set as per need basis  \n     * * @param\n     * @returns null.\n     */\n  initiateGPSconfig() {\n    initiateGPSconfig();\n  }\n\n  /**\n     * This is a wrapper method of getCurrentPosition.\n     * getCurrentPosition method provides the current location latitude and longitude\n     * * @param {*} get CurrentGPS callback to process the current location lat, long.\n     * @returns null.\n     */\n  getCurrentPosition(getCurrentGPS: any) {\n    getCurrentPosition(getCurrentGPS);\n  }\n\n  /**\n     *  This is a wrapper method of startGPStracking.\n     * startGPStracking method will start the GPS tracking as well as geofence tracking.\n     * * @param shipmentDetails to strat the GPS tracking as well as geofence\n     *  i.g. activity,shipmentId, carrierScac, userId, sourceSystem\n     * @returns null.\n     */\n  startGPStracking(shipmentDetails: any) {\n    startGPStracking(shipmentDetails);\n\n  }\n\n  /**\n     *  This This is a wrapper method of sendGeoStartTripLocation\n     * * @param shipmentDetails to send the Geo Start Trip Location\n     *  i.g. activity,shipmentId, carrierScac, userId, sourceSystem\n     * @returns null.\n     */\n  sendGeoStartTripLocation(shipmentDetails: any) {\n    sendGeoStartTripLocation(shipmentDetails);\n\n  }\n\n  /**\n       * It will stop the GPS tracking as well as geofence tracking.\n       * remove all the GPS tracking data which are stored in local DB.\n       * * @param\n       * @returns null.\n       */\n  stopGPS() {\n    getGPSinstance().stop(async function () {\n      console.log(\"- stop success\");\n      setGPStrackingShipmentID(null);\n      await removeItem(DB_GPS_ACTIVATED_SHIPMENT);\n    });\n    getGPSinstance().removeGeofences();   //Destroy all [[Geofence]].\n    getGPSinstance().destroyLocations();  //Remove all records in SDK's SQLite database.\n    // getGPSinstance().reset(); //Resets the plugin configuration to documented default-values.\n  }\n\n  /**\n     * This is a wrapper method of setGPStrackingShipmentID.\n     * setGPStrackingShipmentID method will provide the GPS tracking enabled Shipment ID\n     * * @param\n     * @returns GPS_Tracking_ShipmentID.\n     */\n  getGPStrackingShipmentID() {\n    return getGPStrackingShipmentID();\n  }\n\n  getLoadDetailsTrackedShipment() {\n    return getLoadDetailsTrackedShipment();\n  }\n\n  async getState(){\n    return await getGPSinstance().getState();\n  }\n\n  /**\n     * This is a wrapper method of setGPStrackingShipmentID.\n     * setGPStrackingShipmentID set the GPS tracking enabled Shipment ID\n     * * @param GPS_Tracking_ShipmentID\n     * @returns null.\n     */\n  setGPStrackingShipmentID(shipmentID: any) {\n    setGPStrackingShipmentID(shipmentID);\n  }\n\n  setLoadDetailsTrackedShipment(loadDetailsRefreshedShipment: any){\n    setLoadDetailsTrackedShipment(loadDetailsRefreshedShipment);\n  }\n\n  /**\n       * This is a wrapper method of getGeofenceSequenceNo.\n       * getGeofenceSequenceNo method will GeofenceSequenceNo\n       * * @param\n       * @returns GeofenceSequenceNo.\n       */\n  getGeofenceSequenceNo() {\n    return getGeofenceSequenceNo();\n  }\n\n  /**\n     * This is a wrapper method of setGeofenceSequenceNo.\n     * setGeofenceSequenceNo set the GeofenceSequenceNo value\n     * * @param sequenceNo\n     * @returns null.\n     */\n  setGeofenceSequenceNo(sequenceNo: any) {\n    setGeofenceSequenceNo(sequenceNo);\n  }\n}\n\n/**\n     * R2Configuration is a singleton Class\n     * used to set and get the R2ConfigurationFlag.\n     * \n     */\nexport class R2Configuration {\n\n  private static instance: R2Configuration;\n  private static R2ConfigurationFlag: boolean = true;\n\n  /**\n     * singleton design pattern is used to restricts the instantiation of a class to one \"single\" instance.\n     * * @param\n     * @returns R2Configuration object.\n     */\n  static get details(): R2Configuration {\n    if (!R2Configuration.instance) {\n      R2Configuration.instance = new R2Configuration();\n      R2Configuration.R2ConfigurationFlag = (KEYS.RELEASE === ENV.UAT || KEYS.RELEASE === ENV.PROD) ? true : false;\n    }\n    return R2Configuration.instance;\n  }\n\n  /**\n     * This method is used to set the R2ConfigurationFlag.\n     * * @param {*} flag.\n     * @returns null.\n     */\n  setR2FeatureEnable(flag: boolean) {\n    R2Configuration.R2ConfigurationFlag = flag;\n  }\n\n  /**\n     * This method is used to get the R2ConfigurationFlag.\n     * * @param\n     * @returns R2ConfigurationFlag.\n     */\n  getR2FeatureEnable() {\n    return R2Configuration.R2ConfigurationFlag;\n  }\n}\n\nexport class AzureMapsWrapper {\n\n  private static instance: AzureMapsWrapper;\n  static get details(): AzureMapsWrapper {\n    if (!AzureMapsWrapper.instance) {\n      AzureMapsWrapper.instance = new AzureMapsWrapper();\n    }\n    return AzureMapsWrapper.instance;\n  }\n\n  async searchCurrentAddress(query: any, getAddress: any) {\n    return (await searchCurrentAddress(query, getAddress));\n  }\n\n  async searchAddress(query: any, getAddress: any) {\n    return (await searchAddress(query, getAddress));\n  }\n\n  async searchTimezoneByCoordinates(query: any, getTimezone: any) {\n    return (await searchTimezoneByCoordinates(query, getTimezone));\n  }\n}\n\nexport class GoogleMapsWrapper {\n\n  private static instance: GoogleMapsWrapper;\n  static get details(): GoogleMapsWrapper {\n    if (!GoogleMapsWrapper.instance) {\n      GoogleMapsWrapper.instance = new GoogleMapsWrapper();\n    }\n    return GoogleMapsWrapper.instance;\n  }\n\n  /**\n   * This is a wrapper method of getGeoCoderLatLong.\n   * Provide the Geo location (latitude, longitude) from city State name.\n     * Google API is used to search the location\n     *@param {*} {string} postal code \n     * @returns geo coordinates (latitude, longitude)\n     */\n  async getGeoCoderLatLong(cityState: string) {\n    return (await getGeoCoderLatLong(cityState));\n  }\n}","import * as Constants from \"../../utils/constants\";\n\nexport const setSessionInfo = (payload:any) => ({\n  type: Constants.SESSION_INFO,\n  payload\n});\n\nexport const updateGpsCoordinates = (data: any) => ({\n  type: Constants.UPDATE_GPS_COORDS,\n  payload: data\n});\n\nexport const GetRecent = (data: any) => {\n  return {\n    type: Constants.GET_RECENT,\n    payload: data\n  };\n};\nexport function fetchUserDetails(data: any) {\n  return {\n    type: Constants.FETCH_USER_DETAILS,\n    payload: data\n  };\n}\n\nexport function fetchUserDetailsSuccess(data: any) {\n  return {\n    type: Constants.FETCH_USER_DETAILS_SUCCESS,\n    payload: data\n  };\n}\n\nexport function fetchUserDetailFailed(data: any) {\n  return {\n    type: Constants.FETCH_USER_DETAILS_FAILED,\n    payload: data\n  };\n}\n\nexport function registerDeviceToken(data: any) {\n  return {\n    type: Constants.REGISTER_DEVICE_ACTION,\n    payload: data\n  };\n}\n\nexport function registerDeviceResponseAction(data: any) {\n  return {\n    type: Constants.REGISTER_DEVICE_RESPONSE_ACTION,\n    payload: data\n  };\n}\n\nexport const showAlert = (data: any) => {\n  return {\n    type: Constants.SHOW_ALERT_MESSAGE,\n    payload: data\n  };\n};\nexport const hideAlert = () => ({\n  type: Constants.HIDE_ALERT_MESSAGE,\n});\n\nexport const getMoreTabContent = (data: any) => ({\n  type: Constants.GET_MORE_TAB_CONTENT,\n  payload: data\n});\n\nexport const moreTabContentResponse = (result: any) => ({\n  type: Constants.MORE_TAB_CONTENT_RESPONSE,\n  payload: result\n});\n\nexport const moreTabContentResponseDummy = (result: any) => ({\n  type: Constants.MORE_TAB_CONTENT_RESPONSE_DUMMY,\n  payload: result\n});\n\nexport const showNetworkAlert = () => {\n  return showAlert({\n    isShowAlert: true,\n    alertMessage: Constants.PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n    alertTitle: Constants.NO_NEWORK,\n  });\n};\n\nexport const initializeOfflineModule = (userId: any) => ({\n    type: Constants.OFFLINE_MODE_START,\n    payload: userId\n})\n\nexport const createOfflineJSON = (data: any) => ({\n  type: Constants.CREATE_OFFLINE_JSON,\n  payload: data\n})\n\nexport const getConfigParams = (data: any) => ({\n  type: Constants.GET_CONFIG_PARAMS,\n  payload: data\n})\n\nexport const updateOfflineContent = (data: any) => ({\n  type: Constants.UPDATE_OFFLINE_CONTENT,\n  payload: data\n})\n\nexport const findSearchData = (data: any) => ({\n  type: Constants.FIND_SEARCH_DATA,\n  payload: data\n})\n\nexport const findShipmentInfo = (data: any) => ({\n  type: Constants.FIND_SHIPMENT_INFO,\n  payload: data\n})\n\nexport const updateSearchParamsInOfflineJSON = (data: any) => ({\n  type: Constants.UPDATE_SEARCH_PARAMS_OFFLINE,\n  payload: data\n})\n\nexport const updateShipmentInfoInOfflineJSON = (data: any) => ({\n  type: Constants.UPDATE_SHIPMENT_INFO_OFFLINE,\n  payload: data\n})\n\nexport const updatePullToRefreshState= (data: any) => {\n  return {\n    type: Constants.UPDATE_PULL_TO_REFRESH_STATE,\n    payload: data\n  }\n}\n\nexport const storeAccessToken = (data:any) => ({\n  type: Constants.STORE_ACCESS_TOKEN,\n  payload: data\n})\nexport const registerUser = (payload: any) => ({\n  type: Constants.REGISTER_USER,\n  payload\n});\n\nexport const registerUserStatusMessage = (payload: any) => ({\n  type: Constants.REGISTER_USER_STATUS_MESSAGE,\n  payload\n});\n\nexport const clearRegisterUserStatusMessage = () => ({\n  type:\n    Constants.CLEAR_REGISTER_USER_STATUS_MESSAGE,\n});\n","import { Plugins } from '@capacitor/core';\nimport { FUNCTIONALITY_COMMING_SOON } from '../utils/constants';\nimport { toastController, ToastOptions } from '@ionic/core';\nimport { isPlatform } from '@ionic/react';\nconst { Toast } = Plugins;\nenum Position {\n  TOP = 'top',\n  BOTTOM = 'bottom',\n  CENTER = 'center',\n}\n\n/* Show toast Message */\nexport class ToastMessage {\n  static show = async (\n    message: string = FUNCTIONALITY_COMMING_SOON,\n    position: string = Position.BOTTOM,\n    duration: number = 3000\n  ) => {\n    const toast = await toastController.create({\n      color: 'dark',\n      duration: duration,\n      message: message,\n      position: 'bottom',\n      mode: 'ios',\n      cssClass: 'toaster-message',\n    });\n    await toast.present();\n  };\n\n  static open = async ({...args}) => {\n    let options: ToastOptions = {\n      color: 'dark',\n      duration: args.duration || 3000,\n      message: args.message,\n      position: 'bottom',\n      mode: 'ios',\n      cssClass: 'toaster-message',\n    };\n    if(args.showUndo) {\n      options = {\n        ...options,\n        buttons: [\n          {\n            text: args.btnTitle || 'Undo',\n            cssClass: 'toast-message-btn',\n            handler: () => args.callback()\n          }\n        ]\n      }\n    }\n\n    const toast = await toastController.create(options);\n    await toast.present();\n  }\n}\n","const responseParams = {\n  userPrincipalName: true,\n  firstName: true,\n  lastName: true,\n  companyName: true,\n  email: true,\n  liablePartyId: true,\n  liablePartyName: true,\n  lastSelectedCustomer: true,\n  lastSelectedCarrier: true,\n  carrier: true,\n  carrierId: true,\n  tractorNumber: true,\n  internalUser: true,\n  customer: true,\n  carrierTier: true,\n  carrierScac: true,\n  registered: true,\n  image: true,\n  address: {\n    addressLine1: true,\n    addressLine2: true,\n    addressType: true,\n    city: true,\n    state: true,\n    postalCode: true\n  },\n  phone: {\n    number: true,\n    type: true\n  },\n  mobileNumber: true,\n  userApplicationDetails: {\n    roles: {\n      roleId: true,\n      roleName: true\n    }\n  },\n  updatedTimeStamp: true\n};\n\nexport class UserDetails {\n  /**\n   *\n   * @param carrierId\n   * @param role\n   */\n  getUsers(carrierId: string, role: string) {\n    return {\n      query: {\n        getMembers: {\n          __args: {\n            input: {\n              carrierId,\n              role\n            }\n          },\n          ...responseParams\n        }\n      }\n    };\n  }\n\n  /**\n   *\n   * @param userPrincipalName\n   */\n  getRequestPayload(userPrincipalName: string) {\n    return {\n      query: {\n        getUserDetails: {\n          __args: {\n            userPrincipalName\n          },\n          ...responseParams\n        }\n      }\n    };\n  }\n\n  /**\n   * Validate User Funcion return query format\n   * @param userPrincipalName\n   */\n  validateUser(userPrincipalName: string) {\n    return {\n      query: {\n        validateUser: {\n          __args: {\n            userPrincipalName\n          },\n          ...responseParams\n        }\n      }\n    };\n  }\n\n  /**\n   * Transfer User Funcion return query format\n   * @param userPrincipalName\n   */\n  transferMember(input: any) {\n    return {\n      mutation: {\n        transferMember: {\n          __args: {\n            input\n          },\n          status: true,\n          message: true\n        }\n      }\n    };\n  }\n\n  /**\n   * Confirm Transfer User Funcion return query format\n   * @param userPrincipalName\n   */\n  confirmTransfer(input: any) {\n    return {\n      mutation: {\n        confirmTransfer: {\n          __args: {\n            input\n          },\n          status: true,\n          message: true\n        }\n      }\n    };\n  }\n\n  /**\n   * Add User Funcion return query format\n   * @param userPrincipalName\n   */\n  addUser(input: any) {\n    return {\n      mutation: {\n        addMember: {\n          __args: {\n            input\n          },\n          message: true,\n          status: true,\n          member: responseParams\n        }\n      }\n    };\n  }\n\n  /**\n   * Add User Funcion return query format\n   * @param userPrincipalName\n   */\n  updateMember(input: any) {\n    return {\n      mutation: {\n        updateMember: {\n          __args: {\n            input\n          },\n          message: true,\n          status: true,\n          member: responseParams\n        }\n      }\n    };\n  }\n\n  /**\n   * regiter User Funcion return query format\n   * @param userDetils\n   */\n  registerMember(input:any) {\n    return {\n      mutation: {\n        registerMember: {\n          __args: {\n            input\n          },\n          status: true,\n          message: true,\n          member: responseParams\n        }\n      }\n    };\n  }\n}\n","import { observable, autorun, runInAction, action } from 'mobx';\nimport { IonicAuth, AuthResult } from '@ionic-enterprise/auth';\nimport { isPlatform } from '@ionic/react';\nimport { nativeAzureConfig, webAzureConfig } from './environment';\nimport { VaultService } from './vault.service';\nimport { User, IDToken } from '../schemas/user';\nimport { KEYS, Roles, NO_AUTH_MSG} from '../utils/constants';\nimport { getDashboard, IONICWrapper, setObject, getObject, clear } from '../utils/common';\nimport Environment from '../environments/environment';\nimport { store } from '../store';\nimport { toastController } from \"@ionic/core\";\nimport { fetchUserDetails } from '../actions/App/action';\nimport { UserDetails } from '../models/userPforile/userProfile.modal';\nimport { AuthMode } from '@ionic-enterprise/identity-vault';\nimport { ToastMessage } from '../utils/ToastMessage';\n\n\nexport class AuthenticationService extends IonicAuth<IDToken> {\n  private vaultService: VaultService;\n\n  /** Access token exists and the vault is unlocked. */\n  @observable public isLoggedIn: boolean;\n  @observable public user?: User;\n  @observable public accessToken?: string;\n  public tabName?: string;\n  public isActive:boolean;\n  onVaultLockChange: () => void;\n  constructor(vaultService: VaultService) {\n    const config = isPlatform('capacitor') ? nativeAzureConfig : webAzureConfig;\n    vaultService.setAuthMode(AuthMode.SecureStorage);\n    config.tokenStorageProvider = vaultService;\n    super(config);\n    this.vaultService = vaultService;\n    this.isLoggedIn = false;\n    this.tabName = 'login';\n    this.isActive = false;\n    this.onVaultLockChange = autorun(() => { this.setLoginState(this.vaultService.isLocked); });\n  }\n\n  async login(): Promise<void> {\n    await this.vaultService.logout();\n    // await this.vaultService.setDesiredAuthMode();\n\n    try {\n      await super.login(KEYS.DISCOVERY_URL);\n    } catch (err) {\n      // This is to handle the password reset case for Azure AD\n      //  This only applicable to Azure AD.\n      \n      const message: string = err.message;\n\n      if (message !== undefined && !message.startsWith('AADB2C90118')) {\n        await ToastMessage.show(NO_AUTH_MSG);\n      }\n       console.log('login error:', +err);\n      \n      // This is the error code returned by the Azure AD servers on failure.\n      if (message !== undefined && message.startsWith('AADB2C90118')) {\n        // The address you pass back is the custom user flow (policy) endpoint\n        super.login(KEYS.AZURE_RESET_URL).catch((err:any) =>{\n          if (err.message !== undefined && err.message.startsWith('AADB2C90091')) {\n            this.login();\n          }\n        });\n      } else {\n        await ToastMessage.show(NO_AUTH_MSG);\n      }\n    }\n  }\n\n  async changePassword(): Promise<void> {\n    try {\n      await super.login(KEYS.AZURE_RESET_URL).catch((err:any) =>{\n      });;\n    } catch (err) {\n    }\n  }\n\n/**\n  * To fetch data from the Web Service API.\n  * @param {Array} role collection of role Names.\n  * @returns {string} selected Role.\n  */\n  getRole(role:Array<string>){\n    enum Role_Type {carrierDispatcher, carrierDriver, carrierAdmin};\n    let __role:string= \"\";\n    if(role.length === 1){\n      return role[0];\n    }\n    for(var i=0; i <= Object.keys(Role_Type).length;i++){\n      if(role.includes(Role_Type[i])){\n        __role = Role_Type[i];\n        break;\n      }\n    }\n    return __role;\n  }\n\n  /**\n  * method to check if session is active or not. if not user will be redirected to landing screen.\n  * @param {boolean} tabSession flag for avoiding rerendering.\n  * @param {any} setSession to invalidate the flag.\n  */\n  async hasSession(tabSession: boolean, setSession: any) {\n    if (tabSession) {\n      setSession(false);\n      if (!this.isActive) {\n        \n        const isSessionActive = await this.isAuthenticated();\n\n        if (!isSessionActive) {\n            this.isLoggedIn = false;\n        }\n      }\n      this.isActive = false;\n    }\n  }\n\n  async isAuthenticated(): Promise<boolean> {\n    const isVaultLocked = await this.vaultService.isLocked;\n    return !isVaultLocked && (await super.isAuthenticated());\n  }\n\n  async setLoginState(isLocked: boolean, authResult: AuthResult = {}) {\n    if (isLocked) {\n      this.isLoggedIn = false;\n      return\n    }\n \n    this.isActive = true;\n\n    const { accessToken } = authResult;\n\n    // swallow vault errors\n    try {\n      const [hasSession, idTokenInfo, accessTokenString] = await Promise.all([\n        this.vaultService.hasStoredSession(),\n        this.getIdToken(),\n        accessToken ? Promise.resolve(accessToken) : this.getAccessToken()\n      ]) as [boolean, IDToken, string] // https://github.com/microsoft/TypeScript/issues/33752;\n\n      await(new Environment(((process.env.REACT_APP_ENV && process.env.REACT_APP_ENV.trim()) || 'dev') as any)).getConfig(IONICWrapper.details, this.vaultService, KEYS.SUBSCRIPTION_KEY,(await this.getAuthResponse()).id_token, KEYS.API_HOST);\n      if (this.tabName === 'login') {\n        var manage: any = await this.getIdToken();\n        this.tabName = await getDashboard(\n          manage.roles ? this.getRole(manage.roles) : Roles.carrierGuest\n          , manage.roles);\n      }\n     \n      IONICWrapper.details.getVault(await this.vaultService.getVault());\n\n      IONICWrapper.accessToken = accessTokenString;\n      IONICWrapper.details.getAuth({\n        tokens: await this.getAuthResponse(),\n        user: await this.getIdToken(),\n      });\n\n      // batch state updates\n      runInAction(() => {\n        this.vaultService.hasSessionStored = hasSession;\n        this.user = this.getUserInfo(idTokenInfo);\n        this.accessToken = accessTokenString;\n        this.isLoggedIn = true;\n        // getApplicationInfo().then(session => {\n        //   store.dispatch(setSessionInfo({session}))\n        // })\n      });\n      this.getUserDetails();\n    } catch (err) {}\n  }\n\n  async onLoginSuccess(authResult: AuthResult) {\n    // we pass isLocked as false, since we have access to all tokens in memory\n    this.setLoginState(false, authResult);\n  }\n\n  @action\n  async onLogout() {\n    this.isLoggedIn = false;\n    this.user = undefined;\n    this.accessToken = undefined;\n    this.vaultService.logout();\n    this.vaultService.hasSessionStored = false;\n    await clear();\n    this.tabName = 'login';\n  }\n\n  private getUserInfo(idToken?: IDToken): User | undefined {\n    if (!idToken) return;\n\n    let email = idToken.email;\n    if (idToken.emails instanceof Array) {\n      email = idToken.emails[0];\n    }\n\n    return {\n      id: idToken.sub,\n      email: email!, // one or the other will exist\n      firstName: idToken.firstName,\n      lastName: idToken.lastName,\n    };\n  }\n  private getUserDetails(){\n    const userDetails = new UserDetails();\n    const token = (IONICWrapper.details.auth &&\n    IONICWrapper.details.auth.tokens.access_token) ||\n  \"\";\n  const data = userDetails.getRequestPayload(\n    IONICWrapper.details.auth && IONICWrapper.details.auth.user.upn\n  )\n    store.dispatch(fetchUserDetails({ token: token, body: data }))\n  }\n}\n\n/**\n  * class to share the authentication instance to other modules to consumes the its features.\n*/\nexport class AuthSingleton {\n  private static instance: AuthenticationService | undefined = undefined;\n  private static vault: VaultService | any = undefined;\n  static getInstance(vaultService?:VaultService): AuthenticationService {\n    this.vault = vaultService;\n     if (this.instance === undefined)\n        this.instance = new AuthenticationService(this.vault);\n        return this.instance;\n  }\n} \n","import {\n  AuthMode,\n  DefaultSession,\n  IonicIdentityVaultUser,\n  IonicNativeAuthPlugin,\n  BiometricType,\n  VaultConfig\n} from '@ionic-enterprise/identity-vault';\nimport { observable, action, runInAction, when } from 'mobx';\nimport { isPlatform } from '@ionic/react';\nimport { BrowserAuthPlugin } from '../services/browser-auth.plugin';\n\nexport enum PinMode {\n  Dismiss = 0,\n  New = 2,\n  Unlock = 3,\n  Verify = 4\n}\n\nexport class VaultService extends IonicIdentityVaultUser<DefaultSession> {\n  @observable public authMode = AuthMode.InMemoryOnly;\n  @observable public biometricType?: BiometricType;\n  @observable public biometricsEnabled = false\n  @observable public secureStorageEnabled = false;\n  @observable public passcodeEnabled = false;\n  @observable public hasSessionStored = false;\n  @observable public pinMode = PinMode.Dismiss;\n  @observable public pin = '';\n  @observable public isLocked = true;\n\n  constructor(private browserAuthPlugin?: BrowserAuthPlugin) {\n    super({ ready: () => Promise.resolve() }, {\n      restoreSessionOnReady: false,\n      unlockOnReady: false,\n      unlockOnAccess: true,\n      lockAfter: 0,\n      hideScreenOnBackground: false\n    });\n    //this.getBiometricType().then(biometricType => this.biometricType = biometricType);\n    this.hasStoredSession().then(storedSession => this.hasSessionStored = storedSession);\n    this.getVault().then(vault => vault.isLocked()).then(isLocked => this.isLocked = isLocked);\n  }\n\n  @action\n  onConfigChange(config: VaultConfig) {\n    if (config.authMode !== undefined) {\n      switch(config.authMode) {\n        case AuthMode.BiometricAndPasscode:\n        case AuthMode.BiometricOrPasscode:\n          this.setAuthModeState(true, true, false); break;\n        case AuthMode.BiometricOnly:\n          this.setAuthModeState(true, false, false); break;\n        case AuthMode.InMemoryOnly:\n          this.setAuthModeState(false, false, false); break;\n        case AuthMode.PasscodeOnly:\n          this.setAuthModeState(false, true, false); break;\n        case AuthMode.SecureStorage:\n          this.setAuthModeState(false, false, true); break;\n      }\n      this.authMode = config.authMode;\n    }\n  }\n\n  private setAuthModeState(biometricsEnabled: boolean, passcodeEnabled: boolean, secureStorageEnabled: boolean) {\n    this.biometricsEnabled = biometricsEnabled;\n    this.passcodeEnabled = passcodeEnabled;\n    this.secureStorageEnabled = secureStorageEnabled;\n  }\n\n  async onPasscodeRequest(isPasscodeSetRequest: boolean): Promise<string> {\n    if (isPasscodeSetRequest) {\n      this.pinMode = PinMode.New;\n    } else {\n      this.pinMode = PinMode.Unlock;\n    }\n    await when(() => this.pinMode === PinMode.Dismiss);\n    const data = this.pin;\n    this.pin = '';\n    return data;\n  }\n\n\n  // there are no callbacks for storing/removing sessions, so we update stored session state here\n  async onVaultUnlocked() {\n    const hasSessionStored = await this.hasStoredSession();//\n    runInAction(() => {\n      this.isLocked = false;\n      this.hasSessionStored = hasSessionStored;\n    })\n  }\n\n  async onVaultLocked() {\n    const hasSessionStored = await this.hasStoredSession();\n    runInAction(() => {\n      this.isLocked = true;\n      this.hasSessionStored = hasSessionStored;\n    })\n  }\n\n  getPlugin(): IonicNativeAuthPlugin {\n    if (isPlatform(\"capacitor\")) {\n      return super.getPlugin();\n    }\n    return this.browserAuthPlugin!;\n  }\n}\n","import React from 'react';\nimport { AuthenticationService } from '../services/authentication.service';\n\nexport const AuthContext = React.createContext<AuthenticationService | undefined>(undefined);\n\nexport const AuthConsumer = AuthContext.Consumer;\n\nexport const AuthProvider: React.FC<{value: AuthenticationService}> = (props) => {\n  return <AuthContext.Provider value={props.value}>{props.children}</AuthContext.Provider>;\n}\n\nexport function useAuthService() {\n  const context = React.useContext(AuthContext)\n  if (context === undefined) {\n    throw new Error('useAuthService must be used within an AuthProvider');\n  }\n  return context;\n}\n","import React from 'react';\nimport { VaultService } from '../services/vault.service';\n\n\nexport const VaultContext = React.createContext<VaultService | undefined>(undefined);\n\nexport const VaultConsumer = VaultContext.Consumer;\n\nexport const VaultProvider: React.FC<{value: VaultService}> = (props) => {\n  return <VaultContext.Provider value={props.value}>{props.children}</VaultContext.Provider>;\n}\n\nexport function useVaultService() {\n  const context = React.useContext(VaultContext);\n  if (context === undefined) {\n    throw new Error('useVaultService must be used within a VaultProvider')\n  }\n  return context;\n}\n\n","import {\n  IdentityVault, PluginOptions,\n  IonicNativeAuthPlugin\n} from '@ionic-enterprise/identity-vault';\nimport { BrowserAuthService } from '../services/browser-auth.service';\n\nexport class BrowserAuthPlugin implements IonicNativeAuthPlugin {\n  constructor(private browserAuthService: BrowserAuthService) {}\n\n  getVault(config: PluginOptions): IdentityVault {\n    config.onReady && config.onReady(this.browserAuthService);\n    return this.browserAuthService;\n  }\n}\n","import { Plugins } from '@capacitor/core';\nimport {\n  BiometricType,\n  IdentityVault,\n  PluginConfiguration,\n  AuthMode,\n  SupportedBiometricType\n} from '@ionic-enterprise/identity-vault';\n\nconst { Storage } = Plugins;\n\nexport class BrowserAuthService implements IdentityVault {\n  config = {\n    authMode: AuthMode.InMemoryOnly,\n    descriptor: {\n      username: '',\n      vaultId: ''\n    },\n    isBiometricsEnabled: false,\n    isPasscodeEnabled: false,\n    isPasscodeSetupNeeded: false,\n    isSecureStorageModeEnabled: true,\n    hideScreenOnBackground: false,\n    lockAfter: 50000\n  };\n\n  unsubscribe(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  async isLockedOutOfBiometrics(): Promise<boolean> {\n    return false;\n  }\n\n  async getAvailableHardware(): Promise<Array<SupportedBiometricType>> {\n    return [];\n  }\n\n  clear(): Promise<void> {\n    return Storage.clear();\n  }\n\n  lock(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  isLocked(): Promise<boolean> {\n    return Promise.resolve(false);\n  }\n\n  async isInUse(): Promise<boolean> {\n    const { value } = await Storage.get({ key: 'session' });\n    return !!value;\n  }\n\n  getConfig(): Promise<PluginConfiguration> {\n    return Promise.resolve(this.config);\n  }\n\n  remainingAttempts(): Promise<number> {\n    return Promise.resolve(5);\n  }\n\n  getUsername(): Promise<string> {\n    return Promise.resolve('MyUsername');\n  }\n\n  storeToken(token: any): Promise<void> {\n    return Promise.resolve();\n  }\n\n  getToken(): Promise<any> {\n    return Promise.resolve('MyToken');\n  }\n\n  async storeValue(key: string, value: any): Promise<void> {\n    await Storage.set({ key, value: JSON.stringify(value) });\n  }\n\n  async getValue(key: string): Promise<any> {\n    const { value } = await Storage.get({ key });\n    return value && JSON.parse(value);\n  }\n\n  async removeValue(key: string): Promise<void> {\n    await Storage.remove({ key });\n  }\n\n  async getKeys(): Promise<Array<string>> {\n    const { keys } = await Storage.keys();\n    return keys;\n  }\n\n  getBiometricType(): Promise<BiometricType> {\n    const none: BiometricType = 'none';\n    return Promise.resolve(none);\n  }\n\n  setBiometricsEnabled(isBiometricsEnabled: boolean): Promise<void> {\n    return Promise.resolve();\n  }\n\n  isBiometricsEnabled(): Promise<boolean> {\n    return Promise.resolve(false);\n  }\n\n  isBiometricsAvailable(): Promise<boolean> {\n    return Promise.resolve(false);\n  }\n\n  isBiometricsSupported(): Promise<boolean> {\n    return Promise.resolve(false);\n  }\n\n  isPasscodeSetupNeeded(): Promise<boolean> {\n    return Promise.resolve(false);\n  }\n\n  setPasscode(passcode?: string): Promise<void> {\n    return Promise.resolve();\n  }\n\n  isPasscodeEnabled(): Promise<boolean> {\n    return Promise.resolve(false);\n  }\n\n  isSecureStorageModeEnabled(): Promise<boolean> {\n    return Promise.resolve(true);\n  }\n\n  setPasscodeEnabled(isPasscodeEnabled: boolean): Promise<void> {\n    return Promise.resolve();\n  }\n\n  setSecureStorageModeEnabled(enabled: boolean): Promise<void> {\n    return Promise.resolve();\n  }\n\n  unlock(usingPasscode?: boolean, passcode?: string): Promise<void> {\n    return Promise.resolve();\n  }\n}\n\nexport const browserAuthService = new BrowserAuthService();\n","import React, { Component } from 'react';\nimport {\n  IonContent,\n  IonList,\n  IonPage,\n  IonInput,\n  IonButton,\n  IonItem,\n  IonLabel,\n  IonRow,\n  IonCol,\n  IonToggle,\n  IonImg,\n  IonIcon\n} from '@ionic/react';\nimport PropTypes from 'prop-types';\nimport './Login.page.scss';\n\nconst props = {\n  userData: PropTypes.any,\n  loading: PropTypes.bool,\n  loginError: PropTypes.bool,\n  handleSubmit: PropTypes.func.isRequired\n};\n\ntype propTypes = PropTypes.InferProps<typeof props>;\n\nclass LoginPage extends Component<propTypes> {\n  state = {\n    username: '',\n    password: '',\n    rememberme: false,\n    hidden: true\n  };\n\n  constructor(props: any) {\n    super(props);\n    window.addEventListener('keyboardWillShow', this.keyboardshowHandler);\n    window.addEventListener('keyboardWillHide', this.keyboardhideHandler);\n  }\n\n  componentDidMount() {\n    if (!this.props.userData || !this.props.userData.rememberme) {\n      return;\n    }\n    this.setState((state, props) => ({\n      username: props.userData.username,\n      password: props.userData.password,\n      rememberme: props.userData.rememberme\n    }));\n  }\n\n  handleChange = (event: any) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n    if (this.state.username && this.state.password.length > 2) {\n      this.setState({ rememberme: true });\n    } else {\n      this.setState({ rememberme: false });\n    }\n  };\n\n  onRememberMe = (event: any) => {\n    const { name, checked } = event.target;\n    this.setState({\n      [name]: checked\n    });\n  };\n\n  handleSubmit = (event: any) => {\n    event.preventDefault();\n    const { username, password, rememberme } = this.state;\n    this.props.handleSubmit(username, password, rememberme);\n  };\n\n  keyboardshowHandler = () => {\n    const headerDiv = document.getElementsByClassName('login_logo_container')[0];\n    headerDiv.setAttribute('class', 'login_logo_container login_logo_container_change');\n  };\n\n  keyboardhideHandler = () => {\n    const headerDiv = document.getElementsByClassName('login_logo_container')[0];\n    headerDiv.setAttribute('class', 'login_logo_container');\n  };\n\n  toggleShow = () => {\n    this.setState({ hidden: !this.state.hidden });\n  };\n\n  render() {\n    return (\n      <IonPage className=\"root-page\">\n        <div className=\"login_logo_container\">\n          <img alt=\"logo\" id=\"header_logo\" src=\"assets/icon/logo-white.png\"></img>\n        </div>\n        <IonContent class=\"background login_content_padding\">\n          <div className=\"login-contianer\">\n            <form\n              className=\"login-form\"\n              data-test=\"handle-submit\"\n              onSubmit={event => this.handleSubmit(event)}>\n              <IonList class=\"login_form_feild\" mode=\"ios\">\n                <IonItem\n                  mode=\"ios\"\n                  class={`ion-no-padding ${this.props.loginError ? 'login_error' : null}`}>\n                  <IonLabel mode=\"ios\" position=\"floating\">\n                    Enter Your Email ID\n                  </IonLabel>\n                  <IonInput\n                    className=\"cts-form-control\"\n                    name=\"username\"\n                    id=\"username\"\n                    type=\"text\"\n                    value={this.state.username}\n                    data-test=\"Email-Id\"\n                    onKeyUp={event => this.handleChange(event)}\n                    onBlur={event => this.handleChange(event)}\n                  />\n                  <IonImg\n                    slot=\"end\"\n                    alt=\"logo\"\n                    src=\"assets/icon/user.svg\"\n                    className=\"login_input_icon\"\n                  />\n                </IonItem>\n                <IonItem\n                  mode=\"ios\"\n                  class={`ion-no-padding ${this.props.loginError ? 'login_error' : null}`}>\n                  <IonLabel mode=\"ios\" position=\"floating\">\n                    Enter Your Password\n                  </IonLabel>\n                  <IonInput\n                    name=\"password\"\n                    data-test=\"password\"\n                    type={this.state.hidden ? 'password' : 'text'}\n                    value={this.state.password}\n                    className=\"cts-form-control\"\n                    onKeyUp={event => this.handleChange(event)}\n                    onBlur={event => this.handleChange(event)}\n                  />\n                  <IonImg\n                    slot=\"end\"\n                    alt=\"logo\"\n                    src=\"assets/icon/pass-icon.svg\"\n                    item-right\n                    className=\"login_input_icon\"\n                    data-test=\"toggle-show\"\n                    onClick={this.toggleShow}\n                  />\n                </IonItem>\n              </IonList>\n              <IonRow class=\"login_remember_link\">\n                <IonCol>\n                  <IonRow>\n                    <IonCol size=\"3\">\n                      <IonToggle\n                        data-test=\"remember-checked\"\n                        checked={this.state.rememberme}\n                        class={\n                          !this.state.username || this.state.password.length < 3\n                            ? 'ion-toggle'\n                            : 'ion-toggle-checked'\n                        }\n                        mode=\"ios\"\n                        name=\"rememberme\"\n                        onIonChange={this.onRememberMe}\n                      />\n                    </IonCol>\n                    <IonCol size=\"9\">\n                      <span className=\"login_remember_text\"> Remember Me</span>\n                    </IonCol>\n                  </IonRow>\n                </IonCol>\n                <IonCol>\n                  <span>Forgot Password?</span>\n                </IonCol>\n              </IonRow>\n\n              {this.props.loginError && (\n                <div id=\"errorMsg\">\n                  <IonIcon src=\"assets/icon/error_icon.svg\" /> Incorrect Email ID or Credential\n                </div>\n              )}\n              <IonButton\n                id=\"login\"\n                class={`cts-btn  ${\n                  !this.state.username || this.state.password.length < 3\n                    ? 'disabled-login'\n                    : 'login-btn'\n                }`}\n                data-kind=\"primary\"\n                type=\"submit\"\n                expand=\"block\">\n                LOGIN\n              </IonButton>\n            </form>\n            <div className=\"login_devider\">\n              <hr className=\"login_devider_line\" />\n              <div className=\"login_devider_text\">OR</div>\n              <hr className=\"login_devider_line\" />\n            </div>\n          </div>\n\n          <div className=\"login_alternate\">\n            <IonButton\n              class=\"login-btn login_withmobile_btn\"\n              data-kind=\"primary\"\n              type=\"submit\"\n              expand=\"block\">\n              LOGIN WITH MOBILE NUMBER\n            </IonButton>\n            <div className=\"sign_up\">\n              <span className=\"signup_link\">\n                New to Schneider? <a href=\"https://schneider.com\">Sign Up</a>\n              </span>\n            </div>\n          </div>\n        </IonContent>\n      </IonPage>\n    );\n  }\n}\n\nexport default LoginPage;\n","import { Plugins, NetworkStatus } from '@capacitor/core';\r\nimport React, { useState } from 'react';\r\nconst { Network } = Plugins;\r\n\r\nexport const useNetwork = () => {\r\n    const [networkStatus, setNetworkStatus] = useState<any>({})\r\n    const [handler, setHandler] = useState<any>(0)\r\n    console.log(\"handler\", handler);\r\n    if (!handler || handler === 0) {\r\n        setHandler(1)\r\n        Network.addListener('networkStatusChange', (_netStatus: NetworkStatus) => {\r\n            setNetworkStatus(_netStatus);\r\n        })\r\n    }\r\n\r\n    const getNetworkStatus = async () => {\r\n        let netStatus = await Network.getStatus();\r\n        setNetworkStatus(netStatus);\r\n    }\r\n\r\n    return {\r\n        networkStatus,\r\n        getNetworkStatus\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport {\n  IonButton,\n  IonRow,\n  IonCol,\n  isPlatform,\n  IonModal,\n  IonCard,\n  IonCardHeader,\n  IonCardContent,\n  IonCheckbox,\n  IonLabel,\n  IonItem\n} from '@ionic/react';\nimport { useAuthService } from '../../services/Auth';\nimport '../../pages/Login';\nimport { useNetwork } from '../../utils/useNetwork';\nimport { LOGIN, EVENT, SCREEN, NA, KEYS, ENV, ENABLE_R2_FEATURE } from '../../utils/constants';\nimport { getApplicationInfoBeforeLogin, logEvent } from '../../utils/Analytics';\nimport { R2Configuration } from '../../utils/common';\n\nconst LoginContainer: React.FC = () => {\n  const { getNetworkStatus, networkStatus } = useNetwork();\n  const [openModal, getOpenModal] = useState(false);\n  const [R2FeatureEnable, setR2FeatureEnable] = useState(false);\n  const [showR2ConfigurationModal, setShowR2ConfigurationModal] = useState(false);\n  const authService = useAuthService();\n\n  useEffect(() => {\n    // Analytics implementation\n    getApplicationInfoBeforeLogin().then(res => {\n      logEvent(EVENT.SV_GET_STARTED, {\n        screen: SCREEN.GET_STARTED,\n        channel: res.channel,\n        os: res.os,\n        device_name: res.device_name,\n        model: res.model,\n        sessionId: NA,\n        userId: NA,\n        carrierId: NA\n      });\n    });\n\n    if (KEYS.RELEASE === ENV.PROD) {\n      R2Configuration.details.setR2FeatureEnable(true);\n      setR2FeatureEnable(true);\n    } else {\n      R2Configuration.details.setR2FeatureEnable(false);\n      setR2FeatureEnable(false);\n    }\n  }, []);\n\n  const tryAction = async (fn: () => Promise<any>, defaultError: string) => {\n    getNetworkStatus();\n    logEvent(EVENT.UE_SIGN_IN, { screen: SCREEN.GET_STARTED, sessionId: NA });\n    if (networkStatus.connected === false) {\n      getOpenModal(true);\n    }\n    try {\n      await fn();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const onClickR2Configuration = (): void => {\n    if (KEYS.RELEASE !== ENV.PROD) {\n      setShowR2ConfigurationModal(true);\n    }\n  };\n\n  const setR2ConfigurationFlag = (): void => {\n    setShowR2ConfigurationModal(false);\n    R2Configuration.details.setR2FeatureEnable(R2FeatureEnable);\n  };\n\n  return (\n    <>\n      <IonModal isOpen={showR2ConfigurationModal} cssClass=\"dropdown-modal\">\n        <IonCard className=\"bookLoad-thankyou\">\n          <IonCardHeader className=\"start-trip-cardContent\">\n            {ENABLE_R2_FEATURE.CONFIGURATION_TXT}\n          </IonCardHeader>\n          <IonCardContent>\n            <IonItem lines=\"none\" className=\"R2ConfigurationModal-item\">\n              <IonCheckbox\n                checked={R2FeatureEnable}\n                onIonChange={e => setR2FeatureEnable(e.detail.checked)}\n              />\n              <IonLabel>{ENABLE_R2_FEATURE.ENABLE_R2_FEATURE_TXT}</IonLabel>\n            </IonItem>\n            <IonRow className=\"book-load-thankyou-row\">\n              <IonCol size=\"3\" />\n              <IonCol className=\"bookload-OK\" size=\"6\">\n                <IonButton class=\"load-btn\" onClick={() => setR2ConfigurationFlag()}>\n                  {ENABLE_R2_FEATURE.OKAY}\n                </IonButton>\n              </IonCol>\n            </IonRow>\n          </IonCardContent>\n        </IonCard>\n      </IonModal>\n\n      {openModal ? (\n        <div>\n          <div className=\"networkError_div\"></div>\n          <div className=\"popup\">\n            <p className=\"no-network\">{LOGIN.NO_NETWORK_TITLE}</p>\n            <p className=\"network-content\">{LOGIN.NO_NETWORK_TEXT}</p>\n            <IonButton className=\"retry_button\" onClick={()=>getOpenModal(false)}>\n              {LOGIN.Ok_TEXT}\n            </IonButton>\n          </div>\n        </div>\n      ) : null}\n      <div className=\"Landing-screen-content\">\n        {isPlatform('mobile') ? (\n          <>\n            <p className=\"getStarted\" data-test=\"Get-Started\" onClick={onClickR2Configuration}>\n              {LOGIN.GET_STARTED_TEXT}\n            </p>\n            <p className=\"StartwithSignin\" data-test=\"Start-With\">\n              {LOGIN.SIGNUP_TEXT}\n            </p>\n            <img src=\"assets/images/Mid illustration.png\" className=\"mid-illustration\" alt=\"\" />\n          </>\n        ) : (\n          <>\n            <div className=\"globe-image\">\n              <p className=\"getStarted\" data-test=\"Get-Started\" onClick={onClickR2Configuration}>\n                {LOGIN.GET_STARTED_TEXT}\n              </p>\n              <p className=\"StartwithSignin\" data-test=\"Start-With\">\n                {LOGIN.SIGNUP_TEXT}\n              </p>\n              <img src=\"assets/icon/mid-icon.svg\" className=\"midpart-icon\" alt=\"\" />\n            </div>\n          </>\n        )}\n        <div className=\"signup-buttons\">\n          <IonRow>\n            <IonCol\n              data-test=\"SignIn-btn\"\n              className=\"signIn-col\"\n              onClick={() => {\n                tryAction(authService.login.bind(authService), 'There was an error logging in');\n              }}>\n              <IonButton class=\"load-btn-Signup\" data-test=\"signin-button\">\n                <span className=\"signup-btn\">{LOGIN.GET_STARTED_TEXT}</span>\n              </IonButton>\n            </IonCol>\n          </IonRow>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LoginContainer;\n","import { ActionType, GPSState } from \"../../schemas/App/App.Schema\";\nimport * as Constants from \"../../utils/constants\";\nimport produce from \"immer\";\nimport { IONICWrapper } from \"app/utils/common\";\n\nexport const initialState: GPSState = {\n  GPSData: [],\n  UserDetails: {},\n  deviceRegistration: \"\",\n  showAlert: false,\n  alertMessage: \"\",\n  alertTitle: \"\",\n  moreContent: {},\n  offlineJSON: null,\n  configParams: {},\n  searchParams: null,\n  pullToRefreshState: null,\n  access_token: null,\n  registerUserStatusMessage: {},\n  session: {},\n  shipmentParams: null\n};\n\nexport default (state = initialState, action: ActionType) =>\n  produce(state, draft => {\n    switch (action.type) {\n      case Constants.UPDATE_GPS_COORDS:\n        draft.GPSData = [...draft.GPSData, action.payload];\n        break;\n      case Constants.FETCH_USER_DETAILS_SUCCESS:\n        draft.UserDetails = action.payload;\n        break;\n      case Constants.LOGOUT:\n        draft.UserDetails = {};\n        draft.GPSData = [];\n        break;\n      case Constants.REGISTER_DEVICE_RESPONSE_ACTION:\n        draft.deviceRegistration = action.payload.errors;\n        break;\n      case Constants.SHOW_ALERT_MESSAGE:\n        draft.showAlert = action.payload.isShowAlert;\n        draft.alertMessage = action.payload.alertMessage;\n        draft.alertTitle = action.payload.alertTitle;\n        break;\n      case Constants.HIDE_ALERT_MESSAGE:\n        draft.showAlert = false;\n        draft.alertMessage = \"\";\n        draft.alertTitle = \"\";\n        break;\n      case Constants.MORE_TAB_CONTENT_RESPONSE:\n        draft.moreContent = action.payload;\n        break;\n      case Constants.MORE_TAB_CONTENT_RESPONSE_DUMMY:\n        draft.offlineJSON.contentParams = action.payload;\n        break;\n      case Constants.CREATE_OFFLINE_JSON:\n        draft.offlineJSON = action.payload;\n        console.log(draft.offlineJSON);\n        break;\n      case Constants.GET_CONFIG_PARAMS:\n        draft.configParams = action.payload;\n        break;\n      case Constants.UPDATE_SEARCH_PARAMS_OFFLINE:\n        draft.offlineJSON[IONICWrapper.details.auth.user.upn].searchParams = {\n          ...draft.offlineJSON[IONICWrapper.details.auth.user.upn].searchParams,\n          ...action.payload\n        };\n        draft.searchParams = { ...draft.searchParams, ...action.payload };\n        console.log(draft.searchParams);\n\n        break;\n      case Constants.UPDATE_SHIPMENT_INFO_OFFLINE:\n        draft.offlineJSON[IONICWrapper.details.auth.user.upn].shipmentParams =\n          action.payload;\n        draft.shipmentParams = action.payload;\n        break;\n      case Constants.UPDATE_PULL_TO_REFRESH_STATE:\n        draft.pullToRefreshState = action.payload;\n        break;\n      case Constants.STORE_ACCESS_TOKEN:\n        draft.access_token = action.payload;\n      case Constants.REGISTER_USER_STATUS_MESSAGE:\n        draft.registerUserStatusMessage = action.payload;\n        break;\n\n      case Constants.CLEAR_REGISTER_USER_STATUS_MESSAGE:\n        draft.registerUserStatusMessage = {};\n        break;\n      case Constants.SESSION_INFO:\n        draft.session = action.payload.session;\n        break;\n    }\n  });\n","import { createSelector } from 'reselect';\nimport { initalState as globalState } from '../reducers/Login/reducer';\nimport { initialState as appInititalState } from '../reducers/App/reducer';\n\nconst selectGlobal = (state: any) => state.global || globalState;\nconst selectApp = (state: any) => state.App;\n\nexport const makeSelectGlobal = () =>\n  createSelector([selectGlobal], global => global || globalState);\n\nexport const getLoading = () => createSelector([selectGlobal], global => global.loading || false);\n\nexport const getCurrentUser = () =>\n  createSelector([selectGlobal], global => global.currentUser || globalState.currentUser);\n\nexport const getLoginError = () =>\n  createSelector([selectGlobal], global => global.error || globalState.error);\n\nexport const getUserData = () =>\n  createSelector([selectGlobal], global => global.userData || globalState.userData);\n\nexport const getShowPermissionAlert = () =>\n  createSelector(\n    [selectGlobal],\n    global => global.showPermissionAlert || globalState.showPermissionAlert\n  );\n\nexport const getPermissionAlertMessage = () =>\n  createSelector(\n    [selectGlobal],\n    global => global.permissionAlertMessage || globalState.permissionAlertMessage\n  );\n\nexport const getPermissionAlertTitle = () =>\n  createSelector(\n    [selectGlobal],\n    global => global.permissionAlertTitle || globalState.permissionAlertTitle\n  );\nexport const makeDriverAssign = () =>\n  createSelector([selectGlobal], global => global.Hidden || globalState.Hidden);\n\nexport const getGPSDetails = () =>\n  createSelector([selectApp], App => App.GPSData || appInititalState.GPSData);\n\nexport const getPlatform = () =>\n  createSelector([selectGlobal], global => global.deviceInfo.platform || globalState.deviceInfo);\n\nexport const getLoginToken = () =>\n  createSelector([selectGlobal], global => {\n    return global.loginToken || globalState.loginToken;\n  });\n\nexport const getDeepLinkURI = () =>\n  createSelector([selectGlobal], global => {\n    return global.deepLinkURI || globalState.deepLinkURI;\n  });\n\nexport const getSession = () =>\n  createSelector([selectGlobal], global => {\n    return global.hasSession;\n  });\nexport const getUserDetails = () =>\n  createSelector(\n    [selectApp],\n    user => user && user.UserDetails\n\n    // commented the below line of code to avoid unnessery component rendering\n    // appInititalState.UserDetails\n  );\n\nexport const getDeviceRegistrationResult = () =>\n  createSelector(\n    [selectApp],\n    appState => (appState && appState.deviceRegistration) || appInititalState.deviceRegistration\n  );\n\nexport const getRefreshStatus = () =>\n  createSelector(\n    [selectGlobal],\n    global => global.showPullToRefresh || globalState.showPullToRefresh\n  );\n\nexport const getNetworkStatus = () =>\n  createSelector(\n    [selectGlobal],\n    global => global.networkStatus.connected || globalState.networkStatus.connected\n  );\n\nexport const getShowAlert = () =>\n  createSelector([selectApp], App => App.showAlert || appInititalState.showAlert);\n\nexport const getAlertMessage = () =>\n  createSelector([selectApp], App => App.alertMessage || appInititalState.alertMessage);\n\nexport const getAlertTitle = () =>\n  createSelector([selectApp], App => App.alertTitle || appInititalState.alertTitle);\n\nexport const getMoreContent = () =>\n  createSelector([selectApp], App => App.moreContent || appInititalState.moreContent);\n\nexport const getOfflineData = () => createSelector([selectApp], App => App.offlineJSON || appInititalState.offlineJSON)\nexport const getConfigParams = () => createSelector([selectApp], App => App.configParams || appInititalState.configParams)\nexport const getSearchParams = () => createSelector([selectApp], App => App.searchParams || appInititalState.searchParams)\nexport const getShipmentParams = () => createSelector([selectApp], App => App.shipmentParams || appInititalState.shipmentParams)\nexport const getPullToRefreshState = () => createSelector([selectApp], App => App.pullToRefreshState || appInititalState.pullToRefreshState)\nexport const getRegisterUserStatusMessage = () =>\n  createSelector(selectApp, userData => {\n    return userData && userData.registerUserStatusMessage;\n  });\nexport const getNotificationData = () =>\n  createSelector([selectGlobal], global => {\n    return global.notificationData || globalState.notificationData;\n  });","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { IonApp, IonRouterOutlet, isPlatform } from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\nimport { observer } from 'mobx-react-lite';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { AuthenticationService, AuthSingleton } from '../../services/authentication.service';\nimport { VaultService } from '../../services/vault.service';\nimport { AuthProvider } from '../../services/Auth';\nimport { VaultProvider } from '../../services/Vault';\nimport { BrowserAuthPlugin } from '../../services/browser-auth.plugin';\nimport { BrowserAuthService } from '../../services/browser-auth.service';\nimport { LoginContainer } from '../../containers/LoginContainer';\nimport { getSession } from '../../selectors/selector';\n\nconst PrivateRoute: React.FC<any> = ({ hasSession, component: WrappedComponent }) => {\n  let browserPlugin;\n  if (!isPlatform('capacitor')) {\n    browserPlugin = new BrowserAuthPlugin(new BrowserAuthService());\n  }\n  const vaultService = new VaultService(browserPlugin);\n  const authService = AuthSingleton.getInstance(vaultService);\n  return (\n    <VaultProvider value={vaultService}>\n      <AuthProvider value={authService}>\n        <AppComponent\n          authService={authService}\n          Wrapper={WrappedComponent}\n          vaultService={vaultService}\n          sessionEval={hasSession}\n        />\n      </AuthProvider>\n    </VaultProvider>\n  );\n};\n\ntype AppComponentProps = { authService: AuthenticationService, Wrapper:any, vaultService: VaultService, sessionEval:any};\nconst AppComponent: React.FC<AppComponentProps> = observer(props => {\n  const _tab = props.authService.tabName;\n  const { isLoggedIn } = props.authService;\n\n  return _tab ? (\n    <IonReactRouter>\n      <Route path=\"/\" render={() => <Redirect to=\"/login\" />} exact />\n      <Route\n        path=\"/app\"\n        render={() => (isLoggedIn ? <props.Wrapper {...props} /> : <Redirect to=\"/login\" />)}\n      />\n      <Route\n        path=\"/login\"\n        render={() => (isLoggedIn ? <Redirect to={`/app/${_tab}`} /> : <LoginContainer />)}\n      />\n    </IonReactRouter>\n  ) : null;\n});\n\nconst mapStateToProps = createStructuredSelector({\n  hasSession: getSession()\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import Service from \"../services/common.services\";\n\n/**\n * Requests a URL, returning a promise\n *\n * @param  {string} url       The URL we want to request\n * @param  {object} [options] The arguments we want to pass to \"Axios\"\n *\n * @return {object}           The response data\n */\nexport default function request<T>(args: any) {\n  var commonService = new Service<T>();\n  if (\n    args[0] !== \"LOGIN\" &&\n    args[0] !== \"MANAGE\" &&\n    args[0] !== \"SEARCH\" &&\n    args[0] !== \"RECENT\" &&\n    args[0] !== \"APP\" &&\n    args[1] !== \"FETCH_SEARCH_LOADS\" &&\n    args[0] !== \"MYLOAD\" &&\n    args[0] !== \"DRIVERS_LIST\" &&\n    args[0] !== \"LOCATION_TRACKER\" &&\n    args[0] !== \"FETCH_USER_DETAILS\" &&\n    args[0] !== \"REGISTER_DEVICE\" &&\n    args[0] !== \"MORETAB\" &&\n    args[0] !== \"FAVORITE\" &&\n    args[0] !== \"SUBMITFEEDBACK\" &&\n    args[0] !== \"HOME\"\n  ) {\n    return commonService.get(args[0], args[1]);\n  } else {\n    return commonService.post(\n      args[0],\n      args[1],\n      args[2],\n      args[3],\n      args[4],\n      args[5]\n    );\n  }\n}\n","import * as Constants from '../../utils/constants';\n\nexport const getFavoriteData = (data: any, isHideLoader= false) => {\n    return ({\n        type: Constants.FAVORITE_LOADS_DATA,\n        payload: { data, isHideLoader }\n    })\n}\n\nexport const updateFavoriteData = (data: any, isHideLoader = false) => {\n    return ({\n        type: Constants.UPDATE_FAVORITE_LOADS,\n        payload: {data, isHideLoader}\n    })\n}\n\nexport const updateFavoriteDataReducer = (data: any) => ({\n    type: Constants.UPDATE_FAVORITE_LOADS_REDUCER,\n    payload: data.data.updateUserSearchHistory\n})\n\n// action to check the duplicate or list full error while adding to favorite list\nexport const updateFavoriteError = (data:any) => ({\n    type: Constants.UPDATE_FAVORITE_ERROR,\n    payload: data.data\n})\n\nexport const getFavorite = (data: any) =>({\n        type: Constants.GET_FAVORITE,\n        payload: data\n})\n","import { all, put, call, takeLatest, takeEvery } from \"redux-saga/effects\";\nimport {\n  showLoading,\n  hideLoading,\n  showPullToRefresh,\n  hidePullToRefresh\n} from \"../../actions/Login/action\";\nimport * as constants from \"../../utils/constants\";\nimport request from \"../../utils/request\";\nimport { loadSearchData } from \"../../actions/Search/action\";\n// import { GetRecent } from '../../actions/Recent/action';\n\nimport { getFavorite } from \"../../actions/Favorite/action\";\nimport { DomainConverter } from \"../../utils/common\";\n\nexport function* searchData(data: any) {\n  try {\n    yield put(showLoading());\n    const repos = yield call(request, [\"SEARCH\", \"SEARCH_LOADS\"]);\n    yield put(loadSearchData(repos.data, false));\n\n    yield put(hideLoading());\n  } catch (e) {\n    // yield __model.getLoads() && put(loadData(__model.getLoads()));\n    yield put(hideLoading());\n  }\n}\n// export function* recentData() {\n//   try {\n//     yield put(showLoading());\n//     const recentData = yield call(request, [\"RECENT\", \"RECENT_LOADS\"]);\n//     yield put(GetRecent(recentData));\n//     yield put(hideLoading());\n//   } catch (e) {\n\n//     yield put(hideLoading());\n//   }\n\n// }\n\nexport function* favoriteData() {\n  try {\n    yield put(showLoading());\n    const favouriteData = yield call(request, [\"FAVORITE\", \"FAVORITE_LOADS\"]);\n    yield put(getFavorite(favouriteData));\n    yield put(hideLoading());\n  } catch (e) {\n    yield put(hideLoading());\n  }\n}\nexport function* fetchSearchResults(data: any) {\n  const { searchParams, isPagination, isHideLoader } = data.payload;\n  try {\n    if (!(data && data.payload && isHideLoader)) {\n      yield put(showLoading());\n    }\n    yield put(showPullToRefresh());\n    const searchReqestQuery = DomainConverter.domainToData<any>(searchParams);\n    const fetchSearchResults = yield request<any>([\n      \"SEARCH\",\n      \"SEARCH\",\n      null,\n      \"\",\n      searchReqestQuery,\n      \"application/json\"\n    ]);\n    let responseData: any = {};\n    if (\n      fetchSearchResults &&\n      fetchSearchResults.data &&\n      fetchSearchResults.data.searchLoadPostings\n    ) {\n      responseData = {\n        searchLoads:\n          fetchSearchResults.data.searchLoadPostings.loadPostings || [],\n        totalRecords:\n          fetchSearchResults.data.searchLoadPostings.totalRecords || 0\n      };\n    }\n\n    yield put(loadSearchData(responseData, isPagination));\n    if (!(data && data.payload && isHideLoader)) {\n      yield put(hideLoading());\n    }\n    yield put(hidePullToRefresh());\n  } catch (e) {\n    if (!(data && data.payload && isHideLoader)) {\n      yield put(hideLoading());\n    }\n    yield put(hidePullToRefresh());\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([\n    takeLatest(constants.SEARCH_DATA, searchData),\n    takeLatest(constants.FETCH_SEARCH_RESULTS, fetchSearchResults)\n  ]);\n}\n","import * as Constants from \"../../utils/constants\";\n\nexport const profileImageSet = (data: any) => {\n  return {\n    type: Constants.PROFILE_IMAGE_SET,\n    payload: data,\n  };\n};\n\nexport const MyLoadCard = () => ({\n  type: Constants.MYLOAD_CARD_DATA,\n});\n\nexport const GetMyLoadCardData = (data: any) => ({\n  type: Constants.GET_MYLOAD_CARD_DATA,\n  payload: data,\n});\n\nexport const confirmStartInformation = (\n  data: any,\n  callback: (shipment: any) => void\n) => ({\n  type: Constants.CarrierActionTypes.CONFIRM_START_INFORMATION,\n  payload: {\n    data,\n    callback,\n  },\n});\n\nexport const confirmStartInformationSuccess = (data: any) => ({\n  type: Constants.CarrierActionTypes.CONFIRM_START_INFORMATION_SUCCESS,\n  payload: data,\n});\n\nexport const confirmStartInformationStatusMessage = (data: any) => ({\n  type: Constants.CarrierActionTypes.CONFIRM_START_INFORMATION_STATUS_MESSAGE,\n  payload: data,\n});\n\nexport const showWarningDialog = (message: string ) => ({\n  type: Constants.CarrierActionTypes.SHOW_WARNING_DIALOG,\n  payload: {\n    message\n  },\n});\n\nexport const clearWarningDialog = () => ({\n  type: Constants.CarrierActionTypes.CLEAR_WARNING_DIALOG\n});\n\n\nexport const clearConfirmStartInformationStatusMessage = () => ({\n  type:\n    Constants.CarrierActionTypes.CLEAR_CONFIRM_START_INFORMATION_STATUS_MESSAGE,\n});\n\nexport const updateStopInformation = (data: any, callBack: Function) => ({\n  type: Constants.CarrierActionTypes.UPDATE_STOP_INFORMATION,\n  payload: {\n    data,\n    callBack,\n  },\n});\n\nexport const updateStopInformationResponse = (data: any) => ({\n  type: Constants.CarrierActionTypes.UPDATE_STOP_INFORMATION_RESPONSE,\n  payload: data,\n});\n\nexport const clearUpdateStopInformationResponse = () => ({\n  type: Constants.CarrierActionTypes.CLEAR_UPDATE_STOP_INFORMATION_RESPONSE\n});\n","import { isEntitled, IONICWrapper } from \"./common\";\nimport { Roles } from \"app/utils/constants\";\n\nexport const LOAD_DATA = [\n  {\n    schneider_loads_id: \"SNI_0000001\",\n    load_status: \"In Progress\",\n    origin_city: \"Dallas\",\n    origin_state: \"TX\",\n    origin_from_date: \"Nov 16\",\n    origin_to_date_time: \"10:00 AM - 02:00 PM\",\n    origin_deadhead: \"150\",\n    destination_city: \"Detroit\",\n    destination_state: \"MI\",\n    destination_from_date: \"Nov 18\",\n    destination_to_date_time: \"02:00 PM - 09:00 PM\",\n    destination_deadhead: \"50\",\n    total_weight: \"20141\",\n    total_distance: \"1185\",\n    total_stops: \"1\",\n    trailer: \"Dry van\",\n    price: 0,\n  },\n  {\n    schneider_loads_id: \"SNI_0000001\",\n    load_status: \"In Progress\",\n    origin_city: \"Seattle\",\n    origin_state: \"WA\",\n    origin_from_date: \"Nov 18\",\n    origin_to_date_time: \"06:00 AM - 08:00 AM\",\n    origin_deadhead: \"50\",\n    destination_city: \"Los Angeles\",\n    destination_state: \"CA\",\n    destination_from_date: \"Nov 19\",\n    destination_to_date_time: \"08:00 AM - 09:00 AM\",\n    destination_deadhead: \"150\",\n    total_weight: \"34000\",\n    total_distance: \"1338\",\n    total_stops: \"2\",\n    trailer: \"Dry van\",\n    price: 1000,\n  },\n  {\n    schneider_loads_id: \"SNI_0000001\",\n    load_status: \"In Progress\",\n    origin_city: \"Atlanta\",\n    origin_state: \"GA\",\n    origin_from_date: \"Nov 22\",\n    origin_to_date_time: \"04:00 AM - 06:00 AM\",\n    origin_deadhead: \"40\",\n    destination_city: \"Jacksonville\",\n    destination_state: \"FL\",\n    destination_from_date: \"Nov 24\",\n    destination_to_date_time: \"10:00 AM - 12:00 PM\",\n    destination_deadhead: \"125\",\n    total_weight: \"40000\",\n    total_distance: \"346\",\n    total_stops: \"0\",\n    trailer: \"Dry van\",\n    price: 690,\n  },\n  {\n    schneider_loads_id: \"SNI_0000001\",\n    load_status: \"In Progress\",\n    origin_city: \"Dallas\",\n    origin_state: \"TX\",\n    origin_from_date: \"Nov 24\",\n    origin_to_date_time: \"10:00 AM - 12:00 PM\",\n    origin_deadhead: \"120\",\n    destination_city: \"St Louis\",\n    destination_state: \"MO\",\n    destination_from_date: \"Nov 25\",\n    destination_to_date_time: \"09:00 PM - 10:00 PM\",\n    destination_deadhead: \"70\",\n    total_weight: \"25150\",\n    total_distance: \"631\",\n    total_stops: \"1\",\n    trailer: \"Dry van\",\n    price: 1240,\n  },\n  {\n    schneider_loads_id: \"SNI_0000001\",\n    load_status: \"In Progress\",\n    origin_city: \"Denver\",\n    origin_state: \"CO\",\n    origin_from_date: \"Nov 28\",\n    origin_to_date_time: \"10:00 AM - 02:00 PM\",\n    origin_deadhead: \"130\",\n    destination_city: \"Cleveland\",\n    destination_state: \"OH\",\n    destination_from_date: \"Nov 30\",\n    destination_to_date_time: \"02:00 PM - 04:00 PM\",\n    destination_deadhead: \"60\",\n    total_weight: \"15555\",\n    total_distance: \"1334\",\n    total_stops: \"3\",\n    trailer: \"Reefer\",\n    price: 500,\n  },\n  {\n    schneider_loads_id: \"SNI_0000001\",\n    load_status: \"In Progress\",\n    origin_city: \"Los Angeles\",\n    origin_state: \"CA\",\n    origin_from_date: \"Dec 02\",\n    origin_to_date_time: \"05:00 AM - 07:00 AM\",\n    origin_deadhead: \"10\",\n    destination_city: \"Charlotte\",\n    destination_state: \"NC\",\n    destination_from_date: \"Dec 03\",\n    destination_to_date_time: \"08:00 AM - 10:00 AM\",\n    destination_deadhead: \"110\",\n    total_weight: \"19998\",\n    total_distance: \"2410\",\n    total_stops: \"2\",\n    trailer: \"Dry van\",\n    price: 200,\n  },\n  {\n    schneider_loads_id: \"SNI_0000001\",\n    load_status: \"In Progress\",\n    origin_city: \"Brimley\",\n    origin_state: \"MI\",\n    origin_from_date: \"Dec 04\",\n    origin_to_date_time: \"10:00 AM - 11:00 AM\",\n    origin_deadhead: \"0\",\n    destination_city: \"Springlake\",\n    destination_state: \"TX\",\n    destination_from_date: \"Dec 06\",\n    destination_to_date_time: \"04:00 PM - 06:00 PM\",\n    destination_deadhead: \"15\",\n    total_weight: \"24500\",\n    total_distance: \"1571\",\n    total_stops: \"5\",\n    trailer: \"Dry van\",\n    price: 300,\n  },\n  {\n    schneider_loads_id: \"SNI_0000001\",\n    load_status: \"In Progress\",\n    origin_city: \"Baton Rouge\",\n    origin_state: \"LA\",\n    origin_from_date: \"Dec 08\",\n    origin_to_date_time: \"10:00 AM - 01:00 PM\",\n    origin_deadhead: \"66\",\n    destination_city: \"Seattle\",\n    destination_state: \"WA\",\n    destination_from_date: \"Dec 9\",\n    destination_to_date_time: \"08:00 AM - 10:00 AM\",\n    destination_deadhead: \"20\",\n    total_weight: \"30500\",\n    total_distance: \"2514\",\n    total_stops: \"0\",\n    trailer: \"Reefer\",\n    price: 500,\n  },\n  {\n    schneider_loads_id: \"SNI_0000001\",\n    load_status: \"In Progress\",\n    origin_city: \"Rapid City\",\n    origin_state: \"SD\",\n    origin_from_date: \"Nov 16\",\n    origin_to_date_time: \"04:00 AM - 05:00 AM\",\n    origin_deadhead: \"89\",\n    destination_city: \"Denver\",\n    destination_state: \"CO\",\n    destination_from_date: \"Nov 18\",\n    destination_to_date_time: \"12:00 PM - 01:00 PM\",\n    destination_deadhead: \"0\",\n    total_weight: \"36000\",\n    total_distance: \"387\",\n    total_stops: \"0\",\n    trailer: \"Dry van\",\n    price: 600,\n  },\n  {\n    schneider_loads_id: \"SNI_0000001\",\n    load_status: \"In Progress\",\n    origin_city: \"Milwaukee\",\n    origin_state: \"WI\",\n    origin_from_date: \"Dec 16\",\n    origin_to_date_time: \"08:00 AM - 08:30 AM\",\n    origin_deadhead: \"117\",\n    destination_city: \"Chicago\",\n    destination_state: \"IL\",\n    destination_from_date: \"Dec 19\",\n    destination_to_date_time: \"10:00 AM - 10:30 AM\",\n    destination_deadhead: \"35\",\n    total_weight: \"12800\",\n    total_distance: \"93\",\n    total_stops: \"0\",\n    trailer: \"Reefer\",\n    price: 450,\n  },\n  {\n    schneider_loads_id: \"SNI_0000001\",\n    load_status: \"In Progress\",\n    origin_city: \"Green Bay\",\n    origin_state: \"WI\",\n    origin_from_date: \"Dec 19\",\n    origin_to_date_time: \"8:00 AM\",\n    origin_deadhead: \"143\",\n    destination_city: \"Madison\",\n    destination_state: \"WI\",\n    destination_from_date: \"Dec 20\",\n    destination_to_date_time: \"12:00 PM\",\n    destination_deadhead: \"47\",\n    total_weight: \"13600\",\n    total_distance: \"136\",\n    total_stops: \"0\",\n    trailer: \"Dry van\",\n    price: 120,\n  },\n  {\n    schneider_loads_id: \"SNI_0000001\",\n    load_status: \"In Progress\",\n    origin_city: \"Nashville\",\n    origin_state: \"TN\",\n    origin_from_date: \"Nov 16\",\n    origin_to_date_time: \"08:00 AM - 10:00 AM\",\n    origin_deadhead: \"77\",\n    destination_city: \"Tampa\",\n    destination_state: \"FL\",\n    destination_from_date: \"Nov 17\",\n    destination_to_date_time: \"10:00 PM - 11:59 PM\",\n    destination_deadhead: \"68\",\n    total_weight: \"19000\",\n    total_distance: \"704\",\n    total_stops: \"1\",\n    trailer: \"Dry van\",\n    price: 340,\n  },\n];\n\nexport const ManageCardData = [\n  {\n    cradImg: \"/assets/icon/more-arrow.svg\",\n    profileHeading: \"My Profile\",\n    profileRouting: \"/app/manage/ProfileDetails\",\n  },\n  /*  {\n     cradImg: \"/assets/icon/more-arrow.svg\",\n     profileHeading: \"My Preferences\",\n     profileRouting: \"/app/manage/ProfileDetails\"\n \n   }, */\n  {\n    cradImg: \"/assets/icon/more-arrow.svg\",\n    profileHeading: \"Carrier Profile\",\n    profileRouting: \"/app/manage/CarrierProfileDetails\",\n  },\n  {\n    cradImg: \"/assets/icon/more-arrow.svg\",\n    profileHeading: \"Manage Users\",\n    profileRouting: \"/app/manage/ManageUser\",\n  },\n  {\n    cradImg: \"/assets/icon/more-arrow.svg\",\n    profileHeading: \"Manage My Capacity\",\n    profileRouting: \"/app/manage/ManageMyCapacity\",\n  },\n];\n\nexport const ManageMyCapacityData = [\n  {\n    carrierid: \"SPS858032\",\n    destinationCity: null,\n    destinationCountry: null,\n    destinationPostalCode: null,\n    destinationState: null,\n    destinationradius: 100,\n    dropdate: null,\n    favouritesearchindicator: false,\n    id: \"608\",\n    originCity: \"Green Bay\",\n    originCountry: null,\n    originPostalCode: null,\n    originState: \"WI\",\n    originradius: 100,\n    pickupdate: \"2020-07-25T05:03:33.077-05:00\",\n    searchdate: \"2020-07-15T05:04:11.413-05:00\",\n    trailertype: \"Dry Van\",\n    userid: \"ujjwal.cts@gmail.com\",\n    vehicleType: \"Lane\",\n  },\n  {\n    carrierid: \"SPS858032\",\n    destinationCity: null,\n    destinationCountry: null,\n    destinationPostalCode: null,\n    destinationState: null,\n    destinationradius: 100,\n    dropdate: null,\n    favouritesearchindicator: false,\n    id: \"608\",\n    originCity: \"Green Bay\",\n    originCountry: null,\n    originPostalCode: null,\n    originState: \"WI\",\n    originradius: 100,\n    pickupdate: \"2020-07-25T05:03:33.077-05:00\",\n    searchdate: \"2020-07-15T05:04:11.413-05:00\",\n    trailertype: \"Dry Van\",\n    userid: \"ujjwal.cts@gmail.com\",\n    vehicleType: \"Truck\",\n  },\n  {\n    carrierid: \"SPS858032\",\n    destinationCity: null,\n    destinationCountry: null,\n    destinationPostalCode: null,\n    destinationState: null,\n    destinationradius: 100,\n    dropdate: null,\n    favouritesearchindicator: false,\n    id: \"608\",\n    originCity: \"Green Bay\",\n    originCountry: null,\n    originPostalCode: null,\n    originState: \"WI\",\n    originradius: 100,\n    pickupdate: \"2020-07-25T05:03:33.077-05:00\",\n    searchdate: \"2020-07-15T05:04:11.413-05:00\",\n    trailertype: \"Dry Van\",\n    userid: \"ujjwal.cts@gmail.com\",\n    vehicleType: \"Truck\",\n  },\n];\n\nexport const menuAPIData = {\n  data: {\n    getUserHelpContent: {\n      menuItems: [\n        {\n          dataTypes: [\n            {\n              fieldName: \"title\",\n              fieldType: \"text\",\n              schema: null,\n            },\n            {\n              fieldName: \"sequence\",\n              fieldType: \"number\",\n              schema: null,\n            },\n            {\n              fieldName: \"group\",\n              fieldType: \"group\",\n              schema: [\n                {\n                  fieldName: \"menuItem\",\n                  fieldType: \"text\",\n                  schema: null,\n                },\n                {\n                  fieldName: \"menuSequence\",\n                  fieldType: \"number\",\n                  schema: null,\n                },\n                {\n                  fieldName: \"uid\",\n                  fieldType: \"text\",\n                  schema: null,\n                },\n                {\n                  fieldName: \"reference\",\n                  fieldType: \"reference\",\n                  schema: null,\n                },\n              ],\n            },\n          ],\n          title: \"Learn About Schneider\",\n          group: [\n            {\n              menuItem: \"About Schneider\",\n              menuSequence: 1,\n              uid: \"bltefba31931843f3a4\",\n            },\n            {\n              menuItem: \"Becoming a Carrier\",\n              menuSequence: 2,\n              uid: \"bltc015f16395459cc4\",\n            },\n            {\n              menuItem: \"Schneider Offerings\",\n              menuSequence: 3,\n              uid: \"bltd4a1e2e9b603a375\",\n            },\n          ],\n        },\n        {\n          dataTypes: [\n            {\n              fieldName: \"title\",\n              fieldType: \"text\",\n              schema: null,\n            },\n            {\n              fieldName: \"sequence\",\n              fieldType: \"number\",\n              schema: null,\n            },\n            {\n              fieldName: \"group\",\n              fieldType: \"group\",\n              schema: [\n                {\n                  fieldName: \"menuItem\",\n                  fieldType: \"text\",\n                  schema: null,\n                },\n                {\n                  fieldName: \"menuSequence\",\n                  fieldType: \"number\",\n                  schema: null,\n                },\n                {\n                  fieldName: \"uid\",\n                  fieldType: \"text\",\n                  schema: null,\n                },\n                {\n                  fieldName: \"reference\",\n                  fieldType: \"reference\",\n                  schema: null,\n                },\n              ],\n            },\n          ],\n          title: \"Contact\",\n          group: [\n            {\n              menuItem: \"Contact Options\",\n              menuSequence: 1,\n              uid: \"blt9043bf9ed8254f2c\",\n            },\n          ],\n        },\n        {\n          dataTypes: [\n            {\n              fieldName: \"title\",\n              fieldType: \"text\",\n              schema: null,\n            },\n            {\n              fieldName: \"sequence\",\n              fieldType: \"number\",\n              schema: null,\n            },\n            {\n              fieldName: \"group\",\n              fieldType: \"group\",\n              schema: [\n                {\n                  fieldName: \"menuItem\",\n                  fieldType: \"text\",\n                  schema: null,\n                },\n                {\n                  fieldName: \"menuSequence\",\n                  fieldType: \"number\",\n                  schema: null,\n                },\n                {\n                  fieldName: \"uid\",\n                  fieldType: \"text\",\n                  schema: null,\n                },\n                {\n                  fieldName: \"reference\",\n                  fieldType: \"reference\",\n                  schema: null,\n                },\n              ],\n            },\n          ],\n          title: \"Legal\",\n          group: [\n            {\n              menuItem: \"Privacy\",\n              menuSequence: 1,\n              uid: \"blt844f4c1bf5a45f90\",\n            },\n            {\n              menuItem: \"Terms and Conditions\",\n              menuSequence: 2,\n              uid: \"blt3f21feccbd2223e9\",\n            },\n            {\n              menuItem: \"End User Licensing Agreement\",\n              menuSequence: 3,\n              uid: \"bltb8aaf5bb45feffe9\",\n            },\n          ],\n        },\n        {\n          dataTypes: [\n            {\n              fieldName: \"title\",\n              fieldType: \"text\",\n              schema: null,\n            },\n            {\n              fieldName: \"sequence\",\n              fieldType: \"number\",\n              schema: null,\n            },\n            {\n              fieldName: \"group\",\n              fieldType: \"group\",\n              schema: [\n                {\n                  fieldName: \"menuItem\",\n                  fieldType: \"text\",\n                  schema: null,\n                },\n                {\n                  fieldName: \"menuSequence\",\n                  fieldType: \"number\",\n                  schema: null,\n                },\n                {\n                  fieldName: \"uid\",\n                  fieldType: \"text\",\n                  schema: null,\n                },\n                {\n                  fieldName: \"reference\",\n                  fieldType: \"reference\",\n                  schema: null,\n                },\n              ],\n            },\n          ],\n          title: \"Help\",\n          group: [\n            {\n              menuItem: \"Frequently Asked Questions\",\n              menuSequence: 1,\n              uid: \"blt6a06d10e08e53467\",\n            },\n            {\n              menuItem: \"Video Walkthroughs\",\n              menuSequence: 2,\n              uid: \"bltb7b1b21246b3e253\",\n            },\n          ],\n        },\n      ],\n      termsAndConditions: {\n        dataTypes: [\n          {\n            fieldName: \"title\",\n            fieldType: \"text\",\n            schema: null,\n          },\n          {\n            fieldName: \"richText\",\n            fieldType: \"richText\",\n            schema: null,\n          },\n        ],\n        uid: \"blt3f21feccbd2223e9\",\n        sections: null,\n        tags: [],\n        richText:\n          '<p>TBD</p>\\n<p style=\"text-align: center;\"><strong>For Any User</strong></p>',\n      },\n      eula: {\n        dataTypes: [\n          {\n            fieldName: \"title\",\n            fieldType: \"text\",\n            schema: null,\n          },\n          {\n            fieldName: \"richText\",\n            fieldType: \"richText\",\n            schema: null,\n          },\n        ],\n        uid: \"bltb8aaf5bb45feffe9\",\n        sections: null,\n        tags: [],\n        richText: \"<p>TBD</p>\",\n      },\n      privacy: {\n        dataTypes: [\n          {\n            fieldName: \"title\",\n            fieldType: \"text\",\n            schema: null,\n          },\n          {\n            fieldName: \"richText\",\n            fieldType: \"richText\",\n            schema: null,\n          },\n        ],\n        uid: \"blt844f4c1bf5a45f90\",\n        sections: null,\n        tags: [],\n        richText: \"<p>TBD</p>\",\n      },\n      contactOptions: {\n        dataTypes: [\n          {\n            fieldName: \"title\",\n            fieldType: \"text\",\n            schema: null,\n          },\n          {\n            fieldName: \"sections\",\n            fieldType: \"group\",\n            schema: [\n              {\n                fieldName: \"title\",\n                fieldType: \"richText\",\n                schema: null,\n              },\n              {\n                fieldName: \"richTextDescription\",\n                fieldType: \"richText\",\n                schema: null,\n              },\n            ],\n          },\n        ],\n        uid: \"blt9043bf9ed8254f2c\",\n        sections: [\n          {\n            title: \"<p><strong>Feedback for the App</strong></p>\",\n            group: null,\n          },\n          {\n            title: \"<p><strong>Email</strong></p>\",\n            group: null,\n          },\n          {\n            title: \"<p><strong>Call</strong></p>\",\n            group: null,\n          },\n        ],\n        tags: [],\n        richText: null,\n      },\n      videoWalkthroughs: {\n        dataTypes: [\n          {\n            fieldName: \"title\",\n            fieldType: \"text\",\n            schema: null,\n          },\n          {\n            fieldName: \"sections\",\n            fieldType: \"group\",\n            schema: [\n              {\n                fieldName: \"group\",\n                fieldType: \"group\",\n                schema: [\n                  {\n                    fieldName: \"description\",\n                    fieldType: \"richText\",\n                  },\n                  {\n                    fieldName: \"video\",\n                    fieldType: \"link\",\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n        uid: \"bltb7b1b21246b3e253\",\n        sections: [\n          {\n            title: null,\n            group: [\n              {\n                title: null,\n                description:\n                  \"<p>Download from AppCenter</p>\\n<p></p>\\n<p><strong></strong></p>\\n<p></p>\\n<p><strong></strong></p>\",\n                richTextDescription: null,\n                video: {\n                  title: \"FreightPower Alpha - Intro\",\n                  href: \"https://youtu.be/BDxuXkuahf4\",\n                },\n              },\n              {\n                title: null,\n                description: \"<p>FreightPower Alpha - Intro</p>\",\n                richTextDescription: null,\n                video: {\n                  title: \"FreightPower Alpha - Intro\",\n                  href: \"https://youtu.be/BDxuXkuahf4\",\n                },\n              },\n            ],\n          },\n        ],\n        tags: [],\n        richText: null,\n      },\n      aboutSchneider: {\n        dataTypes: [\n          {\n            fieldName: \"title\",\n            fieldType: \"text\",\n            schema: null,\n          },\n          {\n            fieldName: \"sections\",\n            fieldType: \"group\",\n            schema: [\n              {\n                fieldName: \"title\",\n                fieldType: \"richText\",\n                schema: null,\n              },\n              {\n                fieldName: \"group\",\n                fieldType: \"group\",\n                schema: [\n                  {\n                    fieldName: \"title\",\n                    fieldType: \"richText\",\n                  },\n                  {\n                    fieldName: \"description\",\n                    fieldType: \"richText\",\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n        uid: \"bltefba31931843f3a4\",\n        sections: [\n          {\n            title: \"<p><strong>Enterprise Overview</strong></p>\",\n            group: [\n              {\n                title: \"<p><strong>Our Values</strong></p>\",\n                description: \"<p>TBD</p>\",\n                richTextDescription: null,\n                video: null,\n              },\n              {\n                title: \"<p><strong>Core Values</strong></p>\",\n                description:\n                  \"<p>Mission</p>\\n<p><em>TBD</em></p>\\n<p>Vision</p>\\n<p><em>TBD</em></p>\",\n                richTextDescription: null,\n                video: null,\n              },\n            ],\n          },\n          {\n            title: \"Safety First and Always\",\n            group: [\n              {\n                title: \"TBD\",\n                description: \"TBD\",\n                richTextDescription: null,\n                video: null,\n              },\n            ],\n          },\n          {\n            title: \"<p>Social Responsibility</p>\",\n            group: [\n              {\n                title: \"<p>Title</p>\",\n                description: \"<p>Description</p>\",\n                richTextDescription: null,\n                video: null,\n              },\n            ],\n          },\n          {\n            title: \"<p>Schneider Offers</p>\",\n            group: [\n              {\n                title: \"<p>Carrier Purchasing Program</p><p><br></p>\",\n                description:\n                  \"<p>Carrier Purchasing Program</p>\\n<p>1</p><p>2</p><p>3</p>\",\n                richTextDescription: null,\n                video: null,\n              },\n            ],\n          },\n        ],\n        tags: [],\n        richText: null,\n      },\n      becomingCarrier: {\n        dataTypes: [\n          {\n            fieldName: \"title\",\n            fieldType: \"text\",\n            schema: null,\n          },\n          {\n            fieldName: \"sections\",\n            fieldType: \"group\",\n            schema: [\n              {\n                fieldName: \"title\",\n                fieldType: \"richText\",\n                schema: null,\n              },\n              {\n                fieldName: \"richTextDescription\",\n                fieldType: \"richText\",\n                schema: null,\n              },\n            ],\n          },\n        ],\n        uid: \"bltc015f16395459cc4\",\n        sections: [\n          {\n            title: \"<p>Step 1 Title</p>\",\n            group: null,\n          },\n          {\n            title: \"<p>Step 2 Title</p>\",\n            group: null,\n          },\n          {\n            title: \"<p>Step 3 Title</p>\",\n            group: null,\n          },\n        ],\n        tags: [],\n        richText: null,\n      },\n      faq: {\n        dataTypes: [\n          {\n            fieldName: \"title\",\n            fieldType: \"text\",\n            schema: null,\n          },\n          {\n            fieldName: \"sections\",\n            fieldType: \"group\",\n            schema: [\n              {\n                fieldName: \"title\",\n                fieldType: \"richText\",\n                schema: null,\n              },\n              {\n                fieldName: \"group\",\n                fieldType: \"group\",\n                schema: [\n                  {\n                    fieldName: \"title\",\n                    fieldType: \"richText\",\n                  },\n                  {\n                    fieldName: \"description\",\n                    fieldType: \"richText\",\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n        uid: \"blt6a06d10e08e53467\",\n        sections: [\n          {\n            title: \"<p>Search Loads</p>\",\n            group: [\n              {\n                title: \"<p>Q1 - <strong>TEXT IN BOLD</strong></p>\",\n                description:\n                  \"<p>A1<br><strong>BOLD</strong><br><em>Italics</em><br>Underline<br><del>Strikethrough</del></p><p><u><em><strong>BOLD AND ITALIC AND UNDERLINE</strong></em></u><br></p>\",\n              },\n              {\n                title: \"<p>Q2</p>\",\n                description: \"<p>A2</p>\",\n              },\n              {\n                title: \"Q3\",\n                description: \"A3\",\n              },\n            ],\n          },\n          {\n            title: \"<p>New Category</p>\",\n            group: [\n              {\n                title: \"Q1\",\n                description: \"A1\",\n              },\n            ],\n          },\n          {\n            title: \"<p>Buy Loads</p>\",\n            group: [\n              {\n                title: \"Q1\",\n                description: \"A1\",\n              },\n              {\n                title: \"Q2\",\n                description: \"A2\",\n              },\n              {\n                title: \"Q3\",\n                description: \"A3\",\n              },\n            ],\n          },\n          {\n            title: \"<p>GPS Tracking</p>\",\n            group: [\n              {\n                title: \"Q1\",\n                description: \"A1\",\n              },\n              {\n                title: \"Q2\",\n                description: \"A2\",\n              },\n            ],\n          },\n        ],\n        tags: [],\n        richText: null,\n      },\n    },\n  },\n};\n\nexport const carrierInfo = [\n  {\n    subHeading: \"Carrier Name\",\n    inputValue: \"IGOR TRANSPORT INC\",\n  },\n  {\n    subHeading: \"Carrier ID\",\n    inputValue: \"123569\",\n  },\n  {\n    subHeading: \"Carrier MC#\",\n    inputValue: \"525689\",\n  },\n  {\n    subHeading: \"USDOT#\",\n    inputValue: \"655689\",\n  },\n];\n\nexport const ContactDetails = [\n  {\n    subHeading: \"Carrier Single Line Address\",\n    inputValue: \"Green Bay, Wisconsin, USA\",\n  },\n  {\n    subHeading: \"Carrier Contact\",\n    inputValue: \"John Smith\",\n  },\n  {\n    subHeading: \"Contact\",\n    inputValue: \"+158 963 5260\",\n  },\n  {\n    subHeading: \"Email\",\n    inputValue: \"Igor.Smith@schneider.com\",\n  },\n];\n\nexport const carrierProfileInsurance = [\n  {\n    subHeading: \"Type\",\n    inputValue: \"AUTO\",\n  },\n  {\n    subHeading: \"Effective Date\",\n    inputValue: \"19/2/2020\",\n  },\n  {\n    subHeading: \"Expiry Date\",\n    inputValue: \"12/31/2020\",\n  },\n  {\n    subHeading: \"Coverage Amount\",\n    inputValue: \"$30,000\",\n  },\n];\n\nexport const carrierProfileInsurance2 = [\n  {\n    subHeading: \"Type\",\n    inputValue: \"CARGO\",\n  },\n  {\n    subHeading: \"Effective Date\",\n    inputValue: \"19/2/2020\",\n  },\n  {\n    subHeading: \"Expiry Date\",\n    inputValue: \"12/31/2020\",\n  },\n  {\n    subHeading: \"Coverage Amount\",\n    inputValue: \"$1,000,000.00\",\n  },\n];\n\nexport const watchedOfflineData = [\n  {\n    schneider_loads_id: \"SNI_0000001\",\n    load_status: \"In Progress\",\n    origin_city: \"Dallas\",\n    origin_state: \"TX\",\n    origin_from_date: \"Nov 16\",\n    origin_to_date_time: \"10:00 AM - 02:00 PM\",\n    origin_deadhead: \"150\",\n    destination_city: \"Detroit\",\n    destination_state: \"MI\",\n    destination_from_date: \"Nov 18\",\n    destination_to_date_time: \"02:00 PM - 09:00 PM\",\n    destination_deadhead: \"50\",\n    total_weight: \"20141\",\n    total_distance: \"1185\",\n    total_stops: \"1\",\n    trailer: \"Dry van\",\n    price: \"2300\",\n  },\n  {\n    schneider_loads_id: \"SNI_0000001\",\n    load_status: \"In Progress\",\n    origin_city: \"Seattle\",\n    origin_state: \"WA\",\n    origin_from_date: \"Nov 18\",\n    origin_to_date_time: \"06:00 AM - 08:00 AM\",\n    origin_deadhead: \"50\",\n    destination_city: \"Los Angeles\",\n    destination_state: \"CA\",\n    destination_from_date: \"Nov 19\",\n    destination_to_date_time: \"08:00 AM - 09:00 AM\",\n    destination_deadhead: \"150\",\n    total_weight: \"34000\",\n    total_distance: \"1338\",\n    total_stops: \"2\",\n    trailer: \"Dry van\",\n    price: \"1200\",\n  },\n  {\n    schneider_loads_id: \"SNI_0000001\",\n    load_status: \"In Progress\",\n    origin_city: \"Atlanta\",\n    origin_state: \"GA\",\n    origin_from_date: \"Nov 22\",\n    origin_to_date_time: \"04:00 AM - 06:00 AM\",\n    origin_deadhead: \"40\",\n    destination_city: \"Jacksonville\",\n    destination_state: \"FL\",\n    destination_from_date: \"Nov 24\",\n    destination_to_date_time: \"10:00 AM - 12:00 PM\",\n    destination_deadhead: \"125\",\n    total_weight: \"40000\",\n    total_distance: \"346\",\n    total_stops: \"0\",\n    trailer: \"Dry van\",\n    price: \"690\",\n  },\n];\n\nexport function getMyloadData() {\n  const CardsData = [\n    ...(isEntitled('myLoad', \"carrierAssigned\") ? [{\n      count: \"carrierAssignedCount\",\n      cradImg: \"assets/icon/carrier.svg\",\n      title: \"Carrier Assigned\",\n      myLoadRouting: \"/app/MyLoad/CarrierAssigned\",\n      className: \"carrier_assigned\",\n      class: \"carrier-assigned\",\n    }] : []),\n    ...(isEntitled('myLoad', \"driverAssigned\") ? [{\n      count: \"driverAssignedCount\",\n      cradImg: IONICWrapper.details.auth.user.roles.includes(Roles.carrierDispatcher)\n        ? \"assets/icon/driver.svg\"\n        : \"assets/icon/carrier.svg\",\n      title: IONICWrapper.details.auth.user.roles.includes(Roles.carrierDispatcher)\n        ? \"Driver Assigned\"\n        : \"Loads Assigned\",\n      myLoadRouting: \"/app/MyLoad/DriverAssigned\",\n      className: \"driver_assinged\",\n      class: \"driver-assigned\",\n    }] : []),\n    ...(isEntitled('myLoad', \"inTransit\") ? [{\n      count: \"inTransitCount\",\n      cradImg: \"assets/icon/transit.svg\",\n      title: \"In-Transit\",\n      myLoadRouting: \"/app/MyLoad/InTransit\",\n      className: \"in-transit\",\n      class: \"in_transit\",\n    }] : []),\n    // Commented  as per defect : DE3741\n    // {\n    //   count: \"1\",\n    //   cradImg: \"assets/icon/delivered.svg\",\n    //   title: \"Delivered Needs Paperwork\",\n    //   myLoadRouting: \"\",\n    //   className: \"delivered\",\n    //   class: \"delivered_needs\",\n    // },\n    ...(isEntitled('myLoad', \"recentlyDeliveredLoads\") ? [{\n      count: \"deliveredCount\",\n      cradImg: \"assets/icon/recent.svg\",\n      title: \"Recently Delivered Loads\",\n      myLoadRouting: \"/app/MyLoad/Delivered\",\n      className: \"recently_delivered\",\n      class: \"recently-delivered\",\n    }] : [])\n  ];\n\n  return CardsData;\n}\n\nexport const userProfileData = [\n  {\n    subHeading: \"First Name\",\n    inputValue: \"Igor\",\n  },\n  {\n    subHeading: \"Last Name\",\n    inputValue: \"Smith\",\n  },\n  {\n    subHeading: \"E-mail address\",\n    inputValue: \"Igor.Smith@schneider.com\",\n  },\n  {\n    subHeading: \"Phone No\",\n    inputValue: \"+ 125-634-7980\",\n  },\n  {\n    subHeading: \"Role\",\n    inputValue: \"Dispatcher\",\n  },\n  {\n    subHeading: \"Carrier ID\",\n    inputValue: \"123569\",\n  },\n];\nexport const NewDropDownData = [\n  {\n    name: \"Dry Van\",\n    value: \"Dry Van\",\n  },\n  {\n    name: \"Refrigerated\",\n    value: \"Refrigerated\",\n  },\n  {\n    name: \"Specialty\",\n    value: \"Specialty\",\n  },\n  {\n    name: \"Power Only\",\n    value: \"Power Only\",\n  },\n];\nexport const sortByOptions = [\n  //{ value: \"origin_deadhead\", name: \"Origin DeadHead\" },\n  //{ value: \"destination_deadhead\", name: \"Destination DeadHead\" },\n  //{ value: \"price\", name: \"Price\" },\n  { value: \"pickUpdate\", name: \"Pick-up date\" },\n  { value: \"total_distance\", name: \"Distance\" },\n];\n\n  ","import * as Constants from \"../../utils/constants\";\nexport const buyLoadRequest = (payload: any) => ({\n  type: Constants.BUYLOAD_DATA_REQUEST,\n  payload,\n});\n\nexport const buyLoadResponse = (payload: any) => ({\n  type: Constants.BUYLOAD_DATA_SUCCESS,\n  payload,\n});\n\nexport const buyLoadShipmentRequest = (payload: any, callback?: Function) => ({\n  type: Constants.BUYLOAD_SHIPMENT_REQUEST,\n  payload: {\n    data: payload,\n    callback\n  },\n});\nexport const buyLoadShipmentResponse = (payload: any) => ({\n    type: Constants.BUYLOAD_SHIPMENT_SUCCESS,\n    payload,\n  });\n  export const buyLoadStatusRemove=() =>({\n    type:Constants.BUYLOAD_REMOVE_STATUS,\n    \n  })\n  export const successclearBuyLoadResponse =(payload:any) =>({\n    type:Constants.CLEARBUYLOAD_RESPONSE,\n    payload\n  })\n  export const isGetShipmentError=(payload:any)=>({\n    type:Constants.isGetshipemntError,payload\n  })\n","import * as Constants from \"../../utils/constants\";\nexport const upadateShowToaster = () => {\n  return {\n    type: Constants.SHOW_TOASTER_VALUE,\n  };\n};\nexport const updateData = () => ({\n  type: Constants.UPDATE_DATA,\n});\n\nexport const loadData = (data: any) => ({\n  type: Constants.LOAD_DATA,\n  payload: data,\n});\n\nexport const loadCarrierData = (data: any, count: number) => ({\n  type: Constants.LOAD_CARRIER_DATA,\n  payload: { data, count },\n});\nexport const carrierAssignedLoads = (carierId: string) => ({\n  type: Constants.FETCH_CARRIER_ASSIGNED_LOADS,\n  payload: carierId,\n});\nexport const AssignDriver = (requestDriverList: any) => ({\n  type: Constants.ASSIGN_DRIVER,\n  payload: requestDriverList,\n});\n\nexport const SelectDriverList = (data: any) => ({\n  type: Constants.ASSIGN_DRIVER_LIST,\n  payload: data,\n});\n\nexport const addDriverSuccess = (payload: any) => ({\n  type: Constants.ADD_DRIVER_SUCCESS,\n  payload,\n});\n\nexport function assignDriverToShipment(payload: any) {\n  return {\n    type: Constants.CarrierActionTypes.ASSIGN_DRIVER_TO_SHIPMENT,\n    payload,\n  };\n}\n\nexport function assignDriverToShipmentResponse(payload: any) {\n  return {\n    type: Constants.CarrierActionTypes.ASSIGN_DRIVER_TO_SHIPMENT_RESPONSE,\n    payload,\n  };\n}\n\nexport const driverAssignedLoads = (carierId: string) => ({\n  type: Constants.FETCH_DRIVER_ASSIGNED_LOADS,\n  payload: carierId,\n});\n\nexport const fetchMyLoads = (\n  carrier: any,\n  driver: any,\n  hideLoader = false\n) => ({\n  type: Constants.FETCH_MYLOADS,\n  payload: { isCarrier: carrier, isDriver: driver, hideLoader },\n});\n\nexport const loadAssignedrData = (data: any, count: number) => ({\n  type: Constants.DRIVER_ASSIGNED_DATA,\n  payload: { data, count },\n});\nexport function clearAssignDriverToShipmentResponse() {\n  return {\n    type: Constants.CarrierActionTypes.CLEAR_ASSIGN_DRIVER_TO_SHIPMENT_RESPONSE,\n  };\n}\n\nexport const driverAssignedLoadsFromPush = (data: any) => ({\n  type: Constants.FETCH_DRIVER_ASSIGNED_LOADS_FROM_PUSH,\n  payload: data,\n});\n\nexport const fetchShipments = (query: any, isHideLoader = false, callBack = () => {}) => ({\n  type: Constants.SHIPMENT_LOADS,\n  payload: { query, isHideLoader, callBack },\n});\n\nexport const inTransitData = (data: any, count: number) => ({\n  type: Constants.LOAD_INTRANSIT_DATA,\n  payload: { data, count },\n});\n\nexport const shipmentForStartTrip = (data: any) => {\n  return {\n    type: Constants.CarrierActionTypes.SHIPMENT_FOR_STARTTRIP,\n    payload: data,\n  };\n};\n\nexport const shipmentForStartTripTimestamp = (timestamp: string) => {\n  return {\n    type: Constants.CarrierActionTypes.SHIPMENT_FOR_STARTTRIP_TIMESTAMP,\n    payload: timestamp\n  };\n};\n\nexport const startTrip = (data: any) => ({\n  type: Constants.CarrierActionTypes.START_TRIP,\n  payload: data,\n});\n\nexport const startTripInformationResponse = (data: any) => ({\n  type: Constants.CarrierActionTypes.START_TRIP_INFORMATION_RESPONSE,\n  payload: data,\n});\n\nexport const completeTripApiRequest = (data: any, shipmentId: string) => ({\n  type: Constants.CarrierActionTypes.COMPLETE_TRIP_API_REQUEST,\n  payload: {\n    data,\n    shipmentId,\n  },\n});\n\nexport const completeTripApiResponse = (data: any) => ({\n  type: Constants.CarrierActionTypes.COMPLETE_TRIP_API_RESPONSE,\n  payload: data,\n});\nexport const deliveredData = (data: any, count: number) => ({\n  type: Constants.LOAD_DELIVERED_DATA,\n  payload: {\n    data,\n    count,\n  },\n});\n","import { createSelector } from \"reselect\";\nimport { createAtom } from \"mobx\";\nimport { myLoadInitialState } from \"./../../reducers/myload/reducer\";\nimport { MyLoadCount } from \"../../schemas/myload/myload.Schema\";\nimport { loadData } from \"../../actions/Home/action\";\n\nexport const selectData = (state: any) => state.myload || myLoadInitialState;\n\nconst getIdParam = (_state: any, props: any) => {\n  const stringParam =\n    props && props.match && props.match.params && props.match.params[\"id\"];\n  return stringParam;\n};\nconst getModule = (_state: any, props: any) => {\n  const stringParam =\n    props && props.match && props.match.params && props.match.params[0];\n  return stringParam;\n};\n\n// export const makeSelectImg = () => createSelector([selectData], manage => manage.profileImg);\nexport const makeMyLoadCardData = () =>\n  createSelector(\n    [selectData],\n    (myload) => myload.myLoadCardData || myLoadInitialState.myLoadCardData\n  );\n\nexport const getCount = () =>\n  createSelector([selectData], (myload) => {\n    var _count: MyLoadCount = myload.myLoadCount;\n    return _count;\n  });\n\nexport const getLoaddata = () =>\n  createSelector([selectData], (myload) => {\n    return {\n      carrierLoad: myload.carrierAssigned || [],\n      driverLoad: myload.driverAssigned || [],\n    };\n  });\n\nexport function getDriverAssignedLoads() {\n  return createSelector([selectData], (myload) => {\n    return myload.driverAssigned || [];\n  });\n}\n\nexport function getCarrierAssignedLoads() {\n  return createSelector([selectData], (myload) => {\n    return myload.carrierAssigned || [];\n  });\n}\n\nexport function getInTransitLoads() {\n  return createSelector([selectData], (myload) => {\n    return myload.inTransit || [];\n  });\n}\n\nexport function getRecentDeliveredLoads() {\n  return createSelector([selectData], (myload) => {\n    return myload.delivered || [];\n  });\n}\n\nexport const getCarrierLoad = () =>\n  createSelector(selectData, getIdParam, getModule, (loaddata, id, module) => {\n    if (module === \"MyLoad/CarrierAssigned\") {\n      return (\n        (loaddata &&\n          loaddata.carrierAssigned.find((x: any) => x.shipmentId === id)) ||\n        {}\n      );\n    } else if (module === \"MyLoad/DriverAssigned\") {\n      return (\n        (loaddata &&\n          loaddata.driverAssigned.find((x: any) => x.shipmentId === id)) ||\n        {}\n      );\n    } else if (module === \"MyLoad/InTransit\") {\n      return (\n        (loaddata &&\n          loaddata.inTransit.find((x: any) => x.shipmentId === id)) ||\n        {}\n      );\n    } else if (module === \"MyLoad/Delivered\") {\n      return (\n        (loaddata &&\n          loaddata.delivered.find((x: any) => x.shipmentId === id)) ||\n        {}\n      );\n    } else if (module === \"MyLoad/shipmentUpdateScreen\") {\n      let data = [\n        ...loaddata.driverAssigned,\n        ...loaddata.inTransit,\n        ...loaddata.delivered,\n      ];\n      return (data && data.find((x: any) => x.shipmentId === id)) || {};\n    }\n  });\n\nexport const getConfirmStartInformation = () =>\n  createSelector(\n    [selectData],\n    (myload) => (myload && myload.confirmStart) || {}\n  );\n\nexport const getStartTripShipmentStatusMessage = () =>\n  createSelector(selectData, (shipmentData) => {\n    return shipmentData && shipmentData.confirmStartStatusMessage;\n  });\nexport const getBookLoadStatus = () =>\n  createSelector(selectData, (BuyLoad) => BuyLoad.buy || {});\n\nexport const getShipmentDetails = () =>\n  createSelector(selectData, (getShipment) => {\n    let obj = {};\n    if (getShipment.shipment.length > 0) {\n      obj = {\n        shipments: getShipment.shipment,\n        hasShipment: getShipment.shipment.length > 0 ? true : false,\n      };\n    }\n    return obj || [];\n  });\n\nexport const buyloadShipmentStatus = () =>\n  createSelector(\n    selectData,\n    (clearResponse) => clearResponse.buyLoadResponseStatus\n  );\n\nexport const getWarningDialogMessage = () =>\n  createSelector(\n    [selectData],\n    (myload) =>\n      myload.warningDialogMessage || myLoadInitialState.warningDialogMessage\n  );\nexport const updateStopInfo = () =>\n  createSelector(\n    selectData,\n    (myload) => (myload && myload.updateStop) || {}\n  );\n\n","import { all, put, call, takeLatest, select } from \"redux-saga/effects\";\nimport {\n  showLoading,\n  hideLoading,\n  showPullToRefresh,\n  hidePullToRefresh\n} from \"app/actions/Login/action\";\nimport { getSearchParams, getPullToRefreshState } from \"app/selectors/selector\";\nimport { getFavorite } from \"app/actions/Favorite/action\";\n\nimport * as constants from \"../../utils/constants\";\nimport request from \"../../utils/request\";\nimport {\n  GetRecent,\n  fetchUserDetailsSuccess,\n  moreTabContentResponse,\n  clearRegisterUserStatusMessage,\n  getConfigParams,\n  moreTabContentResponseDummy,\n  updateSearchParamsInOfflineJSON,\n  updateShipmentInfoInOfflineJSON\n} from \"../../actions/App/action\";\nimport { DomainConverter, isEntitled } from \"../../utils/common\";\nimport {\n  loadCarrierData,\n  loadAssignedrData,\n  inTransitData\n} from \"../../actions/carrierAssign/action\";\nimport {\n  registerDeviceResponseAction,\n  registerUserStatusMessage\n} from \"../../actions/App/action\";\nimport { getMyloadData } from \"../../utils/mock_Data\";\nimport { GetMyLoadCardData } from \"../../actions/myload/action\";\n\nexport function* updateGpsData(data: any) {\n  try {\n    const body = { gps: data.payload };\n    console.log(\"GPS\", data.payload);\n    yield put(showLoading());\n    const repos = yield call(request, [\n      \"APP\",\n      \"GPS_COORDS\",\n      null,\n      \"Content-Type\",\n      body\n    ]);\n    yield put(hideLoading());\n  } catch (e) {\n    // yield __model.getLoads() && put(loadData(__model.getLoads()));\n    yield put(hideLoading());\n  }\n}\n\nexport function checkTimeInterval(date: string, interval: string): boolean {\n  console.log(date, interval);\n  let getTimeInMilliSeconds = new Date(date).getTime();\n  let currentTimeInMilliSeconds = new Date().getTime();\n  let getInterval = parseInt(\n    ((currentTimeInMilliSeconds - getTimeInMilliSeconds) / 1000).toString()\n  );\n  console.log(getInterval, parseInt(interval) * 60);\n  if (getInterval <= parseInt(interval) * 60) {\n    return true;\n  }\n  return false;\n}\n\nexport function* fetchRecentResults(action: any) {\n  const { data, isHideLoader } = action && action.payload && action.payload;\n  const searchParamsSelector = getSearchParams();\n  const searchParamsState = yield select(searchParamsSelector);\n  const pullToRefreshSelector = getPullToRefreshState();\n  const pullToRefreshState = yield select(pullToRefreshSelector);\n  if (\n    searchParamsState &&\n    checkTimeInterval(\n      searchParamsState.RecentSearch,\n      searchParamsState.RecentSearchInterval\n    ) &&\n    !pullToRefreshState\n  ) {\n    return;\n  }\n  try {\n    if (!(action && action.payload && isHideLoader)) yield put(showLoading());\n    yield put(showPullToRefresh());\n    let recentReqestQuery = DomainConverter.domainToData<any>(data);\n    const fetchRecentResults = yield request<any>([\n      \"RECENT\",\n      \"RECENT\",\n      null,\n      \"\",\n      recentReqestQuery,\n      \"application/json\"\n    ]);\n    yield put(GetRecent(fetchRecentResults));\n    yield put(\n      updateSearchParamsInOfflineJSON({\n        RecentSearch: new Date().toUTCString(),\n        RecentSearchInterval: \"5\"\n      })\n    );\n    console.log(fetchRecentResults);\n    if (!(action && action.payload && isHideLoader)) yield put(hideLoading());\n    yield put(hidePullToRefresh());\n  } catch (e) {\n    if (!(action && action.payload && isHideLoader)) yield put(hideLoading());\n    yield put(hidePullToRefresh());\n  }\n}\n\n// handle API call to fetch favorite search data list\nexport function* fetchFavoriteData(action: any) {\n  const { data, isHideLoader } = action && action.payload && action.payload;\n  const searchParamsSelector = getSearchParams();\n  const searchParamsState = yield select(searchParamsSelector);\n  const pullToRefreshSelector = getPullToRefreshState();\n  const pullToRefreshState = yield select(pullToRefreshSelector);\n  if (\n    searchParamsState &&\n    checkTimeInterval(\n      searchParamsState.FavouriteSearch,\n      searchParamsState.FavouriteSearchInterval\n    ) &&\n    !pullToRefreshState\n  ) {\n    return;\n  }\n  try {\n    if (!(action && action.payload && isHideLoader)) {\n      yield put(showLoading());\n    }\n    yield put(showPullToRefresh());\n    let favoriteRequestQuery = DomainConverter.domainToData<any>(\n      action.payload.data\n    );\n    const fetchFavoriteResults = yield request<any>([\n      \"FAVORITE\",\n      \"FAVORITE_LOADS\",\n      null,\n      \"\",\n      favoriteRequestQuery,\n      \"application/json\"\n    ]);\n    yield put(getFavorite(fetchFavoriteResults));\n    yield put(\n      updateSearchParamsInOfflineJSON({\n        // WatchedLoads: true,\n        // WatchedLoadsInterval: \"5\",\n        // RecentSearch: new Date().toUTCString(),\n        // RecentSearchInterval: \"5\"\n        FavouriteSearch: new Date().toUTCString(),\n        FavouriteSearchInterval: \"5\"\n      })\n    );\n    console.log(fetchFavoriteResults);\n    if (!(action && action.payload && isHideLoader)) {\n      yield put(hideLoading());\n    }\n    yield put(hidePullToRefresh());\n  } catch (e) {\n    if (!(action && action.payload && isHideLoader)) yield put(hideLoading());\n    yield put(hidePullToRefresh());\n  }\n}\n\nexport function* fetchUserDetailsSaga(data: any) {\n  try {\n    // yield put(showLoading());\n    const { token, body } = data.payload;\n    let queryPayloads = DomainConverter.domainToData<any>(body);\n    const response = yield call(request, [\n      \"FETCH_USER_DETAILS\",\n      \"GET_USER_DETAILS\",\n      null,\n      token,\n      queryPayloads,\n      \"application/json\"\n    ]);\n    const userDetails =\n      response.data &&\n      response.data.getUserDetails &&\n      response.data.getUserDetails.length > 0 &&\n      response.data.getUserDetails[0];\n    yield put(fetchUserDetailsSuccess(userDetails));\n    // yield put(hideLoading());\n  } catch (e) {\n    yield put(hideLoading());\n  }\n}\n\nexport function* registerDeviceSaga(data: any) {\n  try {\n    // yield put(showLoading());\n    let registerDivceQuery = DomainConverter.domainToData<any>(data.payload);\n    const deviceRegisterResult = yield call(request, [\n      \"REGISTER_DEVICE\",\n      \"REGISTER_DEVICE\",\n      null,\n      \"\",\n      registerDivceQuery,\n      \"application/json\"\n    ]);\n    //yield put(loadAssignedrData(fetchhResults.data));\n    // yield put(hideLoading());\n    yield put(\n      registerDeviceResponseAction({\n        deviceRegisterResult: deviceRegisterResult.data,\n        errors: deviceRegisterResult.errors\n      })\n    );\n  } catch (e) {\n    yield put(\n      registerDeviceResponseAction({\n        deviceRegisterResult: null,\n        errors: [e.message]\n      })\n    );\n    // yield put(hideLoading());\n  }\n}\n\nexport function* fetchDriverrAssignedLoadsFromPush(data: any) {\n  try {\n    let filter = data.payload.query.query.getShipments.__args.filter;\n\n    if (!(data && data.payload && data.payload.isHideLoader)) {\n      yield put(showLoading());\n    }\n    let getSgipmentQuery = DomainConverter.domainToData<any>(\n      data.payload.query\n    );\n    const fetchhResults = yield call(request, [\n      \"MYLOAD\",\n      \"CARRIER\",\n      null,\n      \"\",\n      getSgipmentQuery,\n      \"application/json\"\n    ]);\n    let result = fetchhResults.data.getShipments;\n\n    if (filter.driverAssigned) {\n      yield put(\n        loadAssignedrData(\n          result.driverAssignedShipments,\n          result.driverAssignedCount\n        )\n      );\n    }\n\n    if (filter.carrierAssigned) {\n      yield put(\n        loadCarrierData(\n          result.carrierAssginedShipments,\n          result.carrierAssignedCount\n        )\n      );\n    }\n\n    if (filter.inTransit) {\n      yield put(\n        inTransitData(result.inTransitShipments, result.inTransitCount)\n      );\n    }\n\n    if (!(data && data.payload && data.payload.isHideLoader)) {\n      yield put(hideLoading());\n    }\n\n    if (data && data.payload && data.payload.callback) {\n      data.payload.callback();\n    }\n  } catch (e) {\n    if (!(data && data.payload && data.payload.isHideLoader)) {\n      yield put(hideLoading());\n    }\n  }\n}\n\nexport function* fetchMoreTabContent(data: any) {\n  try {\n    yield put(showLoading());\n    let moreTabContentQuery = DomainConverter.domainToData<any>(data.payload);\n\n    const fetchhResults = yield call(request, [\n      \"MORETAB\",\n      \"MORETAB\",\n      null,\n      \"\",\n      moreTabContentQuery,\n      \"application/json\"\n    ]);\n    yield put(moreTabContentResponse(fetchhResults));\n    yield put(hideLoading());\n    yield put(\n      moreTabContentResponseDummy({\n        termsAndConditions: \"1.0\",\n        eula: \"0.0\",\n        privacy: \"1.0\",\n        contactOptions: \"0.0\",\n        videoWalkthroughs: \"1.0\",\n        aboutSchneider: \"2.0\",\n        becomingCarrier: \"1.0\",\n        faq: \"0.0\",\n        schneiderOfferings: \"0.0\"\n      })\n    );\n  } catch (e) {\n    yield put(hideLoading());\n  }\n}\n\nexport function* MyLoadCardDataData() {\n  try {\n    yield put(showLoading());\n    const repos = getMyloadData();\n    yield put(GetMyLoadCardData(repos));\n    yield put(hideLoading());\n  } catch (e) {\n    yield put(hideLoading());\n  }\n}\n\nexport function* fetchConfigJSON(action: any) {\n  try {\n    yield put(showLoading());\n\n    // const fetchhResults = yield call(request, [\n    //   \"MORETAB\",\n    //   \"MORETAB\",\n    //   null,\n    //   \"\",\n    //   moreTabContentQuery,\n    //   \"application/json\"\n    // ]);\n    console.log(action.payload);\n    yield put(getConfigParams(constants.configParamsConstant));\n    yield put(hideLoading());\n  } catch (e) {\n    yield put(hideLoading());\n  }\n}\nexport function* Registeruser(data: any) {\n  try {\n    clearRegisterUserStatusMessage();\n    yield put(showLoading());\n    const { token, body } = data.payload;\n    let registerQuery = DomainConverter.domainToData<any>(body);\n    const fetchhResults = yield call(request, [\n      \"FETCH_USER_DETAILS\",\n      \"USER_DETAILS\",\n      null,\n      token,\n      registerQuery,\n      \"application/json\"\n    ]);\n    const regiserUser =\n      (fetchhResults &&\n        fetchhResults.data &&\n        fetchhResults.data.registerMember) ||\n      {};\n\n    const errors = fetchhResults && fetchhResults.errors;\n    if (!errors) {\n      yield put(fetchUserDetailsSuccess(regiserUser.member));\n      yield put(\n        registerUserStatusMessage({\n          status: regiserUser.status,\n          message: regiserUser.message\n        })\n      );\n    } else if (errors && errors.length > 0 && errors[0].message) {\n      yield put(\n        registerUserStatusMessage({\n          status: false,\n          message: errors[0].message\n        })\n      );\n    }\n    yield put(hideLoading());\n  } catch (e) {\n    yield put(hideLoading());\n  }\n}\n\nexport function* findSearchDataAPI(action: any) {\n  try {\n    yield put(showLoading());\n    // const date = new Date().toTimeString();\n    console.log(action.payload);\n    yield put(\n      updateSearchParamsInOfflineJSON({\n        RecommendedLoads: true,\n        RecommendedLoadsInterval: \"5\",\n        WatchedLoads: true,\n        WatchedLoadsInterval: \"10\",\n        RecentSearch: true,\n        RecentSearchInterval: \"10\",\n        FavouriteSearch: true,\n        FavouriteSearchInterval: \"10\"\n      })\n    );\n    yield put(hideLoading());\n  } catch (e) {\n    yield put(hideLoading());\n  }\n}\n\nexport function* findShipmentInfoAPI(action: any) {\n  try {\n    yield put(showLoading());\n    // const date = new Date().toTimeString();\n    console.log(action.payload);\n    yield put(\n      updateShipmentInfoInOfflineJSON({\n        shipment: true,\n        shipmentInterval: \"5\"\n      })\n    );\n    yield put(hideLoading());\n  } catch (e) {\n    yield put(hideLoading());\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([\n    takeLatest(constants.UPDATE_GPS_COORDS, updateGpsData),\n    takeLatest(constants.OFFLINE_MODE_START, fetchConfigJSON),\n    takeLatest(constants.FIND_SEARCH_DATA, findSearchDataAPI),\n    takeLatest(constants.FIND_SHIPMENT_INFO, findShipmentInfoAPI),\n    takeLatest(constants.FETCH_USER_DETAILS, fetchUserDetailsSaga),\n    takeLatest(constants.REGISTER_DEVICE_ACTION, registerDeviceSaga),\n    takeLatest(\n      constants.FETCH_DRIVER_ASSIGNED_LOADS_FROM_PUSH,\n      fetchDriverrAssignedLoadsFromPush\n    ),\n    takeLatest(constants.GET_MORE_TAB_CONTENT, fetchMoreTabContent),\n    takeLatest(constants.MYLOAD_CARD_DATA, MyLoadCardDataData),\n    takeLatest(constants.RECENT_LOADS, fetchRecentResults),\n    takeLatest(constants.REGISTER_USER, Registeruser),\n    takeLatest(constants.FAVORITE_LOADS_DATA, fetchFavoriteData)\n  ]);\n}\n","import { all, put, call, takeEvery, select } from \"redux-saga/effects\";\nimport {\n  showLoading,\n  hideLoading,\n  showPullToRefresh,\n  hidePullToRefresh,\n} from \"../../actions/Login/action\";\nimport * as constants from \"../../utils/constants\";\nimport request from \"../../utils/request\";\nimport {\n  GetMyLoadCardData,\n  confirmStartInformationSuccess,\n  confirmStartInformationStatusMessage,\n  updateStopInformationResponse,\n  showWarningDialog,\n} from \"../../actions/myload/action\";\nimport { getMyloadData } from \"../../utils/mock_Data\";\nimport { DomainConverter } from \"../../utils/common\";\n\nimport {\n  buyLoadResponse,\n  buyLoadShipmentResponse,\n} from \"../../actions/BookLoad/action\";\nimport {\n  loadCarrierData,\n  loadAssignedrData,\n  inTransitData,\n  shipmentForStartTrip,\n  startTripInformationResponse,\n  completeTripApiResponse,\n  deliveredData,\n  shipmentForStartTripTimestamp,\n} from \"../../actions/carrierAssign/action\";\nimport * as selectors from \"../../selectors/Myload/selector\";\n\nimport { MODULES } from \"../../utils/constants\";\nimport {\n  getShipmentParams,\n  getPullToRefreshState,\n} from \"app/selectors/selector\";\nimport { checkTimeInterval } from \"../App/saga\";\nimport { updateShipmentInfoInOfflineJSON } from \"app/actions/App/action\";\n\nexport function* profileImg(data: any) {\n  try {\n    yield put(showLoading());\n    const body = {\n      \"image-content\": \"data.payload\",\n    };\n    const response = yield call(request, [\n      \"MYLOAD\",\n      \"PROFILE_IMG\",\n      null,\n      \"Content-type\",\n      body,\n      null,\n    ]);\n    // yield put(PROFILE_IMAGE_SET(repos));\n    yield put(hideLoading());\n  } catch (e) {\n    yield put(hideLoading());\n  }\n}\n\nexport function* MyLoadCardDataData() {\n  try {\n    yield put(showLoading());\n    const repos = getMyloadData();\n    yield put(GetMyLoadCardData(repos));\n    yield put(hideLoading());\n  } catch (e) {\n    yield put(hideLoading());\n  }\n}\n\nexport function* fetchShipments(data: any) {\n  const shipmentParamsSelector = getShipmentParams();\n  const shipmentParamsState = yield select(shipmentParamsSelector);\n  const pullToRefreshSelector = getPullToRefreshState();\n  const pullToRefreshState = yield select(pullToRefreshSelector);\n  if (\n    shipmentParamsState &&\n    checkTimeInterval(\n      shipmentParamsState.shipment,\n      shipmentParamsState.shipmentInterval\n    ) &&\n    !pullToRefreshState\n  ) {\n    return;\n  }\n  try {\n    const { filter } = data.payload.query.query.getShipments.__args;\n    if (!(data && data.payload && data.payload.isHideLoader)) {\n      yield put(showLoading());\n    } else {\n      yield put(showPullToRefresh());\n    }\n    const getSgipmentQuery = DomainConverter.domainToData<any>(\n      data.payload.query\n    );\n    const fetchhResults = yield call(request, [\n      \"MYLOAD\",\n      \"CARRIER\",\n      null,\n      \"\",\n      getSgipmentQuery,\n      \"application/json\",\n    ]);\n    const results =\n      fetchhResults && fetchhResults.data && fetchhResults.data.getShipments;\n    if (results) {\n      if (filter.carrierAssigned) {\n        yield put(\n          loadCarrierData(\n            results.carrierAssginedShipments,\n            results.carrierAssignedCount\n          )\n        );\n      }\n      if (filter.driverAssigned) {\n        let driverShipments: any[] =\n          results.driverAssignmentPendingShipments || [];\n        let driverShipmentCount: number =\n          results.driverAssignedPendingCount || 0;\n\n        driverShipments = driverShipments.concat(\n          results.driverAssignedShipments\n        );\n        driverShipmentCount += results.driverAssignedCount;\n\n        yield put(loadAssignedrData(driverShipments, driverShipmentCount));\n      }\n      if (filter.inTransit) {\n        yield put(\n          inTransitData(results.inTransitShipments, results.inTransitCount)\n        );\n      }\n      if (filter.delivered) {\n        yield put(\n          deliveredData(results.deliveredShipments, results.deliveredCount)\n        );\n      }\n    }\n    if (data && data.payload && data.payload.callBack) {\n      data.payload.callBack();\n    }\n    if (!(data && data.payload && data.payload.isHideLoader)) {\n      yield put(hideLoading());\n    }\n    yield put(hidePullToRefresh());\n    yield put(\n      updateShipmentInfoInOfflineJSON({\n        shipment: new Date().toUTCString(),\n        shipmentInterval: \"5\",\n      })\n    );\n  } catch (e) {\n    if (!(data && data.payload && data.payload.isHideLoader)) {\n      yield put(hideLoading());\n    }\n    yield put(hidePullToRefresh());\n  }\n}\n\nexport function* completeTripSaga(data: any) {\n  try {\n    yield put(showLoading());\n    const query = DomainConverter.domainToData<any>(data.payload.data);\n    const response = yield call(request, [\n      \"MYLOAD\",\n      \"CARRIER\",\n      null,\n      \"\",\n      query,\n      \"application/json\",\n    ]);\n    yield put(completeTripApiResponse(response && response.data));\n    const completeTrip =\n      (response && response.data && response.data.completeTrip) || {};\n\n    const errors = response && response.errors;\n\n    if (!errors) {\n      yield put(shipmentForStartTrip(completeTrip.shipment));\n      yield put(shipmentForStartTripTimestamp(new Date().getTime().toString()));\n\n      if (completeTrip.status === true && !completeTrip.message) {\n        yield put(\n          confirmStartInformationStatusMessage({\n            status: false,\n            message:\n              completeTrip.status === true\n                ? `Great, that marks the end of your trip for load ${data.payload.shipmentId}`\n                : completeTrip.message,\n          })\n        );\n      } else if (completeTrip && completeTrip.message) {\n        yield put(\n          confirmStartInformationStatusMessage({\n            status: false,\n            message: completeTrip.message,\n          })\n        );\n      }\n    } else if (errors && errors.length > 0 && errors[0].message) {\n      yield put(\n        confirmStartInformationStatusMessage({\n          status: false,\n          message: errors[0].message,\n        })\n      );\n    }\n\n    yield put(hideLoading());\n  } catch (e) {\n    yield put(hideLoading());\n  }\n}\n\nexport function* updateStop(data: any) {\n  try {\n    yield put(showLoading());\n    const queryParams = DomainConverter.domainToData<any>(data.payload.data);\n    const fetchhResults = yield call(request, [\n      \"MYLOAD\",\n      \"CARRIER\",\n      null,\n      \"\",\n      queryParams,\n      \"application/json\",\n    ]);\n    const updateStop =\n      (fetchhResults && fetchhResults.data && fetchhResults.data.updateStop) ||\n      {};\n\n    const errors = fetchhResults && fetchhResults.errors;\n\n    if (!errors) {\n      yield put(shipmentForStartTrip(updateStop.shipment));\n      yield put(shipmentForStartTripTimestamp(new Date().getTime().toString()));\n\n      if (updateStop && updateStop.message && updateStop.status == true) {\n        yield put(showWarningDialog(updateStop.message));\n      } else if (updateStop && updateStop.message) {\n        yield put(\n          confirmStartInformationStatusMessage({\n            status: false,\n            message: updateStop.message,\n          })\n        );\n      }\n\n      if (data.payload.callBack) {\n        data.payload.callBack(updateStop.shipment);\n      }\n    } else if (errors && errors.length > 0 && errors[0].message) {\n      yield put(\n        confirmStartInformationStatusMessage({\n          status: false,\n          message: errors[0].message,\n        })\n      );\n    }\n\n    yield put(hideLoading());\n  } catch (error) {\n    yield put(hideLoading());\n  }\n}\nexport function* stratTrip(data: any) {\n  try {\n    yield put(showLoading());\n    const queryParams = DomainConverter.domainToData<any>(data.payload);\n    const fetchhResults = yield call(request, [\n      \"MYLOAD\",\n      \"CARRIER\",\n      null,\n      \"\",\n      queryParams,\n      \"application/json\",\n    ]);\n    const startTrip =\n      (fetchhResults && fetchhResults.data && fetchhResults.data.startTrip) ||\n      {};\n\n    const errors = fetchhResults && fetchhResults.errors;\n\n    if (!errors) {\n      yield put(shipmentForStartTrip(startTrip.shipment));\n      yield put(shipmentForStartTripTimestamp(new Date().getTime().toString()));\n\n      if (startTrip && startTrip.message) {\n        yield put(\n          confirmStartInformationStatusMessage({\n            status: false,\n            message: startTrip.message,\n          })\n        );\n      }\n\n      if (data.payload.callBack) {\n        data.payload.callBack(startTrip.shipment);\n      }\n    } else if (errors && errors.length > 0 && errors[0].message) {\n      yield put(\n        confirmStartInformationStatusMessage({\n          status: false,\n          message: errors[0].message,\n        })\n      );\n    }\n\n    yield put(startTripInformationResponse(fetchhResults.data.startTrip));\n    yield put(hideLoading());\n  } catch (error) {\n    yield put(hideLoading());\n  }\n}\n\nexport function* confirmStartSaga(data: any) {\n  try {\n    yield put(showLoading());\n    const queryParams = DomainConverter.domainToData<any>(data.payload.data);\n    const fetchhResults = yield call(request, [\n      \"MYLOAD\",\n      \"CARRIER\",\n      null,\n      \"\",\n      queryParams,\n      \"application/json\",\n    ]);\n    const confirmStart =\n      (fetchhResults &&\n        fetchhResults.data &&\n        fetchhResults.data.confirmStart) ||\n      {};\n\n    const errors = fetchhResults && fetchhResults.errors;\n\n    if (!errors) {\n      yield put(shipmentForStartTrip(confirmStart.shipment));\n      yield put(shipmentForStartTripTimestamp(new Date().getTime().toString()));\n      if (confirmStart && confirmStart.message) {\n        yield put(\n          confirmStartInformationStatusMessage({\n            status: false,\n            message: confirmStart.message,\n          })\n        );\n      }\n\n      if (data.payload.callback) {\n        data.payload.callback(confirmStart.shipment);\n      }\n    } else if (errors && errors.length > 0 && errors[0].message) {\n      yield put(\n        confirmStartInformationStatusMessage({\n          status: false,\n          message: errors[0].message,\n        })\n      );\n    }\n    yield put(confirmStartInformationSuccess(confirmStart.shipment));\n    yield put(hideLoading());\n  } catch (error) {\n    yield put(hideLoading());\n  }\n}\nexport function* buyLoadResults(action: any) {\n  const { query, data } = action.payload;\n  try {\n    yield put(showLoading());\n    const bookloadRequest = DomainConverter.dataToMutation<any>(query, data);\n    const bookloadresponse = yield call(request, [\n      \"MYLOAD\",\n      \"BUY_LOAD\",\n      null,\n      \"\",\n      bookloadRequest,\n      \"application/json\",\n    ]);\n    yield put(buyLoadResponse(bookloadresponse));\n    yield put(hideLoading());\n  } catch (e) {\n    yield put(hideLoading());\n  }\n}\n\nexport function* getShipmentResults(action: any) {\n  try {\n    if (action && action.payload && action.payload.data.isPullToRefresh) {\n      yield put(showPullToRefresh());\n    } else {\n      yield put(showLoading());\n    }\n    const getShipmentRequest = DomainConverter.domainToData<any>(\n      action.payload.data.query\n    );\n    const getShipmentResponse = yield call(request, [\n      \"MYLOAD\",\n      \"CARRIER\",\n      null,\n      \"\",\n      getShipmentRequest,\n      \"application/json\",\n    ]);\n    yield put(buyLoadShipmentResponse(getShipmentResponse));\n    if (action.payload.callback) {\n      action.payload.callback();\n    }\n    const myLoadStore = yield select(selectors.selectData);\n    const shipment = (myLoadStore && myLoadStore.shipment) || {};\n    if (action.payload.data.module === MODULES.CARRIER_ASSIGNED_MODULE) {\n      const selectedValue = (myLoadStore && myLoadStore.carrierAssigned) || [];\n      const res = selectedValue.map(\n        (obj: any) =>\n          shipment.find((o: any) => o.shipmentId === obj.shipmentId) || obj\n      );\n      yield put(loadCarrierData(res, res.length));\n    }\n    if (action.payload.data.module === MODULES.DRIVER_ASSIGNED_MODULE) {\n      const selectedValue = (myLoadStore && myLoadStore.driverAssigned) || [];\n      const res = selectedValue.map(\n        (obj: any) =>\n          shipment.find((o: any) => o.shipmentId === obj.shipmentId) || obj\n      );\n      yield put(loadAssignedrData(res, res.length));\n      yield put(shipmentForStartTrip(shipment[0]));\n      yield put(shipmentForStartTripTimestamp(new Date().getTime().toString()));\n    }\n    if (action.payload.data.module === MODULES.INTRANSIT_MODULE) {\n      const selectedValue = (myLoadStore && myLoadStore.inTransit) || [];\n      const res = selectedValue.map(\n        (obj: any) =>\n          shipment.find((o: any) => o.shipmentId === obj.shipmentId) || obj\n      );\n      yield put(inTransitData(res, res.length));\n      yield put(shipmentForStartTrip(shipment[0]));\n      yield put(shipmentForStartTripTimestamp(new Date().getTime().toString()));\n    }\n    if (action.payload.data.module === MODULES.RECENTLY_DELIVERED_MODULE) {\n      const selectedValue = (myLoadStore && myLoadStore.delivered) || [];\n      const res = selectedValue.map(\n        (obj: any) =>\n          shipment.find((o: any) => o.shipmentId === obj.shipmentId) || obj\n      );\n      yield put(deliveredData(res, res.length));\n      yield put(shipmentForStartTrip(shipment[0]));\n      yield put(shipmentForStartTripTimestamp(new Date().getTime().toString()));\n    }\n    if (action && action.payload && action.payload.data.isPullToRefresh) {\n      yield put(hidePullToRefresh());\n    } else {\n      yield put(hideLoading());\n    }\n  } catch (e) {\n    if (action && action.payload && action.payload.data.isPullToRefresh) {\n      yield put(hidePullToRefresh());\n    } else {\n      yield put(hideLoading());\n    }\n  }\n}\nexport default function* rootSaga() {\n  yield all([\n    takeEvery(constants.PROFILE_IMAGE_SET, profileImg),\n    takeEvery(constants.MYLOAD_CARD_DATA, MyLoadCardDataData),\n    takeEvery(constants.SHIPMENT_LOADS, fetchShipments),\n    takeEvery(\n      constants.CarrierActionTypes.CONFIRM_START_INFORMATION,\n      confirmStartSaga\n    ),\n    takeEvery(constants.CarrierActionTypes.UPDATE_STOP_INFORMATION, updateStop),\n\n    takeEvery(constants.CarrierActionTypes.START_TRIP, stratTrip),\n    takeEvery(constants.BUYLOAD_DATA_REQUEST, buyLoadResults),\n    takeEvery(\n      constants.CarrierActionTypes.COMPLETE_TRIP_API_REQUEST,\n      completeTripSaga\n    ),\n    takeEvery(constants.BUYLOAD_SHIPMENT_REQUEST, getShipmentResults),\n  ]);\n}\n","import { all, put, call, takeLatest } from \"redux-saga/effects\";\nimport { showLoading, hideLoading } from \"../../actions/Login/action\";\nimport * as constants from \"../../utils/constants\";\nimport request from \"../../utils/request\";\nimport {\n  SelectDriverList,\n  assignDriverToShipmentResponse,\n} from \"../../actions/carrierAssign/action\";\nimport { DomainConverter } from \"../../utils/common\";\n\nexport function* fetchDriverListResults(data: any) {\n  try {\n    yield put(showLoading());\n    let driverlistReqestQuery = DomainConverter.domainToData<any>(data.payload);\n    const response = yield request<any>([\n      \"DRIVERS_LIST\",\n      \"DRIVERS_LIST\",\n      null,\n      \"\",\n      driverlistReqestQuery,\n      \"application/json\",\n    ]);\n    const driverList = (response && response.data && response.data.getMembers) || []\n    yield put(SelectDriverList(driverList));\n    yield put(hideLoading());\n  } catch (e) {\n    yield put(hideLoading());\n  }\n}\n\nexport function* assignDriverToShipmentSaga(data: any) {\n  try {\n    yield put(showLoading());\n    let mutationQuery = DomainConverter.domainToData<any>(data.payload);\n    const response = yield request<any>([\n      \"MYLOAD\",\n      \"CARRIER\",\n      null,\n      \"\",\n      mutationQuery,\n      \"application/json\",\n    ]);\n    yield put(hideLoading());\n    yield put(\n      assignDriverToShipmentResponse({\n        assignDriverToShipment:\n          (response.data && response.data.assignDriverToShipment) || false,\n        errors: response.errors,\n      })\n    );\n  } catch (e) {\n    yield put(hideLoading());\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([\n    takeLatest(constants.ASSIGN_DRIVER, fetchDriverListResults),\n    takeLatest(\n      constants.CarrierActionTypes.ASSIGN_DRIVER_TO_SHIPMENT,\n      assignDriverToShipmentSaga\n    ),\n  ]);\n}\n","import { conformsTo, isFunction, isObject } from 'lodash';\r\nimport invariant from 'invariant';\r\n\r\n/**\r\n * Validate the shape of redux store\r\n */\r\nexport default function checkStore(store:any) {\r\n  const shape = {\r\n    dispatch: isFunction,\r\n    subscribe: isFunction,\r\n    getState: isFunction,\r\n    replaceReducer: isFunction,\r\n    runSaga: isFunction,\r\n    injectedReducers: isObject,\r\n    injectedSagas: isObject,\r\n  };\r\n  invariant(\r\n    conformsTo(store, shape),\r\n    '(app/utils...) injectors: Expected a valid redux store',\r\n  );\r\n}\r\n","import invariant from 'invariant';\r\nimport { isEmpty, isFunction, isString, conformsTo } from 'lodash';\r\n\r\nimport checkStore from './checkStore';\r\nimport { DAEMON, ONCE_TILL_UNMOUNT, RESTART_ON_REMOUNT } from './constants';\r\n\r\nconst allowedModes = [RESTART_ON_REMOUNT, DAEMON, ONCE_TILL_UNMOUNT];\r\n\r\nconst checkKey = (key:any) =>\r\n  invariant(\r\n    isString(key) && !isEmpty(key),\r\n    '(app/utils...) injectSaga: Expected `key` to be a non empty string',\r\n  );\r\n\r\nconst checkDescriptor = (descriptor:any) => {\r\n  const shape = {\r\n    saga: isFunction,\r\n    mode: (mode:any) => isString(mode) && allowedModes.includes(mode),\r\n  };\r\n  invariant(\r\n    conformsTo(descriptor, shape),\r\n    '(app/utils...) injectSaga: Expected a valid saga descriptor',\r\n  );\r\n};\r\n\r\nexport function injectSagaFactory(store:any, isValid:any) {\r\n  return function injectSaga(key:any, descriptor:any = {}, args:any) {\r\n    if (!isValid) checkStore(store);\r\n\r\n    const newDescriptor:any = {\r\n      ...descriptor,\r\n      mode: descriptor.mode || DAEMON,\r\n    };\r\n    const { saga, mode } = newDescriptor;\r\n\r\n    checkKey(key);\r\n    checkDescriptor(newDescriptor);\r\n\r\n    let hasSaga = Reflect.has(store.injectedSagas, key);\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      const oldDescriptor = store.injectedSagas[key];\r\n      // enable hot reloading of daemon and once-till-unmount sagas\r\n      if (hasSaga && oldDescriptor.saga !== saga) {\r\n        oldDescriptor.task.cancel();\r\n        hasSaga = false;\r\n      }\r\n    }\r\n\r\n    if (\r\n      !hasSaga ||\r\n      (hasSaga && mode !== DAEMON && mode !== ONCE_TILL_UNMOUNT)\r\n    ) {\r\n      /* eslint-disable no-param-reassign */\r\n      store.injectedSagas[key] = {\r\n        ...newDescriptor,\r\n        task: store.runSaga(saga, args),\r\n      };\r\n      /* eslint-enable no-param-reassign */\r\n    }\r\n  };\r\n}\r\n\r\nexport function ejectSagaFactory(store:any, isValid:any) {\r\n  return function ejectSaga(key:any) {\r\n    if (!isValid) checkStore(store);\r\n\r\n    checkKey(key);\r\n\r\n    if (Reflect.has(store.injectedSagas, key)) {\r\n      const descriptor = store.injectedSagas[key];\r\n      if (descriptor.mode && descriptor.mode !== DAEMON) {\r\n        descriptor.task.cancel();\r\n        // Clean up in production; in development we need `descriptor.saga` for hot reloading\r\n        if (process.env.NODE_ENV === 'production') {\r\n          // Need some value to be able to detect `ONCE_TILL_UNMOUNT` sagas in `injectSaga`\r\n          store.injectedSagas[key] = 'done'; // eslint-disable-line no-param-reassign\r\n        }\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nexport default function getInjectors(store:any) {\r\n  checkStore(store);\r\n\r\n  return {\r\n    injectSaga: injectSagaFactory(store, true),\r\n    ejectSaga: ejectSagaFactory(store, true),\r\n  };\r\n}\r\n","import React from 'react';\r\nimport hoistNonReactStatics from 'hoist-non-react-statics';\r\nimport { ReactReduxContext } from 'react-redux';\r\n\r\nimport getInjectors from './sagaInjectors';\r\n\r\n/**\r\n * Dynamically injects a saga, passes component's props as saga arguments\r\n *\r\n * @param {string} key A key of the saga\r\n * @param {function} saga A root saga that will be injected\r\n * @param {string} [mode] By default (constants.DAEMON) the saga will be started\r\n * on component mount and never canceled or started again. Another two options:\r\n *   - constants.RESTART_ON_REMOUNT — the saga will be started on component mount and\r\n *   cancelled with `task.cancel()` on component unmount for improved performance,\r\n *   - constants.ONCE_TILL_UNMOUNT — behaves like 'RESTART_ON_REMOUNT' but never runs it again.\r\n *\r\n */\r\n\r\nexport default ({key, saga}:any) => (WrappedComponent:any) => {\r\n  class InjectSaga extends React.Component {\r\n    static WrappedComponent = WrappedComponent;\r\n\r\n    static contextType = ReactReduxContext;\r\n\r\n    static displayName = `withSaga(${WrappedComponent.displayName ||\r\n      WrappedComponent.name ||\r\n      'Component'})`;\r\n      \r\n    injectors:any;\r\n\r\n    constructor(props:any, context:any) {\r\n      super(props, context);\r\n\r\n      this.injectors = getInjectors(context.store);\r\n\r\n      this.injectors.injectSaga(key, { saga, mode: '@@saga-injector/daemon' }, this.props);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.injectors.ejectSaga(key);\r\n    }\r\n\r\n    render() {\r\n      return <WrappedComponent {...this.props} />;\r\n    }\r\n  }\r\n\r\n  return hoistNonReactStatics(InjectSaga, WrappedComponent);\r\n};\r\n\r\n","import invariant from 'invariant';\r\nimport { isEmpty, isFunction, isString } from 'lodash';\r\n\r\nimport checkStore from './checkStore';\r\nimport createReducer from '../store/CombineReducers';\r\n\r\nexport function injectReducerFactory(store:any, isValid:any) {\r\n  return function injectReducer(key:any, reducer:any) {\r\n    if (!isValid) checkStore(store);\r\n\r\n    invariant(\r\n      isString(key) && !isEmpty(key) && isFunction(reducer),\r\n      '(app/utils...) injectReducer: Expected `reducer` to be a reducer function',\r\n    );\r\n\r\n    // Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\r\n    if (\r\n      Reflect.has(store.injectedReducers, key) &&\r\n      store.injectedReducers[key] === reducer\r\n    )\r\n      return;\r\n\r\n    store.injectedReducers[key] = reducer; // eslint-disable-line no-param-reassign\r\n    store.replaceReducer(createReducer(store.injectedReducers));\r\n  };\r\n}\r\n\r\nexport default function getInjectors(store:any) {\r\n  checkStore(store);\r\n\r\n  return {\r\n    injectReducer: injectReducerFactory(store, true),\r\n  };\r\n}\r\n","import React from 'react';\r\nimport hoistNonReactStatics from 'hoist-non-react-statics';\r\nimport { ReactReduxContext } from 'react-redux';\r\n\r\nimport getInjectors from './reducerInjectors';\r\n\r\n/**\r\n * Dynamically injects a reducer\r\n *\r\n * @param {string} key A key of the reducer\r\n * @param {function} reducer A reducer that will be injected\r\n *\r\n */\r\nexport default ({ key, reducer }:any) => (WrappedComponent:any) => {\r\n  class ReducerInjector extends React.Component {\r\n    static WrappedComponent = WrappedComponent;\r\n\r\n    static contextType = ReactReduxContext;\r\n\r\n    static displayName = `withReducer(${WrappedComponent.displayName ||\r\n      WrappedComponent.name ||\r\n      'Component'})`;\r\n\r\n    constructor(props:any, context:any) {\r\n      super(props, context);\r\n\r\n      getInjectors(context.store).injectReducer(key, reducer);\r\n    }\r\n\r\n    render() {\r\n      return <WrappedComponent {...this.props} />;\r\n    }\r\n  }\r\n\r\n  return hoistNonReactStatics(ReducerInjector, WrappedComponent);\r\n};\r\n\r\n","import React, { useState, useEffect, memo } from 'react';\nimport { IonLabel, IonButton, IonModal, IonRow, IonCol, IonGrid } from '@ionic/react';\nimport '../../../pages/Search/New/NewPage.scss';\nimport { NewDropDownData } from '../../../utils/mock_Data';\nimport { Trailer } from '../../../utils/constants';\ninterface DropDownProps {\n    labelName: string,\n    TrailerType: string,\n    handleChange: any,\n\n}\nexport const NewDropDown: React.FC<DropDownProps> = memo((props:any) => {\n    const { labelName, TrailerType, handleChange } = props;\n    const [showOptions, setShowOptions] = useState(false);\n    const [clickedOption, setclickedOption] = useState({ name: TrailerType, value: TrailerType });\n    const [selectedOption, setselectedOption] = useState({ name: TrailerType, value: TrailerType });\n    const hideDropdownMenu = (option: any) => {\n        setclickedOption(option);\n    }\n    const onConfrim = (option: any) => {\n        setselectedOption(option);\n        setShowOptions(false);\n        const event = { target: { name: Trailer, value: option.value } }\n        handleChange(event);\n    }\n\n    useEffect(() => {\n        setclickedOption({name: TrailerType, value: TrailerType })\n        setselectedOption({name: TrailerType, value: TrailerType })\n    }, [props.TrailerType])\n\n    return (\n        <>\n        <IonGrid class=\" trailer-ion-item\">\n            <IonLabel mode=\"ios\" class=\"trailer_type_label\">{labelName}</IonLabel>\n            <IonButton type=\"button\" class=\"dropdown-button trailer_type_dropdown\" data-test =\"dropdown-click\"\n            onClick={() => (setShowOptions(true))}>\n                {selectedOption.value} <i className=\"down\"></i>\n            </IonButton>\n        </IonGrid>\n        <IonModal isOpen={showOptions} cssClass=\"dropdown-modal\"\n            backdropDismiss={false}\n            onDidDismiss={() => (setShowOptions(false))}\n            >\n            {/* <div className=\"modal-div\" onClick={() => (setShowOptions(false))}> */}\n                <div className=\"search_options_trailer\">\n                    <IonRow class=\"dropdown-heading\"><IonCol> <p className=\"sortBy_text\">{labelName}</p> </IonCol></IonRow>\n                    <div className=\"options_content_trailer\">\n                        {NewDropDownData.map((option: any, k: any) => (\n                            <IonRow class=\"dropdown-row\" key={k} data-test=\"hide-dropdown\" onClick={() => hideDropdownMenu(option)}>\n                                <IonCol class={option.name === clickedOption.name ? 'checked' : ''}>{option.value} <i className=\"check\"></i> </IonCol></IonRow>\n                        ))}\n                    </div>\n                    <IonRow class=\"dropdown-handler\">\n                        <IonCol size=\"1\"></IonCol>\n                        <IonCol className=\"dropdown_cancel\" size=\"5\" data-test=\"dropdown-cancel\" onClick={() => { setShowOptions(false);\n                             setclickedOption(selectedOption) } }>\n                            <span>Cancel</span>\n                        </IonCol>\n                        <IonCol className=\"dropdown_cancel\" size=\"5\" data-test=\"confirm-cancel\" onClick={() => onConfrim(clickedOption)}>\n                            <span>OK</span>\n                        </IonCol>\n                        <IonCol size=\"1\"></IonCol>\n\n                    </IonRow>\n                </div>\n                {/* </div> */}\n            </IonModal>\n        </>\n    );\n});\n","import React, { PureComponent } from \"react\";\nimport { IonButton, IonImg, isPlatform, IonRow, IonCol } from \"@ionic/react\";\nimport { R2Configuration } from \"../../utils/common\";\n\ninterface errorProps {\n  constantText: any;\n  loads?: any;\n  constantButton: any;\n  addCapacity?: any;\n  redirectTo?: any;\n}\nexport class RecommendedError extends PureComponent<errorProps, any> {\n  render() {\n    return (\n      <div className=\"No-Recommended\">\n        <img\n          alt=\"logo\"\n          src=\"assets/icon/no-search-icon.svg\"\n          width=\"79.01px\"\n          height=\"84.59px\"\n        />\n        <p className=\"recommended-Error\">{this.props.constantText}</p>\n        {isPlatform(\"desktop\") ? (\n          <IonRow>\n            <IonCol size=\"6\">\n              <div className=\"SearchLoadBtn\">\n                <IonButton\n                  expand=\"full\"\n                  shape=\"round\"\n                  onClick={this.props.loads}\n                  size=\"large\"\n                  type=\"submit\"\n                  class=\"RecommendedSearch\"\n                >\n                  <IonImg\n                    src=\"assets/icon/SearchError.svg\"\n                    class=\"load-search\"\n                  />\n                  {this.props.constantButton}\n                </IonButton>\n              </div>\n            </IonCol>\n            {this.props.addCapacity && !R2Configuration.details.getR2FeatureEnable()? (\n              <>\n                <IonCol size=\"6\">\n                  <div className=\"SearchLoadBtn\">\n                    <IonButton\n                      expand=\"full\"\n                      shape=\"round\"\n                      onClick={this.props.addCapacity}\n                      size=\"large\"\n                      type=\"submit\"\n                      class=\"RecommendedSearch\"\n                    >\n                      <IonImg\n                        src=\"assets/images/manage-add-capacity.svg\"\n                        class=\"load-search\"\n                      />\n                      Add capacity\n                    </IonButton>\n                  </div>\n                </IonCol>\n              </>\n            ) : null}\n          </IonRow>\n        ) : (\n          <>\n            {\" \"}\n            <div className=\"SearchLoadBtn\">\n              <IonButton\n                expand=\"full\"\n                shape=\"round\"\n                onClick={this.props.loads}\n                size=\"large\"\n                type=\"submit\"\n                class=\"RecommendedSearch\"\n              >\n                <IonImg src=\"assets/icon/SearchError.svg\" class=\"load-search\" />\n                {this.props.constantButton}\n              </IonButton>\n            </div>\n            {this.props.addCapacity  && !R2Configuration.details.getR2FeatureEnable() ? (\n              <>\n                <div className=\"recommended-error-btn-p\">OR</div>\n\n                <div>\n                  <IonButton\n                    expand=\"full\"\n                    shape=\"round\"\n                    onClick={this.props.addCapacity}\n                    size=\"large\"\n                    type=\"submit\"\n                    class=\"RecommendedSearch\"\n                  >\n                    <IonImg\n                      src=\"assets/images/manage-add-capacity.svg\"\n                      class=\"load-search\"\n                    />\n                    Add capacity\n                  </IonButton>\n                </div>\n              </>\n            ) : null}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import { ILoadSearch, Isearch } from \"../../schemas/Search/Search.schema\";\nimport { setObject, getObject } from \"../../utils/common\";\n\nexport class Search {\n  __distance: string = \"mi\";\n  constructor() {}\n\n  private __carrier_state: ILoadSearch = {\n    size: 5,\n    page: 0,\n    sortColumn: \"pickUpdate\",\n    sortDirection: \"asc\",\n  };\n\n  get sortDirection() {\n    return this.__carrier_state.sortDirection;\n  }\n\n  set sortDirection(value) {\n    if (value) {\n      this.__carrier_state.sortDirection = value;\n    }\n  }\n\n  get page() {\n    return this.__carrier_state.page;\n  }\n  set page(value) {\n    if (value) {\n      this.__carrier_state.page = value;\n    }\n  }\n\n  get size() {\n    return this.__carrier_state.size;\n  }\n  set size(value) {\n    if (value) {\n      this.__carrier_state.size = value;\n    }\n  }\n  get originCountry() {\n    return this.__carrier_state.originCountry;\n  }\n  set originCountry(value) {\n    if (value) {\n      this.__carrier_state.originCountry = value;\n    }\n  }\n  get destinationCountry() {\n    return this.__carrier_state.destinationCountry;\n  }\n  set destinationCountry(value) {\n    if (value) {\n      this.__carrier_state.destinationCountry = value;\n    }\n  }\n  get sortColumn() {\n    return this.__carrier_state.sortColumn;\n  }\n  set sortColumn(value) {\n    if (value) {\n      this.__carrier_state.sortColumn = value;\n    }\n  }\n\n  get userID() {\n    return this.__carrier_state.userId;\n  }\n\n  set userID(value) {\n    if (value) {\n      this.__carrier_state.userId = value;\n    }\n  }\n  get carrierId() {\n    return this.__carrier_state.carrierId;\n  }\n\n  set carrierId(value) {\n    if (value) {\n      this.__carrier_state.carrierId = value;\n    }\n  }\n\n  get originCity() {\n    return this.__carrier_state.originCity;\n  }\n\n  set originCity(value) {\n    if (value) {\n      this.__carrier_state.originCity = value;\n    }\n  }\n\n  get originState() {\n    return this.__carrier_state.originState;\n  }\n\n  set originState(value) {\n    if (value) {\n      this.__carrier_state.originState = value;\n    }\n  }\n\n  get originRadius() {\n    return this.__carrier_state.originRadius;\n  }\n\n  set originRadius(value) {\n    if (value) {\n      this.__carrier_state.originRadius = value;\n    }\n  }\n\n  get pickUpdate() {\n    return this.__carrier_state.pickUpdate;\n  }\n\n  set pickUpdate(value) {\n    if (value) {\n      this.__carrier_state.pickUpdate = value;\n    }\n  }\n\n  get destinationCity() {\n    return this.__carrier_state.destinationCity;\n  }\n\n  set destinationCity(value) {\n    if (value) {\n      this.__carrier_state.destinationCity = value;\n    }\n  }\n\n  get destinationState() {\n    return this.__carrier_state.destinationState;\n  }\n\n  set destinationState(value) {\n    if (value) {\n      this.__carrier_state.destinationState = value;\n    }\n  }\n\n  get destinationRadius() {\n    return this.__carrier_state.destinationRadius;\n  }\n\n  set destinationRadius(value) {\n    if (value) {\n      this.__carrier_state.destinationRadius = value;\n    }\n  }\n\n  get dropDate() {\n    return this.__carrier_state.dropDate;\n  }\n\n  set dropDate(value) {\n    if (value) {\n      this.__carrier_state.dropDate = value;\n    }\n  }\n\n  get trailerType() {\n    return this.__carrier_state.trailerType;\n  }\n\n  set trailerType(value) {\n    if (value) {\n      this.__carrier_state.trailerType = value;\n    }\n  }\n\n  get favorite() {\n    return this.__carrier_state.favorite;\n  }\n\n  set favorite(value) {\n    if (value) {\n      this.__carrier_state.favorite = value;\n    }\n  }\n  get carrierScac() {\n    return this.__carrier_state.carrierScac;\n  }\n\n  set carrierScac(value) {\n    if (value) {\n      this.__carrier_state.carrierScac = value;\n    }\n  }\n  get carrierTier() {\n    return this.__carrier_state.carrierTier;\n  }\n\n  set carrierTier(value) {\n    if (value) {\n      this.__carrier_state.carrierTier = value;\n    }\n  }\n  get userRole() {\n    return this.__carrier_state.userRole;\n  }\n\n  set userRole(value) {\n    if (value) {\n      this.__carrier_state.userRole = value;\n    }\n  }\n \n  getRequestPayload() {\n    return {\n      query: {\n        searchLoadPostings: {\n          __args: {\n            input: this.__carrier_state,\n          },\n          totalRecords: true,\n          loadPostings: {\n            loadId: true,\n            transportMode: true,\n            termsAndConditions: true,\n            loadPostingStatus: true,\n            sourceSystem: true,\n            hasAppointments: true,\n            isHazardous: true,\n            isHighValue: true,\n            isTemperatureControlled: true,\n            totalDistance: true,\n            distanceUOM: true,\n            totalWeight: true,\n            weightUOM: true,\n            numberOfStops: true,\n            rate: {\n              binRateIdentifier: true,\n              binSource: true,\n              totalCharge: true,\n              lineHaulCharge: {\n                charge: true,\n                unitCharge: true,\n                quantity: true,\n                chargeDescription:true,     \n                rateQualifier: true\n              },\n              fuelCharge: {\n                charge: true,\n                unitCharge: true,\n                quantity: true,\n                chargeDescription:true,\n                rateQualifier: true\n              },\n              accessorials:  {\n                accessorialCode: true,\n              accessorialDescription: true,\n              accessorialType: true,\n              accessorialCharge: {\n                charge: true,\n                unitCharge: true,\n                quantity: true,\n                rateQualifier: true\n              }\n              }\n            },\n            specialServices: {\n              serviceDesc: true,\n              specialServiceDesc: true,\n            },\n            loadStop: {\n              stopId: true,\n              stopType: true,\n              city: true,\n              state: true,\n              postalCode: true,\n              country: true,\n              appointmentFrom: true,\n              appointmentTo: true,\n              timeZone: true,\n              deadHead: true,\n              stopSequence: true,\n              specialServices: {\n                serviceDesc: true,\n                specialServiceDesc: true,\n              },\n            },\n          },\n        },\n      },\n    };\n  }\n  persistLoads(_loads: []) {\n    return setObject(\"Search-Loads\", _loads);\n  }\n\n  getLoads() {\n    return getObject(\"Search-Loads\");\n  }\n  recentLoads(_loads: []) {\n    return setObject(\"Recent-Loads\", _loads);\n  }\n  getRecentLoads() {\n    return getObject(\"Recent-Loads\");\n  }\n  favoriteLoads(_loads: []) {\n    return setObject(\"Favorite-Loads\", _loads);\n  }\n  getfavoriteLoadss() {\n    return getObject(\"Favorite-Loads\");\n  }\n}\nconst searchModel = new Search();\nObject.freeze(searchModel);\n\nexport default searchModel;\n","import React, { useState, useEffect } from \"react\";\nimport DataTable from \"react-data-table-component\";\nimport { IonImg, IonGrid } from \"@ionic/react\";\nimport \"./searchResultsDesktop\";\nimport \"./searchResultsDesktop.scss\";\nimport \"../../../../theme/variables.scss\";\nimport \"../../../../theme/responsive-styles.scss\";\nimport { RecommendedError } from \"../../../pages/Home/RecommendedError\";\nimport {\n  searchResultsErrorText,\n  searchResultsErrorButton,\n  EVENT,\n  SCREEN, PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE, NO_NEWORK\n} from \"../../../utils/constants\";\nimport { Search } from \"../../../models/home/Search.model\";\nimport { logEvent } from \"../../../utils/Analytics\";\n\nconst customSort = (rows: any, field: any, direction: any) => {\n  let sortedList = [];\n  if (direction === \"asc\") {\n    sortedList = [...rows].sort((a: any, b: any) =>\n      a[field] > b[field] ? 1 : -1\n    );\n  } else {\n    sortedList = [...rows].sort((a: any, b: any) =>\n      a[field] > b[field] ? -1 : 1\n    );\n  }\n  return sortedList;\n};\n\nconst SearchResultDesktop = (props: any) => {\n  const { searchInput, pageName, totalRecords } = props;\n  const [sortable, setSortable] = useState(true);\n  const [sortColumn, changeSortColumn] = useState<string>(\n    searchInput && searchInput.sortColumn\n  );\n  const [pageSize, changePageSize] = useState<number>(\n    (searchInput && searchInput.size) || 5\n  );\n  const [selectedPage, changePage] = useState<number>(\n    (searchInput && searchInput.page) || 1\n  );\n  const [totalPages, updateTotalPages] = useState<number[]>([5, 10]);\n\n  useEffect(() => {\n    if (Object.keys(searchInput).length) {\n      const userRole =\n        props.userDetails &&\n        props.userDetails.userApplicationDetails &&\n        props.userDetails.userApplicationDetails[0].roles.map(\n          (carrierName: any, index: number) => {\n            return carrierName.roleName;\n          }\n        );\n      const modelSearch: Search = new Search();\n      const searchModel: Search = searchInput;\n      modelSearch.originCity = searchModel.originCity;\n      modelSearch.originState = searchModel.originState;\n      modelSearch.originRadius = searchModel.originRadius;\n      modelSearch.pickUpdate = searchModel.pickUpdate;\n      modelSearch.dropDate = searchModel.dropDate;\n      modelSearch.destinationCity = searchModel.destinationCity;\n      modelSearch.destinationState = searchModel.destinationState;\n      modelSearch.destinationRadius = searchModel.destinationRadius;\n      modelSearch.favorite = searchModel.favorite;\n      modelSearch.trailerType = searchModel.trailerType;\n      modelSearch.userID =\n        (props.userDetails && props.userDetails.userPrincipalName) || \"\";\n      modelSearch.carrierId =\n        (props.userDetails && props.userDetails.carrierId) || \"\";\n      modelSearch.page = selectedPage - 1;\n      modelSearch.size = pageSize;\n      modelSearch.sortColumn = sortColumn;\n      modelSearch.originCountry = searchModel.originCountry;\n      modelSearch.destinationCountry = searchModel.destinationCountry;\n      modelSearch.carrierScac =\n        (props.userDetails && props.userDetails.carrierScac) || \"\";\n      modelSearch.carrierTier =\n        (props.userDetails && props.userDetails.carrierTier) || \"\";\n      modelSearch.userRole = userRole && userRole[0];\n      props.handleSortingPagination(modelSearch, false, false);\n    }\n  }, [JSON.stringify(searchInput), pageSize, selectedPage]);\n\n  const showLoadDetails = (row: any) => {\n    if (!props.isNetworkAvailable) {\n      props.showAlert({\n        isShowAlert: true,\n        alertMessage: PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n        alertTitle: NO_NEWORK,\n      });\n    } else if (props.pageName === \"Recommended\" || props.pageName === \"Watched\") {\n      const url = `/app/home/recommended/${row.loadId}`;\n      props.push(url);\n    } else if (props.pageName !== \"loadDetails\") {\n      const url = `/app/search/results/${row.loadId}`;\n      props.push(url);\n    }\n  };\n  useEffect(() => {\n    if (props.pageName === \"loadDetails\") {\n      setSortable(false);\n    }\n  }, [props.pageName]);\n\n  useEffect(() => {\n    // Analytics implementation\n    logEvent(EVENT.SV_SEARCH_RESULT, {\n      screen: SCREEN.SEARCH_RESULT,\n      lead: props.lead,\n    });\n  }, []);\n\n  const [starVisible, setStarVisible] = useState(false);\n  const [src, setSrc] = useState(\"assets/icon/star.svg\");\n  const favorite = (row: any) => {\n    setStarVisible(!starVisible);\n    if (!starVisible) {\n      setSrc(\"assets/icon/star-color.svg\");\n    } else {\n      setSrc(\"assets/icon/star.svg\");\n    }\n  };\n  const columns = [\n    {\n      name: \"Origin\",\n      selector: \"origin_city\",\n      sortable,\n      style: {\n        fontWeight: 600,\n        fontSize: 14,\n        colorName: \"#000000\",\n      },\n    },\n    {\n      name: \"Origin Date\",\n      selector: \"origin_from_date\",\n      sortable,\n      minWidth: \"123px\",\n    },\n    {\n      name: \"DH-O\",\n      selector: \"origin_deadhead\",\n      sortable,\n    },\n    {\n      name: \"Origin Load Type\",\n      selector: \"origin_load_type\",\n      sortable,\n    },\n    {\n      name: \"Destination\",\n      selector: \"destination_city\",\n      sortable,\n      style: {\n        fontWeight: 600,\n        fontSize: 14,\n        colorName: \"#000000\",\n      },\n    },\n    {\n      name: \"Destination Date\",\n      selector: \"destination_from_date\",\n      minWidth: \"123px\",\n      sortable,\n    },\n    {\n      name: \"DH-D\",\n      selector: \"destination_deadhead\",\n      sortable,\n    },\n    {\n      name: \"Destination Load Type\",\n      selector: \"destination_load_type\",\n      sortable,\n    },\n    {\n      name: \"Trailer Type\",\n      selector: \"trailer\",\n      sortable,\n    },\n    {\n      name: \"Rate ($)\",\n      selector: \"price\",\n      sortable,\n      style: {\n        fontWeight: 600,\n        fontSize: 14,\n        colorName: \"#000000\",\n      },\n    },\n    {\n      name: \"\",\n      selector: \"\",\n      sortable: false,\n      width: \"50px\",\n      cell: (row: any) =>\n        props.segmentName === \"Recommended\" ? null : (\n          <IonImg\n            data-test=\"favorite-click\"\n            onClick={() => favorite(row)}\n            src={src}\n          />\n        ),\n    },\n    {\n      name: \"\",\n      selector: \"\",\n      sortable: false,\n      width: \"50px\",\n      cell: (row: any) =>\n        props.pageName === \"loadDetails\" ? (\n          \"\"\n        ) : (\n          <IonGrid class=\"datatable-badge\">\n            <i></i>\n          </IonGrid>\n        ),\n    },\n  ];\n  const getTime = (data: any) => {\n    if (data) {\n      const _src = formatDate(data.appointmentFrom);\n      const _dst = formatDate(data.appointmentTo);\n      const _to =\n        _dst.year === new Date().getFullYear()\n          ? _dst.time\n          : `${_dst.month} ${_dst.day} ${_dst.time}`;\n      return `${_src.month} ${_src.day} ${_src.time}-${_to}`;\n    }\n  };\n  const formatDate = (from: any) => {\n    from = from.replace(/ /, \"T\");\n    const _date = new Date(from);\n    const _year = _date.getFullYear();\n    const _month = _date.toLocaleString(\"default\", { month: \"long\" });\n    const _day = _date.getDate();\n    let _hours = _date.getHours();\n    const _AmOrPm = _hours >= 12 ? \"pm\" : \"am\";\n    _hours = _hours % 12 || 12;\n    const _time = `${_hours}:00${_AmOrPm}`;\n    return { year: _year, month: _month, day: _day, time: _time };\n  };\n  const data =\n    props.data &&\n    props.data.map((load: any, index: number, array: any) => {\n      const stopDetails: any = {};\n      const origin = load.loadStop[0];\n      const destination = load.loadStop.slice(-1)[0];\n      stopDetails.loadId = load.loadId;\n      stopDetails.origin_city = `${origin.city}, ${origin.state}`;\n      stopDetails.origin_from_date = getTime(origin);\n      stopDetails.origin_deadhead = origin.deadHead;\n      stopDetails.origin_load_type = \"Live load\";\n      stopDetails.destination_city =\n        `${destination.city}, ${destination.state}`;\n      stopDetails.destination_from_date = getTime(destination);\n      stopDetails.destination_deadhead = destination.deadHead;\n      stopDetails.destination_load_type = \"Live unload\";\n      stopDetails.trailer = load.transportMode;\n      stopDetails.price =\n        load.rate === null ? \"Contact for Price\" : `$${load.rate.totalCharge}`;\n      return stopDetails;\n    });\n\n  return (\n    <>\n      {data ? (\n        <>\n          {props.pageName === \"Recommended\" ||\n          props.pageName === \"Watched\" ? null : (\n            <div className=\"searchResults_div\" data-test=\"search-results\">\n                Search Results\n              </div>\n            )}\n          {data.length ? (\n            <>\n              <DataTable\n                title={data && `${data.length} Matches`}\n                columns={columns}\n                data={data}\n                highlightOnHover\n                sortFunction={customSort}\n                onRowClicked={showLoadDetails}\n                pagination\n                paginationServer\n                paginationServerOptions={{\n                  persistSelectedOnPageChange: false,\n                  persistSelectedOnSort: false,\n                }}\n                paginationDefaultPage={selectedPage}\n                paginationResetDefaultPage\n                paginationTotalRows={totalRecords}\n                paginationPerPage={pageSize}\n                paginationRowsPerPageOptions={totalPages}\n                onChangePage={(page: number, totalRows: number) => {\n                  if (pageName === \"searchResults\") {\n                    changePage(page);\n                  }\n                }}\n                onChangeRowsPerPage={(\n                  currentRowsPerPage: number,\n                  currentPage: number\n                ) => {\n                  if (pageName === \"searchResults\") {\n                    changePage(currentPage);\n                    changePageSize(currentRowsPerPage);\n                  }\n                }}\n                sortServer\n                onSort={(column: any, sortDirection: \"asc\" | \"desc\") => {\n                  changePage(1);\n                  changeSortColumn(\"total_distance\");\n                }}\n              />\n              {props.segmentName === \"Recommended\" ||\n              props.segmentName === \"Watched\" ? null : (\n                  <div className=\"end-of-list\">End of list</div>\n                )}{\" \"}\n            </>\n          ) : (\n            <div className=\"searchResultsError\">\n              <div className=\"searchInnerDiv\"></div>\n              <RecommendedError\n                data-test=\"rec-error\"\n                constantText={searchResultsErrorText}\n                constantButton={searchResultsErrorButton}\n              />\n            </div>\n          )}\n        </>\n      ) : null}\n    </>\n  );\n};\nexport default SearchResultDesktop;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport {\n  IonItem,\n  IonLabel,\n  IonInput,\n  IonImg,\n  IonRow,\n  IonCol,\n  IonGrid,\n  isPlatform,\n} from \"@ionic/react\";\nimport { CityError } from \"../../../utils/constants\";\nimport { GPSWrapper, AzureMapsWrapper } from \"../../../utils/common\";\nimport _ from \"lodash\";\n\nimport \"../../../pages/Search/New/NewPage.scss\";\nexport interface NewInputProps {\n  disabled?: boolean;\n  currentLocationOff?: boolean;\n  onTimeZoneChange?: (timezone: string) => void;\n  Error: any;\n  labelValue: any;\n  InputValue: any;\n  handleChange: any;\n  InputName: any;\n  keyboardshowHandler?: any;\n  keyboardhideHandler?: any;\n  isDestination: boolean;\n  deFaultValue: any;\n  useHandler: boolean;\n  setErrorValue: any;\n  locationValue: boolean;\n  getLocalTime?: any;\n  placeholder?: string;\n  confirmStartLocationInp?: boolean;\n  onFocus?: Function;\n}\nexport const NewInput: React.FC<NewInputProps> = ({\n  disabled = false,\n  currentLocationOff,\n  onTimeZoneChange,\n  Error,\n  labelValue,\n  InputValue,\n  handleChange,\n  InputName,\n  getLocalTime,\n  keyboardshowHandler,\n  locationValue,\n  keyboardhideHandler,\n  deFaultValue,\n  isDestination,\n  useHandler,\n  setErrorValue,\n  placeholder,\n  confirmStartLocationInp,\n  onFocus\n}) => {\n  const [options, setOptions] = useState([]);\n  const [selectedCity, setSelectedCity] = useState(InputValue);\n  const [latLng, onChangeLatLng] = useState<{ lat: string; lng: string }>({\n    lat: \"\",\n    lng: \"\",\n  });\n  const [showSuggention, setShowSuggention] = useState(false);\n  const [edited, setEdited] = useState(false);\n  const [palceholder, setPlaceholder] = useState(\n    placeholder ? placeholder : \"\"\n  );\n  const [currentLocation, setcurrentLocation] = useState({\n    cityName: \"\",\n    position: \"\",\n  });\n  const [showError, setShowError] = useState(false);\n  const [backClicked, setBackClicked] = useState(true);\n  const [country, setCountry] = useState(\"\");\n  let valueSelected = false;\n  const [select, setSelect] = useState(false);\n  const [focusOut, setFocusOut] = useState(false);\n  const pattern = /^[a-zA-Z0-9, ]*$/;\n  useEffect(() => {\n    if (isPlatform(\"capacitor\") && !currentLocationOff) {\n      GPSWrapper.details.getCurrentPosition((lat: any, long: any) => {\n        fetchOriginCity(`${lat},${long}`);\n        onChangeLatLng({ lat, lng: long });\n      });\n    }\n    \n  }, [currentLocationOff]);\n\n  useEffect(() => {\n    if (!isDestination && !edited) {\n      setSelectedCity(currentLocation.cityName);\n      setPlaceholder(\"\");\n      handleChange({\n        target: {\n          name: InputName,\n          value: currentLocation.cityName,\n          backClicked,\n          lat: latLng.lat,\n          lng: latLng.lng,\n          country,\n        },\n      });\n    }\n  }, [isDestination, edited, currentLocation]);\n\n  useEffect(() => {\n    if (!!!locationValue) {\n      setSelectedCity(\"\");\n    } else {\n      setSelect(true);\n      setSelectedCity(currentLocation.cityName);\n    }\n  }, [locationValue]);\n\n  useEffect(() => {\n    if (!!!InputValue) {\n      setSelectedCity(\"\");\n    } else {\n      setSelectedCity(InputValue);\n    }\n  }, [InputValue]);\n\n  useEffect(() => {\n    setShowError(Error);\n  }, [Error])\n\n  const handleValueChange = (event: any) => {\n    const preValue = selectedCity.trim();\n    {\n      /* Restrict user from entering special charecter*/\n    }\n    if (!pattern.test(event.target.value) && !select) {\n      event.target.value = event.target.value.replace(/[^a-zA-Z0-9 ]*/g, \"\");\n    }\n    setSelectedCity(event.target.value);\n    setEdited(true);\n    if (selectedCity !== event.target.value) {\n      const newValue = event.target.value.trim();\n      if (preValue !== newValue) {\n        callAPI(event.target.value);\n      }\n    }\n    if (edited) {\n      setPlaceholder(\"\");\n    }\n    {\n      /* select: flag to identify user's selection status.\n       */\n    }\n    if (select) {\n      handleChange({\n        target: {\n          name: InputName,\n          value: event.target.value,\n          backClicked,\n          lat: latLng.lat,\n          lng: latLng.lng,\n          country,\n        },\n      });\n    } else {\n      handleChange({\n        target: {\n          name: InputName,\n          value: event.target.value,\n          backClicked,\n          lat: latLng.lat,\n          lng: latLng.lng,\n          country: \"\",\n        },\n      });\n      if (onTimeZoneChange) {\n        onTimeZoneChange(\"\");\n      }\n    }\n\n    setSelect(false);\n  };\n  {\n    /* to call azure api for city list need basis*/\n  }\n  const callAPI = useCallback(\n    _.debounce((value: string) => fetchCityList(value), 500),\n    []\n  );\n\n  const fetchOriginCity = async (value: any) => {\n    await AzureMapsWrapper.details.searchCurrentAddress(\n      value,\n      (addresses: any) => {\n        const city: any = {};\n        addresses.forEach(async (data: any, count: any) => {\n          if (data.address.municipality) {\n            if (data.address.municipality.indexOf(\",\") !== -1) {\n              const valueArray = data.address.municipality.split(\",\");\n              valueArray.forEach((municipality: any, index: any) => {\n                city.cityName =\n                  municipality +\n                  (data.address.countrySubdivision\n                    ? \", \" + data.address.countrySubdivision\n                    : \"\");\n              });\n            } else {\n              city.cityName =\n                data.address.municipality +\n                (data.address.countrySubdivision\n                  ? \", \" + data.address.countrySubdivision\n                  : \"\");\n            }\n          }\n          if (data.position) {\n            await AzureMapsWrapper.details.searchTimezoneByCoordinates(\n              data.position,\n              (timeZones: any) => {\n                const localTime =\n                  timeZones[0] &&\n                  timeZones[0].ReferenceTime &&\n                  (timeZones[0].ReferenceTime.WallTime || \"\");\n                if (onTimeZoneChange) {\n                  onTimeZoneChange(\n                    timeZones && timeZones.length > 0 && timeZones[0].Id\n                  );\n                }\n                getLocalTime && getLocalTime(localTime);\n              }\n            );\n          }\n          if (data.address.countryCode) {\n            setCountry(data.address.countryCode);\n          }\n        });\n        setcurrentLocation(city);\n      }\n    );\n  };\n  // to remove dulicate values from the given array\n  const removeDuplicates = (myArr: any, prop: any) => {\n    if (myArr.length) {\n      return myArr.filter((obj: any, pos: number, arr: any) => {\n        return (\n          arr.map((mapObj: any) => mapObj[prop]).indexOf(obj[prop].trim()) ===\n          pos\n        );\n      });\n    } else {\n      return [];\n    }\n  };\n  const fetchCityList = async (value: any) => {\n    if (value.length > 2) {\n      await AzureMapsWrapper.details.searchAddress(value, (addresses: any) => {\n        const cityList: any = [];\n        addresses.forEach((data: any, count: any) => {\n          const city: any = {};\n          if (data.address.municipality) {\n            if (data.address.municipality.indexOf(\",\") !== -1) {\n              const valueArray = data.address.municipality.split(\",\");\n              valueArray.forEach((municipality: any, index: any) => {\n                const cityObj: any = {};\n                cityObj.cityName =\n                  municipality +\n                  (data.address.countrySubdivision\n                    ? \", \" + data.address.countrySubdivision\n                    : \"\");\n                cityObj.cityName = cityObj.cityName.trim();\n                if (data.position) {\n                  cityObj.position = data.position;\n                }\n                if (currentLocation.cityName !== cityObj.cityName) {\n                  cityList.push(cityObj);\n                }\n              });\n            } else {\n              city.cityName =\n                data.address.municipality +\n                (data.address.countrySubdivision\n                  ? \", \" + data.address.countrySubdivision\n                  : \"\");\n              if (data.position) {\n                city.position = data.position;\n              }\n              if (currentLocation.cityName !== city.cityName) {\n                cityList.push(city);\n              }\n            }\n            if (data.address.countryCode) {\n              city.country = data.address.countryCode;\n            }\n          }\n        });\n        const uniqueValues = removeDuplicates(cityList, \"cityName\");\n        setOptions(uniqueValues);\n        setShowSuggention(true);\n        if (isDestination && useHandler) {\n          keyboardshowHandler();\n        }\n      });\n    } else {\n      setShowSuggention(false);\n      if (isDestination && useHandler) {\n        keyboardhideHandler();\n      }\n    }\n  };\n  const selectCity = async (SearchCity: any) => {\n    setSelectedCity(SearchCity.cityName);\n    setCountry(SearchCity.country);\n    setShowSuggention(false);\n    setSelect(true);\n    if (SearchCity.position) {\n      let latlon = \"\";\n      const position = SearchCity.position;\n      if (position) {\n        latlon = `${position.lat},${position.lon}`;\n      }\n      onChangeLatLng({ lat: position.lat, lng: position.lon });\n\n      await AzureMapsWrapper.details.searchTimezoneByCoordinates(\n        latlon,\n        (timeZones: any) => {\n          if (onTimeZoneChange) {\n            onTimeZoneChange(\n              timeZones && timeZones.length > 0 && timeZones[0].Id\n            );\n          }\n          const localTime =\n            timeZones[0] &&\n            timeZones[0].ReferenceTime &&\n            (timeZones[0].ReferenceTime.WallTime || \"\");\n          getLocalTime && getLocalTime(localTime);\n        }\n      );\n    }\n    if (isDestination && useHandler) {\n      keyboardhideHandler();\n    }\n  };\n  const onFocusOut = () => {\n    setFocusOut(true);\n    setShowSuggention(false);\n    valueSelected = options.some((item: any) => item.cityName === selectedCity);\n    if (isDestination && useHandler) {\n      keyboardhideHandler();\n    }\n    if (!valueSelected) {\n      if (\n        selectedCity === currentLocation.cityName || (isDestination && selectedCity === deFaultValue)\n      ) {\n        setShowError(false);\n        setErrorValue(false, InputName);\n      } else {\n        setShowError(true);\n        setErrorValue(true, InputName);\n      }\n      if (selectedCity.length === 0) {\n        setShowError(true);\n        setErrorValue(true, InputName);\n      }\n    } else {\n      setShowError(false);\n      setErrorValue(false, InputName);\n    }\n    setBackClicked(false);\n  };\n\n  const originClick = (e: any) => {\n    if (focusOut || currentLocation.cityName === selectedCity) {\n      setSelectedCity(\"\");\n      setEdited(true);\n      setBackClicked(true);\n      setFocusOut(false);\n    }\n  };\n  const destinationCancelClick = () => {\n    setSelectedCity(deFaultValue);\n  }\n\n  const handleFocus = () => {\n    onFocus && onFocus();\n  }\n  return (\n    <>\n      <IonItem\n        mode=\"ios\"\n        className={`typeahead-item ${\n          Error || showError\n            ? \"ion-error-field-validation\"\n            : \"ion-field-validation\"\n          }`}\n      >\n        {labelValue.length > 0 ? (\n          <IonLabel mode=\"ios\" position=\"floating\">\n            {labelValue}\n          </IonLabel>\n        ) : null}\n\n        <IonInput\n          type=\"text\"\n          disabled={disabled}\n          className={\"cts-form-control\"}\n          name={InputName}\n          onIonChange={(event) => handleValueChange(event)}\n          value={selectedCity}\n          placeholder={palceholder}\n          onIonFocus={handleFocus}\n          onIonBlur={() => onFocusOut()}\n          onClick={(event: any) => originClick(event)}\n        >\n          <IonImg\n            slot=\"end\"\n            alt=\"logo\"\n            src=\"/assets/icon/search_icon.svg\"\n            className=\"origin-input_icon\"\n          />\n        </IonInput>\n        {isDestination && selectedCity !== '' ? <IonImg\n          slot=\"end\"\n          alt=\"logo\"\n          src=\"/assets/icon/cancel.svg\"\n          className=\"destination-input_icon\"\n          onClick = {() => destinationCancelClick()}\n        /> : null}\n      </IonItem>\n      {\n        <div className=\"pickupdate-error\">\n          <p>\n            {Error} {Error ? \"\" : showError ? CityError : \"\"}\n          </p>\n        </div>\n      }\n      {showSuggention ? (\n        <div\n          className={` ${\n            locationValue ? \"suggestion-startTrip\" : \"suggestions_div \"\n            }`}\n        >\n          <IonRow className=\"suggestions_row\">\n            {!locationValue ? (\n              <IonCol class=\"icon-col\">\n                {currentLocation.cityName ? (\n                  <IonImg\n                    alt=\"logo\"\n                    src=\"/assets/icon/position.svg\"\n                    className=\"position_icon\"\n                  />\n                ) : null}\n              </IonCol>\n            ) : null}\n            <IonCol class=\"suggestion-col\">\n              {currentLocation.cityName ? (\n                <IonRow\n                  className={` ${\n                    locationValue ? \"current-location2\" : \"current-location \"\n                    }`}\n                  onMouseDown={() =>\n                    currentLocation &&\n                    selectCity({ cityName: currentLocation.cityName })\n                  }\n                >\n                  <IonCol className=\"currentLocation-col\">\n                    {!locationValue ? (\n                      <IonLabel position=\"floating\">Current Location</IonLabel>\n                    ) : null}\n                    <IonInput\n                      className={`${\n                        locationValue ? \"suggestion-border\" : \"cts-form-control\"\n                        }`}\n                      type=\"text\"\n                      value={\n                        locationValue ? InputValue : currentLocation.cityName\n                      }\n                      readonly\n                    />\n                  </IonCol>\n                </IonRow>\n              ) : null}\n              {isDestination ? (\n                <IonRow\n                  className=\"suggestions_item\"\n                  onMouseDown={() => selectCity({ cityName: deFaultValue })}\n                >\n                  <IonCol class=\"suggestions_list\">{deFaultValue}</IonCol>\n                </IonRow>\n              ) : (\n                  \"\"\n                )}\n              {options.length ? (\n                <IonGrid\n                  class={`suggestions ${\n                    isDestination ? \"destination_suggestions\" : \"\"\n                    } ${locationValue ? \"suggestions-pad\" : \"\"}`}\n                >\n                  {options.map((SearchCity: any, index: number) => (\n                    <IonRow\n                      className=\"suggestions_item\"\n                      key={index}\n                      onMouseDown={() => selectCity(SearchCity)}\n                    >\n                      <IonCol class=\"suggestions_list\">\n                        {SearchCity.cityName}\n                      </IonCol>\n                    </IonRow>\n                  ))}\n                </IonGrid>\n              ) : (\n                  <div className=\"pickupdate-error\">\n                    <p>{locationValue ? \"\" : CityError}</p>\n                  </div>\n                )}\n            </IonCol>\n          </IonRow>\n        </div>\n      ) : null}\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { IonLabel} from '@ionic/react';\nimport Slider , { createSliderWithTooltip } from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport '../../../pages/Search/New/NewPage.scss';\n\ninterface RadiusProps {\n    labelName: any,\n    InputValue: any,\n    name: any,\n    handleChange: any,\n    divClassName: string,\n    rangeDisabled: any\n}\nexport const RadiusRange: React.FC<RadiusProps> = ({ labelName, InputValue, handleChange, name, divClassName, rangeDisabled }) => {\n    const [selectedValue, setSelectedValue] = useState(InputValue);\n   \n    const SliderWithTooltip = createSliderWithTooltip(Slider);\n   \n     const valueFormatter = (v:any) => {\n        return `${v} mi`;\n      }\n   \n    const marks = {\n        25: '25mi',\n        50: '50 mi',\n        75: '',\n        100: '100 mi',\n        125: '',\n        150: '150 mi',\n        175: '',\n        200: '200 mi',\n        225: '',\n        250: {\n            style: {\n                left:'95%',\n                width: '38px'\n            },\n            label:'250 mi',\n          },\n      };\n  \n    const onValueChnage =(value:any) =>{\n        setSelectedValue (value);\n        const event = {target: {name, value}}\n        handleChange(event)\n    }\n\n    useEffect(()=>{\n        setSelectedValue(InputValue);\n    },[InputValue])\n    \n    return (\n        <>\n            <div className=\"ion-item1\">\n            <div className={divClassName}> <IonLabel mode=\"ios\" className=\"ion-label-radius\">{labelName}</IonLabel> <div className=\"value-div\"> {selectedValue} mi</div></div>\n                   <SliderWithTooltip min={25} marks={marks} step={25} max={250} \n                   onChange={onValueChnage} \n                   tipFormatter={valueFormatter} \n                   value={selectedValue}\n                   disabled = {rangeDisabled}\n                   />\n            </div>\n        </>\n    );\n};\n","import { MONTH_NAMES } from '../utils/constants';\n/**\n * To render parsed date & time on shipment each card.\n * @param {string} fromTime API appointment-from date & time value.\n * @param {string} toTime API appointment-to date & time value.\n * @returns {object} formated date & time to render on UI.\n */\nexport default function getTime(fromTime: string, toTime: string) {\n  let disPlayTime = '';\n  const _src: any = formatDate(fromTime) || {};\n  const _dst: any = formatDate(toTime) || {};\n  const _to_year = _src.year === _dst.year ? '' : _dst.year;\n  const _to_month = _src.month === _dst.month ? '' : _dst.month;\n  const _to_day = _src.day === _dst.day ? '' : _dst.day;\n  const _to_time = _dst.time;\n  let _to = '';\n  if (Object.keys(_src).length) {\n    disPlayTime = `${_src.month} ${_src.day} ${_src.time}`;\n  }\n  if (_to_year) {\n    _to = _to_year;\n  }\n  if ((_to_month && !_to_day) || (!_to_month && _to_day) || (_to_month && _to_day)) {\n    _to = `${_to} ${_dst.month} ${_dst.day}`;\n  }\n  if (_to_time) {\n    _to = `${_to} ${_to_time}`;\n  }\n  if (_to) {\n    disPlayTime = `${disPlayTime} -${_to}`;\n  }\n  return disPlayTime;\n}\n\n/**\n * To get parsed date & time.\n * @param {*} date date format.\n * @returns {object} date object.\n */\nconst formatDate = (date: any) => {\n  if (!(/\\d{4}-[0-9]\\d-[0-9]\\dT[0-9]\\d:[0-9]\\d/.test(date))) {\n    return null;\n  }\n  date = date.split('T');\n  const dateString = date[0];\n  let timeString = date[1];\n  const _date = dateString.split('-');\n  const _year = parseInt(_date[0]);\n  const _month = MONTH_NAMES[parseInt(_date[1]) - 1];\n  const _day = parseInt(_date[2]);\n  timeString = timeString && timeString.split(':');\n  let _hours = timeString.length ? timeString[0] : '';\n  let _min = timeString.length ? timeString[1] : '';\n  _min = _min.slice(0, _min.indexOf('-'));\n  const _AmOrPm = _hours >= 12 ? 'PM' : 'AM';\n  _hours = _hours % 12 || 12;\n  const _time = `${_hours}:${_min}${_AmOrPm}`;\n  return { year: _year, month: _month, day: _day, time: _time };\n};\n","import getTime from '../utils/getTimePeriod';\n\nexport const getAppointmentTime = (stop: any) => {\n  let fromTime = '';\n  let toTime = '';\n  if (stop.appointmentEarlyDateTime) {\n    fromTime = stop.appointmentEarlyDateTime;\n    toTime = stop.appointmentLateDateTime;\n  } else if (stop.actualETADateTime) {\n    fromTime = stop.actualETADateTime;\n    toTime = '';\n  } else if (stop.plannedEtaDateTime) {\n    fromTime = stop.plannedEtaDateTime;\n    toTime = '';\n  }\n  return getTime(fromTime || '', toTime || '');\n};\n\nconst getStopService = (stopDetail: any) => {\n  const stopActivity = stopDetail.specialServices || stopDetail.stopActivity || [];\n  return (stopActivity && stopActivity.map((item: any) => item.name).join(',')) || '';\n};\n\nexport const formatedData = (\n  data: any,\n  fdProp: string,\n  tdProp: string,\n  idProp: string,\n  tMProp: string,\n  showInitial?: boolean\n) => {\n  const stopDetailsList: any = [];\n  if (data && fdProp && tdProp && idProp) {\n    data &&\n      data.forEach((load: any) => {\n        const stopDetails: any = {};\n        let loadStop =\n          load.loadStop &&\n          load.loadStop.slice().sort((load1: any, load2: any) => {\n            if (load1.sequenceNo && load2.sequenceNo) {\n              return load1.sequenceNo - load2.sequenceNo;\n            }\n            if (load1.stopSequence && load2.stopSequence) {\n              return load1.stopSequence - load2.stopSequence;\n            }\n            return 0;\n          });\n        if (!(idProp === 'shipmentId')) {\n          loadStop =\n            loadStop &&\n            loadStop.filter((stop: any) => {\n              return stop.stopType !== 'NFR';\n            });\n        }\n        const origin = loadStop && loadStop[0];\n        const destination = loadStop && loadStop.slice(-1)[0];\n        stopDetails.loadId = load[idProp];\n        if (origin) {\n          stopDetails.origin_city = `${origin.city}, ${origin.state}`;\n          stopDetails.origin_from_date =\n            idProp === 'shipmentId'\n              ? getAppointmentTime(origin)\n              : getTime(origin[fdProp] || '', origin[tdProp] || '');\n          stopDetails.origin_deadhead = origin.deadHead;\n          stopDetails.origin_load_type = getStopService(origin);\n        }\n        if (destination) {\n          stopDetails.destination_city = `${destination.city}, ${destination.state}`;\n          stopDetails.destination_from_date =\n            idProp === 'shipmentId'\n              ? getAppointmentTime(destination)\n              : getTime(destination[fdProp] || '', destination[fdProp] || '');\n          stopDetails.destination_deadhead = destination.deadHead;\n          stopDetails.destination_load_type = getStopService(destination);\n        }\n        stopDetails.trailer = load[tMProp];\n        stopDetails.price =\n          load && load.rate && load.rate.totalCharge ? load.rate.totalCharge : 'Contact for price';\n        if (showInitial) {\n          let name = 'U';\n          let driverName = load.shipmentInvolvedParties.filter((data: any) => {\n            return data.partyType === 'PRIMARY DRIVER';\n          });\n          driverName = driverName.length ? driverName[0].partyName : '';\n          if (driverName) {\n            const fName = driverName.slice(0, 1);\n            const LName =\n              driverName.indexOf(' ') > 0\n                ? driverName.slice(driverName.indexOf(' ') + 1, driverName.indexOf(' ') + 2)\n                : '';\n            name = fName.toUpperCase() + LName.toUpperCase();\n          }\n          stopDetails.driverName = name;\n        }\n        stopDetailsList.push(stopDetails);\n      });\n  } else {\n    return 'Missing requried parametres';\n  }\n  return stopDetailsList;\n};\n\nexport const getYearValues = () => {\n  const currentYear = new Date().getFullYear();\n  const currentMonth = new Date().getMonth();\n  const years = [currentYear];\n  if (currentMonth === 11) {\n    years.push(currentYear + 1);\n  }\n  if (currentMonth === 0) {\n    years.push(currentYear - 1);\n  }\n  return years;\n};\n","import React from \"react\";\nimport { IonLabel, IonItem, IonDatetime } from \"@ionic/react\";\n\nimport '../../../pages/Search/New/NewPage.scss';\nimport { getYearValues } from \"../../../utils/formatData\";\ninterface DatePickerProps {\n  labelName: any;\n  InputValue: string;\n  placeholder: any;\n  handleChange: any;\n  Error: any;\n  name: any;\n  useHandler?: boolean;\n  rangeDisabled: boolean;\n  localTime: string;\n}\nexport const DatePicker: React.FC<DatePickerProps> = ({\n  labelName,\n  InputValue,\n  placeholder,\n  handleChange,\n  Error,\n  name,\n  useHandler,\n  rangeDisabled,\n  localTime\n}) => {\n  const yearValues = getYearValues() || new Date().getFullYear();\n  return (\n    <>\n      <IonItem\n        mode=\"ios\"\n        className={`date-picker-item ${\n          Error ? \"ion-error-field-validation\" : \"ion-field-validation\"\n        }`}\n        lines={name === \"dropdate\" && useHandler ? \"none\" : \"full\"}\n      >\n        <IonLabel mode=\"ios\" className=\"date-picker-label\">\n          {labelName}\n        </IonLabel>\n        <IonDatetime\n          displayFormat=\"MMM DD, YYYY\"\n          min={localTime && localTime.split(\"T\")[0]}\n          yearValues={yearValues}\n          name={name}\n          value={(InputValue && InputValue.split(\"T\")[0]) || \"\"}\n          disabled={rangeDisabled}\n          onIonChange={handleChange}\n          mode=\"ios\"\n          placeholder={placeholder}\n        ></IonDatetime>\n      </IonItem>\n      <div className=\"pickupdate-error\">\n        <p>{Error}</p>\n      </div>\n    </>\n  );\n};\n","import { IonRow, IonCol, IonGrid } from \"@ionic/react\";\nimport React from \"react\";\nimport { origin_Radius, PickUpdate, Origin } from \"../../../utils/constants\";\nimport { NewInput } from \"../../../components/shared/NewUIComponents/OriginInput\";\nimport { RadiusRange } from \"../../../components/shared/NewUIComponents/RadiusRange\";\nimport { DatePicker } from \"../../../components/shared/NewUIComponents/DatePicker\";\n\nconst PickupData = (props: any) => {\n  const {\n    originError,\n    origin,\n    originRadius,\n    pickUpdateError,\n    pickUpdate,\n    isDestination,\n    defaultValue,\n    useHandler,\n    setErrorValue,\n    updateLocalCurrentTime,\n    pickUpLocalTime,\n  } = props;\n  const upDateLocalTime = (time: string) => {\n    if (props.showDate) {\n      updateLocalCurrentTime(PickUpdate, time);\n    }\n  };\n  return (\n    <IonGrid className=\"pickup-data\">\n      <IonRow>\n        <IonCol>\n          <NewInput\n            Error={originError}\n            labelValue=\"Origin\"\n            InputValue={origin}\n            InputName={Origin}\n            handleChange={(e: any) => props.handleChange(e)}\n            isDestination={isDestination}\n            deFaultValue={defaultValue}\n            locationValue={false}\n            useHandler={useHandler}\n            setErrorValue={setErrorValue}\n            getLocalTime={upDateLocalTime}\n            onFocus={props.onFocus || (() => {})}\n          />\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <RadiusRange\n            labelName=\"Origin Radius\"\n            rangeDisabled={props.rangeOriginDisable}\n            InputValue={originRadius}\n            divClassName=\"pickRadius\"\n            name={origin_Radius}\n            handleChange={props.handleChange}\n          />\n        </IonCol>\n      </IonRow>\n      {props.showDate ? (\n        <IonRow>\n          <IonCol>\n            <DatePicker\n              Error={pickUpdateError}\n              rangeDisabled={props.rangeOriginDisable}\n              display-timezone=\"utc\"\n              labelName=\"Pickup Date\"\n              name={PickUpdate}\n              InputValue={pickUpdate}\n              handleChange={props.handleChange}\n              placeholder=\"Choose Pickup Date\"\n              localTime={pickUpLocalTime}\n            />\n          </IonCol>\n        </IonRow>\n      ) : null}\n    </IonGrid>\n  );\n};\nexport default PickupData;\n","import { IonRow, IonCol, IonGrid } from \"@ionic/react\";\nimport React from \"react\";\nimport { DestinationRadius, Dropdate, Destination } from \"../../../utils/constants\";\nimport { NewInput } from \"../../../components/shared/NewUIComponents/OriginInput\";\nimport { RadiusRange } from \"../../../components/shared/NewUIComponents/RadiusRange\";\nimport { DatePicker } from \"../../../components/shared/NewUIComponents/DatePicker\";\nconst DeliverypData = (props: any) => {\n  const {\n    destinationError,\n    destination,\n    destinationRadius,\n    dropUpdateError,\n    dropdate,\n    defaultValue,\n    isDestination,\n    useHandler,\n    setErrorValue,\n    updateLocalCurrentTime,\n    dropLocalTime,\n    showDate,\n  } = props;\n  const upDateLocalTime = (time: string) => {\n    updateLocalCurrentTime(Dropdate, time);\n  };\n  return (\n    <IonGrid className=\"delivery-data\">\n      <IonRow>\n        <IonCol>\n          <NewInput\n            Error={destinationError}\n            locationValue={false}\n            labelValue=\"Destination\"\n            InputValue={destination}\n            InputName={Destination}\n            handleChange={props.handleChange}\n            keyboardshowHandler={props.keyboardshowHandler}\n            keyboardhideHandler={props.keyboardhideHandler}\n            deFaultValue={defaultValue}\n            isDestination={isDestination}\n            useHandler={useHandler}\n            setErrorValue={setErrorValue}\n            getLocalTime={upDateLocalTime}\n            onFocus={props.onFocus || (() => {})}\n          />\n        </IonCol>\n      </IonRow>\n      <IonRow>\n        <IonCol>\n          <RadiusRange\n            labelName=\"Destination Radius\"\n            rangeDisabled={props.rangeDisable}\n            InputValue={destinationRadius}\n            divClassName=\"pickRadius\"\n            name={DestinationRadius}\n            handleChange={props.handleChange}\n          />\n        </IonCol>\n      </IonRow>\n      {showDate ? (\n        <IonRow>\n          <IonCol>\n            <DatePicker\n              Error={dropUpdateError}\n              labelName=\"Delivery Date\"\n              rangeDisabled={props.rangeDisable}\n              name={Dropdate}\n              InputValue={dropdate}\n              handleChange={props.handleChange}\n              placeholder=\"Choose Delivery Date\"\n              useHandler={useHandler}\n              localTime={dropLocalTime}\n            />\n          </IonCol>\n        </IonRow>\n      ) : null}\n    </IonGrid>\n  );\n};\nexport default DeliverypData;\n","import {\n  IonContent,\n  IonRow,\n  IonCol,\n  IonGrid,\n  IonIcon,\n  IonButton,\n  IonLabel,\n  IonCard,\n  IonCardHeader,\n  IonCardContent,\n  IonFooter,\n  isPlatform\n} from \"@ionic/react\";\nimport React, { PureComponent } from \"react\";\nimport \"./NewPage.scss\";\nimport { withRouter, RouteComponentProps } from \"react-router\";\nimport {\n  Anywhere,\n  PickUpdateError,\n  dropUpdateError,\n  CityError,\n  DryVan,\n  PickUpdate,\n  Dropdate,\n  Destination,\n  Origin,\n  DestinationRadius,\n  EVENT,\n  SCREEN,\n  TAB,\n  OFFLINE_MODE_STATE, PickupError, DropoffError\n} from \"../../../utils/constants\";\nimport { NewDropDown } from \"../../../components/shared/NewUIComponents/DropDown\";\nimport SearchResultDesktop from \"../../../components/shared/NewUIComponents/searchResultsDesktop\";\nimport PickupData from \"../../../components/app/Search/PickupData\";\nimport DeliverypData from \"../../../components/app/Search/DeliverypData\";\nimport { Isearch } from \"../../../schemas/Search/Search.schema\";\nimport { Search } from \"../../../models/home/Search.model\";\nimport { ToastMessage } from \"../../../utils/ToastMessage\";\nimport {\n  PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n  NO_NEWORK\n} from \"../../../utils/constants\";\nimport {\n  logEvent,\n  setScreenName,\n  getApplicationInfo\n} from \"../../../utils/Analytics\";\n\nexport interface newProps extends RouteComponentProps {\n  history: any;\n  data: any;\n  submitForm: any;\n  results: any;\n  isRecentSearch: boolean;\n  totalRecords: number;\n  searchInput: any;\n  handleSortingPagination: (searchInput: any, isPagination: boolean) => void;\n  userDetails: any;\n  isNetworkAvailable: boolean;\n  showAlert: any;\n}\nconst currentDate = new Date().toISOString();\nclass NewPage extends PureComponent<newProps, any> {\n  state = {\n    showDelivaryfields: false,\n    origin: \"\",\n    originCountry: \"\",\n    destinationCountry: \"\",\n    destination: Anywhere,\n    originRadius: 100,\n    pickUpdate: currentDate,\n    dropdate: \"\",\n    TrailerType: DryVan,\n    destinationRadius: 100,\n    favorite: false,\n    searchResultPage: false,\n    pickUpdateError: \"\",\n    dropUpdateError: \"\",\n    destinationError: \"\",\n    originError: \"\",\n    isCityError: false,\n    newSearch: {\n      origin: \"\",\n      destination: Anywhere,\n      originRadius: 100,\n      pickUpdate: currentDate,\n      dropdate: \"\",\n      TrailerType: DryVan,\n      destinationRadius: 100,\n      favorite: false\n    },\n    rangeDisable: true,\n    rangeOriginDisable: false,\n    showResults: this.props.isRecentSearch,\n    pickUpLocalTime: currentDate,\n    dropLocalTime: currentDate\n  };\n  placeSearch = {};\n  SelectedOriginVal = \"\";\n  SelectedDestinationVal = \"\";\n  dateUpdated: boolean = false;\n  dropDateUpdated: boolean = false;\n  componentDidUpdate() {\n    if (\n      this.state.destination.length > 0 &&\n      this.state.destination !== Anywhere &&\n      this.state.TrailerType.length > 0 &&\n      (this.state.destinationRadius === 100 ||\n        this.state.destinationRadius > 100)\n    ) {\n      this.setState({ rangeDisable: false });\n    }\n    if (\n      this.state.destination.length > 0 &&\n      this.state.destination === Anywhere\n    ) {\n      this.setState({\n        rangeDisable: true,\n        dropdate: \"\",\n        destinationRadius: 100,\n        dropUpdateError: \"\"\n      });\n    }\n  }\n\n  keyboardshowHandler = () => {\n    const headerDiv = document.getElementsByClassName(\"search-form-mobile\")[0];\n    headerDiv.classList.add(\"scroll-up\");\n  };\n  keyboardhideHandler = () => {\n    const headerDiv = document.getElementsByClassName(\"search-form-mobile\")[0];\n    headerDiv.classList.remove(\"scroll-up\");\n  };\n  handleChange = (event: any) => {\n    const { value } = event.target;\n    const { backClicked } = event.target;\n    let pickUpLocalTime =\n      this.state.pickUpLocalTime && this.state.pickUpLocalTime.split(\"T\")[0];\n    let pickUpdateValue = \"\";\n    if (event.target.name === PickUpdate) {\n      pickUpdateValue = event.target.value;\n    }\n    this.setState({\n      [event.target.name]: value\n    });\n    // if (\n    //   event.target.name === Origin &&\n    //   event.target.value &&\n    //   (event.target.value.includes(\"&\") ||\n    //     event.target.value.includes(\"!\") ||\n    //     event.target.value.includes(\"=\") ||\n    //     event.target.value.includes(\"@\") ||\n    //     event.target.value.includes(\"#\") ||\n    //     event.target.value.includes(\"$\") ||\n    //     event.target.value.includes(\"^\") ||\n    //     event.target.value.includes(\"%\") ||\n    //     event.target.value.includes(\"*\") ||\n    //     event.target.value.includes(\"+\") ||\n    //     event.target.value.includes(\"-\"))\n    // ) {\n    //   this.setState(() => ({ originError: CityError }));\n    //   return;\n    // }\n    if (event.target.name === PickUpdate && pickUpdateValue < pickUpLocalTime) {\n      this.setState({ pickUpdateError: PickUpdateError });\n    } else if (\n      event.target.name === PickUpdate &&\n      pickUpdateValue > pickUpLocalTime\n    ) {\n      this.setState({ pickUpdateError: \"\" });\n    } else if (\n      event.target.name === PickUpdate &&\n      pickUpdateValue === pickUpLocalTime\n    ) {\n      this.setState({ pickUpdateError: \"\" });\n    } else if (\n      event.target.name === Dropdate &&\n      event.target.value >= this.state.pickUpdate\n    ) {\n      this.setState({ dropUpdateError: \"\" });\n    } else if (\n      event.target.name === Dropdate &&\n      event.target.value < this.state.pickUpdate &&\n      event.target.name === Dropdate &&\n      event.target.value !== \"\"\n    ) {\n      this.setState({ dropUpdateError: dropUpdateError });\n    } else if (\n      event.target.name === Origin &&\n      event.target.value.length === 0 &&\n      !backClicked\n    ) {\n      this.setState({ originError: PickupError });\n    } else if (\n      event.target.name === Origin &&\n      event.target.country.length > 0\n    ) {\n      this.setState({ originCountry: event.target.country });\n    } else if (\n      event.target.name === Destination &&\n      event.target.country.length > 0\n    ) {\n      this.setState({ destinationCountry: event.target.country });\n    } else if (event.target.name === Origin && event.target.value.length > 0) {\n      this.setState({ originError: \"\" });\n    } else if (\n      event.target.name === Destination &&\n      event.target.value.length === 0 &&\n      !backClicked\n    ) {\n      this.setState({ destinationError: DropoffError, rangeDisable: true });\n    } else if (\n      event.target.name === Destination &&\n      event.target.value.length > 0\n    ) {\n      this.setState({ destinationError: \"\", rangeDisable: false });\n    } else if (\n      event.target.name === DestinationRadius &&\n      event.target.value > 100\n    ) {\n      this.setState({ rangeDisable: false });\n    }\n    if (\n      event.target.name === PickUpdate &&\n      this.state.dropdate < event.target.value &&\n      this.state.dropdate !== \"\"\n    ) {\n      this.setState({ dropUpdateError: dropUpdateError });\n    } else if (\n      event.target.name === PickUpdate &&\n      this.state.dropdate >= event.target.value\n    ) {\n      this.setState({ dropUpdateError: \"\" });\n    }\n  };\n\n  // componentWillMount() {\n  //   this.setState(this.props.data);\n  // }\n\n  componentDidMount() {\n    setScreenName(\"screen_search_page\");\n    this.setState(this.props.data);\n\n    // Analytics implementation\n    logEvent(EVENT.SV_SEARCH_FILTER, {\n      screen: SCREEN.SEARCH_FILTER,\n      tab: TAB.NEW\n    });\n  }\n\n  dropDownChange = (event: any) => {\n    this.setState(() => ({\n      [event.name]: event.value\n    }));\n  };\n\n  setErrorValue = (value: boolean, name: string) => {\n    if (name === Origin && value === true) {\n      this.setState({ originError: PickupError });\n    } else if (name === Destination && value === true) {\n      this.setState({ destinationError: DropoffError });\n    } else if (name === Origin && value === false) {\n      this.setState({ originError: \"\" });\n    } else if (name === Destination && value === false) {\n      this.setState({ destinationError: \"\" });\n    }\n  };\n  Apply = (event: any) => {\n    logEvent(\"ue_search_request\", { page: \"Search Page\" });\n    logEvent(EVENT.UE_SEARCH_SEE_RESULTS, {\n      screen: SCREEN.SEARCH_FILTER,\n      tab: TAB.NEW\n    });\n    event.preventDefault();\n    if (this.state.destination !== Anywhere && this.state.dropdate === \"\") {\n      this.setState({ dropUpdateError: dropUpdateError });\n    } else {\n      this.setState({ dropUpdateError: \"\" });\n      /* NETWORK CHECK CONDITION*/\n      if (this.props.isNetworkAvailable) {\n        this.newSearch();\n      } else {\n        this.props.showAlert({\n          isShowAlert: true,\n          alertMessage: PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n          alertTitle: NO_NEWORK\n        });\n      }\n    }\n  };\n  newSearch = () => {\n    const {\n      origin,\n      originRadius,\n      pickUpdate,\n      TrailerType,\n      dropdate,\n      destinationRadius,\n      favorite,\n      destination,\n      originCountry,\n      destinationCountry\n    } = this.state;\n    // Generate Query For request\n    let pickupLocal = \"\";\n    if (this.state.pickUpLocalTime) {\n      pickupLocal = this.state.pickUpLocalTime.split(\"T\")[1];\n    }\n    let dropLocal = \"\";\n    if (this.state.dropLocalTime) {\n      dropLocal = this.state.dropLocalTime.split(\"T\")[1];\n    }\n\n    const __searchParams: Isearch = {\n      origin: origin,\n      originCountry: originCountry,\n      destinationCountry: destinationCountry,\n      originRadius: originRadius,\n      destination: destination,\n      pickUpdate:\n        (pickUpdate && `${pickUpdate.split(\"T\")[0]}T${pickupLocal}`) || \"\",\n      TrailerType: TrailerType,\n      dropdate: (dropdate && `${dropdate.split(\"T\")[0]}T${dropLocal}`) || \"\",\n      destinationRadius: destinationRadius,\n      favorite: favorite\n    };\n\n    if (__searchParams.origin) {\n      this.setState({\n        newSearch: Object.assign(__searchParams),\n        searchResultPage: true\n      });\n      if (\n        this.state.destinationError === \"\" &&\n        this.state.originError === \"\" &&\n        this.state.dropUpdateError === \"\" &&\n        this.state.pickUpdateError === \"\" &&\n        !this.state.isCityError\n      ) {\n        this.props.submitForm(__searchParams);\n        if (isPlatform(\"capacitor\") || !isPlatform(\"desktop\")) {\n          this.props.history.push(\"/app/search/results\", {\n            params: __searchParams,\n            searchInput: this.getSearchInputes(__searchParams),\n            totalRecords: this.props.totalRecords\n          });\n        } else if (isPlatform(\"desktop\")) {\n          this.setState({ showResults: true });\n        }\n      }\n    } else {\n      this.setState(() => ({ originError: PickupError }));\n    }\n  };\n\n  getSearchInputes = (searchdata: any): Search => {\n    let __model: Search = new Search();\n    if (searchdata) {\n      const destinationArray =\n        searchdata.destination.indexOf(\",\") !== -1\n          ? searchdata.destination.split(\",\")\n          : [searchdata.destination, searchdata.destination];\n      const originArray =\n        searchdata.origin.indexOf(\",\") !== -1\n          ? searchdata.origin.split(\",\")\n          : [searchdata.origin, searchdata.origin];\n      const userRole =\n        this.props.userDetails &&\n        this.props.userDetails.userApplicationDetails &&\n        this.props.userDetails.userApplicationDetails[0].roles.map(\n          (carrierName: any, index: number) => {\n            return carrierName.roleName;\n          }\n        );\n      const srchParams = searchdata;\n      __model.originCity = originArray[0].trim();\n      __model.originState = originArray[1].trim();\n      __model.originRadius = srchParams.originRadius;\n      __model.pickUpdate = srchParams.pickUpdate;\n      __model.dropDate = srchParams.dropdate;\n      if (searchdata.destination !== \"Anywhere\") {\n        __model.destinationCity = destinationArray[0].trim();\n        __model.destinationState = destinationArray[1].trim();\n      }\n      __model.destinationRadius = srchParams.destinationRadius;\n      __model.favorite = srchParams.favorite;\n      __model.trailerType = srchParams.TrailerType;\n      __model.userID =\n        this.props.userDetails && this.props.userDetails.userPrincipalName;\n      __model.carrierId =\n        this.props.userDetails && this.props.userDetails.carrierId;\n      __model.page = 0;\n      __model.size = 5;\n      __model.sortColumn = \"pickUpdate\";\n      __model.originCountry = srchParams.originCountry;\n      __model.destinationCountry = srchParams.destinationCountry;\n      __model.carrierScac =\n        (this.props.userDetails && this.props.userDetails.carrierScac) || \"\";\n      __model.carrierTier =\n        (this.props.userDetails && this.props.userDetails.carrierTier) || \"\";\n      __model.userRole = userRole && userRole[0];\n    }\n\n    return __model;\n  };\n\n  updateLocalCurrentTime = (feildName: string, localTime: string) => {\n    if (feildName === PickUpdate) {\n      let pickupdate = this.state.pickUpdate;\n      let pickUpLocalTime = localTime;\n      if (!this.dateUpdated && localTime) {\n        pickupdate = pickUpLocalTime && pickUpLocalTime.split(\"T\")[0];\n        this.dateUpdated = true;\n      }\n      this.setState({ pickUpdate: pickupdate, pickUpLocalTime: localTime });\n    }\n    if (feildName === Dropdate) {\n      this.setState({ dropLocalTime: localTime });\n    }\n  };\n  render() {\n    return (\n      <>\n        <IonContent\n          className=\"ion-padding search_form_container\"\n          class=\"background\"\n        >\n          <form className=\"search-form\">\n            <IonGrid class=\"new_page_list search-mobile\">\n              <IonCard class=\"trailer-type-card\">\n                <NewDropDown\n                  labelName=\"Trailer type\"\n                  TrailerType={this.state.TrailerType}\n                  handleChange={this.handleChange}\n                />\n              </IonCard>\n              <IonGrid class=\"search-form-mobile\">\n                <IonRow class=\"pickup-row\">Pick-up</IonRow>\n                <PickupData\n                  data-test=\"pick-upData\"\n                  {...this.state}\n                  showDate={true}\n                  handleChange={this.handleChange}\n                  rangeDisabled={this.state.rangeOriginDisable}\n                  isDestination={false}\n                  defaultValue={Anywhere}\n                  useHandler={false}\n                  setErrorValue={this.setErrorValue}\n                  updateLocalCurrentTime={this.updateLocalCurrentTime}\n                />\n                <IonCard class=\"delivery-type-card\">\n                  <IonCardHeader\n                    class={`${\n                      this.state.showDelivaryfields ? \"\" : \"changeColor\"\n                    }`}\n                    onClick={() => {\n                      this.setState({\n                        showDelivaryfields: !this.state.showDelivaryfields\n                      });\n                    }}\n                  >\n                    <span> Delivery</span>\n                    {this.state.showDelivaryfields ? (\n                      <IonIcon src=\"assets/icon/minus-icon.svg\" />\n                    ) : (\n                      <div className=\"desitnation-city\">\n                        {this.state.destination}{\" \"}\n                        <IonIcon src=\"assets/icon/plus.svg\" />\n                      </div>\n                    )}\n                  </IonCardHeader>\n                  <IonCardContent\n                    class={`${\n                      this.state.showDelivaryfields ? \"fadein\" : \"fadeout\"\n                    }`}\n                  >\n                    <DeliverypData\n                      {...this.state}\n                      showDate={true}\n                      handleChange={this.handleChange}\n                      rangeDisabled={this.state.rangeDisable}\n                      platform=\"mobile\"\n                      keyboardshowHandler={this.keyboardshowHandler}\n                      keyboardhideHandler={this.keyboardhideHandler}\n                      defaultValue={Anywhere}\n                      isDestination={true}\n                      useHandler={true}\n                      setErrorValue={this.setErrorValue}\n                      DestinationRadius=\"DestinationRadius\"\n                      updateLocalCurrentTime={this.updateLocalCurrentTime}\n                    />\n                  </IonCardContent>\n                </IonCard>\n              </IonGrid>\n              <IonCard class=\"fav-card\">\n                <IonLabel>Add as Favorite</IonLabel>{\" \"}\n                <IonIcon\n                  data-test=\"favorite-click\"\n                  src=\"assets/icon/star.svg\"\n                  class={this.state.favorite ? \"fav-star\" : \"\"}\n                  onClick={() => {\n                    // ToastMessage.show(); // Functionality coming soon\n                    this.setState({ favorite: !this.state.favorite });\n                  }}\n                />\n              </IonCard>\n            </IonGrid>\n            <IonGrid class=\"new_page_list search-desktop\">\n              <IonRow class=\"data-type\">\n                <IonCol>Pickup</IonCol>\n                <IonCol>\n                  Delivery{\" \"}\n                  <NewDropDown\n                    labelName=\"Trailer Type\"\n                    TrailerType={this.state.TrailerType}\n                    handleChange={this.handleChange}\n                  />\n                </IonCol>\n              </IonRow>\n              <IonRow>\n                <IonCol class=\"pickup-data-feilds\">\n                  <PickupData\n                    {...this.state}\n                    showDate={true}\n                    handleChange={this.handleChange}\n                    rangeDisabled={this.state.rangeOriginDisable}\n                    isDestination={false}\n                    defaultValue={Anywhere}\n                    useHandler={false}\n                    setErrorValue={this.setErrorValue}\n                    updateLocalCurrentTime={this.updateLocalCurrentTime}\n                  />\n                </IonCol>\n                <IonCol class=\"delivery-data-feilds\">\n                  <DeliverypData\n                    {...this.state}\n                    showDate={true}\n                    handleChange={this.handleChange}\n                    rangeDisabled={this.state.rangeDisable}\n                    platform=\"desktop\"\n                    defaultValue={Anywhere}\n                    isDestination={true}\n                    useHandler={false}\n                    setErrorValue={this.setErrorValue}\n                    updateLocalCurrentTime={this.updateLocalCurrentTime}\n                  />\n                </IonCol>\n              </IonRow>\n              <IonRow class=\"footer-row\">\n                <IonCol>\n                  <IonIcon\n                    data-test=\"fav-click2\"\n                    src=\"assets/icon/star.svg\"\n                    class={this.state.favorite ? \"fav-star\" : \"\"}\n                    onClick={() => {\n                      // ToastMessage.show(); // Functionality coming soon\n                      this.setState({ favorite: !this.state.favorite });\n                    }}\n                  />{\" \"}\n                  <IonLabel class=\"add-to-fav\">Add as Favorite</IonLabel>\n                </IonCol>\n                <IonCol>\n                  <IonButton\n                    onClick={event => this.Apply(event)}\n                    data-test=\"apply-mobile\"\n                  >\n                    See Results\n                  </IonButton>\n                </IonCol>\n              </IonRow>\n            </IonGrid>\n          </form>\n          {this.state.showResults ? (\n            <SearchResultDesktop\n              searchInput={this.props.searchInput}\n              handleSortingPagination={this.props.handleSortingPagination}\n              data={this.props.results.__carrier_state.searchLoads}\n              {...this.props.history}\n              pageName=\"searchResults\"\n              totalRecords={this.props.totalRecords}\n              userDetails={this.props.userDetails}\n              isNetworkAvailable={this.props.isNetworkAvailable}\n              showAlert={this.props.showAlert}\n              lead={TAB.SEARCHED}\n            />\n          ) : null}\n        </IonContent>\n        <IonFooter class=\"searchPageFooter\">\n          <IonButton\n            expand=\"full\"\n            data-test=\"apply-desktop\"\n            onClick={event => this.Apply(event)}\n          >\n            See Results\n          </IonButton>\n        </IonFooter>\n      </>\n    );\n  }\n}\nexport { NewPage };\nexport default withRouter(NewPage);\n","import { createSelector } from \"reselect\";\nimport { initalSearchState } from \"./../../reducers/Search/reducer\";\n\nconst selectData = (state: any) => state.search;\n\nexport const makeSearch = () =>\n  createSelector(selectData, search =>  search.loads || initalSearchState.loads);\n\nexport const getBuyLoadApiError= () =>\ncreateSelector(selectData, search =>  search.showBuyLoadAPIError || initalSearchState.showBuyLoadAPIError);\n  ","import { ILoadSearchResults } from \"../../schemas/Search/Search.schema\";\nimport { setObject, getObject } from \"../../utils/common\";\n\nexport class SearchResults {\n\n    private __carrier_state: ILoadSearchResults = {};\n    \n    constructor() {\n    }\n\n    get searchLoads() {\n        return this.__carrier_state.searchLoads;\n    }\n\n}","import React, { useState, useEffect } from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport { isPlatform } from '@ionic/react';\nimport NewPage from '../../../pages/Search/New/NewPage.page';\nimport { fetchResults, SEARCH_DATA, clearLoads } from '../../../actions/Search/action';\nimport useInjectSaga from '../../../utils/injectSaga';\nimport saga from '../../../saga/Search/Search.saga';\nimport {\n  getLoading,\n  getUserData,\n  getNetworkStatus,\n  getUserDetails\n} from '../../../selectors/selector';\nimport { makeSearch } from '../../../selectors/Search/selector';\n\nimport useInjectReducer from '../../../utils/injectReducer';\nimport reducer from '../../../reducers/Search/reducer';\nimport { Search } from '../../../models/home/Search.model';\nimport { Isearch, ILoadSearchResults } from '../../../schemas/Search/Search.schema';\nimport { DomainConverter } from '../../../utils/common';\nimport { SearchResults } from '../../../models/home/SearchResults.model';\n\nimport { showAlert } from '../../../actions/App/action';\n\nconst key = 'search';\nlet srchParams: any = null;\nexport interface newProps extends RouteComponentProps {\n  history: any;\n  searchData: any;\n  data: any;\n  loading: any;\n  location: any;\n  fectchData: any;\n  clearLoads: any;\n  userData: any;\n  isRecentSearch: boolean;\n  userDetails: any;\n  isNetworkAvailable: boolean;\n  showAlert: any;\n  searchParams: any;\n}\nexport const NewContainer: React.FC<newProps> = ({\n  history,\n  location,\n  fectchData,\n  searchData,\n  data,\n  loading,\n  clearLoads,\n  userData,\n  isRecentSearch,\n  userDetails,\n  isNetworkAvailable,\n  showAlert,\n  searchParams\n}) => {\n  const [searchInput, setSearchInput] = useState<any>({});\n  const submitForm = async (searchdata: Isearch, platform: any) => {\n    const userRole =\n      userDetails &&\n      userDetails.userApplicationDetails &&\n      userDetails.userApplicationDetails[0].roles.map((carrierName: any, index: number) => {\n        return carrierName.roleName;\n      });\n    clearLoads();\n    const modelSearch: Search = new Search();\n    const destinationArray =\n      searchdata.destination.indexOf(',') !== -1\n        ? searchdata.destination.split(',')\n        : [searchdata.destination, searchdata.destination];\n    const originArray =\n      searchdata.origin.indexOf(',') !== -1\n        ? searchdata.origin.split(',')\n        : [searchdata.origin, searchdata.origin];\n\n    srchParams = searchdata;\n    modelSearch.originCity = originArray[0].trim();\n    modelSearch.originState = originArray[1].trim();\n    modelSearch.originRadius = srchParams.originRadius;\n    modelSearch.pickUpdate = srchParams.pickUpdate;\n    modelSearch.dropDate = srchParams.dropdate;\n    if (searchdata.destination !== 'Anywhere') {\n      modelSearch.destinationCity = destinationArray[0].trim();\n      modelSearch.destinationState = destinationArray[1].trim();\n    }\n    modelSearch.destinationRadius = srchParams.destinationRadius;\n    modelSearch.favorite = srchParams.favorite;\n    modelSearch.trailerType = srchParams.TrailerType;\n    modelSearch.userID = (userDetails && userDetails.userPrincipalName) || '';\n    modelSearch.carrierId = (userDetails && userDetails.carrierId) || '';\n    modelSearch.page = 0;\n    modelSearch.size = 5;\n    modelSearch.sortColumn = 'pickUpdate';\n    modelSearch.originCountry = srchParams.originCountry;\n    modelSearch.destinationCountry = srchParams.destinationCountry;\n    modelSearch.sortDirection = 'asc';\n    modelSearch.carrierScac = (userDetails && userDetails.carrierScac) || '';\n    modelSearch.carrierTier = (userDetails && userDetails.carrierTier) || '';\n    modelSearch.userRole = userRole && userRole[0];\n    setSearchInput(modelSearch);\n    if (isPlatform('mobile')) {\n      fectchData(modelSearch.getRequestPayload(), false, false);\n    }\n  };\n\n  useEffect(() => {\n    if (isPlatform('desktop')) {\n      setSearchInput(searchParams);\n    }\n  }, [searchParams]);\n\n  return (\n    <NewPage\n      isRecentSearch={isRecentSearch}\n      data={location.state ? location.state.params : {}}\n      submitForm={submitForm}\n      results={DomainConverter.dataToDomain<ILoadSearchResults>(\n        SearchResults,\n        data\n      )}\n      userDetails={userDetails}\n      totalRecords={data.totalRecords}\n      searchInput={searchInput}\n      isNetworkAvailable={isNetworkAvailable}\n      showAlert={showAlert}\n      handleSortingPagination={(inputs: Search, isPagination: boolean, isHideLoader = false) => {\n        fectchData(inputs.getRequestPayload(), isPagination, isHideLoader);\n      }}\n    />\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  loading: getLoading(),\n  data: makeSearch(),\n  userData: getUserData(),\n  userDetails: getUserDetails(),\n  isNetworkAvailable: getNetworkStatus()\n});\nexport const mapDispatchToProps = (dispatch: any) => ({\n  fectchData: (searchdata: any, isPagination: boolean, isHideLoader = false) =>\n    dispatch(fetchResults(searchdata, isPagination, isHideLoader)),\n  searchData: (data: any) => dispatch(SEARCH_DATA(data)),\n  clearLoads: () => dispatch(clearLoads()),\n  showAlert: (data: any) => dispatch(showAlert(data))\n});\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nconst withReducer = useInjectReducer({ key, reducer });\nconst withSaga = useInjectSaga({ key, saga });\nexport default compose<any>(\n  withSaga,\n  withReducer,\n  withConnect\n)(withRouter(React.memo(NewContainer)));\n","import React, { Component, useState, useEffect } from 'react';\nimport DataTable from 'react-data-table-component';\nimport { IonBadge, IonIcon, IonImg, IonGrid } from '@ionic/react';\nimport './RecentSearchDesktop';\nimport '../../../../theme/variables.scss';\nimport '../../../../theme/responsive-styles.scss';\nimport { Anywhere, STAR } from '../../../utils/constants';\n\nfunction getMonth(month: number): string {\n        switch(month){\n            case 0:\n            return \"Jan\";\n            case 1:\n            return \"Feb\";\n            case 2:\n            return \"Mar\";\n            case 3:\n            return \"Apr\";\n            case 4:\n            return \"May\";\n            case 5:\n            return \"Jun\";\n            case 6:\n            return \"Jul\";\n            case 7:\n            return \"Aug\";\n            case 8:\n            return \"Sep\";\n            case 9:\n            return \"Oct\";\n            case 10:\n            return \"Nov\";\n            case 11:\n            return \"Dec\";\n            default: \n            return \"\";\n        }\n      }\n\nconst RecentSearchDesktop = (props: any) => {\n    // const history = useHistory();\n    const showLoadDetails = (row: any) => {\n        props.onRedirectToTab(row);\n    }\n\n    const [recentDataState, setrecentDataState] = useState();\n   \n    useEffect(() => {\n        if(!props.favoriteFlag){\n            setrecentDataState(props.recentData);\n        }\n    }, [props.recentData])\n\n    const columns = [\n        {\n            name: 'Origin',\n            selector: '',\n            width:'91',\n            style: {\n                fontWeight: 800,\n                fontSize: 14,\n                colorName: '#000000',\n            },\n            cell: (row: any) => (row.originCity === \"Anywhere\") ? <div className=\"originCity\">{row.originCity}</div> :<div className=\"originCity\">{row.originCity +\", \"+row.originState}</div>\n      \n            \n        },\n        {\n            name: 'Origin Date',\n            selector: 'pickup_date',\n            width: '120px'\n        },\n        {\n            name: 'Origin Radius',\n            selector: '',\n            width: '65',\n            cell: (row: any) => (row.originradius != null) ? <div >{row.originradius} mi</div> :<div></div>\n        },\n        {\n            name: 'Destination',\n            selector: '',\n            width:'82',\n            style: {\n                fontWeight: 800,\n                fontSize: 14,\n                colorName: '#000000',\n            },\n            cell: (row: any) => (row.destinationCity === null) ? <div className=\"originCity\">Anywhere</div> :<div className=\"originCity\">{row.destinationCity +\", \"+ row.destinationState}</div>\n        },\n        {\n            name: 'Destination Date',\n            selector: '',\n            width:'150px',\n            cell: (row: any) => (row.dropdate === null || row.destinationCity === null) ? <div ></div> :<div>{row.dropdate && `${getMonth(new Date(row.dropdate).getMonth())} ${(\"0\" + new Date(row.dropdate).getDate()).slice(-2) }`}</div>\n           \n        },\n        {\n            name: 'Destination Radius',\n            selector: '',\n            width: '79',\n            cell: (row: any) => (row.destinationradius != null) ? <div >{row.destinationradius} mi</div> :<div>NA</div>\n        },\n        {\n            name: 'Trailer Type',\n            selector: 'trailertype',\n            width: '84',\n        },\n        {\n            name: '',\n            selector: '',\n            width: \"50px\",\n            cell: (row: any) => (\n                row.favouritesearchindicator ? <IonImg className=\"star_icon\" onClick={(e) => {\n                    e.stopPropagation(); \n                    props.updateFavorite(false, row);\n                    if(!props.favoriteFlag){\n                        let newState = recentDataState.map((load: any) => {\n                            if(load.id === row.id){\n                                return {...load, favouritesearchindicator: !row.favouritesearchindicator}\n                            }\n                            return load;\n                        })\n                        setrecentDataState(newState);\n                    }\n                 }} src=\"assets/icon/star-color.svg\" /> \n                :<IonImg className=\"star_icon\" onClick={(e) => {\n                    e.stopPropagation(); \n                    props.updateFavorite(true, row);\n                    if(!props.favoriteFlag){\n                        let newState = recentDataState.map((load: any) => {\n                            if(load.id === row.id){\n                                return {...load, favouritesearchindicator: !row.favouritesearchindicator}\n                            }\n                            return load;\n                        })\n                        setrecentDataState(newState);\n                    }\n                }} src=\"assets/icon/star.svg\"/>\n            )\n        },\n        {\n            name: '',\n            selector: '',\n            width: \"50px\",\n            cell: (row: any) => <IonGrid data-test=\"IonGrid-RecentSearchDesktop\" class=\"datatable-badge\"><i></i></IonGrid>   }\n    ];\n\n    const columnsFav = [\n        {\n            name: 'Origin',\n            selector: '',\n            width:'91',\n            style: {\n                fontWeight: 800,\n                fontSize: 14,\n                colorName: '#000000',\n            },\n            cell: (row: any) => (row.originCity === \"Anywhere\") ? <div data-test=\"origin-anywhere\" className=\"originCity\">{row.originCity}</div> :<div className=\"originCity\" data-test=\"origin-city\">{row.originCity +\", \"+row.originState}</div>\n      \n            \n        },\n        {\n            name: 'Origin Radius',\n            selector: '',\n            width: '65',\n            cell: (row: any) => (row.originradius != null) ? <div data-test=\"origin-radius\">{row.originradius} mi</div> :<div></div>\n        },\n        {\n            name: 'Destination',\n            selector: '',\n            width:'82',\n            style: {\n                fontWeight: 800,\n                fontSize: 14,\n                colorName: '#000000',\n            },\n            cell: (row: any) => (row.destinationCity === null) ? <div className=\"originCity\" data-test=\"destination-city\">Anywhere</div> :<div className=\"originCity\">{row.destinationCity +\", \"+ row.destinationState}</div>\n        },\n        {\n            name: 'Destination Radius',\n            selector: '',\n            width: '79',\n            cell: (row: any) => (row.destinationradius != null) ? <div >{row.destinationradius} mi</div> :<div>NA</div>\n        },\n        {\n            name: 'Trailer Type',\n            selector: 'trailertype',\n            width: '84',\n        },\n        {\n            name: '',\n            selector: '',\n            width: \"50px\",\n            cell: (row: any) => (\n                row.favouritesearchindicator ? <IonImg className=\"star_icon\"  data-test=\"recent-star1\" onClick={(e) => {\n                    e.stopPropagation(); \n                    props.updateFavorite(false, row);\n                    if(!props.favoriteFlag){\n                        let newState = recentDataState.map((load: any) => {\n                            if(load.id === row.id){\n                                return {...load, favouritesearchindicator: !row.favouritesearchindicator}\n                            }\n                            return load;\n                        })\n                        setrecentDataState(newState);\n                    }\n                 }} src={STAR.STAR_TRUE} /> \n                :<IonImg className=\"star_icon\" data-test=\"recent-star\" onClick={(e) => {\n                    e.stopPropagation(); \n                    props.updateFavorite(true, row);\n                    if(!props.favoriteFlag){\n                        let newState = recentDataState.map((load: any) => {\n                            if(load.id === row.id){\n                                return {...load, favouritesearchindicator: !row.favouritesearchindicator}\n                            }\n                            return load;\n                        })\n                        setrecentDataState(newState);\n                    }\n                }} src={STAR.STAR_FALSE}/>\n            )\n        },\n        {\n            name: '',\n            selector: '',\n            width: \"50px\",\n            cell: (row: any) => <IonGrid data-test=\"IonGrid-RecentSearchDesktop\" class=\"datatable-badge\"><i></i></IonGrid>   }\n    ];\n\n    let data: [];\n    if(!props.favoriteFlag){\n        data = recentDataState && recentDataState.filter((load:any, index:number, array:any)=>{\n            if(props.favoriteFlag && props.ID.includes(load.id)){\n                return false;\n            }\n            return load;\n        }).map((load:any, index:number, array:any) => {\n            let recentDetails:any = {};\n            const {originCity, originState, destinationCity, destinationState, destinationradius, trailertype, \n                originradius, favouritesearchindicator, pickupdate, searchdate, userid, id, carrierid, dropdate, originPostalCode,\n                destinationPostalCode, originCountry, destinationCountry} = load;\n            ({...recentDetails} = {originCity, destinationState, destinationCity, originradius, destinationradius, trailertype,\n                favouritesearchindicator, pickupdate, dropdate, carrierid, searchdate, userid, id, originState, originPostalCode, destinationPostalCode,\n                originCountry, destinationCountry})\n            return recentDetails;\n        });\n    }else{\n        data =  props.recentData && props.recentData.filter((load:any, index:number, array:any)=>{\n            if(props.favoriteFlag && props.ID.includes(load.id)){\n                return false;\n            }\n            return load;\n        }).map((load:any, index:number, array:any) => {\n            let recentDetails: any = {};\n            const {originCity, originState, destinationCity, destinationState, destinationradius, trailertype, \n                originradius, favouritesearchindicator, pickupdate, searchdate, userid, id, carrierid, dropdate, originPostalCode,\n                destinationPostalCode, originCountry, destinationCountry} = load;\n            ({...recentDetails} = {originCity, destinationState, destinationCity, originradius, destinationradius, trailertype,\n                 favouritesearchindicator, pickupdate, dropdate, carrierid, searchdate, userid, id, originState, originPostalCode, destinationPostalCode,\n                originCountry, destinationCountry})\n            return recentDetails;\n        });\n    }\n    \n    return (\n        <>\n          { data?\n          <>\n            <DataTable\n                onRowClicked={(row) => showLoadDetails(row)}\n                columns={props.favoriteFlag ? columnsFav :columns}\n                data={data}\n            />\n            \n        </>: null}\n        </>\n    );\n}\n\nexport default RecentSearchDesktop;\nexport {getMonth};","import React, { useEffect, useState } from \"react\";\nimport { IonRefresher, IonRefresherContent } from \"@ionic/react\";\nimport { RefresherEventDetail } from \"@ionic/core\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { updatePullToRefreshState } from \"../../actions/App/action\";\n\ninterface PullToEventModel {\n  detail: {\n    complete: Function;\n  };\n}\n\n// Pull To refresh : wrapper class to refresh/Update UI with latest response from API calls.\n\nconst PullToRefresh = (props: any) => {\n  const { status, isHideLoader = true } = props;\n\n  const [event, setEvent] = useState({} as PullToEventModel);\n\n  useEffect(() => {\n    if (!status) {\n      event && event.detail && event.detail.complete();\n    }\n  }, [status]);\n\n  // emitted this method when user Pull down content.\n  const onRefresh = (event1: CustomEvent<RefresherEventDetail>) => {\n    props.updatePullToRefreshState && props.updatePullToRefreshState(true);\n    setEvent(event1);\n    if (!props.onPullToRefresh) {\n      event1 && event1.detail && event1.detail.complete();\n    }\n    props && props.onPullToRefresh && props.onPullToRefresh(isHideLoader);\n    props.updatePullToRefreshState &&  props.updatePullToRefreshState(null);\n  };\n\n  return (\n    <IonRefresher\n      slot=\"fixed\"\n      className=\"pull-to-refresh\"\n      onIonRefresh={onRefresh}\n    >\n      <IonRefresherContent\n        pullingText={`<img src= \"assets/images/Schneider_Spinner-transparent.gif\" className=\"loader-image\" />`}\n        refreshingSpinner={null}\n      ></IonRefresherContent>\n    </IonRefresher>\n  );\n};\n\nexport const mapDispatchToProps = (dispatch: Function) => ({\n  updatePullToRefreshState: (state: boolean) =>\n    dispatch(updatePullToRefreshState(state))\n});\n\nexport default connect(null, mapDispatchToProps)(PullToRefresh);\nexport { PullToRefresh };\n\nPullToRefresh.prototype = {\n  onPullToRefresh: PropTypes.func.isRequired,\n  isHideLoader: PropTypes.bool,\n  status: PropTypes.bool.isRequired\n};\n","import React, { useState, useEffect } from \"react\";\nimport {\n  IonContent,\n  IonCard,\n  IonGrid,\n  IonCardContent,\n  IonRow,\n  IonCol,\n  IonImg,\n  IonBadge,\n  IonButton\n} from \"@ionic/react\";\nimport \"./Recent.scss\";\nimport RecentSearchDesktop from \"./RecentSearchDesktop\";\nimport { Isearch } from \"../../../schemas/Search/Search.schema\";\nimport PullToRefresh from \"../../../components/PullToRefresh/PullToRefresh\";\nimport {\n  PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n  NO_NEWORK,\n  STAR,\n  ANYWHERE,\n  EVENT,\n  SCREEN,\n  TAB,\n  OFFLINE_MODE_STATE\n} from \"../../../utils/constants\";\nimport { logEvent } from \"../../../utils/Analytics\";\n\ninterface recentProps {\n  recentData: any;\n  updateFavorite: (fav: boolean, data: any) => void;\n  favoriteFlag: boolean;\n  isNetworkAvailable: boolean;\n  showAlert: (data: any) => void;\n}\nfunction getMonth(month: number): string {\n  switch (month) {\n    case 0:\n      return \"Jan\";\n    case 1:\n      return \"Feb\";\n    case 2:\n      return \"Mar\";\n    case 3:\n      return \"Apr\";\n    case 4:\n      return \"May\";\n    case 5:\n      return \"Jun\";\n    case 6:\n      return \"Jul\";\n    case 7:\n      return \"Aug\";\n    case 8:\n      return \"Sep\";\n    case 9:\n      return \"Oct\";\n    case 10:\n      return \"Nov\";\n    case 11:\n      return \"Dec\";\n    default:\n      return \"\";\n  }\n}\nconst RecentCard: React.FC<recentProps> = ({\n  recentData,\n  updateFavorite,\n  favoriteFlag,\n  isNetworkAvailable,\n  showAlert\n}) => {\n  const [fav, setFav] = useState<boolean>(false);\n  useEffect(() => {\n    setFav(recentData.favouritesearchindicator);\n  }, [recentData]);\n  return (\n    <IonCardContent className=\"card-content recent-card\">\n      <IonGrid className=\"recent_grid\">\n        <IonRow>\n          <IonCol className=\"card-price-col\" size=\"4\">\n            <p className=\"trailerType\">{recentData.trailertype}</p>\n          </IonCol>\n          <IonCol className=\"card-city-col\">\n            <IonRow class=\"stop-details-row\">\n              <IonCol class=\"stop-icon-col\">\n                <IonImg\n                  className=\"ellipse_icon\"\n                  src=\"assets/icon/origin-pointer.svg\"\n                />\n                <div className=\"stops_border\"></div>\n              </IonCol>\n              <IonCol class=\"stop-details-col\">\n                {recentData.originCity === \"Anywhere\" ? (\n                  <p className=\"origin_city\">{recentData.originCity}</p>\n                ) : (\n                  <p className=\"origin_city\">\n                    {recentData.originCity}, {recentData.originState}\n                  </p>\n                )}\n                <IonBadge className=\"originRadius\">\n                  Radius : {recentData.originradius}\n                </IonBadge>\n                {favoriteFlag ? (\n                  \"\"\n                ) : (\n                  <IonBadge className=\"pickupDate\">\n                    {recentData.pickupdate &&\n                      `${getMonth(\n                        new Date(recentData.pickupdate).getMonth()\n                      )} ${(\n                        \"0\" + new Date(recentData.pickupdate).getDate()\n                      ).slice(-2)}`}\n                  </IonBadge>\n                )}\n              </IonCol>\n            </IonRow>\n            <IonRow class=\"stop-details-row\">\n              <IonCol class=\"stop-icon-col\">\n                <IonImg\n                  className=\"path_icon\"\n                  src=\"assets/icon/dst-pointer.svg\"\n                />\n              </IonCol>\n              <IonCol class=\"stop-details-col\">\n                {recentData.destinationCity === null ? (\n                  <p className=\"origin_city\">Anywhere</p>\n                ) : (\n                  <p className=\"origin_city\">\n                    {recentData.destinationCity}, {recentData.destinationState}\n                  </p>\n                )}\n                <IonBadge className=\"originRadius\">\n                  Radius : {recentData.destinationradius}\n                </IonBadge>\n                {favoriteFlag || recentData.destinationCity === null ? (\n                  \"\"\n                ) : (\n                  <IonBadge className=\"pickupDate\">\n                    {recentData.dropdate &&\n                      `${getMonth(new Date(recentData.dropdate).getMonth())} ${(\n                        \"0\" + new Date(recentData.dropdate).getDate()\n                      ).slice(-2)}`}\n                  </IonBadge>\n                )}\n              </IonCol>\n            </IonRow>\n          </IonCol>\n          <IonCol size=\"1\" className=\"star_icon_col\">\n            {\n              <IonImg\n                data-test=\"Favorite-IonImg\"\n                onClick={e => {\n                  e.stopPropagation();\n                  fav\n                    ? updateFavorite(false, recentData)\n                    : updateFavorite(true, recentData);\n                  if (!isNetworkAvailable) {\n                    showAlert({\n                      isShowAlert: true,\n                      alertMessage: PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n                      alertTitle: NO_NEWORK\n                    });\n                    return;\n                  }\n                  fav ? setFav(false) : setFav(true);\n                }}\n                className=\"star_icon\"\n                src={fav ? STAR.STAR_TRUE : STAR.STAR_FALSE}\n              />\n            }\n          </IonCol>\n        </IonRow>\n      </IonGrid>\n    </IonCardContent>\n  );\n};\n\nclass RecentSearch extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    // Analytics implementation\n    logEvent(EVENT.SV_SEARCH_FILTER, {\n      screen: SCREEN.SEARCH_FILTER,\n      tab: this.props.favoriteFlag ? TAB.FAVORITE : TAB.RECENT\n    });\n  }\n\n  cardClick = (detail: any) => {\n    /* NETWORK CHECK CONDITION*/\n    if (this.props.isNetworkAvailable) {\n      const {\n        originCity,\n        originState,\n        originradius,\n        pickupdate,\n        trailertype,\n        dropdate,\n        destinationradius,\n        favouritesearchindicator,\n        durationDays,\n        destinationCity,\n        destinationState\n      } = detail;\n      let origin = \"\";\n      if (originCity) {\n        origin = originCity;\n      }\n      if (originState) {\n        if (originState.toLowerCase() !== ANYWHERE) {\n          origin += \", \" + originState;\n        }\n      }\n      let destination = \"\";\n      if (destinationCity) {\n        destination = destinationCity;\n      }\n      if (destinationState) {\n        if (destinationState.toLowerCase() !== ANYWHERE) {\n          destination += \", \" + destinationState;\n        }\n      }\n\n      let newPickUpDate = null;\n      let newDropDate = null;\n      let range = Math.abs(durationDays);\n      if (this.props.favoriteFlag) {\n        newPickUpDate = new Date().toISOString();\n        if (dropdate && range) {\n          newDropDate = new Date(\n            new Date().setDate(new Date().getDate() + range + 1)\n          ).toISOString();\n        }\n      } else {\n        newPickUpDate = pickupdate;\n        newDropDate = dropdate;\n      }\n\n      const __searchParams: Isearch = {\n        origin: origin || \"Anywhere\",\n        originRadius: originradius,\n        destination: destination || \"Anywhere\",\n        pickUpdate: newPickUpDate,\n        TrailerType: trailertype,\n        dropdate: newDropDate,\n        destinationRadius: destinationradius,\n        favorite: favouritesearchindicator\n      };\n      this.props.onSearchResult(\n        { ...detail, pickupdate: newPickUpDate, dropdate: newDropDate },\n        __searchParams\n      );\n    } else {\n      this.props.showAlert({\n        isShowAlert: true,\n        alertMessage: PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n        alertTitle: NO_NEWORK\n      });\n    }\n  };\n  render() {\n    return (\n      <IonContent className=\"ion-padding recent_container\" class=\"background\">\n        <PullToRefresh\n          onPullToRefresh={\n            this.props.favoriteFlag\n              ? this.props.getFavoriteSearchList\n              : this.props.getRecentSearchList\n          }\n          status={this.props.isInPullToRefresh}\n        ></PullToRefresh>\n        <IonGrid class=\"recent-list\">\n          {this.props.getLoads &&\n            this.props.getLoads.map((detail: any, index: number) => {\n              if (\n                this.props.favoriteFlag &&\n                this.props.id.includes(detail.id)\n              ) {\n                return \"\";\n              } else if (\n                !this.props.favoriteFlag &&\n                this.props.flag &&\n                !this.props.undo &&\n                this.props.id.includes(detail.id)\n              ) {\n                detail = { ...detail, favouritesearchindicator: false };\n                return (\n                  <IonCard\n                    data-test=\"IonCard-RecentPage\"\n                    onClick={() => this.cardClick(detail)}\n                    className=\"ion-card-updated\"\n                    key={index}\n                  >\n                    <RecentCard\n                      recentData={detail}\n                      updateFavorite={this.props.updateFavorite}\n                      favoriteFlag={this.props.favoriteFlag}\n                      isNetworkAvailable={this.props.isNetworkAvailable}\n                      showAlert={this.props.showAlert}\n                    />\n                  </IonCard>\n                );\n              } else if (\n                !this.props.favoriteFlag &&\n                this.props.undo &&\n                this.props.id.includes(detail.id)\n              ) {\n                detail = { ...detail, favouritesearchindicator: true };\n                return (\n                  <IonCard\n                    data-test=\"IonCard-RecentPage\"\n                    onClick={() => this.cardClick(detail)}\n                    className=\"ion-card-updated\"\n                    key={index}\n                  >\n                    <RecentCard\n                      recentData={detail}\n                      updateFavorite={this.props.updateFavorite}\n                      favoriteFlag={this.props.favoriteFlag}\n                      isNetworkAvailable={this.props.isNetworkAvailable}\n                      showAlert={this.props.showAlert}\n                    />\n                  </IonCard>\n                );\n              } else {\n                return (\n                  <IonCard\n                    data-test=\"IonCard-RecentPage\"\n                    onClick={() => this.cardClick(detail)}\n                    className=\"ion-card-updated\"\n                    key={index}\n                  >\n                    <RecentCard\n                      recentData={detail}\n                      updateFavorite={this.props.updateFavorite}\n                      favoriteFlag={this.props.favoriteFlag}\n                      isNetworkAvailable={this.props.isNetworkAvailable}\n                      showAlert={this.props.showAlert}\n                    />\n                  </IonCard>\n                );\n              }\n            })}\n        </IonGrid>\n        <p className=\"end_of_list\">End of list</p>\n        <div className=\"recentDesktop\">\n          <RecentSearchDesktop\n            data-test=\"RecentSeachDesktop-RecentPage\"\n            onRedirectToTab={(detail: any) => this.cardClick(detail)}\n            recentData={this.props.getLoads}\n            updateFavorite={this.props.updateFavorite}\n            favoriteFlag={this.props.favoriteFlag}\n            ID={this.props.id}\n          />\n        </div>\n      </IonContent>\n    );\n  }\n}\n\nexport { getMonth, RecentSearch, RecentCard };\n","import {ActionType, RecentState} from \"../../schemas/Recent/Recent.Schema\";\nimport * as Constants from \"../../utils/constants\";\nimport produce from \"immer\";\n\nexport const initialState: RecentState = {\n  recent: [],\n  error: {}\n};\n\nexport default (state = initialState, action: ActionType) =>\n  produce(state, draft => {\n    switch (action.type) {\n      case Constants.GET_RECENT:\n        draft.recent = action.payload;\n        break;\n      case Constants.UPDATE_FAVORITE_ERROR:\n          draft.error = action.payload\n          break;\n      case Constants.CLEAR_FAVORITE_ERROR:\n          draft.error = action.payload\n          break;\n    }\n  });\n","\nimport {createSelector} from 'reselect';\nimport { initialState } from \"./../../reducers/Recent/reducer\";\n\nconst selectData = (state:any) => state.recent || initialState;\n\nexport const makeRecent = () => \n    createSelector(\n        [selectData], \n        recent => recent.recent || initialState.recent\n    );\n\nexport const favoriteError = () => createSelector(\n    [selectData],\n    (recent) => {\n        return  recent.error || initialState.error\n    }\n    );","import { all, put, call, takeLatest, select } from \"redux-saga/effects\";\nimport {\n  showLoading,\n  hideLoading,\n  showPullToRefresh,\n  hidePullToRefresh\n} from \"../../actions/Login/action\";\nimport {\n  getFavorite,\n  updateFavoriteDataReducer,\n  updateFavoriteError\n} from \"../../actions/Favorite/action\";\nimport * as constants from \"../../utils/constants\";\nimport request from \"../../utils/request\";\nimport { DomainConverter } from \"../../utils/common\";\n\n// handle the API call for updating the search, and handling duplicate/List full errors\nexport function* updateFavoriteDataFunc(action: any) {\n  const { data, isHideLoader } = action && action.payload && action.payload;\n  try {\n    if (!(action && action.payload && isHideLoader)) {\n      yield put(showLoading());\n    }\n    yield put(showPullToRefresh());\n    let updatefavoritemutation = DomainConverter.domainToData<any>(\n      action.payload.data\n    );\n    console.log(updatefavoritemutation);\n    const fetchFavoriteResults = yield request<any>([\n      \"FAVORITE\",\n      \"FAVORITE_LOADS\",\n      null,\n      \"\",\n      updatefavoritemutation,\n      \"application/json\"\n    ]);\n    console.log(fetchFavoriteResults);\n    if (\n      fetchFavoriteResults.data.updateUserSearchHistoryAsFavorite.errorMessage\n    ) {\n      console.log(\n        fetchFavoriteResults.data.updateUserSearchHistoryAsFavorite.errorMessage\n      );\n      yield put(updateFavoriteError(fetchFavoriteResults));\n    } else {\n      yield put(updateFavoriteDataReducer(fetchFavoriteResults));\n    }\n    if (!(action && action.payload && isHideLoader)) {\n      yield put(hideLoading());\n    }\n    yield put(hidePullToRefresh());\n  } catch (e) {\n    if (!(action && action.payload && isHideLoader)) yield put(hideLoading());\n    yield put(hidePullToRefresh());\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([\n    takeLatest(constants.UPDATE_FAVORITE_LOADS, updateFavoriteDataFunc)\n  ]);\n}\n","import * as Constants from '../../utils/constants';\n\nexport const GetrecentData = (data: any, isHideLoader = false) => {\n    return ({\n        type: Constants.RECENT_LOADS,\n        payload: { data, isHideLoader }\n    })\n}\nexport const GetRecent = (data: any) => {\n    return ({\n        type: Constants.GET_RECENT,\n        payload: data\n\n    })\n}\n\nexport const clearFavoriteError = () => {\n    return ({\n        type: Constants.CLEAR_FAVORITE_ERROR,\n        payload: undefined\n    })\n}\n\n\n\n\n\n\n","import { IRecentDataRequest } from \"../../schemas/Recent/Recent.Schema\";\nimport { IFavoriteUpdateRequest } from \"../../schemas/Favorite/Favorite.Schema\";\n\nexport class Recent {\n\n    constructor() {\n    }\n\n    private __recent_state: IRecentDataRequest = {page:0, sortColumn:\"pickupdate\", favourite:null};\n\n    get page(){\n        return this.__recent_state.page;\n    }\n\n    set page(value){\n        if(value) {\n            this.__recent_state.page = value;\n        }\n    }\n    get size(){\n        return this.__recent_state.size;\n    }\n\n    set size(value){\n        if(value) {\n            this.__recent_state.size = value;\n        }\n    }\n    get sortColumn(){\n        return this.__recent_state.sortColumn;\n    }\n\n    set sortColumn(value){\n        if(value) {\n            this.__recent_state.sortColumn = value;\n        }\n    }\n    get userID(){\n        return this.__recent_state.userID;\n    }\n\n    set userID(value){\n        if(value) {\n            this.__recent_state.userID = value;\n        }\n    }\n    get carrierId(){\n        return this.__recent_state.carrierId;\n    }\n\n    set carrierId(value){\n        if(value) {\n            this.__recent_state.carrierId = value;\n        }\n    }\n    get favourite(){\n        return this.__recent_state.favourite;\n    }\n\n    set favourite(value){\n        if(value) {\n            this.__recent_state.favourite = value;\n        }\n    }\n\n    getRequestPayload() {\n        return {\n            query: {\n                findUserRecentSearchHistory: {\n                    __args: {\n                        input: this.__recent_state\n                    },\n                    id: true,\n                    userid: true,\n                    originCity: true,\n                    originState: true,\n                    originCountry: true,\n                    originradius: true,\n                    destinationCity: true,\n                    destinationState: true,\n                    destinationCountry: true,\n                    destinationradius: true,\n                    pickupdate: true,\n                    favouritesearchindicator: true,\n                    trailertype: true,\n                    dropdate: true,\n                    searchdate: true,\n                    destinationPostalCode: true,\n                    originPostalCode: true,\n                    carrierid: true,\n                    durationDays: true\n                }\n\n                }\n            }\n        }\n}","import { IFavoriteDataRequest, IFavoriteUpdateRequest } from \"../../schemas/Favorite/Favorite.Schema\";\n\nexport class Favorite {\n\n    constructor() {\n    }\n\n    private _favorite_state: IFavoriteDataRequest = {page:0, sortColumn:\"pickupdate\", favourite:true};\n\n    get page(){\n        return this._favorite_state.page;\n    }\n\n    set page(value){\n        if(value) {\n            this._favorite_state.page = value;\n        }\n    }\n    get size(){\n        return this._favorite_state.size;\n    }\n\n    set size(value){\n        if(value) {\n            this._favorite_state.size = value;\n        }\n    }\n    get sortColumn(){\n        return this._favorite_state.sortColumn;\n    }\n\n    set sortColumn(value){\n        if(value) {\n            this._favorite_state.sortColumn = value;\n        }\n    }\n    get userID(){\n        return this._favorite_state.userID;\n    }\n\n    set userID(value){\n        if(value) {\n            this._favorite_state.userID = value;\n        }\n    }\n    get carrierId(){\n        return this._favorite_state.carrierId;\n    }\n\n    set carrierId(value){\n        if(value) {\n            this._favorite_state.carrierId = value;\n        }\n    }\n    get favourite(){\n        return this._favorite_state.favourite;\n    }\n\n    set favourite(value){\n        if(value) {\n            this._favorite_state.favourite = value;\n        }\n    }\n\n    getFavoritePayload() {\n        return {\n            query: {\n                findUserFavouriteSearchHistory: {\n                    __args: {\n                        input: this._favorite_state\n                    },\n                    id: true,\n                    userid: true,\n                    originState: true,\n                    originCity: true,\n                    originPostalCode: true,\n                    originCountry: true,\n                    originradius: true,\n                    pickupdate: true,\n                    destinationCity: true,\n                    destinationState: true,\n                    destinationPostalCode: true,\n                    destinationCountry: true,\n                    destinationradius: true,\n                    dropdate: true,\n                    trailertype: true,\n                    searchdate : true,\n                    favouritesearchindicator: true,\n                    carrierid: true,\n                    durationDays: true\n                }\n                }\n            }\n        }\n\n        updateFavoriteLoad(data: IFavoriteUpdateRequest) {\n            return {\n              mutation: {\n                updateUserSearchHistory: {\n                  __args: {\n                    input: data\n                  },\n                  id: true\n                }\n              }\n            };\n        }\n\n        updateFavoriteLoadCheckDuplicate(data: IFavoriteUpdateRequest){\n            return {\n                mutation: {\n                    updateUserSearchHistoryAsFavorite: {\n                        __args: {\n                            input: data\n                        },\n                        errorMessage: true,\n                        status: true,\n                        userSearchHistory: {\n                            id: true\n                        }\n                    }\n                }\n            }\n        }\n}","import React from 'react';\nimport { IonModal, IonLabel, IonCol, IonButton, IonText } from '@ionic/react';\nimport \"./CustomModal.scss\";\n\nconst CustomModal:React.FC<any> = (props:any) => {\n    const { isOpen, title, message, buttons } = props;\n\n    return (\n        <IonModal\n        isOpen={isOpen}\n        cssClass=\"custom-modal\"\n        backdropDismiss={false}\n      >\n        <header className=\"custom-modal-header\">\n          <IonLabel className=\"custom-modal-title\" color=\"dark\">\n                {title}\n          </IonLabel>\n        </header>\n        <section>\n          <IonText className=\"custom-modal-message\">\n              <div  dangerouslySetInnerHTML={{__html: message}}></div>\n          </IonText>\n        </section>\n        <footer>\n            {\n                buttons.map(((button:any, index:number) => {\n                    return (\n                        <IonCol key={`${title}_${index}`}>\n                            <IonButton class=\"btn load-btn\" data-test={`${button.label.toLowerCase()}-btn`} onClick={button.callback}>\n                                {button.label}\n                            </IonButton>\n                        </IonCol>\n                    )\n                }))\n            }\n        </footer>\n      </IonModal>\n    )\n}\n\nexport default CustomModal;\n","import { Search } from \"app/models/home/Search.model\";\nimport { Isearch } from \"app/schemas/Search/Search.schema\";\nexport const onSearchResult = (\n  searchData: any,\n  _srchParams: Isearch,\n  userDetails: any\n) => {\n  const userRole =\n    userDetails &&\n    userDetails.userApplicationDetails &&\n    userDetails.userApplicationDetails[0].roles.map(\n      (carrierName: any, index: number) => {\n        return carrierName.roleName;\n      }\n    );\n  const modelSearch: Search = new Search();\n  modelSearch.originCity = searchData.originCity;\n  modelSearch.originState = searchData.originState;\n  modelSearch.originRadius = searchData.originradius;\n  modelSearch.pickUpdate = searchData.pickupdate || \"\";\n  modelSearch.dropDate = searchData.dropdate || \"\";\n  modelSearch.destinationCity = searchData.destinationCity;\n  modelSearch.destinationState = searchData.destinationState;\n  modelSearch.destinationRadius = searchData.destinationradius;\n  modelSearch.favorite = searchData.favouritesearchindicator;\n  modelSearch.userID = (userDetails && userDetails.userPrincipalName) || \"\";\n  modelSearch.trailerType = searchData.trailertype;\n  modelSearch.carrierId = (userDetails && userDetails.carrierId) || \"\";\n  modelSearch.carrierScac = (userDetails && userDetails.carrierScac) || \"\";\n  modelSearch.carrierTier = (userDetails && userDetails.carrierTier) || \"\";\n  modelSearch.userRole = userRole && userRole[0];\n\n  return modelSearch;\n};\n\nexport const getSearchInputes = (searchdata: any, userDetails: any): Search => {\n  const userRole =\n    userDetails &&\n    userDetails.userApplicationDetails &&\n    userDetails.userApplicationDetails[0].roles.map(\n      (carrierName: any, index: number) => {\n        return carrierName.roleName;\n      }\n    );\n  const modelSearch: Search = new Search();\n  if (searchdata) {\n    const destinationArray =\n      searchdata.destination.indexOf(\",\") !== -1\n        ? searchdata.destination.split(\",\")\n        : [searchdata.destination, searchdata.destination];\n    const originArray =\n      searchdata.origin.indexOf(\",\") !== -1\n        ? searchdata.origin.split(\",\")\n        : [searchdata.origin, searchdata.origin];\n\n    const srchParams = searchdata;\n    modelSearch.originCity = originArray[0].trim();\n    modelSearch.originState = originArray[1].trim();\n    modelSearch.originRadius = srchParams.originRadius;\n    modelSearch.pickUpdate = srchParams.pickUpdate;\n    modelSearch.dropDate = srchParams.dropdate;\n    if (searchdata.destination !== \"Anywhere\") {\n      modelSearch.destinationCity = destinationArray[0].trim();\n      modelSearch.destinationState = destinationArray[1].trim();\n    }\n    modelSearch.destinationRadius = srchParams.destinationRadius;\n    modelSearch.favorite = srchParams.favorite;\n    modelSearch.trailerType = srchParams.TrailerType;\n    modelSearch.userID = userDetails && userDetails.userPrincipalName;\n    modelSearch.carrierId = userDetails && userDetails.carrierId;\n    modelSearch.page = 0;\n    modelSearch.size = 5;\n    modelSearch.sortColumn = \"pickUpdate\";\n    modelSearch.originCountry = \"\";\n    modelSearch.destinationCountry = \"\";\n    modelSearch.carrierScac = (userDetails && userDetails.carrierScac) || \"\";\n    modelSearch.carrierTier = (userDetails && userDetails.carrierTier) || \"\";\n    modelSearch.userRole = userRole && userRole[0];\n  }\n\n  return modelSearch;\n};\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport { Redirect, withRouter } from 'react-router';\nimport { isPlatform } from '@ionic/react';\nimport _ from 'lodash';\nimport { RecentSearch } from '../../../pages/Search/Recent/RecentPage.page';\nimport useInjectSaga from '../../../utils/injectSaga';\nimport useInjectReducer from '../../../utils/injectReducer';\nimport {\n  makeRecent,\n  favoriteError,\n} from '../../../selectors/RecentSearch/selector';\nimport reducer from '../../../reducers/Recent/reducer';\nimport saga from '../../../saga/Recent/saga';\nimport {\n  GetrecentData,\n  clearFavoriteError,\n} from '../../../actions/Recent/action';\nimport {\n  getLoading,\n  getUserData,\n  getRefreshStatus,\n  getUserDetails,\n  getNetworkStatus,\n} from '../../../selectors/selector';\nimport { Recent } from '../../../models/home/recent.model';\nimport { DomainConverter } from '../../../utils/common';\nimport {\n  Isearch,\n  ILoadSearchResults,\n} from '../../../schemas/Search/Search.schema';\nimport {\n  fetchResults\n} from '../../../actions/Search/action';\nimport { makeSearch } from '../../../selectors/Search/selector';\nimport { SearchResults } from '../../../models/home/SearchResults.model';\nimport { showAlert } from '../../../actions/App/action';\nimport { ToastMessage } from '../../../utils/ToastMessage';\nimport {\n  updateFavoriteData,\n} from '../../../actions/Favorite/action';\nimport {\n  PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n  NO_NEWORK,\n  FAVORITE_SEARCH_REMOVED,\n  FAVORITE_ALREADY_EXIST_TITLE,\n  FAVORITE_ALREADY_EXIST_MESSAGE,\n} from '../../../utils/constants';\nimport './DuplicatePopup.scss';\nimport { Favorite } from '../../../models/home/favorite.model';\nimport { CustomModal } from 'app/components/CustomModal';\nimport { getSearchInputes, onSearchResult } from '../searchUtility';\n\nconst key = 'recent';\nlet onSearch = false;\nlet srchParams: any = null;\nexport class RecentContainer extends PureComponent<any, any> {\n  __model: Recent;\n\n  __modelF: Favorite;\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      id: [],\n      data: {},\n      undo: false,\n      showErrorPopup: false,\n      flag: null,\n    };\n    this.__model = new Recent();\n    this.__modelF = new Favorite();\n  }\n\n  componentDidMount() {\n    this.getRecentSearchList(false);\n  }\n\n  updateFavorite = (fav: boolean, data: any) => {\n    if (!this.props.isNetworkAvailable) {\n      showAlert({\n        isShowAlert: true,\n        alertMessage: PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n        alertTitle: NO_NEWORK,\n      });\n      return;\n    }\n    const ISOpickupdate = new Date(data.pickupdate).toISOString();\n    const ISOsearchdate = new Date(data.searchdate).toISOString();\n    const ISOdropdate = new Date(data.dropdate).toISOString();\n    const newData = {\n      ...data,\n      pickupdate: ISOpickupdate,\n      searchdate: ISOsearchdate,\n      dropdate: data.destinationCity === null ? null : ISOdropdate,\n      favouritesearchindicator: fav,\n    };\n    const arr = [];\n    arr.push(data.id);\n    this.setState({ id: arr, data: newData, undo: false, flag: null });\n    if (!fav) {\n      ToastMessage.open({\n        message: FAVORITE_SEARCH_REMOVED,\n        showUndo: true,\n        callback: this.undoClicked,\n      });\n      this.props.updateFavoriteLoads(\n        this.__modelF.updateFavoriteLoad(newData),\n        false\n      );\n    } else {\n      this.props.updateFavoriteLoads(\n        this.__modelF.updateFavoriteLoadCheckDuplicate(newData),\n        false\n      );\n    }\n  };\n\n  undoClicked = () => {\n    const data = {\n      ...this.state.data,\n      favouritesearchindicator: !this.state.data.favouritesearchindicator,\n    };\n    this.props.updateFavoriteLoads(\n      this.__modelF.updateFavoriteLoadCheckDuplicate(data),\n      false\n    );\n    this.setState({ undo: true });\n  };\n\n  getRecentSearchList = (isHideLoader: boolean) => {\n    this.__model.userID =\n      (this.props.userDetails && this.props.userDetails.userPrincipalName) ||\n      '';\n    this.__model.carrierId =\n      (this.props.userDetails && this.props.userDetails.carrierId) || '';\n    this.__model.page = 0;\n    this.__model.size = 10;\n    this.props.recentLoads(this.__model.getRequestPayload(), isHideLoader);\n  };\n\n  onSearchResult = (searchData: any, _srchParams: Isearch) => {\n    srchParams = _srchParams;\n    onSearch = true;\n    const modelSearch = onSearchResult(\n      searchData,\n      _srchParams,\n      this.props.userDetails\n    );\n    if (isPlatform('mobile')) {\n      this.props.fetchData(modelSearch.getRequestPayload());\n    } else {\n      this.props.onRedirectToTab(\n        'New',\n        getSearchInputes(srchParams, this.props.userDetails)\n      );\n      onSearch = false;\n    }\n  };\n\n  render() {\n    return this.props &&\n      this.props.data &&\n      this.props.data.searchLoads &&\n      onSearch &&\n      !isPlatform('desktop') ? (\n      ((onSearch = false),\n      (\n        <Redirect\n          to={{\n            pathname: '/app/search/results',\n            state: {\n              data: DomainConverter.dataToDomain<ILoadSearchResults>(\n                SearchResults,\n                this.props.data\n              ),\n              params: srchParams,\n              searchInput: getSearchInputes(srchParams, this.props.userDetails),\n            },\n          }}\n        />\n      ))\n    ) : (\n      <>\n        <RecentSearch\n          data-test=\"recent-search\"\n          getRecentSearchList={this.getRecentSearchList}\n          getLoads={\n            this.props &&\n            this.props.recentSearchLoads &&\n            this.props.recentSearchLoads.data &&\n            this.props.recentSearchLoads.data.findUserRecentSearchHistory\n          }\n          isInPullToRefresh={this.props.isInPullToRefresh}\n          isNetworkAvailable={this.props.isNetworkAvailable}\n          showAlert={this.props.showAlert}\n          onSearchResult={this.onSearchResult}\n          updateFavorite={this.updateFavorite}\n          favoriteFlag={false}\n          id={this.state.id}\n          undo={this.state.undo}\n          flag={this.state.flag}\n        />\n        <div\n          data-test=\"error-state\"\n          onClick={() => {\n            this.setState({ showErrorPopup: false, flag: true });\n            this.props.clearErrorState();\n          }}\n        >\n          <CustomModal\n            isOpen={this.state.showErrorPopup}\n            title={FAVORITE_ALREADY_EXIST_TITLE}\n            message={FAVORITE_ALREADY_EXIST_MESSAGE}\n            buttons={[{ label: 'Ok', callback: () => {} }]}\n          />\n        </div>\n      </>\n    );\n  }\n\n  componentDidUpdate() {\n    if (this.props.errorData.updateUserSearchHistoryAsFavorite) {\n      this.setState({ showErrorPopup: true });\n    }\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  loading: getLoading(),\n  errorData: favoriteError(),\n  recentSearchLoads: makeRecent(),\n  userData: getUserData(),\n  data: makeSearch(),\n  isInPullToRefresh: getRefreshStatus(),\n  userDetails: getUserDetails(),\n  isNetworkAvailable: getNetworkStatus()\n});\n\nexport const mapDispatchToProps = (dispatch: Function) => ({\n  recentLoads: (recentSearch: any, isHideLoader: boolean) =>\n    dispatch(GetrecentData(recentSearch, isHideLoader)),\n  clearErrorState: () => dispatch(clearFavoriteError()),\n  fetchData: (searchData: any) =>\n    dispatch(fetchResults(searchData, false, false)),\n  showAlert: (data: any) => dispatch(showAlert(data)),\n  updateFavoriteLoads: (favoriteSearch: any, isHideLoader: boolean) =>\n    dispatch(updateFavoriteData(favoriteSearch, isHideLoader))\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nconst withReducer = useInjectReducer({ key, reducer });\nconst withSaga = useInjectSaga({ key, saga });\n\nexport default compose<any>(\n  withSaga,\n  withReducer,\n  withConnect\n)(withRouter(RecentContainer));\n","import {\n  ActionType,\n  FavoriteState\n} from \"../../schemas/Favorite/Favorite.Schema\";\nimport * as Constants from \"../../utils/constants\";\nimport produce from \"immer\";\n\nexport const initialFavouriteState: FavoriteState = {\n  Favorite: [],\n  updatedId: {},\n  error: {}\n};\n\nexport default (state = initialFavouriteState, action: ActionType) =>\n  produce(state, draft => {\n    switch (action.type) {\n      case Constants.GET_FAVORITE:\n        console.log(action.payload)\n        draft.Favorite = action.payload;\n        break;\n      case Constants.UPDATE_FAVORITE_LOADS_REDUCER:\n        draft.updatedId = action.payload\n    }\n  });\n","import { createSelector } from \"reselect\";\nimport { initialFavouriteState } from \"./../../reducers/Favorite/reducer\";\n\nconst selectData = (state: any) => state.Favorite || initialFavouriteState;\n\nexport const makeFavorite = () =>{\n  return createSelector(\n    [selectData],\n    Favorite => Favorite || initialFavouriteState.Favorite\n  );\n}\n  ","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport { isPlatform } from '@ionic/react';\nimport { Redirect } from 'react-router';\nimport useInjectSaga from '../../../utils/injectSaga';\nimport useInjectReducer from '../../../utils/injectReducer';\n\nimport { makeFavorite } from '../../../selectors/FavouriteSearch/selector';\nimport reducer from '../../../reducers/Favorite/reducer';\nimport saga from '../../../saga/Recent/saga';\nimport { getFavoriteData, updateFavoriteData } from '../../../actions/Favorite/action';\nimport {\n  getLoading,\n  getRefreshStatus,\n  getNetworkStatus,\n  getUserDetails,\n  getUserData\n} from '../../../selectors/selector';\nimport { showAlert } from '../../../actions/App/action';\nimport { Favorite } from '../../../models/home/favorite.model';\nimport { fetchResults } from '../../../actions/Search/action';\nimport { RecentSearch } from '../../../pages/Search/Recent/RecentPage.page';\nimport { makeSearch } from '../../../selectors/Search/selector';\nimport {\n  PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n  NO_NEWORK,\n  FAVORITE_SEARCH_REMOVED\n} from '../../../utils/constants';\nimport { DomainConverter } from '../../../utils/common';\nimport { ILoadSearchResults, Isearch } from '../../../schemas/Search/Search.schema';\nimport { SearchResults } from '../../../models/home/SearchResults.model';\nimport { ToastMessage } from '../../../utils/ToastMessage';\nimport { getSearchInputes, onSearchResult } from '../searchUtility';\n\nconst key = 'Favorite';\nlet onSearch = false;\nlet srchParams: any = null;\nexport class FavouriteContainer extends PureComponent<any, any> {\n  __model: Favorite;\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      id: [],\n      data: {}\n    };\n    this.__model = new Favorite();\n  }\n\n  componentDidMount() {\n    this.getFavoriteSearchList(false);\n  }\n\n  updateFavorite = (fav: boolean, data: any) => {\n    if (!this.props.isNetworkAvailable) {\n      showAlert({\n        isShowAlert: true,\n        alertMessage: PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n        alertTitle: NO_NEWORK\n      });\n      return;\n    }\n    const ISOpickupdate = data.pickupdate && new Date(data.pickupdate).toISOString();\n    const ISOsearchdate = data.searchdate && new Date(data.searchdate).toISOString();\n    const ISOdropdate = data.dropdate && new Date(data.dropdate).toISOString();\n    const newData = {\n      ...data,\n      pickupdate: ISOpickupdate,\n      searchdate: ISOsearchdate,\n      dropdate: ISOdropdate,\n      favouritesearchindicator: fav\n    };\n    const arr = this.state.id;\n    arr.push(data.id);\n    this.setState({ id: arr, data: newData });\n    this.props.updateFavoriteLoads(this.__model.updateFavoriteLoad(newData), false);\n    ToastMessage.open({\n      message: FAVORITE_SEARCH_REMOVED,\n      showUndo: true,\n      callback: this.undoClicked\n    });\n  };\n\n  undoClicked = () => {\n    const data = {\n      ...this.state.data,\n      favouritesearchindicator: !this.state.data.favouritesearchindicator\n    };\n    this.props.updateFavoriteLoads(this.__model.updateFavoriteLoad(data), false);\n    const arr = this.state.id;\n    arr.pop();\n    this.setState({ id: arr });\n  };\n\n  getFavoriteSearchList = (isHideLoader: boolean) => {\n    if (!this.props.isNetworkAvailable) {\n      return;\n    }\n    this.__model.userID =\n      (this.props.userDetails && this.props.userDetails.userPrincipalName) || '';\n    this.__model.carrierId = (this.props.userDetails && this.props.userDetails.carrierId) || '';\n    this.__model.page = 0;\n    this.__model.size = 10;\n    this.props.favoriteLoads(this.__model.getFavoritePayload(), isHideLoader);\n  };\n\n  onSearchResult = (searchData: any, _srchParams: Isearch) => {\n    srchParams = _srchParams;\n    onSearch = true;\n    const modelSearch = onSearchResult(\n      searchData,\n      _srchParams,\n      this.props.userDetails\n    );\n    if (isPlatform(\"mobile\")) {\n      this.props.fetchData(modelSearch.getRequestPayload());\n    } else {\n      this.props.onRedirectToTab(\n        \"New\",\n        getSearchInputes(srchParams, this.props.userDetails)\n      );\n      onSearch = false;\n    }\n  };\n\n  render() {\n    return this.props &&\n      this.props.data &&\n      this.props.data.searchLoads &&\n      onSearch &&\n      !isPlatform('desktop') ? (\n        ((onSearch = false),\n        (\n          <Redirect\n            to={{\n              pathname: '/app/search/results',\n              state: {\n                data: DomainConverter.dataToDomain<ILoadSearchResults>(\n                  SearchResults,\n                  this.props.data\n                ),\n                params: srchParams,\n                searchInput: getSearchInputes(srchParams, this.props.userDetails)\n              }\n            }}\n          />\n        ))\n      ) : (\n        <RecentSearch\n          data-test=\"favorite-search\"\n          getLoads={\n            this.props.favoriteLoadsData.Favorite.data &&\n            this.props.favoriteLoadsData.Favorite.data.findUserFavouriteSearchHistory\n          }\n          favoriteFlag\n          isInPullToRefresh={this.props.isInPullToRefresh}\n          getFavoriteSearchList={this.getFavoriteSearchList}\n          isNetworkAvailable={this.props.isNetworkAvailable}\n          showAlert={this.props.showAlert}\n          onSearchResult={this.onSearchResult}\n          updateFavorite={this.updateFavorite}\n          id={this.state.id}\n        />\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  loading: getLoading(),\n  favoriteLoadsData: makeFavorite(),\n  isInPullToRefresh: getRefreshStatus(),\n  isNetworkAvailable: getNetworkStatus(),\n  userDetails: getUserDetails(),\n  data: makeSearch(),\n  userData: getUserData()\n});\n\nexport const mapDispatchToProps = (dispatch: Function) => ({\n  favoriteLoads: (favoriteSearch: any, isHideLoader: boolean) =>\n    dispatch(getFavoriteData(favoriteSearch, isHideLoader)),\n  showAlert: (data: any) => dispatch(showAlert(data)),\n  fetchData: (searchData: any) => dispatch(fetchResults(searchData, false, false)),\n  updateFavoriteLoads: (favoriteSearch: any, isHideLoader: boolean) =>\n    dispatch(updateFavoriteData(favoriteSearch, isHideLoader))\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nconst withReducer = useInjectReducer({ key, reducer });\nconst withSaga = useInjectSaga({ key, saga });\n\nexport default compose<any>(\n  withSaga,\n  withReducer,\n  withConnect\n)(FavouriteContainer);\n","import { StopActivityProps } from \"app/models/stopActivity.model\";\n\nexport interface IUserInformation {\n  carrierId?: string;\n  driverId?: string;\n  filter?: IFilter;\n}\nexport interface IFilter {\n  carrierAssigned?: Boolean;\n  driverAssigned?: Boolean;\n  inTransit?: Boolean;\n  driverAssignmentPending?: Boolean;\n  delivered?: Boolean;\n}\n\nexport interface ILoadInfromation {\n  inTransitCount: Number;\n  driverAssignedCount: Number;\n  carrierAssignedCount: Number;\n  driverAssignedPendingCount: Number;\n  inTransitShipments: [IShipmentData];\n  driverAssignedShipments: [IShipmentData];\n  carrierAssginedShipments: [IShipmentData];\n  driverAssignmentPendingShipments: [IShipmentData];\n}\nexport interface IShipmentData {\n  [index: number]: any;\n  carrierAssignedLoads?: IShipment[];\n}\n\nexport interface IShipment {\n  // disposition: Boolean\n  shipmentId: String;\n  lineOfBusiness: String;\n  transportMode: String;\n  totalWeight: Number;\n  weightUOM: String;\n  totalDistance: Number;\n  distanceUOM: String;\n  numberOfStops: Number;\n  sourceTMS: String;\n  assignedCarrierId: String;\n  isAppointmentConfirmed: Boolean;\n  isHazardous: Boolean;\n  isHighValue: Boolean;\n  isTemperatureControlled: Boolean;\n  isFreezeProtected: Boolean;\n  readyDateTime: String;\n  readyDateTimeZone: String;\n  equipmentType: String;\n  predecessorShipmentId: String;\n  successorShipmentId: String;\n  assignmentStatus: String;\n  executionStatus: String;\n  masterBillOfLoading: String;\n  shipmentServices: String;\n  loadStop: [IShipmentStop];\n  shipmentReferences: [IShipmentReference];\n  shipmentNotes: [IShipmentNote];\n  shipmentInvolvedParties: [IShipmentInvolvedParty];\n  startCity: String;\n  startCountry: String;\n  startState: String;\n  startDateTime: String;\n}\nexport interface IShipmentStop {\n  stopId: String;\n  locationId: String;\n  stopType: String;\n  sequenceNo: Number;\n  locationName: String;\n  addressLine1: String;\n  addressLine2: String;\n  city: String;\n  state: String;\n  country: String;\n  postalCode: String;\n  timeZone: String;\n  longitude: String;\n  latitude: String;\n  estimatedArrivalDateTime: String;\n  plannedArrivalDateTime: String;\n  actualArrivalDateTime: String;\n  estimatedStopDuration: String;\n  plannedDepartureDateTime: String;\n  actualDepartureDateTime: String;\n  appointmentEarlyDateTime: String;\n  appointmentLateDateTime: String;\n  estimatedStopDurationUom: String;\n  actualETADateTime: string;\n  shipmentId: String;\n  stopReference: [IShipmentReference];\n  locationNotes: [IShipmentNote];\n  stopActivity: [StopActivityProps];\n  trailerValidation: ITrailerValidation;\n}\nexport interface IShipmentReference {\n  id: Number;\n  type: String;\n  value: String;\n  stopId: String;\n  shipmentId: String;\n}\nexport interface IShipmentNote {\n  id: Number;\n  type: String;\n  value: String;\n  shipmentId: String;\n  stopId: String;\n}\n\nexport enum EquipmentFlow {\n  TRAILER_IN = \"TRAILER_IN\",\n  TRAILER_OUT = \"TRAILER_OUT\",\n  INOUT = \"INOUT\",\n  NA = \"NA\",\n}\nexport interface ITrailerValidation {\n  validationCode: String;\n  validationMessage: String;\n  validationStatus: ValidationStatus;\n}\nenum ValidationStatus {\n  SUCCESS,\n  WARNING,\n  FAILURE,\n}\nexport interface IShipmentInvolvedParty {\n  id: Number;\n  partyId: String;\n  partyType: String;\n  partyName: String;\n  partyEmail: String;\n  partyPhone: String;\n}\n\nexport type StartLocation = {\n  sourceSystem: string;\n  carrierPro: string;\n  carrierScac: string;\n  shipmentId: string;\n  carrierId: string;\n  userId: string;\n  latitude: string;\n  longitude: string;\n  city: string;\n  state: string;\n  country: string;\n  startDateTime: string;\n  timeZone: string;\n  positionDateTime: string;\n};\n\nexport type StopInformation = {\n  sourceSystem: string;\n  carrierId: string;\n  userId: string;\n  shipmentId: string;\n  carrierScac: string;\n  carrierPro: string;\n  city: string;\n  state: string;\n  country: string;\n  latitude: number;\n  longitude: number;\n  timeZone: string;\n  positionDateTime: string;\n  stopId: string;\n  sequenceNo: number;\n  stopNumber: number;\n  locationId: string;\n  actualArrivalDateTime: string;\n  actualETADateTime: string;\n  actualDepartureDateTime: string;\n  stopTrailerActivity: StopActivityProps[];\n};\n\nexport interface IStartTripInfo {\n  userId: string;\n  shipmentId: string;\n}\n\nexport type CompleteTrip = {\n  sourceSystem: string;\n  shipmentId: string;\n  carrierId: string;\n  userId: string;\n};\n\n// export type TripDispostion = {\n//   status: boolean;\n//   noTrailerStops: [ShipmentStop];\n// };\n\n// export type ShipmentStop = {\n//   stopId: string;\n//   locationId: string;\n//   stopType: string;\n//   sequenceNo: number;\n//   locationName: string;\n//   addressLine1: string;\n//   addressLine2: string;\n//   city: string;\n//   state: string;\n//   country: string;\n//   postalCode: string;\n//   timeZone: string;\n//   longitude: string;\n//   latitude: string;\n//   estimatedArrivalDateTime: string;\n//   plannedArrivalDateTime: string;\n//   actualArrivalDateTime: string;\n//   estimatedStopDuration: string;\n//   plannedDepartureDateTime: string;\n//   actualDepartureDateTime: string;\n//   appointmentEarlyDateTime: string;\n//   appointmentLateDateTime: string;\n//   estimatedStopDurationUom: string;\n//   shipmentId: string;\n//   stopReference: [ShipmentReference];\n//   locationNotes: ShipmentNote[];\n//   stopActivity: [ShipmentStopActivity];\n//   trailerValidation: TrailerValidation;\n// };\n\n// export type ShipmentNote = {\n//   type: String;\n//   value: String;\n//   shipmentId: String;\n//   stopId: String;\n// };\n","import * as React from \"react\";\nimport { ILoads } from \"../../../schemas/Loads/Loads.schema\";\n\nexport interface Child {\n  children?:any,\n  loads : ILoads[],\n  segmentName: any,\n}\nclass Loads extends React.Component<Child, any> {\n // eslint-disable-next-line\n  constructor(props : any){\n    super(props);\n  } \n  \n  public render() { \n      return (\n        <div className=\"loads-div\">\n            {this.props.children({\n                loads: this.props.loads,\n                segmentName: this.props.segmentName\n            })}\n        </div>\n    );\n  }\n}\n\nexport { Loads };\n","import { EquipmentFlow } from \"app/schemas/Exicution/exicution.schema\";\nimport { BOBTAIL } from \"app/utils/constants\";\n\nexport type StopActivityProps = {\n  id: string;\n  stopId: string;\n  seqNo: string;\n  execActivity: string;\n  tmsActivity: string;\n  equipmentId: string;\n  equipmentType: string;\n  equipmentOwner: string;\n  equipmentFlow: EquipmentFlow;\n  name: string;\n};\n\nexport const defaultStopActivity: StopActivityProps = {\n  equipmentFlow: EquipmentFlow.NA,\n  equipmentId: \"\",\n  equipmentOwner: \"\",\n  equipmentType: \"\",\n  execActivity: \"\",\n  id: \"\",\n  name: \"\",\n  seqNo: \"\",\n  stopId: \"\",\n  tmsActivity: \"\",\n};\n\nexport const stopActivityProps = {\n  id: true,\n  stopId: true,\n  seqNo: true,\n  execActivity: true,\n  tmsActivity: true,\n  equipmentId: true,\n  equipmentType: true,\n  equipmentOwner: true,\n  equipmentFlow: true,\n  name: true,\n};\n\nexport const getStopActivity = (\n  stopActivity: StopActivityProps[] = []\n): string => {\n  let activity: StopActivityProps[] = stopActivity || [];\n  activity = activity.filter(\n    (item: StopActivityProps) => (item.name || \"\").toUpperCase() != BOBTAIL\n  );\n  activity = activity\n    .slice()\n    .sort((activity1: StopActivityProps, activity2: StopActivityProps) => {\n      return Number(activity1.seqNo) - Number(activity2.seqNo);\n    });\n\n  const activityNames: string[] = [];\n\n  activity.forEach((item: StopActivityProps) => {\n    if (!activityNames.includes((item.name || \"\").trim())) {\n      activityNames.push(item.name);\n    }\n  });\n\n  return activityNames.map((item: string) => item).join(\", \") || \"\";\n};\n","import { IonImg, IonGrid, IonIcon } from \"@ionic/react\";\nimport React from \"react\";\nimport getTime from \"../../../utils/getTimePeriod\";\nimport { getAppointmentTime } from \"../../../utils/formatData\";\nimport {\n  StopActivityProps,\n  getStopActivity,\n} from \"../../../models/stopActivity.model\";\n\nconst StopDetails = (props: any) => {\n  const stopDetail = props.stopDetails;\n  const [showAddress, setShowAddress] = React.useState(false);\n\n  React.useEffect(() => {\n    if (showAddress === true) {\n      setShowAddress(false);\n    }\n  }, [JSON.stringify(props.stopDetails)]);\n\n  return (\n    <IonGrid class=\"stop-data-grid\">\n      {props.index < props.length - 1 ? (\n        <>\n          {props.index === 0 ? (\n            <IonImg\n              className=\"stop-icon\"\n              src=\"assets/icon/origin-pointer.svg\"\n            />\n          ) : (\n            <IonImg className=\"stop-icon\" src=\"assets/icon/stop-pointer.svg\" />\n          )}\n        </>\n      ) : (\n        <IonImg className=\"path_icon\" src=\"assets/icon/dst-pointer.svg\" />\n      )}\n      <IonGrid className=\"stop-address-grid\">\n        <p className=\"origin_city\">\n          {stopDetail && stopDetail.state === null\n            ? stopDetail && stopDetail.city\n            : `${stopDetail && stopDetail.city}, ${stopDetail && stopDetail.state}`}\n          {props.showExpandView ? (\n            <>\n              {showAddress ? (\n                <IonIcon\n                  src=\"assets/icon/minus-icon.svg\"\n                  class=\"plus-icon\"\n                  onClick={() => setShowAddress(!showAddress)}\n                />\n              ) : (\n                <IonIcon\n                  src=\"assets/icon/plus.svg\"\n                  class=\"plus-icon\"\n                  onClick={() => setShowAddress(!showAddress)}\n                />\n              )}\n            </>\n          ) : null}\n        </p>\n        {props.showExpandView && stopDetail ? (\n          <IonGrid\n            class={`complete-address ${showAddress ? \"fadein\" : \"fadeout\"}`}\n          >\n            {stopDetail && stopDetail.locationName && (\n              <p>{stopDetail.locationName}</p>\n            )}\n            {stopDetail && stopDetail.addressLine1 && (\n              <p> {stopDetail.addressLine1}</p>\n            )}\n            {stopDetail && stopDetail.addressLine2 && (\n              <p> {stopDetail.addressLine2}</p>\n            )}\n            {stopDetail &&\n              (stopDetail.city ||\n                stopDetail.state ||\n                stopDetail.postalCode) && (\n                <p>\n                  {\" \"}\n                  {stopDetail.city},{stopDetail.state},{stopDetail.postalCode}\n                </p>\n              )}\n          </IonGrid>\n        ) : null}\n        {props.index === 0 ? (\n          <p className=\"origin_milehead load_header_elements\">\n            {stopDetail &&\n              stopDetail.specialServices &&\n              stopDetail.specialServices.length &&\n              stopDetail.specialServices.map((service: any, index: any) => (\n                <span key={index}>{service.specialServiceDesc}</span>\n              ))}\n            {getStopActivity((stopDetail && stopDetail.stopActivity) || [])}{\" \"}\n          </p>\n        ) : (\n          <>\n            {\" \"}\n            {props.index === props.length - 1 ? (\n              <p className=\"origin_milehead load_header_elements\">\n                {stopDetail &&\n                  stopDetail.specialServices &&\n                  stopDetail.specialServices.length &&\n                  stopDetail.specialServices.map((service: any, index: any) => (\n                    <span key={index}>\n                      {service.specialServiceDesc}\n                    </span>\n                  ))}\n                {getStopActivity((stopDetail && stopDetail.stopActivity) || [])}{\" \"}\n              </p>\n            ) : (\n              <>\n                {\" \"}\n                {props.index === props.length - 1 ? (\n                  <p className=\"origin_milehead load_header_elements\">\n                    {stopDetail &&\n                      stopDetail.specialServices &&\n                      stopDetail.specialServices.length &&\n                      stopDetail.specialServices.map(\n                        (service: any, index: any) => (\n                          <span key={index}>\n                            {service.specialServiceDesc}\n                            {stopDetail.specialServices.length ? \", \" : \" \"}\n                          </span>\n                        )\n                      )}\n                    {getStopActivity(\n                      (stopDetail && stopDetail.stopActivity) || []\n                    )}{\" \"}\n                    {props.isCarrierLoad ? null : (\n                      <>{stopDetail && stopDetail.deadHead} deadhead </>\n                    )}\n                  </p>\n                ) : (\n                  <p className=\"origin_milehead load_header_elements\">\n                    Stop off {props.index} :{\" \"}\n                    {getStopActivity(\n                      (stopDetail && stopDetail.stopActivity) || []\n                    )}{\" \"}\n                  </p>\n                )}\n              </>\n            )}\n          </>\n        )}\n        <p className=\"origin_dateTime load_header_elements\">\n          {props.appointment}\n        </p>\n      </IonGrid>\n    </IonGrid>\n  );\n};\n\nclass LoadTileHeader extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  public render() {\n    let loadStop = [];\n    let sortedLoadStops = this.props.loadStop || [];\n    sortedLoadStops = sortedLoadStops.slice().sort((load1: any, load2: any) => {\n      if (load1.sequenceNo && load2.sequenceNo) {\n        return load1.sequenceNo - load2.sequenceNo;\n      }\n      if (load1.stopSequence && load2.stopSequence) {\n        return load1.stopSequence - load2.stopSequence;\n      }\n      return 0;\n    });\n    if (!this.props.isCarrierLoad) {\n      sortedLoadStops = sortedLoadStops.filter((stop: any) => {\n        return stop.stopType !== \"NFR\";\n      });\n    }\n\n    if (this.props.isLoadDetails) {\n      loadStop = sortedLoadStops;\n    } else {\n      loadStop[0] = sortedLoadStops && sortedLoadStops[0];\n      loadStop[1] =\n        sortedLoadStops && sortedLoadStops[sortedLoadStops.length - 1];\n    }\n    const calculateTime = (stop: any) => {\n      if (this.props.isCarrierLoad) {\n        return getAppointmentTime(stop);\n      }\n      return getTime(stop.appointmentFrom || \"\", stop.appointmentTo || \"\");\n    };\n\n    return (\n      <IonGrid class=\"stop-details-grid\">\n        {loadStop\n          ? loadStop.map((stop: any, index: any) => (\n            <StopDetails\n              key={index}\n              stopDetails={stop}\n              appointment={(stop && calculateTime(stop)) || \"\"}\n              length={loadStop.length}\n              index={index}\n              showExpandView={this.props.showExpandView}\n              isCarrierLoad={this.props.isCarrierLoad}\n            />\n          ))\n          : null}\n      </IonGrid>\n    );\n  }\n}\n\nexport { LoadTileHeader };\n","import * as React from 'react';\nimport './Load-Tile.scss';\n\nclass LoadTileFooter extends React.Component<any, any> {\n  public render() {\n    const stopOffs = this.props.numberOfStops - 2;\n    return (\n      <div>\n        <p className=\"card_p-elements loadno_card\">\n          {this.props.showLoadNo ? this.props.shipmentId : \"\"}\n        </p>\n        {this.props.rate === null ||\n        (this.props.rate && this.props.rate.totalCharge === null) ||\n        (this.props.rate && this.props.rate.totalCharge === 0) ? (\n          <p\n            className=\"card_p-elements card-contact_for_price\"\n            data-test=\"contact-price\"\n          >\n            Contact for price\n          </p>\n        ) : (\n          <>\n            {this.props.rate && this.props.rate.totalCharge ? (\n              <p className=\"card-price\" dat-test=\"card-price\">\n                ${Math.trunc(this.props.rate.totalCharge)}\n              </p>\n            ) : null}\n          </>\n        )}\n        {this.props.totalDistance ? (\n          <p\n            className={`card-distance ${\n              this.props.showLoadNo ? \"no-margin\" : \"\"\n            }`}\n            data-test=\"card-distance\"\n          >\n          {Math.round(this.props.totalDistance)}{\" \"}\n            miles\n          </p>\n        ) : null}\n        {stopOffs > 0 && (\n          <p className=\"card-stopOffs\" data-test=\"stop-offs\">\n            {stopOffs > 1 ? `${stopOffs} Stop offs` : `${stopOffs} Stop off`}\n          </p>\n        )}\n        <p className=\"card_p-elements card-trailerType\">\n          {this.props.isCarrierLoad\n            ? this.props.equipmentType\n            : this.props.transportMode}\n        </p>\n        <p className=\"card_p-elements card-lbs\">\n          {this.props.totalWeight && this.props.totalWeight.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")} {this.props.weightUOM}\n        </p>\n        {this.props.isHazardous && (\n          <p className=\"card_p-elements card-hazmat\" data-test=\"is-Hazardous\">\n            Hazmat\n          </p>\n        )}\n        {this.props.isHighValue && (\n          <p className=\"card_p-elements card-value\" data-test=\"is-HighValue\">\n            High Value\n          </p>\n        )}\n        {(this.props.specialServices &&\n          this.props.specialServices.length &&\n          this.props.specialServices.map((service: any, index: any) => (\n            <p className=\"card_p-elements card-value\" key={index}>\n              {service.specialServiceDesc}\n            </p>\n          ))) ||\n          null}\n        {(this.props.shipmentServices &&\n          this.props.shipmentServices.length &&\n          this.props.shipmentServices.map((service: any, index: any) => (\n            <p className=\"card_p-elements card-value\" key={index}>\n              {service.serviceDescription}\n            </p>\n          ))) ||\n          null}\n        {this.props.isTemperatureControlled && (\n          <p className=\"card_p-elements card-value\" data-test=\"is-temperature\">\n            Temp Control\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n\nexport { LoadTileFooter };\n","import { IonImg, IonGrid } from '@ionic/react';\nimport * as React from \"react\";\nimport getTime from \"../../../utils/getTimePeriod\";\nimport { getAppointmentTime } from '../../../utils/formatData';\n\nconst StopDetails = (props: any) => {\n  const stopDetail = props.stopDetails;\n  return (\n    <IonGrid class=\"stop-data-grid\">\n      {props.index < props.length - 1 ? (\n        <IonImg className=\"stop-icon\" src=\"assets/icon/origin-pointer.svg\" />\n      ) : (\n        <IonImg className=\"path_icon\" src=\"assets/icon/dst-pointer.svg\" />\n      )}\n      <IonGrid className=\"stop-address-grid\">\n        <p className=\"origin_city\">\n          {stopDetail.city}, {stopDetail.state}\n        </p>\n        <p className=\"origin_dateTime load_header_elements\">\n          {props.appointment}\n        </p>\n      </IonGrid>\n    </IonGrid>\n  );\n};\nclass CariierAssignLoadTileHeader extends React.Component<any, any> {\n  public render() {\n    const loadStop = [];\n    let sortedLoadStops: any[] =\n      this.props.loadStop || [];\n    sortedLoadStops = sortedLoadStops.slice().sort((load1: any, load2: any) => {\n      if (load1.sequenceNo && load2.sequenceNo) {\n        return load1.sequenceNo - load2.sequenceNo;\n      } else if (load1.stopSequence && load2.stopSequence) {\n        return load1.stopSequence - load2.stopSequence;\n      } else {\n        return 0;\n      }\n    });\n    if (sortedLoadStops.length > 0) {\n      loadStop[0] = sortedLoadStops[0];\n      loadStop[1] = sortedLoadStops[sortedLoadStops.length - 1];\n    }\n    return (\n      <IonGrid class=\"assign-load-details-grid\">\n        {loadStop\n          ? loadStop.map((stop: any, index: any) => (\n              <StopDetails\n                key={index}\n                stopDetails={stop || {}}\n                appointment={(stop && getAppointmentTime(stop)) || \"\"}\n                length={loadStop.length}\n                index={index}\n              />\n            ))\n          : null}\n      </IonGrid>\n    );\n  }\n}\n\nexport { CariierAssignLoadTileHeader };\n","import {\n  IonCard,\n  IonCardContent,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonImg,\n  IonIcon\n} from \"@ionic/react\";\nimport * as React from \"react\";\nimport { LoadTileHeader } from \"../../../components/app/home/Load-Tile-Header\";\nimport { LoadTileFooter } from \"../../../components/app/home/Load-Tile-Footer\";\nimport { CariierAssignLoadTileHeader } from \"../../../components/app/home/carrier-assign-load-header\";\nimport {\n  PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n  NO_NEWORK,\n  MODULES,\n  OFFLINE_MODE_STATE\n} from \"../../../utils/constants\";\n\nexport const CardContent = (props: any) => {\n  let name = \"\";\n  if (props.showInitial) {\n    let driverName: any = \"\";\n    if (\n      props.module !== MODULES.DRIVER_ASSIGNED_MODULE ||\n      (props.module === MODULES.DRIVER_ASSIGNED_MODULE &&\n        props.driverAssignmentStatus === true)\n    ) {\n      driverName =\n        props.shipmentInvolvedParties &&\n        props.shipmentInvolvedParties.filter((data: any) => {\n          return data.partyType === \"PRIMARY DRIVER\";\n        });\n      driverName =\n        driverName && driverName.length ? driverName[0].partyName : \"\";\n    }\n\n    if (\n      props.driverAssignmentStatus === false &&\n      props.module === MODULES.DRIVER_ASSIGNED_MODULE\n    ) {\n      driverName =\n        props.assignmentTransaction &&\n        props.assignmentTransaction[0] &&\n        props.assignmentTransaction[0].driverName;\n    }\n\n    if (driverName) {\n      const fName = driverName.slice(0, 1);\n      const LName = driverName.includes(\" \")\n        ? driverName.slice(\n            driverName.indexOf(\" \") + 1,\n            driverName.indexOf(\" \") + 2\n          )\n        : \"\";\n      name = fName.toUpperCase() + LName.toUpperCase();\n    } else {\n      name = \"U\";\n    }\n  }\n\n  const onButtonClick = (e: any) => {\n    if (props.isNetworkAvailable || OFFLINE_MODE_STATE) {\n      e.stopPropagation();\n      props.onButtonClick(e);\n    } else {\n      props.showAlert({\n        isShowAlert: true,\n        alertMessage: PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n        alertTitle: NO_NEWORK\n      });\n    }\n  };\n\n  const handleStarButton = (e: any) => {\n    e.preventDefault();\n    props.toggleWatchLoad(props.loadId);\n  };\n\n  return (\n    <IonCardContent className=\"card-content\">\n      <IonGrid class=\"load-grid\">\n        <IonRow>\n          <IonCol className=\"card-price-col\" size=\"4\">\n            <LoadTileFooter {...props} isCarrierLoad={props.isCarrierLoad} />\n          </IonCol>\n          <IonCol className=\"card-city-col\">\n            {props.isCarrier === true ? (\n              <CariierAssignLoadTileHeader\n                loadStop={props.loadStop}\n                onButtonClick={(e: any) => {\n                  onButtonClick(e);\n                }}\n                buttonName={props.buttonName}\n              />\n            ) : (\n              <LoadTileHeader\n                loadStop={props.loadStop}\n                isLoadDetails={props.isLoadDetails}\n                showExpandView={props.showExpandView}\n                module={props.module}\n                isCarrierLoad={props.isCarrierLoad}\n              />\n            )}\n          </IonCol>\n          {props.isWatch ? (\n            <IonCol\n              size=\"0.5\"\n              className=\"star_icon_col\"\n              onClick={handleStarButton}\n            >\n              <IonImg className=\"star_icon\" src=\"assets/icon/watched-color.svg\" />\n            </IonCol>\n          ) : null}\n        </IonRow>\n        <IonRow>\n          <IonCol size=\"4\">\n            {props.showInitial && name ? (\n              <IonGrid className=\"driver-name-div\">{name}</IonGrid>\n            ) : null}\n          </IonCol>\n          <IonCol>\n            {props.buttonName ? (\n              <IonRow\n                class=\"assign-driver-row\"\n                onClick={\n                  !props.isButtonHidden\n                    ? (e: any) => onButtonClick(e)\n                    : () => {}\n                }\n              >\n                <IonCol\n                  class={`${\n                    props.showInitial\n                      ? \"change-driver-col\"\n                      : \"assign-driver-icon-col\"\n                  }`}\n                >\n                  {props.showInitial ? (\n                    <IonGrid\n                      hidden={props.isButtonHidden}\n                      className=\"chnages-driver-icon-div\"\n                    >\n                      <IonIcon src=\"assets/icon/reassign-driver.svg\" />\n                    </IonGrid>\n                  ) : (\n                    <div className=\"assign-driver-icon-div\">\n                      <IonIcon src=\"assets/icon/add-user-icon.svg\" />\n                    </div>\n                  )}\n                </IonCol>\n                <IonCol class=\"label-col\">\n                  {!props.isButtonHidden && props.buttonName}\n                </IonCol>\n              </IonRow>\n            ) : (\n              <IonRow class=\"assign-driver-row\"></IonRow>\n            )}\n          </IonCol>\n        </IonRow>\n      </IonGrid>\n    </IonCardContent>\n  );\n};\nclass LoadTile extends React.Component<any, any> {\n  _updatedLoads: any;\n  _source: any;\n  _destination: any;\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      stopCount: this.props.stopCount,\n      pageName: \"loadPage\"\n    };\n    this._source = this.props.loadStop && this.props.loadStop[0];\n    this._destination =\n      this.props.loadStop &&\n      this.props.loadStop[this.props.loadStop.length - 1];\n  }\n\n  private readonly getNavigationUrl = (): string | undefined => {\n    let navigationUrl: string | undefined;\n    let loadId = \"\";\n    if (this.props.isCarrier) {\n      loadId = this.props.shipmentId;\n    } else {\n      loadId = this.props.loadId;\n    }\n\n    if (\n      this.props.module === MODULES.INTRANSIT_MODULE ||\n      this.props.module === MODULES.DRIVER_ASSIGNED_MODULE ||\n      this.props.module === MODULES.RECENTLY_DELIVERED_MODULE ||\n      this.props.module === MODULES.CARRIER_ASSIGNED_MODULE\n    ) {\n      navigationUrl = undefined;\n    } else {\n      navigationUrl = `/app/${this.props.module}/${loadId}`;\n    }\n    return navigationUrl;\n  };\n\n  public onCardClick = () => {\n    if (\n      (this.props.module === MODULES.INTRANSIT_MODULE ||\n        this.props.module === MODULES.DRIVER_ASSIGNED_MODULE ||\n        this.props.module === MODULES.RECENTLY_DELIVERED_MODULE ||\n        this.props.module === MODULES.CARRIER_ASSIGNED_MODULE) &&\n      this.props.onRowCallback\n    ) {\n      this.props.onRowCallback(this.props.shipmentLoad);\n    }\n  };\n\n  public render() {\n    return (\n      <>\n        {this.props.isLoadDetails === true ? (\n          <IonCard className=\"ion-card-updated\">\n            <CardContent {...this.props} />\n          </IonCard>\n        ) : (\n          <IonCard\n            routerLink={this.getNavigationUrl()}\n            className=\"ion-card-updated\"\n            onClick={this.onCardClick}\n          >\n            <CardContent {...this.props} />\n          </IonCard>\n        )}\n      </>\n    );\n  }\n}\n\nexport { LoadTile };\n","import React, { Component } from \"react\";\nimport \"./dropdown.scss\";\nimport { IonRow, IonCol, IonModal, IonIcon } from \"@ionic/react\";\n\nclass Dropdown extends Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      selectedOption: this.props.options[0],\n      clickedOption: this.props.options[0],\n      asc: true,\n      isDropdown: false,\n      loadData: this.props.loadData,\n      upArrow: \"assets/icon/sort icon.svg\",\n      downArrow: \"assets/icon/sort icon downward.svg\",\n      slectedValue: this.props.options[0].value,\n    };\n  }\n  hideDropdownMenu = (option: any) => {\n    this.setState({ clickedOption: option });\n    if (this.state.slectedValue !== option.value) {\n      this.setState({ asc: true });\n    }\n  };\n  onConfrim = (value: any) => {\n    this.setState({\n      slectedValue: this.state.selectedOption.value,\n      selectedOption: this.state.clickedOption,\n    });\n    this.sortBy(value);\n  };\n  dropdownClick = () => {\n    this.setState({ isDropdown: true });\n  };\n  sortBy = (x: any) => {\n    const { asc } = this.state;\n    this.setState({ isDropdown: false });\n    this.props.sortedData(x, asc);\n  };\n  render() {\n    const sortByOptions = this.props.options;\n    return (\n      <>\n        <div className=\"search_sortby_select\">\n          <div onClick={this.dropdownClick} className=\"search_sort_button\" data-test=\"dropdown-click\">\n            <span className=\"text_BY\">By </span>{\" \"}\n            {this.state.selectedOption.name.length <= 16\n              ? this.state.selectedOption.name\n              : this.state.selectedOption.name.slice(0, 15) + \"...\"}\n          </div>\n          <i className=\"down\"></i>\n        </div>\n        <div data-test=\"sort-arrows\"\n          className=\"sortArrows\"\n          onClick={() => {\n            this.setState(\n              {\n                asc: !this.state.asc,\n              },\n              () => {\n                this.sortBy(this.state.selectedOption.value);\n              }\n            );\n          }}\n        >\n          <IonIcon\n            src={\n              this.state.asc === true\n                ? this.state.upArrow\n                : this.state.downArrow\n            }\n          ></IonIcon>\n        </div>\n        <IonModal\n          show-backdrop={true}\n          backdrop-dismiss={false}\n          isOpen={this.state.isDropdown}\n          cssClass=\"dropdown-modal\"\n          onDidDismiss={() => {\n            this.setState({\n              isDropdown: false,\n            });\n          }}\n        >\n          <div className=\"search_options\">\n            <IonRow class=\"dropdown-row dropdown-heading\">\n              <IonCol>\n                {\" \"}\n                <p className=\"sortBy_text\">Sort by</p>{\" \"}\n              </IonCol>\n            </IonRow>\n            {sortByOptions.map((option: any, k: any) => (\n              <IonRow data-test=\"hide-drop\"\n                class=\"dropdown-row\"\n                key={k}\n                onClick={() => this.hideDropdownMenu(option)}\n              >\n                <IonCol\n                  class={\n                    option.name === this.state.clickedOption.name\n                      ? \"checked\"\n                      : \"\"\n                  }\n                >\n                  {option.name} <i className=\"check\"></i>{\" \"}\n                </IonCol>\n              </IonRow>\n            ))}\n            <IonRow class=\"dropdown-handler\">\n              <IonCol size=\"1\"></IonCol>\n              <IonCol data-test=\"dropdown-cancel\"\n                size=\"5\"\n                className=\"dropdown_cancel\"\n                onClick={() =>\n                  this.setState({\n                    isDropdown: false,\n                    clickedOption: this.state.selectedOption,\n                  })\n                }\n              >\n                <span>Cancel</span>\n              </IonCol>\n              <IonCol  data-test=\"dropdown_cancel\"\n                size=\"5\"\n                className=\"dropdown_cancel\"\n                onClick={() => this.onConfrim(this.state.clickedOption.value)}\n              >\n                <span>OK</span>\n              </IonCol>\n              <IonCol size=\"1\"></IonCol>\n            </IonRow>\n          </div>\n        </IonModal>\n      </>\n    );\n  }\n}\n\nexport default Dropdown;\n","import ios from './ios-cross.svg';\r\nimport md from './ios-cross.svg';\r\n\r\nexport default /*#__PURE__*/ {\r\n  ios: ios,\r\n  md: md\r\n};","/* Network Toaster component*/\n/* Error Messge will be displayed when app goes offline. */\nimport React from 'react';\nimport \"./NetworkErrorToaster.scss\";\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { getNetworkStatus } from '../../selectors/selector';\nimport { CHECK_NETWORK_MESSAGE } from '../../utils/constants';\n\nconst NetworkErrorToaster = (props: any) => {\n  return (\n    <>\n      {!props.isNetworkAvailable\n        ? <div className=\"no-network-div\">{CHECK_NETWORK_MESSAGE}</div>\n        : null}\n    </>\n  )\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isNetworkAvailable: getNetworkStatus(),\n});\n\n\nexport default connect(mapStateToProps, null)(NetworkErrorToaster);\n","import * as React from \"react\";\nimport { IonRow, IonSegment, IonSegmentButton, IonLabel } from \"@ionic/react\";\n\nexport interface SegmentProps {\n  getSegment?: any;\n  segments?: any;\n  activeSegment?: any;\n}\n\nexport const SegmentControll: React.FC<SegmentProps> = ({\n  getSegment,\n  segments,\n  activeSegment,\n}) => {\n  return (\n    <>\n      {segments && (\n        <IonRow class=\"segment-row\">\n          <IonSegment\n            mode=\"ios\"\n            onIonChange={(e) => getSegment(e)}\n            class=\"segment_control_tabs\"\n          >\n            {segments.map((name: any, index: number) => (\n              <IonSegmentButton\n                mode=\"ios\"\n                key={index}\n                value={name}\n                checked={activeSegment === name}\n              >\n                <IonLabel>{name}</IonLabel>\n              </IonSegmentButton>\n            ))}\n          </IonSegment>\n        </IonRow>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport \"./IonUser.scss\";\n\nexport const IonImage: React.FC<any> = (props:any) => {\n    const {firstName, lastName, big = false, xlarge = false, normal = false} = props;\n    const className = `ion-user-custom-image ${normal ? 'normal': ''} ${big ? 'big': ''} ${xlarge ? 'xlarge': ''}`;\n    return (\n        <div className=\"ion-image-wrapper\">\n            <div className={className}>\n            { \n                [firstName, lastName].map((name:string, index: number) => name ? (\n                    <span key={name + index} className=\"ion-user-child-img\">{\n                        !!name\n                        ? name[0].toUpperCase()\n                        : \"\"\n                    }</span>\n                ): null)\n            }\n            </div>\n        </div>\n    )\n}\n\n","import React, { useState } from 'react';\nimport { IonGrid,IonCol, IonRow } from '@ionic/react';\nimport { ROLES } from '../../utils/constants';\nimport { IonImage } from '../app/Manage/IonImage';\n\nconst ImageCapture:React.FC<any> = (props:any) => {\n\n    const { userDetails } = props;\n    const roles = userDetails && userDetails.userApplicationDetails && userDetails.userApplicationDetails.reduce((current:any, item:any) => {\n        return [...current, ...item.roles];\n    }, []).map(((role:any) => ROLES[role.roleName])) || [];\n    \n    const [isRolesShow, setRolesShow] = useState(false);\n\n    const toggleRoles = () => {\n        setRolesShow(!isRolesShow);\n    }\n\n    return (\n        <>\n            <IonGrid>\n                {\n                    userDetails ? (\n                        <IonRow>\n                            <IonCol className=\"profileImg-col\" size=\"4\">\n                                <IonImage {...userDetails} xlarge />\n                            </IonCol>\n                            <IonCol className=\"profile-Col\" size=\"8\">\n                                <div className=\"profileName\" data-test=\"profile-name\">{`${userDetails.firstName || ''}  ${userDetails.lastName || ''}`}</div>\n                                <div className=\"profile-role\" data-test=\"admin\">\n                                    { roles && roles.length > 0 && roles[0] || '' }\n                                    { roles.length > 1 ?<span className=\"admincount\" onClick={toggleRoles}> { isRolesShow ? '-' : `+ ${roles.length - 1}`}</span>: null }\n                                    {\n                                        isRolesShow ? (\n                                            <ul className=\"profile-add-roles\">\n                                                { roles.slice(1, roles.length).map((role:any) => (\n                                                    <li>\n                                                        {role}\n                                                    </li>\n                                                ))}\n                                            </ul>\n                                        ) : null\n                                    }\n                                </div>\n                                <div className=\"profileEmail\" data-test=\"profile-email\">{userDetails.email}</div>\n                            </IonCol>\n                        </IonRow>\n                    ) : null\n                }\n            </IonGrid>\n        </>\n    );\n    \n}\n\nexport default ImageCapture;\n\n\n","import * as React from 'react';\n\nimport {\n  IonHeader,\n  IonRow,\n  IonCol,\n  IonImg,\n  IonGrid,\n  IonButton,\n  IonIcon,\n  isPlatform\n} from '@ionic/react';\nimport './search-header.scss';\nimport { withRouter, RouteComponentProps } from 'react-router';\nimport BackIcon from '../../../utils/BackIcon-js/Back';\nimport cross from '../../../utils/crossIcon-js/cross';\nimport NetworkErrorToaster from '../../../components/NetworkErrorToaster/NetworkErrorToaster';\nimport { SegmentControll } from '../../../components/app/Bars/segment-controll';\nimport ImageCapture from '../../../components/ImageCapture/ImageCapture';\nimport {\n  END_USER_TITLE,\n  LOADS_TITLE,\n  SEARCH_TITLE,\n  ADD_DRIVER_DISPATCHER_TITLE,\n  FREQUENTLY_ASKED_QUESTIONS_TITLE,\n  MENU_TITLE\n} from '../../../utils/constants';\n\ninterface HeaderProps extends RouteComponentProps {\n  title: any;\n  getSegment?: any;\n  segments?: any;\n  isAddDriver?: any;\n  activeSegment?: any;\n  isMap?: any;\n  backUrl?: any;\n  editData?: any;\n  viewMap?: any;\n  viewDeviceInfo?: any;\n  isDeviceInfo?: any;\n  isSearch?: any;\n  tab?: any;\n  isLoadDetails?: any;\n  History?: any;\n  isMyLoad?: any;\n  isStar?: boolean;\n  isWatched?: boolean;\n  toggleWatchLoad?: Function;\n  addPage?: Function;\n  customBackUrl?: Function;\n  imageCapature?: any;\n}\nconst AppHeader: React.FC<HeaderProps> = ({\n  title,\n  getSegment,\n  segments,\n  activeSegment,\n  backUrl,\n  isAddDriver,\n  isMap,\n  editData,\n  viewMap,\n  isDeviceInfo,\n  viewDeviceInfo,\n  isSearch,\n  tab,\n  isLoadDetails,\n  History,\n  isMyLoad,\n  isStar,\n  isWatched,\n  toggleWatchLoad,\n  addPage,\n  customBackUrl,\n  imageCapature\n}) => {\n  let displayValue = '';\n  if (tab && tab.indexOf('/') !== -1) {\n    displayValue = tab.replace('/', '\\xa0\\xa0\\xa0|\\xa0\\xa0\\xa0');\n  } else {\n    displayValue = tab;\n  }\n  const navigate = () => {\n    if (isPlatform('desktop') && backUrl === '/app/search/results') {\n      backUrl = '/app/search';\n    }\n    History.push(backUrl);\n  };\n  return (\n    <IonHeader\n      class={\n        title === 'Manage'\n          ? 'page-manage'\n          : title === 'Loads' || title === 'Search'\n          ? `page-header`\n          : `page-header-searchResults`\n      }>\n      <IonRow class=\"header-desc\">\n        <IonCol size=\"2\">\n          {(backUrl || customBackUrl) && (\n            //  <IonBackButton class=\"cross_backbutton\" icon={cross} text=\"\" defaultHref={backUrl}  ></IonBackButton>\n            <IonButton\n              onClick={() => (customBackUrl ? customBackUrl() : navigate())}\n              className={`header-back-button ${\n                title === 'Select A Driver' ? 'cross_backbutton' : ''\n              }`}>\n              <IonIcon icon={title === 'Select A Driver' ? cross : BackIcon} />\n            </IonButton>\n          )}\n        </IonCol>\n\n        <IonCol\n          class=\"title-col\"\n          size={\n            title === END_USER_TITLE ||\n            title === ADD_DRIVER_DISPATCHER_TITLE\n              ? '10'\n              : '7' && title === MENU_TITLE\n                ? '5'\n                : '7'\n          }>\n          <div\n            id={\n              title === LOADS_TITLE || title === SEARCH_TITLE\n                ? `header-title`\n                : title === END_USER_TITLE ||\n                  title === ADD_DRIVER_DISPATCHER_TITLE\n                  ? `header-title-more`\n                  : `header-title-sm`\n            }>\n            {title === \"Frequently Asked Questions\" ? \"FAQ\" : title}\n          </div>\n        </IonCol>\n        <IonCol size={title === 'Menu' ? '5' : '3'} class=\"header-desc-col\">\n          {isMap && (\n            <>\n              <div id=\"header-icon\" className=\"edit_icon\">\n                <IonImg\n                  alt=\"logo\"\n                  src=\"assets/icon/shipment-header-map.svg\"\n                  onClick={() => viewMap()}\n                />\n                <div className=\"start-trip-header\">Map</div>\n              </div>\n            </>\n          )}\n          {addPage && (\n            <>\n              <div id=\"header-icon\" className=\"edit_icon\">\n                <IonImg alt=\"logo\" src=\"assets/icon/Add_Black.svg\" onClick={() => addPage()} />\n                <div className=\"edit_text\">Add</div>\n              </div>\n            </>\n          )}\n          {isDeviceInfo && (\n            <>\n              <div id=\"header-icon\" onClick={() => viewDeviceInfo()} className=\"edit_icon\">\n                <IonImg alt=\"logo\" src=\"assets/icon/help.svg\" />\n                <div className=\"start-trip-header\">Device Info</div>\n              </div>\n            </>\n          )}\n          {editData && (\n            <>\n              <div id=\"header-icon\" className=\"edit_icon\" onClick={() => editData()}>\n                <IonImg alt=\"logo\" src=\"assets/icon/edit.svg\" />\n                <div className=\"edit_text\">Edit</div>\n              </div>\n            </>\n          )}\n          {/* {isSearch && <div id=\"header-icon\"><IonImg alt=\"logo\" src=\"assets/icon/search_white.svg\" /></div>}\n        {isAddDriver && <><div id=\"header-icon\" className=\"edit_icon\"><IonImg alt=\"logo\"\n        src=\"assets/icon/Add_Black.svg\" onClick={() => isAddDriver()} /><div className=\"edit_text\">Add</div></div></>} */}\n          {isStar && (\n            <IonIcon\n              class=\"star-icon\"\n              src={`assets/icon/${isWatched ? 'watched-color' : 'watch-icon'}.svg`}\n              onClick={() => toggleWatchLoad && toggleWatchLoad(!isWatched)}\n            />\n          )}\n          {isAddDriver && (\n            <>\n              <div id=\"header-icon\" className=\"edit_icon\">\n                <IonImg alt=\"logo\" src=\"assets/icon/Add_Black.svg\" onClick={() => isAddDriver()} />\n                <div className=\"edit_text\">Add</div>\n              </div>\n            </>\n          )}{' '}\n        </IonCol>\n      </IonRow>\n      {backUrl || title ? (\n        <IonGrid className=\"desktop-header-desc\">\n          {backUrl && (\n            <IonGrid class=\"desktop-hdeader-button\">\n              <IonButton onClick={() => navigate()} class=\"desktop-back-button\">\n                {displayValue}\n              </IonButton>\n              <span className=\"desktop-title\">\n                {isLoadDetails ? (\n                  <>{`\\xa0\\xa0|\\xa0\\xa0\\xa0Load #${title}`}</>\n                ) : (\n                  <>{`\\xa0\\xa0|\\xa0\\xa0\\xa0${title}`}</>\n                )}\n              </span>\n            </IonGrid>\n          )}\n          {title && title !== 'Manage' ? <IonGrid className=\"header-title\">{title}</IonGrid> : null}\n        </IonGrid>\n      ) : null}\n      {imageCapature ? <ImageCapture {...imageCapature} /> : null}\n      <SegmentControll segments={segments} getSegment={getSegment} activeSegment={activeSegment} />\n      <NetworkErrorToaster />\n    </IonHeader>\n  );\n};\n\nexport default withRouter(AppHeader);\n","import React, { PureComponent } from \"react\";\nimport {\n  IonContent,\n  IonList,\n  IonRow,\n  IonCol,\n  IonSegment,\n  IonSegmentButton,\n  IonBadge,\n  IonPage,\n  isPlatform\n} from \"@ionic/react\";\nimport { Loads } from \"../../../components/app/home/Loads\";\nimport { LoadTile } from \"../../../components/app/home/Load-Tile\";\nimport Dropdown from \"../../../components/core/Dropdown/dropdown\";\nimport AppHeader from \"../../../components/app/Bars/Bar-header\";\nimport { sortByOptions } from \"../../../utils/mock_Data\";\nimport { RecommendedError } from \"../../../pages/Home/RecommendedError\";\nimport \"./SearchResults.page.scss\";\nimport {\n  searchResultsErrorText,\n  searchResultsErrorButton,\n  EVENT,\n  SCREEN,\n  TAB,\n  MONTH_NAMES\n} from \"../../../utils/constants\";\nimport { Search } from \"../../../models/home/Search.model\";\nimport PullToRefresh from \"../../../components/PullToRefresh/PullToRefresh\";\nimport { logEvent, setScreenName } from \"../../../utils/Analytics\";\n\nclass SearchResultPage extends PureComponent<any, any> {\n  private pageSize: number = 5;\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      tab: true,\n      loadData: this.props.results ? this.props.results.searchLoads : [],\n      editSearch: true,\n      currentPage: 0,\n      sortDirection: \"asc\",\n      sortColumn:\n        (this.props &&\n          this.props.searchInput &&\n          this.props.searchInput.sortColumn) ||\n        \"pickUpdate\",\n      totalRecords: this.props.totalRecords || 0,\n      searchParamData: this.props.searchInput || new Search(),\n      isPageEnd: false\n    };\n  }\n\n  componentDidMount() {\n    setScreenName(\"screen_search_results\");\n    logEvent(\"ue_loads_search_scroll_view\", { page: \"search\" });\n\n    // Analytics implementation\n    logEvent(EVENT.SV_SEARCH_RESULT, {\n      screen: SCREEN.SEARCH_RESULT,\n      lead: TAB.SEARCHED\n    });\n  }\n\n  componentDidUpdate(prevProps: any) {\n    let totalRecords = this.state.totalRecords;\n    let searchParamData = this.state.searchParamData;\n    let currentPage = this.state.currentPage;\n\n    if (\n      this.props.searchInput &&\n      JSON.stringify(this.props.searchInput) !==\n        JSON.stringify(prevProps.searchInput)\n    ) {\n      searchParamData = this.props.searchInput;\n      currentPage = 0;\n    }\n    if (this.props.totalRecords !== prevProps.totalRecords) {\n      totalRecords = this.props.totalRecords;\n    }\n    this.setState({\n      loadData: this.props.results ? this.props.results.searchLoads : [],\n      searchParamData,\n      totalRecords,\n      currentPage\n    });\n  }\n\n  sortedData = (selectedValue: string, asc: boolean | undefined) => {\n    this.props.onResetPagination();\n    this.setState(\n      {\n        sortColumn: selectedValue,\n        currentPage: 0,\n        sortDirection: asc === true ? \"asc\" : \"desc\"\n      },\n      () => {\n        this.searchData(false);\n      }\n    );\n  };\n  newSearch = () => {\n    this.props.history.push(\"/app/search\");\n  };\n  getCurrentModel = () => {\n    let __model: Search = new Search();\n    const userRole =\n      this.props.userDetails &&\n      this.props.userDetails.userApplicationDetails &&\n      this.props.userDetails.userApplicationDetails[0].roles.map(\n        (carrierName: any, index: number) => {\n          return carrierName.roleName;\n        }\n      );\n    let searchModel: Search = this.state.searchParamData;\n    if (__model && searchModel) {\n      __model.originCity = searchModel.originCity;\n      __model.originState = searchModel.originState;\n      __model.originRadius = searchModel.originRadius;\n      __model.pickUpdate = searchModel.pickUpdate;\n      __model.dropDate = searchModel.dropDate;\n      __model.destinationCity = searchModel.destinationCity;\n      __model.destinationState = searchModel.destinationState;\n      __model.destinationRadius = searchModel.destinationRadius;\n      __model.favorite = searchModel.favorite;\n      __model.trailerType = searchModel.trailerType;\n      __model.userID =\n        (this.props.userDetails && this.props.userDetails.userPrincipalName) ||\n        \"\";\n      __model.carrierId =\n        (this.props.userDetails && this.props.userDetails.carrierId) || \"\";\n      __model.page = this.state.currentPage;\n      __model.size = this.pageSize;\n      __model.sortColumn = this.state.sortColumn;\n      __model.originCountry = searchModel.originCountry;\n      __model.destinationCountry = searchModel.destinationCountry;\n      __model.sortDirection = this.state.sortDirection;\n      __model.carrierScac =\n        (this.props.userDetails && this.props.userDetails.carrierScac) || \"\";\n      __model.carrierTier =\n        (this.props.userDetails && this.props.userDetails.carrierTier) || \"\";\n      __model.userRole = userRole && userRole[0];\n    }\n    return __model;\n  };\n  searchData = (isPagination: boolean) => {\n    this.props.handleSortingPagination(\n      this.getCurrentModel(),\n      isPagination,\n      false\n    );\n  };\n\n  searchOnPull = (isHideLoader: boolean = true) => {\n    this.props.onResetPagination();\n    this.setState({ currentPage: 0 });\n    this.props.handleSortingPagination(\n      this.state.searchParamData,\n      false,\n      isHideLoader\n    );\n  };\n\n  OnScroll = async (event: any) => {\n    const scroll = await event.currentTarget.getScrollElement();\n    if (scroll.scrollTop === 0) {\n      return true;\n    }\n    if (!isPlatform(\"desktop\") && !this.props.isInPullToRefresh) {\n      const pageSize = this.pageSize;\n      const totalRecords: number = this.state.totalRecords;\n      const totalPages: number =\n        parseInt(`${totalRecords / pageSize}`) +\n        (totalRecords % pageSize > 0 ? 1 : 0);\n      const { currentPage } = this.state;\n\n      if (totalRecords > pageSize && currentPage < totalPages - 1) {\n        this.setState({ currentPage: currentPage + 1 }, () => {\n          this.searchData(true);\n        });\n      } else {\n        this.setState({ isPageEnd: true });\n      }\n    }\n  };\n  dateFormatChange = (date: any) => {\n    if (!/\\d{4}-[0-9]\\d-[0-9]\\dT[0-9]\\d:[0-9]\\d/.test(date)) {\n      return null;\n    }\n    date = date.split(\"T\");\n    let dateString = date[0];\n    let timeString = date[1];\n    let _date = dateString.split(\"-\");\n    let _year = parseInt(_date[0]);\n    let _month = MONTH_NAMES[parseInt(_date[1]) - 1];\n    let _day = parseInt(_date[2]);\n    return _day + \" \" + _month + \" \" + _year;\n  };\n\n  render() {\n    let params = { ...this.props.params };\n    if (params) {\n      if (params.destination === \"Anywhere\") {\n        delete params.destinationRadius;\n        delete params.dropdate;\n      }\n      if (params.originRadius) {\n        params[\"Origin Radius\"] = params.originRadius;\n        delete params.originRadius;\n      }\n      if (params.pickUpdate) {\n        params[\"Pick up date\"] = params.pickUpdate;\n        delete params.pickUpdate;\n      }\n      if (params.TrailerType) {\n        params[\"Trailer type\"] = params.TrailerType;\n        delete params.TrailerType;\n      }\n      if (params.destinationRadius) {\n        params[\"Destination Radius\"] = params.destinationRadius;\n        delete params.destinationRadius;\n      }\n      params[\"Pick up date\"] =\n        params[\"Pick up date\"] &&\n        // new Date(params[\"Pick up date\"].replace(/ /, \"T\"))\n        //   .toDateString()\n        //   .slice(4);\n        this.dateFormatChange(params[\"Pick up date\"]);\n      console.log(\"SEARCH\", params[\"Pick up date\"]);\n\n      if (!!!params.dropdate) {\n        delete params.dropdate;\n      } else {\n        params.dropdate = this.dateFormatChange(params.dropdate);\n        console.log(\"SEARCH\", params.dropdate);\n      }\n      delete params.favorite;\n    }\n\n    return (\n      <IonPage className=\"desktop-page search-result-page\">\n        <div\n          data-test=\"on-reset\"\n          onClick={() => {\n            this.props.onResetPagination();\n          }}\n        >\n          <AppHeader\n            title=\"Search Results\"\n            backUrl={\"/app/search\"}\n            editData={() =>\n              this.props.history.push(\"/app/search\", {\n                params: this.props.params\n              })\n            }\n            History={this.props.history}\n          />\n        </div>\n\n        <IonContent\n          class=\"search_results_container\"\n          scrollEvents={true}\n          onIonScrollEnd={this.OnScroll}\n        >\n          <PullToRefresh\n            data-test=\"pull-to-refresh\"\n            onPullToRefresh={this.searchOnPull}\n            status={this.props.isInPullToRefresh}\n          ></PullToRefresh>\n          {this.props.params && (\n            <IonSegment scrollable className=\"ion-segment\">\n              {Object.entries(params).map(\n                (filter: any, index: any) =>\n                  Object.entries(params)[index][1] !== \"\" && (\n                    <IonSegmentButton\n                      className=\"ion-segment-button\"\n                      key={index}\n                    >\n                      <IonBadge class=\"search_floating_badge\">\n                        {filter[0] + \": \" + filter[1]}\n                      </IonBadge>\n                    </IonSegmentButton>\n                  )\n              )}\n            </IonSegment>\n          )}\n          {this.props.results &&\n          this.props.results.searchLoads &&\n          this.props.results.searchLoads.length ? (\n            <div>\n              <div className=\"short-div\">\n                <IonRow class=\"short-row\">\n                  <IonCol size=\"5\" class=\"rec_text\">\n                    <span className=\"recommendations_num\">\n                      {this.state.totalRecords || 0} Matches\n                    </span>\n                  </IonCol>\n                  <IonCol size=\"7\" class=\"sort_select\">\n                    <div className=\"select_div\">\n                      <Dropdown\n                        options={sortByOptions}\n                        loadData={this.state.loadData}\n                        sortedData={this.sortedData}\n                      />\n                    </div>\n                  </IonCol>\n                </IonRow>\n              </div>\n              <Loads segmentName={\"\"} loads={this.state.loadData}>\n                {({ loads }: { loads?: any }) => {\n                  return (\n                    <IonList className=\"searchResults_list\">\n                      {loads.map((load: any, index: number) => (\n                        <LoadTile\n                          key={index}\n                          {...load}\n                          module=\"search/results\"\n                        />\n                      ))}\n                    </IonList>\n                  );\n                }}\n              </Loads>\n              {this.state.isPageEnd ? (\n                <p className=\"end_of_list\">End of list</p>\n              ) : null}\n            </div>\n          ) : (\n            <RecommendedError\n              constantText={searchResultsErrorText}\n              loads={this.newSearch}\n              constantButton={searchResultsErrorButton}\n            />\n          )}\n        </IonContent>\n      </IonPage>\n    );\n  }\n}\nexport default SearchResultPage;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter, RouteComponentProps } from 'react-router';\nimport useInjectSaga from '../../../utils/injectSaga';\nimport useInjectReducer from '../../../utils/injectReducer';\nimport {\n  getLoading,\n  getRefreshStatus,\n  getNetworkStatus,\n  getUserDetails\n} from '../../../selectors/selector';\nimport { SearchResultPage } from '../../../pages/Search/SearchResults';\nimport { makeSearch } from '../../../selectors/Search/selector';\nimport reducer from '../../../reducers/Search/reducer';\nimport saga from '../../../saga/Search/Search.saga';\nimport { SEARCH_DATA, fetchResults } from '../../../actions/Search/action';\n\nimport { showAlert } from '../../../actions/App/action';\n\nconst key = 'search';\nlet params = {};\nexport interface ResultProps extends RouteComponentProps {\n  searchData: any;\n  location: any;\n  data: any;\n  loading: any;\n  history: any;\n  fectchData: any;\n  userDetails: any;\n  isInPullToRefresh: boolean;\n  isNetworkAvailable: boolean;\n  showAlert: Function;\n}\nexport const SearchResultContainer: React.FC<ResultProps> = ({\n  searchData,\n  location,\n  data,\n  loading,\n  history,\n  fectchData,\n  userDetails,\n  isInPullToRefresh,\n  isNetworkAvailable,\n  showAlert\n}) => {\n  const searchInput = location && location.state && location.state.searchInput;\n\n  if (location.state && location.state.params) {\n    params = location.state.params;\n  }\n  if (history.location) {\n    return (\n      <SearchResultPage\n        results={{\n          searchLoads: data.searchLoads || [],\n          totalRecords: data.totalRecords || 0\n        }}\n        params={params}\n        history={history}\n        userDetails={userDetails}\n        searchInput={searchInput}\n        totalRecords={data.totalRecords}\n        handleSortingPagination={(inputs: any, isPagination?: boolean, isHideLoader: boolean = false) => {\n          fectchData(inputs.getRequestPayload(), isPagination || false, isHideLoader);\n        }}\n        onResetPagination={() => {\n          // setSearchLoads([]);\n        }}\n        isInPullToRefresh={isInPullToRefresh}\n        isNetworkAvailable={isNetworkAvailable}\n        showAlert={showAlert}\n      />\n    );\n  }\n  return null;\n};\n\nconst mapStateToProps = createStructuredSelector({\n  loading: getLoading(),\n  data: makeSearch(),\n  userDetails: getUserDetails(),\n  isInPullToRefresh: getRefreshStatus(),\n  isNetworkAvailable: getNetworkStatus()\n});\n\nexport const mapDispatchToProps = (dispatch: Function) => ({\n  searchData: (data: any) => dispatch(SEARCH_DATA(data)),\n  fectchData: (searchdata: any, isPagination: boolean, isHideLoader: boolean) =>\n    dispatch(fetchResults(searchdata, isPagination, isHideLoader)),\n  showAlert: (data: any) => dispatch(showAlert(data))\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nconst withReducer = useInjectReducer({ key, reducer });\nconst withSaga = useInjectSaga({ key, saga });\n\nexport default compose(withSaga, withReducer, withConnect)(withRouter(SearchResultContainer));\n","import React, { Component } from 'react';\nimport { NewContainer } from '../../../containers/SearchContainer/NewContainer';\nimport { RecentContainer } from '../../../containers/SearchContainer/RecentContainer';\nimport { FavouriteContainer } from '../../../containers/SearchContainer/FavouriteContainer';\nimport { SearchResultContainer } from '../../../containers/SearchContainer/SearchResultContainer';\n\nclass SectionContainer extends Component<any, any> {\n  renderSwitch(section: string) {\n    switch (section) {\n      case 'New':\n        return (\n          <NewContainer\n            isRecentSearch={this.props.isRecentSearch}\n            searchParams={this.props.searchParams}\n          />\n        );\n      case 'Recent':\n        return <RecentContainer onRedirectToTab={this.props.onRedirectToTab} />;\n      case 'Favorite':\n        return <FavouriteContainer onRedirectToTab={this.props.onRedirectToTab} />;\n      case 'results':\n        return <SearchResultContainer />;\n      default:\n        return <NewContainer />;\n    }\n  }\n\n  render() {\n    return this.renderSwitch(this.props.section);\n  }\n}\n\nexport default SectionContainer;\n","\nimport React, { useState, useEffect } from 'react';\nimport './search.page.scss'\nimport { IonContent, IonPage } from '@ionic/react';\nimport { SectionContainer } from \"../../containers/SearchContainer/sectionContainer\";\nimport AppHeader from '../../components/app/Bars/Bar-header';\nimport { isPlatform } from '@ionic/react';\nimport { ToastMessage } from '../../utils/ToastMessage';\nimport { Isearch } from '../../schemas/Search/Search.schema';\n\ninterface SearchProps { };\nconst Search: React.FC<SearchProps> = () => {\n\tconst [segment, setSegment] = useState<any>({ name: 'New', data: {} });\n\tconst [isRecentSearch, setRecentSearch] = useState<boolean>(false);\n\tconst [searchParams, setSearchParms]= useState({});\n\tconst onChangeSegment = (segmentName: string, searchParams: Isearch) => {\n\t\tsetSegment({ name: segmentName, data: {} });\n\t\tif (isPlatform(\"desktop\")) {\n\t\t\tsetRecentSearch(true);\n\t\t\tsetSearchParms(searchParams);\n\t\t}\n\t}\n\tuseEffect(() => {\n\t\tif (segment !== 'New' && isPlatform(\"desktop\")) {\n\t\t\tsetRecentSearch(false);\n\t\t}\n\t}, [segment])\n\n\t// function is to make 'Favourite' Dummy.\n\tconst makeFavDummy = () => {\n\t\tToastMessage.show();\n\t\tsetSegment({ name: segment.name as any, data: {} })\n\t}\n\treturn (\n\t\t<IonPage className=\"desktop-page search-page\">\n\t\t\t<AppHeader title=\"Search\" getSegment={(e: any) => {\n\t\t\t\t\tsetSegment({ name: e.detail.value as any, data: {} })\n\t\t\t}} segments={['New', 'Recent', 'Favorite']} activeSegment={segment.name} />\n\t\t\t<IonContent className=\"ion-padding load-page-content search-page-content\">\n\t\t\t\t<SectionContainer onRedirectToTab={onChangeSegment} section={segment.name} isRecentSearch={isRecentSearch} searchParams={searchParams} />\n\t\t\t</IonContent>\n\t\t</IonPage>\n\t);\n}\nexport default Search;","import React, { Component } from 'react';\nimport { SearchPage } from '../../pages/Search';\n\nclass SearchContainer extends Component {\n  render() {\n    return <SearchPage {...this.props} />;\n  }\n}\n\nexport default React.memo(SearchContainer);\n","import React, { useState } from 'react';\nimport { IonCol, IonModal, IonRow, IonIcon, IonText } from '@ionic/react';\nimport \"./FilterWithSort.scss\";\n\nexport const FilterWithSort: React.FC<any> = (props: any) => {\n    const { dropdown: { options, setFilter, direction }, isDesktop } = props;\n    const selectedOptions = options.map((option: any, index: number) => ({ ...option, selected: index === 0}));\n    const [isModalOpen, setModalOpen] = useState(false);\n    const [selectedOption, setSelectedOptions] = useState<any>(selectedOptions);\n    const [filterOption, setFilterOptions] = useState<any>([]);\n    const [sortOrder, setSortOrder] = useState(direction);\n    const selectItems = selectedOption.filter((option: any) => option.selected);\n    const title = selectItems.map((option: any) => `${option.name}${selectItems.length === 1 && option.name !== \"Any\" ? 's' : ''}`).join(' + ');\n    const btnTitle = selectItems.map((option: any) => option.name).join(' + ');\n    const openModel = () => {\n        setFilterOptions(selectedOption);\n        setModalOpen(true);\n    }\n\n    const setFilterOption = (opion: any) => {\n        const options = filterOption.map((item: any) => {\n            return {\n                ...item,\n                selected: item.name === opion.name ? !item.selected : false\n            }\n        });\n        const selected = options.find((option: any) => option.selected);\n        if (selected) {\n            setFilterOptions(options);\n        }\n    }\n\n    const sortData = (direction = sortOrder) => {\n        setFilter({\n            filter: {\n                selected: filterOption,\n                direction\n            }\n        })\n    };\n\n    const confirmSelection = () => {\n        sortData();\n        setSelectedOptions(filterOption);\n        setModalOpen(false);\n    }\n\n    const handleSorting = () => {\n        const direction = sortOrder === 'asc' ? 'desc' : 'asc';\n        setSortOrder(direction);\n        sortData(direction);\n    }\n\n    return (\n        <IonRow class=\"list-items-header\">\n            {!isDesktop ? (\n                <IonCol>\n                    <span className=\"list-items-title\">\n                        List of {title}\n                    </span>\n                </IonCol>\n            ) : null}\n            <IonCol>\n                <div className=\"list-items-filter\">\n                    { isDesktop ? <>\n                        <IonIcon src=\"assets/icon/add.svg\" class=\"manage_add_icon\"></IonIcon>\n                        <IonText class=\"add-driver-text\" onClick={() => props.addPage()}>Add Driver</IonText> </> : null}\n                    <IonText\n                        item-left\n                        class=\"filter-dropdown\"\n                        onClick={openModel}\n                    >\n                        {btnTitle}\n                        <i className=\"down\"></i>\n                    </IonText>\n                    <IonText class=\"filter-sort\" onClick={handleSorting}>\n                        <IonIcon src={`assets/icon/sort icon${sortOrder === 'asc' ? ' downward' : ''}.svg`}></IonIcon>\n                    </IonText>\n                </div>\n                <IonModal\n                    show-backdrop={true}\n                    backdrop-dismiss={false}\n                    isOpen={isModalOpen}\n                    cssClass=\"dropdown-modal\"\n                    onDidDismiss={() => {\n                        setModalOpen(false)\n                    }}\n                >\n                    <div className=\"search_options\">\n                        <IonRow class=\"dropdown-row dropdown-heading\">\n                            <IonCol>\n                                <p className=\"sortBy_text\">Filter By</p>\n                            </IonCol>\n                        </IonRow>\n                        {\n                            filterOption.map((option: any, k: any) => (\n                                <IonRow\n                                    className=\"dropdown-row filter-option\"\n                                    key={k}\n                                    onClick={() => setFilterOption(option)}\n                                >\n                                    <IonCol className={option.selected ? 'checked' : ''}>\n                                        {option.name} <i className=\"check\"></i>\n                                    </IonCol>\n                                </IonRow>\n                            ))\n                        }\n                        <IonRow class=\"dropdown-handler\">\n                            <IonCol size=\"1\"></IonCol>\n                            <IonCol\n                                size=\"5\"\n                                className=\"dropdown_cancel\"\n                                onClick={() => setModalOpen(false)}\n                            >\n                                <span>Cancel</span>\n                            </IonCol>\n                            <IonCol\n                                size=\"5\"\n                                className=\"dropdown_cancel dropdown_ok\"\n                                onClick={confirmSelection}\n                            >\n                                <span>OK</span>\n                            </IonCol>\n                            <IonCol size=\"1\"></IonCol>\n                        </IonRow>\n                    </div>\n                </IonModal>\n\n            </IonCol>\n        </IonRow>\n    );\n}\n","import React from 'react';\nimport { IonContent } from '@ionic/react';\nimport \"./ListItems.scss\";\nimport { FilterWithSort } from '../../../components/core/FilterWithSort/FilterWithSort';\n\nconst ListItems:React.FC<any> = (props:any) => {\n    const {isDesktop, dropdown, children, addPage} = props;\n    return (\n        <IonContent class={`${isDesktop? \"mange-user-desktop\" : \"custom-padding\"}`}>\n            <FilterWithSort dropdown={dropdown}  addPage= {addPage} isDesktop={isDesktop}/>\n            {children}\n        </IonContent>\n    );\n}\n\nexport default ListItems;\n","import React from 'react';\nimport { IonCardContent, IonGrid, IonRow, IonCol, IonImg, IonCard } from '@ionic/react';\nimport \"./IonUser.scss\";\nimport { IonImage } from './IonImage';\nconst IonUser: React.FC<any> = (props:any) => {\n    const { user, onUserClick, isDesktop } = props;\n\n    return (\n        <IonCard class=\"ion-user-content\" onClick={() => onUserClick(user)}>\n            <IonCardContent className=\"card-content ion-user-card\">\n                <IonGrid class=\"ion-user-grid\">\n                    <IonRow>\n                        <IonCol className=\"ion-user-col\" size={isDesktop ? '1': '4'}>\n                            <IonImage firstName={user.firstName} lastName={user.lastName} normal/>\n                        </IonCol>\n                        <IonCol className=\"ion-user-col\" size={isDesktop ? '11': '8'}>\n                            <div className=\"ion-user-content\">\n                                <h4 className=\"ion-user-title\">{user.firstName} {user.lastName}</h4>\n                                <div className=\"ion-user-info\">\n                                    <label>Email</label>\n                                    <span>{user.email}</span>\n                                </div>\n                                <div className=\"ion-user-info\">\n                                    <label>Mobile No</label>\n                                    <span>{user.mobileNumber}</span>\n                                </div>\n                            </div>\n                            \n                        </IonCol>\n                    </IonRow>\n                </IonGrid>\n            </IonCardContent>\n        </IonCard>\n        \n    );\n};\n\nexport default IonUser;\n","import React from \"react\";\nimport { IonButton, IonImg } from \"@ionic/react\";\n\nexport const ManageUserEmpty:React.FC<any> = (props:any) => {\n    return (\n      <div className=\"No-Recommended\">\n        <img\n          alt=\"logo\"\n          src=\"assets/icon/no-user.svg\"\n          width=\"79.01px\"\n          height=\"84.59px\"\n        />\n        <p className=\"recommended-Error\">\n            We don't have any users right now. <br /> Please click on <b>Add</b> to add new user.\n        </p>\n        <div className=\"SearchLoadBtn\">\n          <IonButton\n            expand=\"full\"\n            shape=\"round\"\n            onClick={props.addPage}\n            size=\"large\"\n            type=\"submit\"\n            class=\"RecommendedSearch\"\n          >\n            <IonImg src=\"assets/icon/add.svg\" class=\"load-search\" />\n            {props.constantButton}\n          </IonButton>\n        </div>\n      </div>\n    );\n}\n","import { EnumType } from 'json-to-graphql-query';\nimport { AzureMapsWrapper } from '../../../utils/common';\nimport { IRole, IProfile, IAddress } from '../../../schemas/manage/manage.Schema';\nimport { Roles } from '../../../utils/constants';\n\n/**\n * Get Address List from Azure\n * @param value\n * @param callback\n */\nexport const fetchAddressList = async (value: any, callback: Function) => {\n  if (value.length > 2) {\n    await AzureMapsWrapper.details.searchAddress(value, (results: any) => {\n      const list = results.map((item: any) => ({\n        addressLine1: item.address.streetName || '',\n        addressLine2: '',\n        addressType: '',\n        city: item.address.municipality || '',\n        state: item.address.countrySubdivision || '',\n        postalCode: item.address.postalCode || ''\n      }));\n      callback(list);\n    });\n  }\n};\n\n/**\n * Should Allow Alpha numberic text only\n * @param event\n */\nexport const handleAlphaNumeric = (value: string): string => {\n  return (value && value.replace(/[^a-zA-Z0-9 ]*/g, '')) || '';\n};\n\n/**\n * Validate Phone Number\n * @param value\n */\nexport const handlePhoneNumber = (value: string): boolean => {\n  return /^([0-9]{10})$/.test(value);\n};\n\nexport const isValidString = (value: string): boolean => {\n  return !/[~`!#@$%\\^&*+=\\-\\[\\]\\\\';.,/(){}|\\\\\"\\_:<>\\?]/g.test(value);\n};\n/**\n * Should allow only Numbers\n * @param event\n */\nexport const numberOnlyValidation = (value: string): string => {\n  return (value && value.replace(/[^0-9+]*/g, '')) || '';\n};\n\n/**\n * Format Phone Numbers\n * @param phone\n */\nexport const formatPhoneNumber = (phone: string, isCountryCode = false) => {\n  const cleaned = `${phone}`.replace(/\\D/g, '');\n  const match = cleaned.match(/^(1|91|52)?(\\d{3})(\\d{3})(\\d{4})$/);\n  if (match) {\n    const intlCode = match[1] ? `+${match[1]}` : '';\n    if (isCountryCode) {\n      return [intlCode, ' ', match[2], '.', match[3], '.', match[4]].join('');\n    }\n    return [match[2], '.', match[3], '.', match[4]].join('');\n  }\n  return null;\n};\n\n/**\n * Remove Special Charters\n *\n * @param phone\n */\nexport const removeSpecial = (phone: string) => {\n  return phone && phone.replace(/[ ,.]/g, '');\n};\n\nexport const rolesList = [\n  { value: 'carrierGuest', name: 'Guest' },\n  { value: 'carrierDriver', name: 'Driver' },\n  { value: 'carrierDispatcher', name: 'Dispatcher' },\n  { value: 'carrierAdmin', name: 'Admin' }\n];\n\nexport const roles: Array<IRole> = [\n  {\n    label: 'Driver',\n    value: Roles.carrierDriver,\n    desc: 'Carry and update the status of loads.',\n    selected: true\n  },\n  {\n    label: 'Dispatcher',\n    value: Roles.carrierDispatcher,\n    desc: 'Search, book, carry and update the status of loads.',\n    selected: false\n  }\n];\n\nexport const driverFields: Array<IProfile> = [\n  {\n    label: 'Park Location Address (Optional)',\n    name: 'addressDTOs',\n    placeholder: 'Type Your Park Location Address',\n    validate: handleAlphaNumeric\n  },\n  {\n    label: 'Tractor No (Optional)',\n    name: 'tractorNumber',\n    placeholder: 'Type Your Tractor Number',\n    validate: handleAlphaNumeric\n  }\n];\n\nexport const userProfileFields: Array<IProfile> = [\n  {\n    label: 'First Name',\n    name: 'firstName',\n    placeholder: 'Type Your First Name',\n    validate: handleAlphaNumeric\n  },\n  {\n    label: 'Last Name',\n    name: 'lastName',\n    placeholder: 'Type Your Last Name',\n    validate: handleAlphaNumeric\n  },\n  {\n    label: 'Mobile Number',\n    name: 'mobileNumber',\n    placeholder: 'Type Your Mobile Number',\n    validate: numberOnlyValidation\n  }\n];\n\nexport const carrierField = {\n  label: 'Carrier ID',\n  name: 'carrierId',\n  placeholder: 'Carrier Id',\n  className: 'carrierId'\n};\n\nexport const defaultForm = {\n  userId: null,\n  roles: '',\n  firstName: '',\n  lastName: '',\n  email: '',\n  mobileNumber: '',\n  tractorNumber: '',\n  addressDTOs: {\n    addressLine1: '',\n    addressLine2: '',\n    addressType: '',\n    city: '',\n    state: '',\n    postalCode: ''\n  },\n  carrierId: ''\n};\n\n/**\n * Get Selecte Roles with enum type\n * @param roles\n */\nexport const getSelectedRoles = (roles: Array<IRole>) => {\n  return roles.filter(role => role.selected).map(role => new EnumType(role.value));\n};\n\n/**\n * Get Formatted Address\n * @param value\n */\nexport const getAddressValue = (value: IAddress) => {\n\treturn `${value.addressLine1}${value.addressLine2 && (', ' + value.addressLine2)}${value.city && (', ' + value.city)}${value.state && (', ' + value.state)}${value.postalCode && (', ' + value.postalCode)}`.replace(/(^,)|(,$)/g, \"\");\n};\n","import React, { useState, useEffect } from \"react\";\nimport { IonPage, isPlatform, IonRow, IonCol } from \"@ionic/react\";\nimport \"./ManageUser.page.scss\";\nimport AppHeader from \"../../../components/app/Bars/Bar-header\";\nimport ListItems from \"../../../components/shared/ListItems\";\nimport {\n  MANAGE_USERS_TITLE,\n  KEYS,\n  ENV,\n  ASC_DIRECTION\n} from \"../../../utils/constants\";\nimport IonUser from \"../../../components/app/Manage/IonUser\";\nimport { ManageUserEmpty } from \"./ManageUserEmpty.page\";\nimport { formatPhoneNumber } from \"./ManageUserUtil\";\nimport { R2Configuration } from \"../../../utils/common\";\nimport { ToastMessage } from \"../../../utils/ToastMessage\";\nimport PullToRefresh from \"app/components/PullToRefresh/PullToRefresh\";\n\nconst ManageUserPage: React.FC<any> = props => {\n  const {\n    isPullToRefresh,\n    getUsersList,\n    users,\n    selectedUser,\n    history,\n    isNetworkAvailable,\n    showNetworkAlert,\n    setFilter,\n    filters\n  } = props;\n  const options = [\n    { value: \"carrierAny\", name: \"Any\" },\n    { value: \"carrierDriver\", name: \"Driver\" },\n    { value: \"carrierDispatcher\", name: \"Dispatcher\" },\n    { value: \"carrierAdmin\", name: \"Admin\" }\n  ];\n  const [usersList, setUsersList] = useState(users);\n\n  const dropdown = {\n    options,\n    data: users,\n    filterParam: \"roles\",\n    setFilter,\n    direction: filters.direction\n  };\n\n  const addPage = () => {\n    if (R2Configuration.details.getR2FeatureEnable()) {\n      //KEYS.RELEASE === ENV.UAT || KEYS.RELEASE === ENV.PROD) {\n      ToastMessage.show();\n      return;\n    }\n    if (isNetworkAvailable) {\n      history.push(`/app/${props.module}/ManageUser/Add`);\n    } else {\n      showNetworkAlert();\n    }\n  };\n\n  const onUserClick = (userProfile: any) => {\n    if (R2Configuration.details.getR2FeatureEnable()) {\n      //KEYS.RELEASE === ENV.UAT || KEYS.RELEASE === ENV.PROD) {\n      ToastMessage.show();\n      return;\n    }\n    if (isNetworkAvailable) {\n      selectedUser({ userProfile });\n      history.push(`/app/${props.module}/ManageUser/Profile`);\n    } else {\n      showNetworkAlert();\n    }\n  };\n\n  const filterData = () => {\n    const { filterParam } = dropdown;\n    const { selected, direction } = filters;\n    const selectedOptions = selected.filter((type: any) => type.selected);\n    if (selectedOptions.length === 0 || selectedOptions[0].name === \"Any\") {\n      return [...users].sort((user1: any, user2: any) => {\n        if (\n          user1 &&\n          user1.updatedTimeStamp &&\n          user2 &&\n          user2.updatedTimeStamp\n        ) {\n          return new Date(user1.updatedTimeStamp).getTime() >\n            new Date(user2 && user2.updatedTimeStamp).getTime()\n            ? direction === ASC_DIRECTION\n              ? 1\n              : -1\n            : direction === ASC_DIRECTION\n            ? -1\n            : 1;\n        }\n        return direction === ASC_DIRECTION ? -1 : 1;\n      });\n    }\n    const list = users.filter((item: any) => {\n      return (\n        selectedOptions.filter(\n          (type: any) =>\n            item[filterParam].findIndex(\n              (value: any) => value === type.value\n            ) !== -1\n        ).length > 0\n      );\n    });\n    return direction === \"asc\" ? list.reverse() : list;\n  };\n\n  useEffect(() => {\n    const data = filterData().map((user: any) => ({\n      ...user,\n      defaultMobileNumber: user.mobileNumber,\n      mobileNumber: formatPhoneNumber(user.mobileNumber)\n    }));\n    setUsersList(data);\n  }, [users]);\n\n  const renderData = (isDesktop: boolean = false) => {\n    return (\n      <ListItems\n        addPage={addPage}\n        title={MANAGE_USERS_TITLE}\n        dropdown={dropdown}\n        isDesktop={isDesktop}\n      >\n        <PullToRefresh\n          status={isPullToRefresh}\n          onPullToRefresh={getUsersList}\n        />\n        <IonRow className={isDesktop ? \"manage-users-list-desktop\" : \"\"}>\n          <IonCol size=\"12\">\n            {usersList.map((user: any) => (\n              <IonUser\n                key={user.userPrincipalName}\n                user={user}\n                isDesktop={isDesktop}\n                onUserClick={onUserClick}\n              />\n            ))}\n            {usersList.length > 0 ? (\n              <div className=\"end-of-list\">End of list</div>\n            ) : (\n              <ManageUserEmpty\n                message={\"\"}\n                addPage={addPage}\n                constantButton=\"Add\"\n              />\n            )}\n          </IonCol>\n        </IonRow>\n      </ListItems>\n    );\n  };\n\n  return isPlatform(\"desktop\") ? (\n    renderData(true)\n  ) : (\n    <IonPage className=\"manage-userslist-page\">\n      <AppHeader\n        title=\"Manage Users\"\n        backUrl={\"/app/\" + props.module}\n        History={props.history}\n        addPage={addPage}\n      />\n      {renderData()}\n    </IonPage>\n  );\n};\nexport default React.memo(ManageUserPage);\n","import React, { useEffect, useState } from \"react\";\nimport {\n  IonPage,\n  IonContent,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonList,\n  IonInput,\n  IonItem,\n  IonLabel,\n  IonText,\n  isPlatform\n} from \"@ionic/react\";\nimport \"./ManageUser.page.scss\";\nimport AppHeader from \"../../../components/app/Bars/Bar-header\";\nimport { IonImage } from \"../../../components/app/Manage/IonImage\";\nimport { getApplicationInfo, logEvent } from \"../../../utils/Analytics\";\nimport {\n  EVENT,\n  SCREEN,\n  CHANGE_PASSWORD_TITLE,\n  CHANGE_PASSWORD_MESSAGE,\n  BUTTONS\n} from \"../../../utils/constants\";\nimport { rolesList, formatPhoneNumber } from \"./ManageUserUtil\";\nimport { ToastMessage } from \"../../../utils/ToastMessage\";\nimport { R2Configuration } from \"../../../utils/common\";\nimport { CustomModal } from \"../../../components/CustomModal\";\nimport { useAuthService } from \"../../../services/Auth\";\n\ninterface IProfile {\n  label: string;\n  value: string;\n}\n\nconst ManageUserProfilePage: React.FC<any> = props => {\n  const authService = useAuthService();\n  const {\n    selectedUser,\n    history,\n    isNetworkAvailable,\n    showNetworkAlert,\n    isEditable = true,\n    isSelf = false\n  } = props;\n  const [isAlertOpen, setShowAlert] = useState(false);\n  const alertProps = {\n    title: CHANGE_PASSWORD_TITLE,\n    message: CHANGE_PASSWORD_MESSAGE,\n    buttons: [\n      {\n        label: BUTTONS.CANCEL,\n        callback: () => {\n          setShowAlert(false);\n        }\n      },\n      {\n        label: BUTTONS.OK,\n        callback: () => {\n          authService.changePassword();\n          setShowAlert(false);\n        }\n      }\n    ]\n  };\n  useEffect(() => {\n    // Analytics implementation\n    logEvent(EVENT.SV_VIEW_MY_PROFILE, {\n      screen: SCREEN.MY_PROFILE,\n      carrierId: selectedUser.carrierId\n    });\n  }, []);\n\n  const roles =\n    (selectedUser &&\n      selectedUser.roles &&\n      selectedUser.roles\n        .map((role: any) => {\n          const selectedOption = rolesList.find(\n            (option: any) => option.value === role\n          );\n          return selectedOption ? selectedOption.name : \"\";\n        })\n        .join(\" and \")) ||\n    \"\";\n  const userProfile: Array<IProfile> = selectedUser\n    ? [\n        {\n          label: \"First Name\",\n          value: selectedUser.firstName\n        },\n        {\n          label: \"Last Name\",\n          value: selectedUser.lastName\n        },\n        {\n          label: \"Email Address\",\n          value: selectedUser.email\n        },\n        {\n          label: \"Mobile Number\",\n          value: formatPhoneNumber(selectedUser.mobileNumber)\n        },\n        {\n          label: \"Role(s)\",\n          value: roles\n        },\n        {\n          label: \"Carrier ID\",\n          value: selectedUser.carrierId || \"NA\"\n        }\n      ]\n    : [];\n\n  const editData = () => {\n    if (R2Configuration.details.getR2FeatureEnable()) {\n      ToastMessage.show();\n      return true;\n    }\n    if (isNetworkAvailable) {\n      history.push(\n        \"/app/\" +\n          props.module +\n          (isSelf ? \"/ProfileDetails/edit\" : \"/Profile/edit\")\n      );\n    } else {\n      showNetworkAlert();\n    }\n  };\n  return selectedUser ? (\n    <IonPage className=\"manage-userslist-page\">\n      <AppHeader\n        title={isSelf ? \"My Profile\" : \"User Profile\" }\n        backUrl={\"/app/\" + props.module}\n        History={props.history}\n        editData={editData}\n      />\n      <IonContent class=\"custom-padding\">\n        {!isSelf ? (\n          <IonGrid>\n            <IonRow>\n              <IonCol size=\"12\">\n                <div className=\"manage-user-profile-header\">\n                  <IonImage\n                    firstName={selectedUser.firstName}\n                    lastName={selectedUser.lastName}\n                    big\n                  />\n                  <h4>\n                    {selectedUser.firstName} {selectedUser.lastName}\n                  </h4>\n                </div>\n              </IonCol>\n            </IonRow>\n          </IonGrid>\n        ) : null}\n        <div className=\"manage-users-wrapper\">\n          <IonList>\n            {userProfile.map((profile: IProfile) => (\n              <IonItem className=\"profile-item\" key={profile.label}>\n                <IonLabel\n                  className=\"profile-label\"\n                  position=\"floating\"\n                  mode=\"ios\"\n                >\n                  {profile.label}\n                </IonLabel>\n                <IonInput\n                  value={profile.value}\n                  readonly\n                  type=\"text\"\n                  class=\"profile-input\"\n                ></IonInput>\n              </IonItem>\n            ))}\n            {isSelf ? (\n              <IonItem\n                className=\"changePwd\"\n                key={\"change-pwd\"}\n                data-test=\"change-pwd\"\n                lines=\"none\"\n                onClick={() => {\n                  if (isNetworkAvailable) {\n                    setShowAlert(true);\n                  } else {\n                    showNetworkAlert();\n                  }\n                }}\n              >\n                <IonText className=\"change-pwd\">Change Password</IonText>\n                <img\n                  slot=\"end\"\n                  alt=\"logo\"\n                  src=\"/assets/icon/more-arrow.svg\"\n                  className=\"moresideimg\"\n                />\n              </IonItem>\n            ) : null}\n          </IonList>\n        </div>\n      </IonContent>\n      <CustomModal {...alertProps} isOpen={isAlertOpen} />\n    </IonPage>\n  ) : null;\n};\nexport default ManageUserProfilePage;\n","import React, { useState } from 'react';\nimport { IonPage, IonContent, IonList, IonInput, IonItem, IonLabel, IonFooter, IonButton, IonIcon, IonText, IonImg, IonGrid, IonCol, IonRow } from '@ionic/react';\nimport { IRole, IAddress } from '../../../schemas/manage/manage.Schema';\nimport { EMAIL_ERROR } from '../../../utils/constants';\nimport { CustomModal } from '../../../components/CustomModal';\n\nconst BACK_PATH = '/app/manage/ManageUser';\n\nconst ManageUserProfileFormDesktopPage: React.FC<any> = (props) => {\n\treturn (\n\t\t<IonPage className=\"manage-user-card-content ion-page desktop-page my-load-desktop-page\">\n\t\t\t<IonContent class=\"mange-user-desktop\">\n\t\t\t\t<IonGrid className=\"addDriver-desktop-header\">{props.title}</IonGrid>\n\t\t\t\t<IonList className=\"manage-userlist-form\">\n\t\t\t\t\t<IonRow>\n\t\t\t\t\t\t<IonCol>\n\t\t\t\t\t\t\t<IonItem className=\"role-info\"  data-test=\"select-role\" onClick={() => props.setShowRoleOptions(!props.showRoleOptions)}>\n\t\t\t\t\t\t\t\t<IonLabel position=\"floating\" mode=\"ios\">Role</IonLabel>\n\t\t\t\t\t\t\t\t<IonInput\n\t\t\t\t\t\t\t\t\tvalue={props.isUserRoleAdmin ? `Admin${props.roleTitle.length > 0 ? `, ${props.roleTitle}`: ''}` : (props.roleTitle || 'Guest')}\n\t\t\t\t\t\t\t\t\treadonly\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tdata-test=\"role-title\"\n\t\t\t\t\t\t\t\t\tclass=\"\"\n\t\t\t\t\t\t\t\t></IonInput>\n\t\t\t\t\t\t\t\t<IonIcon src=\"/assets/icon/grid-down-arrow.svg\"></IonIcon>\n\t\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t\t\t<IonText class=\"role-desc\">{props.roleDesc}</IonText>\n\t\t\t\t\t\t\t{ props.roleSelection && props.showRoleOptions ? (\n\t\t\t\t\t\t\t\t<IonList data-test=\"roles-list\" class=\"roles-list-grid\">\n\t\t\t\t\t\t\t\t\t{props.roleSelection.map((role: IRole, index: number) => (\n\t\t\t\t\t\t\t\t\t<IonItem\n\t\t\t\t\t\t\t\t\t\tkey={`role_${index}`}\n\t\t\t\t\t\t\t\t\t\tdata-test=\"role-list-item\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => props.handleRoleSelection(role)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<i className={`role-check-icon ${role.selected?'checked': ''}`}></i>\n\t\t\t\t\t\t\t\t\t\t<span className=\"role-list-label\">{role.label}</span>\n\t\t\t\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</IonList>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</IonCol>\n\t\t\t\t\t\t<IonCol>\n\t\t\t\t\t\t\t<IonItem className={props.emailAddressError? 'error': ''}>\n\t\t\t\t\t\t\t\t<IonLabel position=\"floating\" mode=\"ios\">Email Address</IonLabel>\n\t\t\t\t\t\t\t\t<IonInput\n\t\t\t\t\t\t\t\t\tvalue={props.formFields.email}\n\t\t\t\t\t\t\t\t\tplaceholder='Type Your Email Address'\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\treadonly={props.isUserNotExist}\n\t\t\t\t\t\t\t\t\tname=\"emailAddress\"\n\t\t\t\t\t\t\t\t\tonIonChange={props.handleChange}\n\t\t\t\t\t\t\t\t\tpattern='/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/'\n\t\t\t\t\t\t\t\t></IonInput>\n\t\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t\t\t{ props.emailAddressError? <IonText data-test=\"email-field-error\" class=\"field-error\">{EMAIL_ERROR}</IonText>: null }\n\t\t\t\t\t\t</IonCol>\n\t\t\t\t\t</IonRow>\n\t\t\t\t</IonList>\n\t\t\t\t{\n\t\t\t\t\tprops.isUserNotExist || props.isEdit ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<IonList className=\"manage-userlist-form\">\n\t\t\t\t\t\t\t\t<IonRow>\n\t\t\t\t\t\t\t\t\t<IonCol>\n\t\t\t\t\t\t\t\t\t\t<IonItem>\n\t\t\t\t\t\t\t\t\t\t\t<IonLabel position=\"floating\" mode=\"ios\">First Name</IonLabel>\n\t\t\t\t\t\t\t\t\t\t\t<IonInput\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Enter Your First Name'\n\t\t\t\t\t\t\t\t\t\t\t\tonIonChange={props.handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.formFields['firstName']}\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"firstName\"\n\t\t\t\t\t\t\t\t\t\t\t></IonInput>\n\t\t\t\t\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t\t\t\t\t\t{ props.formErrors && props.formErrors['firstName']? <IonText class=\"field-error\" data-test=\"firstName-field-error\" >{props.formErrors['firstName']}</IonText>: null }\n\t\t\t\t\t\t\t\t\t\t<IonItem>\n\t\t\t\t\t\t\t\t\t\t\t<IonLabel position=\"floating\" mode=\"ios\">Mobile Number</IonLabel>\n\t\t\t\t\t\t\t\t\t\t\t<IonInput\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.formFields['mobileNumber']}\n\t\t\t\t\t\t\t\t\t\t\t\tname={'mobileNumber'}\n\t\t\t\t\t\t\t\t\t\t\t\tdata-test=\"mobile-field\"\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={'Type your mobile numbers'}\n\t\t\t\t\t\t\t\t\t\t\t\tpattern=\"[0-9a-zA-Z]\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tonFocus={() => props.setFormFields({...props.formFields, mobileNumber: props.formFields.mobileNumber && props.removeSpecial(props.formFields.mobileNumber)})}\n\t\t\t\t\t\t\t\t\t\t\t\tonIonBlur={props.handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\tmaxlength={10}\n\t\t\t\t\t\t\t\t\t\t\t></IonInput>\n\t\t\t\t\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t\t\t\t\t\t{ props.formErrors && props.formErrors['mobileNumber']? <IonText class=\"field-error\"  data-test=\"mobile-field-error\">{props.formErrors['mobileNumber']}</IonText>: null }\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tprops.isDriverSelected && (\n\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<IonItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IonLabel position=\"floating\" mode=\"ios\">Tractor No (Optional)</IonLabel>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IonInput\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Type Your Tractor Number'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={'tractorNumber'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-test=\"tractor-field\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonIonChange={props.handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.formFields['tractorNumber']}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t></IonInput>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ props.formErrors && props.formErrors['tractorNumber']? <IonText class=\"field-error\"  data-test=\"tractorNumber-field-error\">{props.formErrors['tractorNumber']}</IonText>: null }\n\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</IonCol>\n\t\t\t\t\t\t\t\t\t<IonCol>\n\t\t\t\t\t\t\t\t\t\t<IonItem>\n\t\t\t\t\t\t\t\t\t\t\t<IonLabel position=\"floating\" mode=\"ios\">Last Name</IonLabel>\n\t\t\t\t\t\t\t\t\t\t\t<IonInput\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tname={'lastName'}\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Enter Your Last Name'\n\t\t\t\t\t\t\t\t\t\t\t\tonIonChange={props.handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.formFields['lastName']}\n\t\t\t\t\t\t\t\t\t\t\t></IonInput>\n\t\t\t\t\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t\t\t\t\t\t{ props.formErrors && props.formErrors['lastName']? <IonText class=\"field-error\"  data-test=\"lastName-field-error\">{props.formErrors['lastName']}</IonText>: null }\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tprops.isDriverSelected && (\n\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<IonItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IonLabel position=\"floating\" mode=\"ios\">Park Location Address (Optional)</IonLabel>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IonInput\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={'addressDTOs'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Type Your Park Location Address'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonIonChange={props.handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-test=\"address-field\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonIonFocus={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprops.setAddressEdit(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.isAddressEdit ? props.address: props.getAddressValue(props.formFields['addressDTOs'])}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IonImg\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tslot=\"end\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt=\"logo\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"/assets/icon/search_icon.svg\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"search-input-icon\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IonInput>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{props.showAddressList ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IonGrid class=\"suggestions\" data-test=\"address-suggestions\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprops.addressList.map((address:IAddress, index: number) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IonRow key={`address${index}`} className=\"suggestions_item\"  data-test=\"suggestions_item\" onClick={() => props.handleAddressSelection(address)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IonCol class=\"suggestions_list\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{props.getAddressValue(address)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IonCol>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IonRow>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IonGrid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t): null }\n\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t<IonItem>\n\t\t\t\t\t\t\t\t\t\t\t<IonLabel position=\"floating\" mode=\"ios\">Carrier ID:</IonLabel>\n\t\t\t\t\t\t\t\t\t\t\t<IonInput\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tname={'carrierId'}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.formFields['carrierId']}\n\t\t\t\t\t\t\t\t\t\t\t\treadonly\n\t\t\t\t\t\t\t\t\t\t\t></IonInput>\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tprops.isEdit ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tslot=\"end\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talt=\"delink\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"/assets/icon/delink.svg\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"delink\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-test=\"delink-btn\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={props.handleDelinkClick}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t): null\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t\t\t\t\t</IonCol>\n\t\t\t\t\t\t\t\t</IonRow>\n\t\t\t\t\t\t\t</IonList>\n\t\t\t\t\t\t\t<IonRow className=\"manage-userButtons-row\">\n\t\t\t\t\t\t\t\t<IonCol className=\"starRating-col\">\n\t\t\t\t\t\t\t\t\t<IonButton data-kind=\"primary\" type=\"submit\"  data-test=\"back-btn\"  class=\"manage-user_btn\"  onClick={() => props.handleBackButton('/app/manage')}>Back</IonButton>\n\t\t\t\t\t\t\t\t</IonCol>\n\t\t\t\t\t\t\t\t<IonCol>\n\t\t\t\t\t\t\t\t\t<IonButton data-kind=\"primary\" type=\"submit\" data-test=\"submit-btn\" class=\"manage-user_btn btn_save\" onClick={() => props.handleSubmit()}>Save</IonButton>\n\t\t\t\t\t\t\t\t</IonCol>\n\t\t\t\t\t\t\t</IonRow>\n\t\t\t\t\t\t</>\n\t\t\t\t\t): (\n\t\t\t\t\t\t<IonRow className=\"manage-userButtons-row\">\n\t\t\t\t\t\t\t<IonCol className=\"starRating-col\">\n\t\t\t\t\t\t\t\t<IonButton data-kind=\"primary\" type=\"submit\" data-test=\"validate-btn\" class=\"manage-user_btn\"  onClick={() => props.validateNow()}>Validate Now</IonButton>\n\t\t\t\t\t\t\t</IonCol>\n\t\t\t\t\t\t</IonRow>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\t\n\t\t\t</IonContent>\n\t\t\t{\n\t\t\t\tprops.alertProps\t? <CustomModal {...props.alertProps} /> : null\n\t\t\t}\n\t\t</IonPage>\n\t);\n}\nexport default ManageUserProfileFormDesktopPage;","import React, { useState } from 'react';\nimport { IonContent, IonList, IonRow, IonCol, IonLabel, IonInput, IonImg, IonGrid, \n\tIonItem, IonText, IonButton, IonIcon } from '@ionic/react';\nimport { formatPhoneNumber,  removeSpecial, userProfileFields, driverFields, getAddressValue, carrierField } from './ManageUserUtil';\nimport { IRole, IAddress, IProfile } from '../../../schemas/manage/manage.Schema';\nimport {  USER_BACK_TITLE, USER_BACK_MESSAGE, \n\t CHANGE_PASSWORD_TITLE, CHANGE_PASSWORD_MESSAGE, BUTTONS \n} from '../../../utils/constants';\nimport { CustomModal } from '../../../components/CustomModal';\nimport { useAuthService } from 'app/services/Auth';\n\nconst ManageProfileDesktopPage = (props: any) => {\n\tconst authService = useAuthService();\n\tconst [isEdit, setEditMode] = useState(false);\n\tconst { userDetails: { carrierId }, selectedUser } = props;\n\tconst [alertProps, setAlertProps] = useState<any>(null);\n\t\n\tconst handleBackMethod = () => {\n\t\tif (!props.isFormEdit) {\n\t\t\tsetEditMode(false);\n\t\t\treturn true;\n\t\t}\n\t\tsetAlertProps({\n\t\t\tisOpen: true,\n\t\t\ttitle: USER_BACK_TITLE,\n\t\t\tmessage: USER_BACK_MESSAGE,\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Cancel',\n\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\tsetAlertProps(null);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Ok',\n\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\tprops.resetData();\n\t\t\t\t\t\tsetEditMode(false);\n\t\t\t\t\t\tsetAlertProps(null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\n\tconst userProfile: Array<any> = selectedUser ? [\n\t\t{\n\t\t\tlabel: \"First Name\",\n\t\t\tvalue: selectedUser.firstName\n\t\t},\n\t\t{\n\t\t\tlabel: \"Last Name\",\n\t\t\tvalue: selectedUser.lastName\n\t\t},\n\t\t{\n\t\t\tlabel: \"Email Address\",\n\t\t\tvalue: selectedUser.email\n\t\t},\n\t\t{\n\t\t\tlabel: \"Mobile Number\",\n\t\t\tvalue: formatPhoneNumber(selectedUser.mobileNumber)\n\t\t},\n\t\t{\n\t\t\tlabel: \"Role(s)\",\n\t\t\tvalue: props.isUserRoleAdmin ? `Admin${props.roleTitle.length > 0 ? `, ${props.roleTitle}` : ''}` : (props.roleTitle || 'Guest')\n\t\t},\n\t\t{\n\t\t\tlabel: \"Carrier ID\",\n\t\t\tvalue: selectedUser.carrierId || 'NA'\n\t\t},\n\t] : [];\n\n\tconst handleChangePassword = () => {\n\t\tif (!props.isNetworkAvailable) {\n\t\t\tprops.showNetworkAlert();\n\t\t\treturn true;\n\t\t}\n\t\tsetAlertProps({\n\t\t\tisOpen: true,\n\t\t\ttitle: CHANGE_PASSWORD_TITLE,\n\t\t\tmessage: CHANGE_PASSWORD_MESSAGE,\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\tlabel: BUTTONS.CANCEL,\n\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\tsetAlertProps(null);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: BUTTONS.OK,\n\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\tauthService.changePassword();\n\t\t\t\t\t\tsetAlertProps(null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t})\n\t}\n\t\n\treturn (\n\t\t<IonContent class=\"custom-padding my-profile-desktop\">\n\t\t\t{isEdit ? (\n\t\t\t\t<>\n\t\t\t\t\t<div className=\"manage-users-wrapper\">\n\t\t\t\t\t\t<IonList>\n\t\t\t\t\t\t\t<IonItem className=\"profile-item role-info\" data-test=\"select-role\" onClick={() => props.setShowRoleOptions(!props.showRoleOptions)}>\n\t\t\t\t\t\t\t\t<IonLabel position=\"floating\" mode=\"ios\">Role</IonLabel>\n\t\t\t\t\t\t\t\t<IonInput\n\t\t\t\t\t\t\t\t\tvalue={props.isUserRoleAdmin ? `Admin${props.roleTitle.length > 0 ? `, ${props.roleTitle}` : ''}` : (props.roleTitle || 'Guest')}\n\t\t\t\t\t\t\t\t\treadonly\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tclass=\"\"\n\t\t\t\t\t\t\t\t></IonInput>\n\t\t\t\t\t\t\t\t{props.isUserRoleAdmin ? <IonIcon src=\"/assets/icon/grid-down-arrow.svg\" className=\"role-icon\"></IonIcon> : null}\n\t\t\t\t\t\t\t\t{props.isUserRoleAdmin ? <IonText class=\"role-desc\">{props.roleDesc}</IonText> : null}\n\t\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t\t\t{props.isUserRoleAdmin && props.roleSelection && props.showRoleOptions ? (\n\t\t\t\t\t\t\t\t<IonList data-test=\"roles-list\" class=\"roles-list-grid static\">\n\t\t\t\t\t\t\t\t\t{props.roleSelection.map((role: IRole, index: number) => (\n\t\t\t\t\t\t\t\t\t\t<IonItem\n\t\t\t\t\t\t\t\t\t\t\tkey={`role_${index}`}\n\t\t\t\t\t\t\t\t\t\t\tdata-test=\"role-list-item\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => props.handleRoleSelection(role)}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<i className={`role-check-icon ${role.selected ? 'checked' : ''}`}></i>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"role-list-label\">{role.label}</span>\n\t\t\t\t\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</IonList>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</IonList>\n\t\t\t\t\t\t<IonList>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tuserProfileFields.map((profile: IProfile) => (\n\t\t\t\t\t\t\t\t\t<React.Fragment key={`def_${profile.label}`}>\n\t\t\t\t\t\t\t\t\t\t<IonItem className={props.formErrors && props.formErrors[profile.name] ? 'profile-item error' : 'profile-item'}>\n\t\t\t\t\t\t\t\t\t\t\t<IonLabel position=\"floating\" mode=\"ios\">{profile.label}</IonLabel>\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tprofile.name === 'mobileNumber' ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<IonInput\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.formFields[profile.name]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={profile.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={profile.placeholder}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpattern=\"[0-9a-zA-Z]\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxlength={10}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={() => props.setFormFields({ ...props.formFields, mobileNumber: props.formFields.mobileNumber && removeSpecial(props.formFields.mobileNumber) })}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonIonBlur={props.handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-test={`${profile.name}-field`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`${profile.className ? profile.className : ''}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t></IonInput>\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IonInput\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.formFields[profile.name]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={profile.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={profile.placeholder}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpattern=\"[0-9a-zA-Z]\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-test={`${profile.name}-field`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonIonChange={props.handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`${profile.className ? profile.className : ''}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t></IonInput>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t{props.formErrors && props.formErrors[profile.name] ? <IonText class=\"field-error\">{props.formErrors[profile.name]}</IonText> : null}\n\t\t\t\t\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t\t\t\t\t</React.Fragment >\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t<IonItem className=\"profile-item\">\n\t\t\t\t\t\t\t\t<IonLabel position=\"floating\" mode=\"ios\">Email Address</IonLabel>\n\t\t\t\t\t\t\t\t<IonInput\n\t\t\t\t\t\t\t\t\tvalue={props.formFields.email}\n\t\t\t\t\t\t\t\t\tplaceholder='Type Your Email Address'\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\treadonly\n\t\t\t\t\t\t\t\t\tname=\"emailAddress\"\n\t\t\t\t\t\t\t\t></IonInput>\n\t\t\t\t\t\t\t</IonItem>\n\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tprops.isDriverSelected && driverFields.map((profile: IProfile) => (\n\t\t\t\t\t\t\t\t\t<React.Fragment key={profile.label}>\n\t\t\t\t\t\t\t\t\t\t<IonItem className=\"profile-item\">\n\t\t\t\t\t\t\t\t\t\t\t<IonLabel position=\"floating\" mode=\"ios\">{profile.label}</IonLabel>\n\t\t\t\t\t\t\t\t\t\t\t<IonInput\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={profile.name === 'addressDTOs' ? props.isAddressEdit ? props.address : getAddressValue(props.formFields[profile.name]) : props.formFields[profile.name]}\n\t\t\t\t\t\t\t\t\t\t\t\tname={profile.name}\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={profile.placeholder}\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tpattern=\"[0-9a-zA-Z]\"\n\t\t\t\t\t\t\t\t\t\t\t\tonIonChange={props.handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\tdata-test={`${profile.name}-field`}\n\t\t\t\t\t\t\t\t\t\t\t\tonIonFocus={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (profile.name === 'addressDTOs') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tprops.setAddressEdit(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={`${profile.className ? profile.className : ''}`}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{profile.name === 'addressDTOs' ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<IonImg\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tslot=\"end\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talt=\"logo\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"/assets/icon/search_icon.svg\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"search-input-icon\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t\t</IonInput>\n\t\t\t\t\t\t\t\t\t\t\t{props.formErrors && props.formErrors[profile.name] ? <IonText class=\"field-error\">{props.formErrors[profile.name]}</IonText> : null}\n\t\t\t\t\t\t\t\t\t\t\t{profile.name === 'addressDTOs' && props.showAddressList ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<IonGrid class=\"suggestions\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tprops.addressList.map((address: IAddress, index: number) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IonRow key={`addr${index}`} className=\"suggestions_item\" onClick={() => props.handleAddressSelection(address)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IonCol class=\"suggestions_list\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{getAddressValue(address)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IonCol>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IonRow>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t</IonGrid>\n\t\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t</IonItem>\n\n\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t<IonItem className=\"profile-item\" >\n\t\t\t\t\t\t\t\t<IonLabel position=\"floating\" mode=\"ios\">{carrierField.label}</IonLabel>\n\t\t\t\t\t\t\t\t<IonInput\n\t\t\t\t\t\t\t\t\tvalue={carrierId || '-'}\n\t\t\t\t\t\t\t\t\tname={carrierField.name}\n\t\t\t\t\t\t\t\t\tplaceholder={carrierField.placeholder}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\treadonly\n\t\t\t\t\t\t\t\t\tclassName={`${carrierField.className ? carrierField.className : ''}`}\n\t\t\t\t\t\t\t\t></IonInput>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tselectedUser.carrierId ? (\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tslot=\"end\"\n\t\t\t\t\t\t\t\t\t\t\talt=\"delink\"\n\t\t\t\t\t\t\t\t\t\t\tsrc=\"/assets/icon/delink.svg\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"delink\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={props.handleDelinkClick}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) : null\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t\t</IonList>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"manage-user-buttons\">\n\t\t\t\t\t\t<IonButton data-kind=\"primary\" type=\"submit\" data-test=\"back-btn\" class=\"load-btn\" onClick={() => handleBackMethod()}>Back</IonButton>\n\t\t\t\t\t\t<IonButton data-kind=\"primary\" type=\"submit\" data-test=\"submit-btn\" class=\"\" className={!props.isFormValid ? 'load-btn invalid-btn' : 'load-btn btn_save '} onClick={() => { setEditMode(false); props.handleSubmit(); }}>Save</IonButton>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t</>\n\t\t\t) : <>\n\t\t\t\t<div className=\"manage-users-wrapper\">\n\t\t\t\t\t<IonList>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tuserProfile.map((profile: any) => (\n\t\t\t\t\t\t\t\t<IonItem className=\"profile-item\" key={profile.label}>\n\t\t\t\t\t\t\t\t\t<IonLabel className=\"profile-label\" position=\"floating\" mode=\"ios\">{profile.label}</IonLabel>\n\t\t\t\t\t\t\t\t\t<IonInput\n\t\t\t\t\t\t\t\t\t\tvalue={profile.value}\n\t\t\t\t\t\t\t\t\t\treadonly\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tclass=\"profile-input\"\n\t\t\t\t\t\t\t\t\t></IonInput>\n\t\t\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<IonItem className=\" profile-item changePwd\" key={'change-pwd'} lines=\"none\" onClick={() => handleChangePassword()}>\n\t\t\t\t\t\t\t<IonText className=\"change-pwd\">\n\t\t\t\t\t\t\t\tChange Password\n\t\t\t\t\t\t\t</IonText>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tslot=\"end\"\n\t\t\t\t\t\t\t\talt=\"logo\"\n\t\t\t\t\t\t\t\tsrc=\"/assets/icon/more-arrow.svg\"\n\t\t\t\t\t\t\t\tclassName=\"moresideimg\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t</IonList>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"manage-user-buttons\">\n\t\t\t\t\t<IonButton class=\"load-btn\" data-test=\"edit-btn\" onClick={() => { setEditMode(true) }}>\n\t\t\t\t\t\tEdit\n\t\t\t\t\t</IonButton>\n\t\t\t\t</div>\n\t\t\t</>}\n\t\t\t{\n\t\t\t\talertProps ? <CustomModal {...alertProps} /> : null\n\t\t\t}\n\t\t</IonContent>\n\t);\n}\nexport default ManageProfileDesktopPage;","import React, { useState, useEffect, useCallback } from 'react';\nimport { IonPage, IonContent, IonList, IonInput, IonItem, IonLabel, IonFooter, IonButton, IonIcon, IonText, IonImg, IonGrid, IonCol, IonRow, isPlatform } from '@ionic/react';\nimport \"./ManageUser.page.scss\";\nimport AppHeader from '../../../components/app/Bars/Bar-header';\nimport { USER_BACK_TITLE, USER_BACK_MESSAGE, Roles, USER_FORM_ERRORS, DELINK_ACCOUNT_TITLE, DELINK_ACCOUNT_MESSAGE, NO, YES, EDIT_USER, ADD_USER, OOPS_MESSAGE, EMAIL_ERROR, USER_EXIST_MESSAGE, USER_EXIST_TITLE, TRACTOR_NUMBER, EDIT_PROFILE } from '../../../utils/constants';\nimport { CustomModal } from '../../../components/CustomModal';\nimport { IRole, IProfile, IAddress, ITransferRequest } from '../../../schemas/manage/manage.Schema';\nimport { fetchAddressList, handlePhoneNumber, formatPhoneNumber, removeSpecial, roles, defaultForm, getSelectedRoles, userProfileFields, driverFields, getAddressValue, carrierField, handleAlphaNumeric, numberOnlyValidation, isValidString } from './ManageUserUtil';\nimport _ from \"lodash\";\nimport { EnumType } from 'json-to-graphql-query';\nimport { showAlert } from '../../../actions/App/action';\nimport ManageUserProfileFormDesktopPage from './ManageUserProfileFormDesktop.page';\nimport { UserDetails } from 'app/models/userPforile/userProfile.modal';\nimport { ToastMessage } from 'app/utils/ToastMessage';\nimport ManageProfileDesktopPage from './ManageProfileDesktop.page';\n\nconst ADD_BACK_PATH = '/app/manage/ManageUser';\nconst EDIT_BACK_PATH = '/app/manage/ManageUser/Profile';\nconst BACK_TO_PROFILE = '/app/manage/ProfileDetails';\n\nconst ManageUserProfileFormPage: React.FC<any> = (props) => {\n\tconst { userDetails: { carrierId, userPrincipalName }, isSelfDesktop = false, isSelf = false, selectedUser = null, validateUserDetails= null, isUserValid = null, resetValidateUser = null, history, isNetworkAvailable, showNetworkAlert } = props;\n\tconst [roleSelection, setRoleSelection] = useState(roles);\n\tconst [emailAddressError, setEmailAddressError] = useState(false);\n\tconst [isUserNotExist, setUserNotExist] = useState(false);\n\tconst [showRoleOptions, setShowRoleOptions] = useState(false);\n\tconst [isDriverSelected, setDriverSelected] = useState(true);\n\tconst [alertProps, setAlertProps] = useState<any>(null);\n\tconst roleTitle = roleSelection.filter(role => role.selected).map(role => role.label).join(', ');\n\tconst roleDesc = roleSelection.filter(role => role.selected).length === 1 ? (roleSelection.find(role => role.selected) as IRole).desc : roleSelection[1].desc;\n\tconst [formFields, setFormFields] = useState<any>({ ...defaultForm, roles: getSelectedRoles(roles), carrierId });\n\tconst [addressList, setAddressList] = useState<Array<IAddress>>([]);\n\tconst [showAddressList, setShowAddressList] = useState(false);\n\tconst [isAddressEdit, setAddressEdit] = useState(true);\n\tconst [formErrors, setFormErrors] = useState<any>({\n\t\tfirstName: '',\n\t\tlastName: '',\n\t\tmobileNumber: '',\n\t\ttractorNumber: false,\n\t});\n\tconst [isFormEdit, setFormEdit] = useState(false);\n\tconst [isFormValid, setFormValid] = useState(false);\n\tconst [address, setAddress] = useState('');\n\tconst [isUserRoleAdmin, setUserRoleAdmin] = useState(false);\n\n\n\tconst formatRoles = (selectedRoles:any) => {\n\t\tconst isCarrierAdmin = selectedUser.roles.indexOf('carrierAdmin') !== -1;\n\t\tconst defaultRoles = selectedUser.roles.map((role:string) => new EnumType(role));\n\t\tconst finalRoles = getSelectedRoles(selectedRoles);\n\t\treturn isCarrierAdmin ? [new EnumType('carrierAdmin'), ...finalRoles] : finalRoles.length > 0 ? finalRoles : defaultRoles;\n\t}\n\n\tconst handleRoleSelection = (item: IRole) => {\n\t\tconst roleSelectionList = roleSelection.map(role => ({ ...role, selected: role.label === item.label ? !role.selected : role.selected }));\n\t\tif (isUserRoleAdmin || roleSelectionList.filter(role => role.selected).length > 0) {\n\t\t\tconst isDriver = roleSelectionList.find(role => role.selected && role.label === 'Driver');\n\t\t\tsetDriverSelected(!!isDriver);\n\t\t\tsetRoleSelection(roleSelectionList);\n\t\t\tconst roles = selectedUser ? formatRoles(roleSelectionList): getSelectedRoles(roleSelectionList);\n\t\t\tsetFormFields({ ...formFields, roles });\n\t\t\tif(selectedUser) {\n\t\t\t\tsetFormEdit(true);\n\t\t\t}\n\t\t}\n\t}\n\n\tconst resetData = () => {\n\t\tsetRoleSelection(roles);\n\t\tsetAlertProps(null);\n\t\tsetShowRoleOptions(false);\n\t\tsetAddress('');\n\t\tsetFormValid(false);\n\t\tif(!selectedUser) {\n\t\t\tsetUserNotExist(false);\n\t\t\tsetFormErrors({\n\t\t\t\tfirstName: '',\n\t\t\t\tlastName: '',\n\t\t\t\tmobileNumber: ''\n\t\t\t});\n\t\t\tresetValidateUser();\n\t\t\tsetFormFields({...defaultForm, roles: getSelectedRoles(roles), carrierId});\n\t\t}\n\t}\n\n\tconst validateErrors = () => {\n\t\tconst errors = Object.keys(formErrors).filter(key => formErrors[key] !== false);\n\t\tconst isManadatoryEmpty = Object.keys(formErrors).filter(key => formFields[key] === '' && key !== 'tractorNumber');\n\t\tif (errors.length > 0 || isManadatoryEmpty.length > 0) {\n\t\t\tlet errorsText = formErrors;\n\t\t\terrors.forEach((key: string) => {\n\t\t\t\terrorsText[key] = USER_FORM_ERRORS[key];\n\t\t\t})\n\t\t\tisManadatoryEmpty.forEach((key: string) => {\n\t\t\t\terrorsText[key] = USER_FORM_ERRORS[key];\n\t\t\t})\n\t\t\tsetFormErrors(errorsText);\n\t\t\tsetFormFields({ ...formFields });\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tconst getFormatedFormFields = (selectedUser:any) => ({\n\t\tuserId: selectedUser.userPrincipalName,\n\t\troles: [],\n\t\tfirstName: selectedUser.firstName,\n\t\tlastName: selectedUser.lastName,\n\t\temail: selectedUser.email,\n\t\tmobileNumber: formatPhoneNumber(selectedUser.defaultMobileNumber, true),\n\t\ttractorNumber: selectedUser.tractorNumber,\n\t\taddressDTOs:  selectedUser.address && selectedUser.address.length > 0  ? selectedUser.address[0]: {\n\t\t\taddressLine1: \"\",\n\t\t\taddressLine2: \"\",\n\t\t\taddressType: \"\",\n\t\t\tcity: \"\",\n\t\t\tstate: \"\",\n\t\t\tpostalCode: \"\",\n\t\t},\n\t\tcarrierId: selectedUser.carrierId,\n\t});\n\n\tuseEffect(() => {\n\t\tif(isUserValid !== null) {\n\t\t\tsetUserNotExist(!isUserValid);\n\t\t\thandleUserExistModal(isUserValid);\n\t\t}\n\t}, [isUserValid]);\n\n\tuseEffect(() => {\n\t\tif(selectedUser) {\n\t\t\tconst isCarrierAdmin = selectedUser.roles.indexOf('carrierAdmin') !== -1;\n\t\t\tconst selectedRoles = roles.map((role:IRole) => ({...role, selected: selectedUser.roles.indexOf(role.value.toString()) !== -1}));\n\t\t\tconst isDriver = selectedRoles.find(role => role.selected && role.label === 'Driver');\n\t\t\tsetUserRoleAdmin(isCarrierAdmin);\n\t\t\tsetRoleSelection(selectedRoles);\n\t\t\tsetDriverSelected(!!isDriver);\n\t\t\tsetAddressEdit(false);\n\t\t\tconst adminRoles = selectedUser.roles.map((role:string) => new EnumType(role));\n\t\t\tconst details:any = getFormatedFormFields(selectedUser);\n\t\t\tsetFormFields({\n\t\t\t\t...details,\n\t\t\t\troles: formatRoles(selectedRoles)\n\t\t\t});\n\t\t\tObject.keys(formErrors).forEach(key => {\n\t\t\t\tformErrors[key] = (details[key] && details[key] != '' && key !== TRACTOR_NUMBER) || key === TRACTOR_NUMBER ? false : '';\n\t\t\t});\n\t\t\tsetFormErrors(formErrors);\n\t\t\tsetFormEdit(false);\n\t\t}\n\t}, [selectedUser]);\n\n\tconst transferMember = () => {\n\t\tif(!isNetworkAvailable) {\n\t\t\tshowNetworkAlert();\n\t\t\treturn true;\n\t\t}\n\t\tconst params: ITransferRequest= {\n\t\t\trequester: {\n\t\t\t\tuserId: userPrincipalName,\n\t\t\t\tcarrierId,\n\t\t\t\tisAdmin: true\n\t\t\t},\n\t\t\tuserId: validateUserDetails.userPrincipalName,\n\t\t\tcurrentCarrierId:  validateUserDetails.carrierId,\n\t\t\trequestedCarrierId: carrierId,\n\t\t\troles: formFields.roles\n\t\t}\n\t\tconst payload =  { name: validateUserDetails && validateUserDetails.firstName, params }\n\t\tprops.handleTransfer(payload, resetData, carrierId === validateUserDetails.carrierId); \n\t}\n\n\tconst handleUserExistModal = (showUserModal: boolean) => {\n\t\tsetAlertProps({\n\t\t\tisOpen: showUserModal,\n\t\t\ttitle: USER_EXIST_TITLE,\n\t\t\tmessage: USER_EXIST_MESSAGE.replace('{{EMAIL}}', validateUserDetails && validateUserDetails.userPrincipalName).replace('{{NAME}}', validateUserDetails && validateUserDetails.firstName),\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\tlabel: NO,\n\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\tsetFormFields({...formFields, email: ''});\n\t\t\t\t\t\tsetAlertProps(null);\n\t\t\t\t\t\tprops.resetValidateUser();\n\t\t\t\t\t\thistory.push(ADD_BACK_PATH);\n\t\t\t\t\t} \n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: YES,\n\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\ttransferMember();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\n\tconst getBackPath = (path = '') => {\n\t\thistory.push(path ? path: isSelf ? BACK_TO_PROFILE : (selectedUser ? EDIT_BACK_PATH : ADD_BACK_PATH));\n\t\treturn true;\n\t}\n\n\tconst handleBackButton = (path = '') => {\n\t\tif (!isFormEdit) {\n\t\t\treturn getBackPath(path);\n\t\t}\n\t\tsetAlertProps({\n\t\t\tisOpen: true,\n\t\t\ttitle: USER_BACK_TITLE,\n\t\t\tmessage: USER_BACK_MESSAGE,\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Cancel',\n\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\tsetAlertProps(null);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Ok',\n\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\tresetData();\n\t\t\t\t\t\tsetFormEdit(false);\n\t\t\t\t\t\tgetBackPath();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\n\tconst handleErrors = (name: string, value: string) => {\n\t\tlet errorsText:any = {...formErrors};\n\t\tswitch (name) {\n\t\t\tcase \"firstName\":\n\t\t\tcase \"lastName\":\n\t\t\t\tconst isValid = value !== '' && isValidString(value);\n\t\t\t\terrorsText = ({...formErrors, [name]: !isValid? USER_FORM_ERRORS[name]: false })\n\t\t\t\tbreak;\n\t\t\tcase \"tractorNumber\":\n\t\t\t\tconst isTractorValid = value === '' || (value !== '' && isValidString(value));\n\t\t\t\terrorsText = ({...formErrors, [name]: !isTractorValid? USER_FORM_ERRORS[name]: false })\n\t\t\t\tbreak;\n\t\t\tcase \"mobileNumber\":\n\t\t\t\tconst isMobValid = handlePhoneNumber(value);\n\t\t\t\terrorsText = ({...formErrors, [name]: !isMobValid? USER_FORM_ERRORS[name]: false })\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t} \n\t\tconst errors = Object.keys(errorsText).filter(key => errorsText[key] !== false);\n\t\tsetFormValid(errors.length === 0);\n\t\tsetFormErrors(errorsText);\n\t}\n\n\tconst handleAddress = (list: Array<IAddress>) => {\n\t\tsetAddressList(list);\n\t\tsetShowAddressList(true);\n\t}\n\n\tconst callAPI = useCallback(_.debounce((value: string) => fetchAddressList(value, handleAddress), 500), []);\n\n\tconst handleChange = (event: any) => {\n\t\tconst { target: { name, value } } = event;\n\t\tif(name !== 'emailAddress') {\n\t\t\thandleErrors(name, value);\n\t\t\tsetFormEdit(true);\n\t\t}\n\t\tswitch (name) {\n\t\t\tcase \"emailAddress\": \n\t\t\t\tsetEmailAddressError(false);\n\t\t\t\tsetFormFields({...formFields, email: value});\n\t\t\t\tbreak;\n\t\t\tcase \"mobileNumber\":\n\t\t\t\tsetFormFields({ ...formFields, mobileNumber: handlePhoneNumber(value) ? formatPhoneNumber(value, true) : value});\n\t\t\t\tbreak;\n\t\t\tcase \"addressDTOs\":\n\t\t\t\tif (isAddressEdit) {\n\t\t\t\t\tcallAPI(value);\n\t\t\t\t\tsetAddress(value);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsetFormFields({ ...formFields, [name]: value});\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tconst handleAddressSelection = (addressDTOs: IAddress) => {\n\t\tsetAddressEdit(false);\n\t\tsetFormFields({ ...formFields, addressDTOs });\n\t\tsetFormValid(false);\n\t\tsetShowAddressList(false);\n\t\tsetAddressList([]);\n\t}\n\n\tconst validateNow = () => {\n\t\tif(!isNetworkAvailable) {\n\t\t\tshowNetworkAlert();\n\t\t\treturn true;\n\t\t}\n\t\tconst { email: emailAddress } = formFields;\n\t\tconst regEx = /^[a-zA-Z0-9.]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/;\n\t\tif(showRoleOptions) {\n\t\t\tsetShowRoleOptions(false);\n\t\t}\n\t\tif (regEx.test(emailAddress)) {\n\t\t\tconst callback = () => ToastMessage.show(OOPS_MESSAGE);\n\t\t\tconst useProfileModel = new UserDetails();\n\t\t\tconst query = useProfileModel.validateUser(emailAddress);\n\t\t\tprops.validateUserAction({query, callback});\n\t\t\treturn true;\n\t\t} \n\t\tsetEmailAddressError(true);\n\t};\n\n\tconst handleSubmit = () => {\n\t\tif (!isNetworkAvailable) {\n\t\t\tshowNetworkAlert();\n\t\t\treturn true;\n\t\t}\n\n\t\tif(validateErrors()) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst payload = {\n\t\t\trequester: {\n\t\t\t\tuserId: userPrincipalName,\n\t\t\t\tcarrierId,\n\t\t\t\tisAdmin: true,\n\t\t\t},\n\t\t\tuserDetails: { ...formFields, mobileNumber: removeSpecial(formFields.mobileNumber) }\n\t\t}\n\n\t\tprops.handleSubmit(payload, resetData);\n\t}\n\n\n\n\tconst handleDelinkClick = () => {\n\t\tif(!isNetworkAvailable) {\n\t\t\tshowNetworkAlert();\n\t\t\treturn true;\n\t\t}\n\t\tsetAlertProps({\n\t\t\tisOpen: true,\n\t\t\ttitle: DELINK_ACCOUNT_TITLE,\n\t\t\tmessage: DELINK_ACCOUNT_MESSAGE,\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\tlabel: NO,\n\t\t\t\t\tcallback: () => setAlertProps(null)\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: YES,\n\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\tconst fields:any = getFormatedFormFields(selectedUser);\n\t\t\t\t\t\tconst payload = {\n\t\t\t\t\t\t\trequester: {\n\t\t\t\t\t\t\t\tuserId: userPrincipalName,\n\t\t\t\t\t\t\t\tcarrierId,\n\t\t\t\t\t\t\t\tisAdmin: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tuserDetails: { ...fields, roles: [new EnumType('carrierGuest')], mobileNumber: fields.mobileNumber && removeSpecial(fields.mobileNumber), carrierId: '' }\n\t\t\t\t\t\t};\n\t\t\t\t\t\tsetAlertProps(null);\n\t\t\t\t\t\tprops.handleDelink(payload);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t})\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{ isSelfDesktop ? (\n\t\t\t\t<ManageProfileDesktopPage \n\t\t\t\t\t{...props} \n\t\t\t\t\ttitle={ selectedUser ? isSelf ? EDIT_PROFILE : EDIT_USER : ADD_USER}\n\t\t\t\t\tisEdit={ selectedUser ? true : false}\n\t\t\t\t\tisUserRoleAdmin={isUserRoleAdmin}\n\t\t\t\t\thandleBackButton={handleBackButton}\n\t\t\t\t\thandleRoleSelection={handleRoleSelection}\n\t\t\t\t\tvalidateNow={validateNow}\n\t\t\t\t\temailAddressError={emailAddressError}\n\t\t\t\t\tisUserNotExist={isUserNotExist}\n\t\t\t\t\tisFormEdit={isFormEdit}\n\t\t\t\t\troleTitle={roleTitle}\n\t\t\t\t\troleDesc={roleDesc}\n\t\t\t\t\troleSelection={roleSelection}\n\t\t\t\t\tshowRoleOptions={showRoleOptions}\n\t\t\t\t\tsetShowRoleOptions={setShowRoleOptions}\n\t\t\t\t\tformFields={formFields}\n\t\t\t\t\tformErrors={formErrors}\n\t\t\t\t\tsetFormFields={setFormFields}\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\tisDriverSelected={isDriverSelected}\n\t\t\t\t\talertProps={alertProps}\n\t\t\t\t\tsetAddressEdit={setAddressEdit}\n\t\t\t\t\tshowAddressList={showAddressList}\n\t\t\t\t\taddressList={addressList}\n\t\t\t\t\thandleAddressSelection={handleAddressSelection}\n\t\t\t\t\tisAddressEdit={isAddressEdit}\n\t\t\t\t\taddress={address}\n\t\t\t\t\tremoveSpecial={removeSpecial}\n\t\t\t\t\tgetAddressValue={getAddressValue}\n\t\t\t\t\thandleSubmit={handleSubmit}\n\t\t\t\t\thandleDelinkClick={handleDelinkClick}\n\t\t\t\t\tresetData={resetData}\n\t\t\t\t/>\n\t\t\t) : isPlatform(\"desktop\") ? \n\t\t\t\t<ManageUserProfileFormDesktopPage \n\t\t\t\t\t{...props} \n\t\t\t\t\ttitle={ selectedUser ? isSelf ? EDIT_PROFILE : EDIT_USER : ADD_USER}\n\t\t\t\t\tisEdit={ selectedUser ? true : false}\n\t\t\t\t\tisUserRoleAdmin={isUserRoleAdmin}\n\t\t\t\t\thandleBackButton={handleBackButton}\n\t\t\t\t\thandleRoleSelection={handleRoleSelection}\n\t\t\t\t\tvalidateNow={validateNow}\n\t\t\t\t\temailAddressError={emailAddressError}\n\t\t\t\t\tisUserNotExist={isUserNotExist}\n\t\t\t\t\troleTitle={roleTitle}\n\t\t\t\t\troleDesc={roleDesc}\n\t\t\t\t\troleSelection={roleSelection}\n\t\t\t\t\tshowRoleOptions={showRoleOptions}\n\t\t\t\t\tsetShowRoleOptions={setShowRoleOptions}\n\t\t\t\t\tformFields={formFields}\n\t\t\t\t\tformErrors={formErrors}\n\t\t\t\t\tsetFormFields={setFormFields}\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\tisDriverSelected={isDriverSelected}\n\t\t\t\t\talertProps={alertProps}\n\t\t\t\t\tsetAddressEdit={setAddressEdit}\n\t\t\t\t\tshowAddressList={showAddressList}\n\t\t\t\t\taddressList={addressList}\n\t\t\t\t\thandleAddressSelection={handleAddressSelection}\n\t\t\t\t\tisAddressEdit={isAddressEdit}\n\t\t\t\t\taddress={address}\n\t\t\t\t\tremoveSpecial={removeSpecial}\n\t\t\t\t\tgetAddressValue={getAddressValue}\n\t\t\t\t\thandleSubmit={handleSubmit}\n\t\t\t\t\thandleDelinkClick={handleDelinkClick}\n\t\t\t\t/> \n\t\t\t: (\n\t\t\t\t<IonPage className=\"manage-userslist-page\">\n\t\t\t\t\t<AppHeader title={ selectedUser ? isSelf ? EDIT_PROFILE : EDIT_USER : ADD_USER} customBackUrl={handleBackButton} History={props.history} />\n\t\t\t\t\t<IonContent class=\"ion-padding  custom-padding\">\n\t\t\t\t\t\t<IonContent class=\"ion-padding  custom-padding\">\n\t\t\t\t\t\t\t<div className=\"manage-users-formWrapper\">\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t!isSelf ? (\n\t\t\t\t\t\t\t\t\t\t<IonList class=\"manage-userslist-form\">\n\t\t\t\t\t\t\t\t\t\t<IonItem className=\"role-info\" data-test=\"select-role\" onClick={() => setShowRoleOptions(!showRoleOptions)}>\n\t\t\t\t\t\t\t\t\t\t\t<IonLabel position=\"floating\" mode=\"ios\">Role</IonLabel>\n\t\t\t\t\t\t\t\t\t\t\t<IonInput\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={isUserRoleAdmin ? `Admin${roleTitle.length > 0 ? `, ${roleTitle}`: ''}` : (roleTitle || 'Guest')}\n\t\t\t\t\t\t\t\t\t\t\t\treadonly\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"\"\n\t\t\t\t\t\t\t\t\t\t\t></IonInput>\n\t\t\t\t\t\t\t\t\t\t\t<IonIcon src=\"/assets/icon/grid-down-arrow.svg\"></IonIcon>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t\t\t\t\t\t<IonText class=\"role-desc\">{roleDesc}</IonText>\n\t\t\t\t\t\t\t\t\t\t{roleSelection && showRoleOptions ? (\n\t\t\t\t\t\t\t\t\t\t\t<IonList data-test=\"roles-list\" class=\"roles-list-grid static\">\n\t\t\t\t\t\t\t\t\t\t\t\t{roleSelection.map((role: IRole, index: number) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<IonItem\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={`role_${index}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-test=\"role-list-item\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleRoleSelection(role)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className={`role-check-icon ${role.selected ? 'checked' : ''}`}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"role-list-label\">{role.label}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t</IonList>\n\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t!selectedUser ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<IonItem className={emailAddressError? 'email-field error': 'email-field '}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IonLabel position=\"floating\" mode=\"ios\">Email Address</IonLabel>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IonInput\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={formFields.email}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Type Your Email Address'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadonly={isUserNotExist}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"emailAddress\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonIonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-test=\"email-field\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpattern='/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t></IonInput>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ emailAddressError? (<IonText class=\"field-error\" data-test=\"email-field-error\">{EMAIL_ERROR}</IonText>) : null }\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t!isUserNotExist ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IonItem className=\"validate-btn-wrapper\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IonButton className={'validate-btn'} data-test=\"validate-btn\" onClick={validateNow}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tValidate now\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IonButton>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : null\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t): null\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</IonList>\n\t\n\t\t\t\t\t\t\t\t\t) : null\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tisUserNotExist || selectedUser ? (\n\t\t\t\t\t\t\t\t\t\t<IonList class=\"manage-userslist-form\">\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tuserProfileFields.map((profile: IProfile) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment key={`def_${profile.label}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<IonItem className={formErrors && formErrors[profile.name] ? 'error' : ''}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IonLabel position=\"floating\" mode=\"ios\">{profile.label}</IonLabel>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprofile.name === 'mobileNumber' ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IonInput\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={formFields[profile.name]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={profile.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={profile.placeholder}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpattern=\"[0-9a-zA-Z]\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxlength={10}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={() => setFormFields({ ...formFields, mobileNumber: formFields.mobileNumber && removeSpecial(formFields.mobileNumber) })}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonIonBlur={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-test={`${profile.name}-field`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`${profile.className ? profile.className : ''}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t></IonInput>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IonInput\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={formFields[profile.name]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={profile.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={profile.placeholder}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpattern=\"[0-9a-zA-Z]\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-test={`${profile.name}-field`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonIonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`${profile.className ? profile.className : ''}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t></IonInput>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{formErrors && formErrors[profile.name] ? <IonText class=\"field-error\">{formErrors[profile.name]}</IonText> : null}\n\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment >\n\t\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tselectedUser ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<IonItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IonLabel position=\"floating\" mode=\"ios\">Email Address</IonLabel>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IonInput\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={formFields.email}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Type Your Email Address'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadonly\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"emailAddress\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-test={`email-field`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t></IonInput>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisSelf ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IonItem className=\"role-info\" data-test=\"select-role\" onClick={() => setShowRoleOptions(!showRoleOptions)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IonLabel position=\"floating\" mode=\"ios\">Role</IonLabel>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IonInput\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={isUserRoleAdmin ? `Admin${roleTitle.length > 0 ? `, ${roleTitle}`: ''}` : (roleTitle || 'Guest')}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadonly\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t></IonInput>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ isUserRoleAdmin ? <IonIcon src=\"/assets/icon/grid-down-arrow.svg\"></IonIcon> : null}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ isUserRoleAdmin ?<IonText class=\"role-desc\">{roleDesc}</IonText> : null}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isUserRoleAdmin && roleSelection && showRoleOptions ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IonList data-test=\"roles-list\" class=\"roles-list-grid static\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{roleSelection.map((role: IRole, index: number) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IonItem\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={`role_${index}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-test=\"role-list-item\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleRoleSelection(role)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className={`role-check-icon ${role.selected ? 'checked' : ''}`}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"role-list-label\">{role.label}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IonList>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t): null\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t): null\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tisDriverSelected && driverFields.map((profile: IProfile) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment key={profile.label}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<IonItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IonLabel position=\"floating\" mode=\"ios\">{profile.label}</IonLabel>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IonInput\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={profile.name === 'addressDTOs' ? isAddressEdit ? address : getAddressValue(formFields[profile.name]) : formFields[profile.name]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={profile.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={profile.placeholder}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpattern=\"[0-9a-zA-Z]\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonIonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-test={`${profile.name}-field`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonIonFocus={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (profile.name === 'addressDTOs') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetAddressEdit(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`${profile.className ? profile.className : ''}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{profile.name === 'addressDTOs' ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IonImg\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tslot=\"end\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt=\"logo\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"/assets/icon/search_icon.svg\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"search-input-icon\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IonInput>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ formErrors && formErrors[profile.name]? <IonText class=\"field-error\">{formErrors[profile.name]}</IonText>: null }\n\t\t\t\t\t\t\t\t\t\t\t\t\t{profile.name === 'addressDTOs' && showAddressList ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IonGrid class=\"suggestions\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taddressList.map((address: IAddress, index:number) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IonRow key={`addr${index}`}className=\"suggestions_item\" onClick={() => handleAddressSelection(address)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IonCol class=\"suggestions_list\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{getAddressValue(address)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IonCol>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IonRow>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IonGrid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t<IonItem >\n\t\t\t\t\t\t\t\t\t\t\t<IonLabel position=\"floating\" mode=\"ios\">{carrierField.label}</IonLabel>\n\t\t\t\t\t\t\t\t\t\t\t<IonInput\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={carrierId}\n\t\t\t\t\t\t\t\t\t\t\t\tname={carrierField.name}\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={carrierField.placeholder}\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={`${carrierField.className ? carrierField.className : ''}`}\n\t\t\t\t\t\t\t\t\t\t\t\treadonly\n\t\t\t\t\t\t\t\t\t\t\t></IonInput>\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tselectedUser ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tslot=\"end\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talt=\"delink\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"/assets/icon/delink.svg\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"delink\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-test=\"delink-btn\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleDelinkClick}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t) : null\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t\t\t\t\t</IonList>\n\t\t\t\t\t\t\t\t\t): null\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</IonContent>\n\t\t\t\t\t\t<IonFooter class=\"manage-userlist-footer\">\n\t\t\t\t\t\t\t<IonButton\n\t\t\t\t\t\t\t\texpand=\"full\"\n\t\t\t\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t\t\t\t\tdata-test=\"submit-btn\"\n\t\t\t\t\t\t\t\tclassName={ !isFormValid ? 'invalid-btn' : ''}\n\t\t\t\t\t\t\t> Save\n\t\t\t\t\t\t\t</IonButton>\n\t\t\t\t\t\t</IonFooter>\n\t\t\t\t\t</IonContent>\n\t\t\t\t\t{\n\t\t\t\t\t\talertProps ? <CustomModal {...alertProps} /> : null\n\t\t\t\t\t}\n\t\t\n\t\t\t\t</IonPage>\n\t\t\t)\n\t\t\t}\n\t\t</>\n\t);\n}\nexport default ManageUserProfileFormPage;","import * as Constants from '../../utils/constants';\n\nexport const profileImageSet = (data: any) => {\n    return ({\n        type: Constants.PROFILE_IMAGE_SET,\n        payload: data\n    })\n}\nexport const ManageCard = () => ({\n    type: Constants.MANAGE_CARD_DATA\n\n})\nexport const GetManageCardData = (data: any) => ({\n    type: Constants.GET_MANAGE_CARD_DATA,\n    payload: data\n})\n\nexport const getMembersList = (payload: any) => ({\n    type: Constants.GET_MANAGE_USERS_LIST,\n    payload\n});\n\nexport const membersListSuccess = (payload: any) => ({\n    type: Constants.MANAGE_USERS_LIST_SUCCESS,\n    payload\n});\n\nexport const setSelectedUser = (payload: any) => ({\n    type: Constants.MANAGE_USER_SELECTED,\n    payload\n});\n\nexport const setFilter = (payload: any) => ({\n    type: Constants.MANAGE_USER_FILTER,\n    payload\n});\n\nexport const validateUser = (payload: any) => ({\n    type: Constants.MANAGE_USER_VALIDATE,\n    payload\n});\n\nexport const validateUserReset = () => ({\n    type: Constants.MANAGE_USER_VALIDATE_RESET,\n});\n\nexport const validateUserStatus = (payload: any) => ({\n    type: Constants.MANAGE_USER_VALIDATE_STATUS,\n    payload\n});\n\nexport const transferUser = (payload: any) => ({\n    type: Constants.MANAGE_USER_TRANSFER,\n    payload\n});\n\nexport const transferRequest = (payload: any) => ({\n    type: Constants.MANAGE_USER_TRANSFER_REQUEST,\n    payload\n});\n\nexport const confirmTransferRequest = (payload: any) => ({\n    type: Constants.MANAGE_USER_TRANSFER_COFIRM_REQUEST,\n    payload\n});\n\nexport const transferRequestReset = () => ({\n    type: Constants.MANAGE_USER_TRANSFER_REQUEST_RESET,\n});\n\nexport const addUserDetails = (payload: any) => ({\n    type: Constants.MANAGE_USER_ADD,\n    payload\n});\nexport const addUserDetailsSuccess = (payload: any) => ({\n    type: Constants.MANAGE_USER_ADD_SUCCESS,\n    payload\n});\n\nexport const editUserDetails = (payload: any) => ({\n    type: Constants.MANAGE_USER_EDIT,\n    payload\n});\nexport const editUserDetailsSuccess = (payload: any) => ({\n    type: Constants.MANAGE_USER_EDIT_SUCCESS,\n    payload\n});\n\nexport const removeUserDetails = (payload: any) => ({\n    type: Constants.MANAGE_USER_REMOVE,\n    payload\n});\nexport const removeUserDetailsSuccess = (payload: any) => ({\n    type: Constants.MANAGE_USER_REMOVE_SUCCESS,\n    payload\n});\n\nexport const resetLoadedStatus = () => ({\n    type: Constants.MANAGE_USER_LOADED_RESET,\n});\n\nexport const getCapacityList = (payload:any) => ({\n    type: Constants.GET_MANAGE_CAPACITY_LIST,\n    payload\n});\n\nexport const capacityListSuccess = (payload: any) => ({\n    type: Constants.MANAGE_CAPACITY_LIST_SUCCESS,\n    payload\n});\n\nexport const setCapacityFilter = (payload: any) => ({\n    type: Constants.MANAGE_CAPACITY_FILTER,\n    payload\n});\n\nexport const addManageCapacity = (payload: any) => ({\n    type: Constants.MANAGE_CAPACITY_ADD,\n    payload\n});\n\nexport const setSelectedCapacity = (payload: any) => ({\n    type: Constants.MANAGE_CAPACITY_SELECTED,\n    payload\n});\n\nexport const manageCapacityAddSuccess = (payload:any) => ({\n    type: Constants.MANAGE_CAPACITY_ADD_SUCCESS,\n    payload\n});\n\nexport const removeManageCapacity = (payload: any) => ({\n    type: Constants.MANAGE_CAPACITY_REMOVE,\n    payload\n});\n\nexport const manageCapacityRemoveSuccess = (payload: any) => ({\n    type: Constants.MANAGE_CAPACITY_REMOVE_SUCCESS,\n    payload\n});\n\nexport const updateManageCapacity = (payload: any) => ({\n    type: Constants.MANAGE_CAPACITY_EDIT,\n    payload\n});\n\nexport const manageCapacityUpdateSuccess = (payload: any) => ({\n    type: Constants.MANAGE_CAPACITY_EDIT_SUCCESS,\n    payload\n});\n\nexport const loadCarrierData = (payload: any) => ({\n    type: Constants.CARRIER_MANAGE_DATA_REQUEST,\n    payload\n});\n\nexport const carrierDataSuccess = (payload: any) => ({\n    type: Constants.CARRIER_MANAGE_DATA_SUCCESS,\n    payload\n})\n\nexport const carrierDataFailure = (payload: any) => ({\n    type: Constants.CARRIER_MANAGE_DATA_FAILURE,\n    payload\n})\n","import { isPlatform } from \"@ionic/react\";\nimport { UserDetails } from \"app/models/userPforile/userProfile.modal\";\nimport { clear, GPSWrapper } from \"app/utils/common\";\nimport { MANAGE_USER_REMOVE_SUCCESS_TEXT, MANAGE_USER_TRANSFER_EXIST, MANAGE_USER_TRANSFER_MESSAGE, MANAGE_USER_UPDATE_SUCCESS, OOPS_MESSAGE } from \"app/utils/constants\";\nimport { ToastMessage } from \"app/utils/ToastMessage\";\n\nexport const PATH = 'manage/ManageUser';\n\nexport const userProfileModel = new UserDetails();\n\nexport const backToPage = (props: any) => {\n    props.history.push(isPlatform('desktop') ? `/app/manage` : `/app/${PATH}`);\n};\n\nexport const handleTransfer = (props:any) => (payload: any, restData: Function, isCarrierSame = false) => {\n    const { name, params } = payload;\n    props.resetValidateUser();\n    if (isCarrierSame) {\n      restData();\n      ToastMessage.show(MANAGE_USER_TRANSFER_EXIST);\n      backToPage(props);\n      return true;\n    }\n    const query = userProfileModel.transferMember(params);\n    const callback = (success = false) => {\n      restData();\n      if (success) {\n        ToastMessage.open({\n          message: MANAGE_USER_TRANSFER_MESSAGE.replace('{{NAME}}', name),\n          btnTitle: 'Ok',\n          showUndo: true,\n          callback: () => {}\n        });\n      } else {\n        ToastMessage.show(OOPS_MESSAGE);\n      }\n      backToPage(props);\n    };\n    props.transferUserAction({ query, callback });\n  };\n\nasync function azureLogout(props: any) {\n    if (isPlatform('capacitor')) {\n        GPSWrapper.details.stopGPS();\n    }\n    await clear();\n    await props.authService.logout();\n    await props.logout();\n}\n\nexport const handleDelink = (props:any, isProfile = false) => (payload: any) => {\n    const {\n      userDetails: { userId }\n    } = payload;\n    const query = userProfileModel.updateMember(payload);\n    const callback = async (success = false) => {\n      if (success) {\n        ToastMessage.show(MANAGE_USER_REMOVE_SUCCESS_TEXT);\n        if(isProfile) {\n            await azureLogout(props);\n            return true;\n        }\n        props.history.push(`${isPlatform('desktop') ? '/app/manage' : `/app/${PATH}`}`);\n        return true;\n      }\n      ToastMessage.show(OOPS_MESSAGE);\n    };\n    props.delinkUserAction({ query, userId, callback });\n  };\n\nexport const handleUpdateSubmit = (props:any, isManageProfile = false, isSelfDesktop = false) => (payload: any, restData: Function) => {\n    const query = userProfileModel.updateMember(payload);\n    const callback = (success = false) => {\n      if (success) {\n        restData();\n        ToastMessage.show(MANAGE_USER_UPDATE_SUCCESS);\n        if(!isSelfDesktop) {\n          if(isManageProfile) {\n              props.history.push(`/app/${PATH}/Profile`);\n          } else {\n            props.history.push(`/app/manage/ProfileDetails`);\n          }\n        }\n        return true;\n      }\n      ToastMessage.show(OOPS_MESSAGE);\n    };\n    props.updateUserAction({ query, isProfile: true, callback });\n};\n","\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { isPlatform } from '@ionic/react';\nimport { getLoading, getUserDetails, getNetworkStatus } from '../../../selectors/selector';\nimport { ManageUserProfileFormPage, ManageUserProfilePage } from '../../../pages/Manage/ManageUser';\nimport { showNetworkAlert } from '../../../actions/App/action';\nimport ManageProfileDesktopPage from '../../../pages/Manage/ManageUser/ManageProfileDesktop.page';\nimport { editUserDetails, removeUserDetails } from '../../../actions/manage/action';\nimport { handleDelink, handleUpdateSubmit } from '../ManageUserContainer/ManageUserUtil';\nimport { useAuthService } from 'app/services/Auth';\n\nexport const ProfileContainer: React.FC<any> = (props: any) => {\n  const roles =\n    (props &&\n      props.userProfile &&\n      props.userProfile.userApplicationDetails &&\n      props.userProfile.userApplicationDetails\n        .reduce((current: any, item: any) => {\n          return [...current, ...item.roles];\n        }, [])\n        .map((role: any) => role.roleName)) ||\n    [];\n  const userProfile = { ...props.userProfile, roles };\n\n  const selectedUser = {\n    ...userProfile,\n    defaultMobileNumber: !userProfile.defaultMobileNumber\n      ? userProfile.mobileNumber\n      : userProfile.defaultMobileNumber\n  };\n\n  const authService = useAuthService();\n\n  return isPlatform('desktop') ? (\n    <ManageUserProfileFormPage\n      {...props}\n      isSelf\n      isSelfDesktop\n      selectedUser={selectedUser}\n      userDetails={props.userProfile}\n      userProfile={userProfile}\n      isEditable={false}\n      module=\"manage\"\n      handleSubmit={handleUpdateSubmit(props, false, true)}\n      handleDelink={handleDelink({...props, authService}, true)}\n    />\n  ) : (\n    <ManageUserProfilePage\n      {...props}\n      isSelf\n      selectedUser={selectedUser}\n      userDetails={props.userProfile}\n      userProfile={userProfile}\n      isEditable={false}\n      module=\"manage\"\n      handleSubmit={handleUpdateSubmit(props)}\n      handleDelink={handleDelink(props, true)}\n    />\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  loading: getLoading(),\n  userProfile: getUserDetails(),\n  isNetworkAvailable: getNetworkStatus()\n});\n\nexport const mapDispatchToProps = (dispatch: Function) => ({\n  showNetworkAlert: () => dispatch(showNetworkAlert()),\n  updateUserAction: (payload: any) => dispatch(editUserDetails(payload)),\n  delinkUserAction: (payload: any) => dispatch(removeUserDetails(payload))\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps)(ProfileContainer);\n\nexport default withConnect;\n","import { ManageState } from \"../../schemas/manage/manage.Schema\";\nimport * as Constants from \"../../utils/constants\";\nimport produce from \"immer\";\n\nexport const initialState: ManageState = {\n  profileImg: [],\n  manageCardData: [],\n  users: {\n    data: [],\n    loaded: false,\n    selectedProfile: null,\n    filter: {\n      selected: [],\n      direction: 'desc'\n    },\n    validateUser: {\n      isUserValid: null,\n      details: {}\n    },\n    transfer: {\n      isRequested: false,\n      details: {}\n    }\n  },\n  capacity: {\n    loaded: false,\n    data: [],\n    filter: {\n      selected: [],\n      direction: 'desc'\n    },\n    selected: null\n  },\n  carrierProfile: {\n    data: null,\n    loaded: false\n  }\n};\n\nexport default (state = initialState, action: any) =>\n  produce(state, draft => {\n    switch (action.type) {\n      case Constants.GET_MANAGE_CARD_DATA:\n        draft.manageCardData = action.payload;\n        break;\n      case Constants.MANAGE_USERS_LIST_SUCCESS:\n        draft.users.data = action.payload.usersList;\n        draft.users.loaded = true;\n        draft.users.selectedProfile = null;\n        break;\n      case Constants.MANAGE_USER_SELECTED:\n        draft.users.selectedProfile = action.payload.userProfile;\n        break;\n      case Constants.MANAGE_USER_FILTER:\n        draft.users.filter = action.payload.filter;\n        break;\n      case Constants.MANAGE_USER_VALIDATE_STATUS:\n        draft.users.validateUser = action.payload;\n        break;\n      case Constants.MANAGE_USER_VALIDATE_RESET:\n        draft.users.validateUser = {\n          isUserValid: null,\n          details: {}\n        };\n      break;\n      case Constants.MANAGE_USER_ADD_SUCCESS:\n        draft.users.data = [...draft.users.data, action.payload.member];\n        draft.users.filter = initialState.users.filter;\n        draft.users.selectedProfile = null;\n        break;\n      case Constants.MANAGE_USER_EDIT_SUCCESS:\n        const { member} = action.payload;\n        draft.users.data = draft.users.data.map((item:any) => item.userPrincipalName === member.userPrincipalName ? member: item);;\n        draft.users.selectedProfile = member;\n        break;\n      case Constants.MANAGE_USER_TRANSFER_REQUEST:\n        draft.users.transfer = action.payload.transfer;\n        break;\n      case Constants.MANAGE_USER_TRANSFER_REQUEST_RESET:\n        draft.users.transfer = {\n          isRequested: false,\n          details: {}\n        };\n        break;\n      case Constants.MANAGE_USER_REMOVE_SUCCESS:\n        draft.users.data = draft.users.data.filter((user:any) => user.userPrincipalName !== action.payload.userId);\n        draft.users.selectedProfile = null;\n        break;\n      case Constants.MANAGE_USER_LOADED_RESET:\n        draft.users.loaded = false;\n        break;\n      case Constants.MANAGE_CAPACITY_FILTER:\n        draft.capacity.filter = action.payload.filter;\n        break;\n      case Constants.MANAGE_CAPACITY_ADD_SUCCESS:\n        draft.capacity.data = [action.payload.capacityItem, ...draft.capacity.data];\n        draft.capacity.filter = initialState.capacity.filter;\n        break;\n      case Constants.MANAGE_CAPACITY_EDIT_SUCCESS:\n        const {capacityItem} = action.payload;\n        draft.capacity.data =draft.capacity.data.map((item:any) => item.capacityId === capacityItem.capacityId ? capacityItem: item);\n        draft.capacity.selected = capacityItem;\n        break;\n      \n      case Constants.MANAGE_CAPACITY_SELECTED:\n        draft.capacity.selected = action.payload.capacityItem;\n        break;\n      case Constants.MANAGE_CAPACITY_LIST_SUCCESS:\n        const items = action.payload.isRefresh ? action.payload.capacityList : [...draft.capacity.data, ...action.payload.capacityList];\n        draft.capacity.data = items.filter((item: any, index: number) => {\n          const findIndex = items.findIndex((newItem: any) => newItem.capacityId === item.capacityId);\n          return index === findIndex;\n        })\n        draft.capacity.selected = null;\n        draft.capacity.loaded = true;\n        break;\n      case Constants.MANAGE_CAPACITY_REMOVE_SUCCESS:\n        draft.capacity.data = draft.capacity.data.filter(details => details.capacityId !== (action.payload as any).capacityId)\n        break;\n      case  Constants.CARRIER_MANAGE_DATA_SUCCESS:\n        draft.carrierProfile.data = (action.payload as any).data;\n        draft.carrierProfile.loaded = true;\n        break;\n    }\n  });\n","import { createSelector } from 'reselect';\nimport { initialState } from \"./../../reducers/manage/reducer\";\n\nconst selectData = (state: any) => state.manage || initialState;\n\n// export const makeSelectImg = () => createSelector([selectData], manage => manage.profileImg);\nexport const makeManageCardData = () =>\n    createSelector(\n        [selectData],\n        manage => manage.manageCardData || initialState.manageCardData);\n\n/**\n *  Manage User Selectors\n */\nexport const getManageUsers = () =>\n    createSelector(\n        [selectData],\n        manage => manage.users.data || initialState.users.data);\n        \nexport const getManageUsersLoaded = () =>\n    createSelector(\n        [selectData],\n        manage => manage.users.loaded || initialState.users.loaded);\n    \nexport const getSelectedManageUser = () =>\n    createSelector(\n        [selectData],\n        manage => manage.users.selectedProfile || initialState.users.selectedProfile);\n\nexport const getSelectedFilter = () =>\n    createSelector(\n        [selectData],\n        manage => manage.users.filter || initialState.users.filter);\n\nexport const isUserValidated = () =>\n    createSelector(\n        [selectData],\n        manage => manage.users.validateUser.isUserValid);\n\nexport const getValidateUserDetails = () =>\n    createSelector(\n        [selectData],\n        manage => manage.users.validateUser.details || initialState.users.validateUser.details);\n\nexport const isTransferRequested = () =>\n    createSelector(\n        [selectData],\n        manage => manage.users.transfer.isRequested || initialState.users.transfer.isRequested);\n\nexport const getTransferRequestDetails = () =>\n    createSelector(\n        [selectData],\n        manage => manage.users.transfer.details || initialState.users.transfer.details);\n\n/**\n * Manage Capaciy Selectors\n */\nexport const getManageCapacity = () =>\n    createSelector(\n        [selectData],\n        manage => manage.capacity.data || initialState.capacity.data);\n\nexport const getManageCapacityLoaded = () =>\n    createSelector(\n        [selectData],\n        manage => manage.capacity.loaded || initialState.capacity.loaded);\n\nexport const getManageCapacityFilter = () =>\n    createSelector(\n        [selectData],\n        manage => manage.capacity.filter || initialState.capacity.filter);\n\nexport const getSelectedManageCapacity = () =>\n    createSelector(\n        [selectData],\n        manage => manage.capacity.selected || initialState.capacity.selected);\n\n/**\n * Carrier Profile\n */\nexport const getCarrierProfile = () =>\n    createSelector(\n        [selectData],\n        manage => manage.carrierProfile.data || initialState.carrierProfile.data);\n\nexport const getCarrierProfileLoaded = () =>\n    createSelector(\n        [selectData],\n        manage => manage.carrierProfile.loaded || initialState.carrierProfile.loaded);\n        ","export class CarrierProfileModel {\n  /**\n   * Get Capacity List\n   * @param commonCarrierId\n   * @param page\n   * @param size\n   */\n  getProfile(carrierId: string) {\n    return {\n      query: {\n        getCarrierProfile: {\n          __args: {\n            input: {\n              carrierId\n            }\n          },\n          carrierName: true,\n          carrierMCNo: true,\n          carrierUsDOTNo: true,\n          commonCarrierId: true,\n          carrierScac: true,\n          carrierTier: true,\n          carrierStatusCode: true,\n          addressLine1: true,\n          addressLine2: true,\n          city: true,\n          state: true,\n          country: true,\n          postalCode: true,\n          carrierModeTruckloadInd: true,\n          carrierModeLTLInd: true,\n          carrierModeIMInd: true,\n          primaryContact: {\n            contactFirstName: true,\n            contactLastName: true,\n            contactType: true,\n            contactPhoneNumber: true,\n            contactFaxNumber: true,\n            contactEmail: true\n          },\n          otherContacts: {\n            contactFirstName: true,\n            contactLastName: true,\n            contactType: true,\n            contactPhoneNumber: true,\n            contactFaxNumber: true,\n            contactEmail: true\n          },\n          insurances: {\n            insuranceId: true,\n            policyNumber: true,\n            coverageAmount: true,\n            maxInsuranceLimit: true,\n            insuranceTypeCode: true,\n            insuranceTypeDesc: true,\n            insuranceStatusCode: true,\n            insuranceCertificateId: true,\n            policyEffectiveDate: true,\n            policyExpirationDate: true\n          },\n          certifications: {\n            certificationCode: true,\n            certificationDesc: true,\n            certificateExpireDate: true,\n            qualificationStatus: true\n          }\n        }\n      }\n    };\n  }\n}\n","import {\n  IonRow,\n  IonCol,\n  IonList,\n  IonItem,\n  IonLabel,\n  IonInput,\n  IonCard,\n  IonCardHeader,\n  IonIcon,\n  IonCardContent,\n  IonGrid,\n  IonText,\n  isPlatform\n} from '@ionic/react';\nimport * as React from 'react';\nimport moment from 'moment';\nimport { CARRIER_PROFILE_INSURENCE } from '../../../utils/constants';\n\nconst formatDate = (date: string) => moment(date).format('MM/DD/YYYY');\n\nexport const CarrierInsuranceCard = (props: any) => {\n  const insurances = props.data.filter(\n    (insurance: any) =>\n      new Date(moment(insurance.policyExpirationDate).format('YYYY-MM-DD')).getTime() >=\n      new Date().getTime()\n  );\n\n  return (\n    <IonCard class=\"carrier-card\">\n      <IonCardHeader\n        class={\n          props.showAccordian\n            ? 'card-header-pad carrier-accordion-header'\n            : 'card-header-pad2 carrier-accordion-header'\n        }\n        onClick={props.accordianClick}>\n        <IonLabel className=\"carrier-card-title\">{props.carrierHeader}</IonLabel>\n        {props.showAccordian ? (\n          <IonIcon src=\"/assets/icon/add.svg\" className=\"addAccordian\" />\n        ) : (\n          <IonIcon src=\"/assets/icon/minus-icon.svg\" className=\"addAccordian\" />\n        )}\n      </IonCardHeader>\n      <IonCardContent class={props.showAccordian ? 'fadeout' : 'fadein' + ' accordianCardContent'}>\n        {isPlatform('desktop') ? (\n          <IonText className=\"carrier-text insurence\">{CARRIER_PROFILE_INSURENCE}</IonText>\n        ) : null}\n        {insurances.map((v: any, index: number) => (\n          <>\n            <IonGrid className=\"insurance-card-header\">\n              <IonRow>\n                <IonCol size={isPlatform('desktop') ? '1' : '2'}>\n                  <IonIcon src=\"/assets/icon/insurence-icon.svg\" className=\"insurence-icon\" />\n                </IonCol>\n                <IonCol>\n                  <IonText class=\"insurence-title\">\n                    {!isPlatform('desktop') ? v.insuranceTypeCode : 'Insurance'}\n                  </IonText>\n                </IonCol>\n              </IonRow>\n            </IonGrid>\n            {isPlatform('desktop') ? (\n              <IonList className=\"insurance-card-list\">\n                <IonItem mode=\"ios\" key={index} className=\"carrier-profile-ionitem\">\n                  <IonLabel mode=\"ios\" position=\"floating\">\n                    Effective Date\n                  </IonLabel>\n                  <IonInput\n                    type=\"text\"\n                    className=\"profile-form-control\"\n                    name=\"origin\"\n                    value={formatDate(v.policyEffectiveDate)}\n                    readonly\n                  />\n                </IonItem>\n                <IonItem mode=\"ios\" key={index} className=\"carrier-profile-ionitem\">\n                  <IonLabel mode=\"ios\" position=\"floating\">\n                    Type\n                  </IonLabel>\n                  <IonInput\n                    type=\"text\"\n                    className=\"profile-form-control\"\n                    name=\"origin\"\n                    value={v.insuranceTypeCode}\n                    readonly\n                  />\n                </IonItem>\n                <IonItem mode=\"ios\" key={index} className=\"carrier-profile-ionitem\">\n                  <IonLabel mode=\"ios\" position=\"floating\">\n                    Coverage Amount\n                  </IonLabel>\n                  <IonInput\n                    type=\"text\"\n                    className=\"profile-form-control\"\n                    name=\"origin\"\n                    value={`$${v.coverageAmount}`}\n                    readonly\n                  />\n                </IonItem>\n                <IonItem mode=\"ios\" key={index} className=\"carrier-profile-ionitem\">\n                  <IonLabel mode=\"ios\" position=\"floating\">\n                    Expiration Date\n                  </IonLabel>\n                  <IonInput\n                    type=\"text\"\n                    className=\"profile-form-control\"\n                    name=\"origin\"\n                    value={formatDate(v.policyExpirationDate)}\n                    readonly\n                  />\n                </IonItem>\n              </IonList>\n            ) : (\n              <IonList className=\"insurance-card-list\">\n                <IonItem mode=\"ios\" key={index} className=\"carrier-profile-ionitem\">\n                  <IonLabel mode=\"ios\" position=\"floating\">\n                    Effective Date\n                  </IonLabel>\n                  <IonInput\n                    type=\"text\"\n                    className=\"profile-form-control\"\n                    name=\"origin\"\n                    value={formatDate(v.policyEffectiveDate)}\n                    readonly\n                  />\n                </IonItem>\n                <IonItem mode=\"ios\" key={index} className=\"carrier-profile-ionitem\">\n                  <IonLabel mode=\"ios\" position=\"floating\">\n                    Expiration Date\n                  </IonLabel>\n                  <IonInput\n                    type=\"text\"\n                    className=\"profile-form-control\"\n                    name=\"origin\"\n                    value={formatDate(v.policyExpirationDate)}\n                    readonly\n                  />\n                </IonItem>\n                <IonItem mode=\"ios\" key={index} className=\"carrier-profile-ionitem\" lines=\"none\">\n                  <IonLabel mode=\"ios\" position=\"floating\">\n                    Coverage Amount\n                  </IonLabel>\n                  <IonInput\n                    type=\"text\"\n                    className=\"profile-form-control\"\n                    name=\"origin\"\n                    value={`$${v.coverageAmount}`}\n                    readonly\n                  />\n                </IonItem>\n              </IonList>\n            )}\n          </>\n        ))}\n      </IonCardContent>\n    </IonCard>\n  );\n};\n","import React from 'react';\nimport {\n  IonLabel,\n  IonCard,\n  IonItem,\n  IonInput,\n  IonCardHeader,\n  IonCardContent,\n  IonIcon,\n  IonList,\n  isPlatform\n} from '@ionic/react';\n\ninterface AccordianProps {\n    showAccordian: any,\n    accordianClick: any,\n    carrierHeader: any,\n    data: any\n}\nexport const CarrierInfoAccordian: React.FC<AccordianProps> = ({\n  showAccordian,\n  accordianClick,\n  carrierHeader,\n  data\n}) => {\n  return (\n    <IonCard  class={` ${\n      carrierHeader === 'Carrier Info' ? 'carrier-card2' : 'carrier-card'\n    }`}\n    >\n      <IonCardHeader\n        class={\n          showAccordian\n            ? 'card-header-pad carrier-accordion-header'\n            : 'card-header-pad2 carrier-accordion-header'\n        }\n        data-test=\"carrier-acc-title\"\n        onClick={accordianClick}>\n        <IonLabel className=\"carrier-card-title\">{carrierHeader}</IonLabel>\n        {showAccordian ? (\n          <IonIcon src=\"assets/icon/add.svg\" className=\"addAccordian\" data-test=\"add-icon\" />\n        ) : (\n          <IonIcon\n            src=\"assets/icon/minus-icon.svg\"\n            className=\"addAccordian\"\n            data-test=\"remove-icon\"\n          />\n        )}\n      </IonCardHeader>\n      <IonCardContent class={showAccordian ? 'fadeout' : 'fadein' + ' accordianCardContent'}>\n        {data && data.length > 0 ? (\n          <IonList className=\"carrier-profile-list\">\n            {data.map((carrierData: any, index: number) => (\n              <IonItem\n                mode=\"ios\"\n                key={index}\n                className=\"carrier-profile-ionitem\"\n                lines={index === data.length - 1 && !isPlatform('desktop') ? 'none' : 'inset'}>\n                <IonLabel mode=\"ios\" position=\"floating\" className=\"carrier-profile-label\">\n                  {carrierData.label}\n                </IonLabel>\n                <IonInput\n                  type=\"text\"\n                  className=\"profile-form-control\"\n                  name=\"origin\"\n                  value={carrierData.value}\n                  readonly\n                />\n              </IonItem>\n            ))}\n          </IonList>\n        ) : null}\n      </IonCardContent>\n    </IonCard>\n  );\n};\n","export const manageCarrierdata = (props:any) => [\n    {\n        label: 'Carrier Name',\n        value: props.carrierName || '-'\n    },\n    {\n        label: 'Carrier ID',\n        value: props.commonCarrierId || '-'\n    },\n    {\n        label: 'Carrier MC#',\n        value: props.carrierMCNo || '-'\n    },\n    {\n        label: 'USDOT#',\n        value: props.carrierUsDOTNo || '-'\n    },\n];\n\nexport const manageContactdata = (props:any) => [\n    {\n        label: 'Carrier Address',\n        value: props && Object.keys({\n            \"addressLine1\": props.addressLine1 || null,\n            \"addressLine2\": props.addressLine2 || null,\n            \"city\": props.city || null,\n            \"state\": props.state || null,\n            \"country\": props.country || null,\n            \"postalCode\": props.postalCode || null,\n        }).filter(key => props[key]).map(key => props[key]).join(', ') || '-'\n    },\n    {\n        label: 'Carrier Contact',\n        value: props.primaryContact && (`${props.primaryContact.contactFirstName}, ${props.primaryContact.contactLastName}`)  || '-' \n    },\n    {\n        label: 'Carrier Phone',\n        value: props.primaryContact && props.primaryContact.contactPhoneNumber || '-'\n    },\n    {\n        label: 'Email',\n        value:  props.primaryContact && props.primaryContact.contactEmail  || '-'\n    },\n];\n","import React from 'react';\nimport { IonContent, IonList, IonLabel, IonGrid, IonRow, IonCol, IonCard, IonCardHeader, IonCardContent, IonImg, IonText, IonIcon } from '@ionic/react';\nimport { CarrierInfoAccordian } from '../../../components/app/carrierInsuranceCard/CarrierInfoAccordian';\nimport { manageCarrierdata, manageContactdata } from './CarrierProfile.utils';\nimport { CarrierInsuranceCard } from '../../../components/app/carrierInsuranceCard/carrierInsuranceCard';\nimport { capitalize } from 'lodash';\nimport { CARRIER_PROFILE_INFO, CARRIER_INSURENCE, CARRIER_CONTACT_DETAILS, CARRIER_INFO, CARRIER_CERITIFCATION, CARRIER_QUALIFICATION_STATUS, CARRIER_PROFILE_FOOTER } from '../../../utils/constants';\nimport moment from 'moment';\n\nconst CarrierProfileDesktop = (props:any) => {\n    const { carrierProfile} = props;\n    return (\n         <IonContent className=\"ion-padding custom-padding carrier-profile-desktop\">\n            {\n            carrierProfile && carrierProfile.map((profile:any) => {\n                const certifications = (profile && profile.certifications && profile.certifications.filter((certificate:any)=> {\n                    return (certificate.certificationCode.toLowerCase() !== 'hazmat' || (certificate.certificationCode.toLowerCase() === 'hazmat') && new Date(certificate.certificateExpireDate) >= new Date(moment().format('YYYY-MM-DD HH:MM')));\n               })) || [];\n                return (\n                    <>\n                        <IonText className=\"carrier-text\">{CARRIER_PROFILE_INFO}</IonText>\n                        <CarrierInfoAccordian showAccordian={!props.showCarrier} accordianClick={() => props.setShowCarrier(!props.showCarrier)} carrierHeader={CARRIER_INFO} data={manageCarrierdata(profile)} />\n                        <CarrierInfoAccordian showAccordian={!props.showContact} accordianClick={() => props.setShowContact(!props.showContact)} carrierHeader={CARRIER_CONTACT_DETAILS} data={manageContactdata(profile)} />\n                        <CarrierInsuranceCard showAccordian={!props.showCarrierInsurance} accordianClick={() => props.setShowCarrierInsurance(!props.showCarrierInsurance)} carrierHeader={CARRIER_INSURENCE} data={profile.insurances} />\n                        <IonGrid>\n                            <IonRow>\n                                <IonCol size=\"6\">\n                                    <IonLabel className=\"carrier-card-title\">{CARRIER_CERITIFCATION}</IonLabel>\n                                </IonCol>\n                                <IonCol size=\"6\">\n                                    <IonLabel className=\"carrier-card-title\">{CARRIER_QUALIFICATION_STATUS}</IonLabel>\n                                </IonCol>\n                            </IonRow>\n                            {\n                                certifications.map((certificate: any) => (\n                                    <IonRow>\n                                        <IonCol size=\"6\">\n                                            <IonGrid className=\"cert-grid\">\n                                                <IonRow className=\"cert-header\">\n                                                    <IonCol size='1'><IonImg alt=\"logo\" src={`/assets/icon/${certificate.certificationDesc.toLowerCase()}.svg`} className=\"certificate-png\" /></IonCol>\n                                                    <IonCol size='6'>\n                                                        <IonText className=\"cert-desc\">{capitalize(certificate.certificationDesc)}</IonText>\n                                                    </IonCol>\n                                                    <IonCol size='5'><IonList className=\"HazmatDate date_approved\"></IonList></IonCol>\n                                                </IonRow>\n                                            </IonGrid>\n                                        </IonCol>\n                                        <IonCol size=\"6\">\n                                            <IonGrid className=\"cert-grid\">\n                                                <IonRow>\n                                                    <IonCol size='1'><IonIcon src=\"assets/icon/tick-icon.svg\" className=\"tick-icon\" /></IonCol>\n                                                    <IonCol size='6' className=\"Approved\">\n                                                        <IonText className=\"qualficiation-desc\">{capitalize(certificate.qualificationStatus)}</IonText>\n                                                    </IonCol>\n                                                    <IonCol size='5'>\n                                                        <IonText className=\"qualficiation-expiry\">{( certificate && certificate.certificateExpireDate && certificate.certificationCode.toLowerCase() === 'hazmat') ? moment(certificate.certificateExpireDate).format('MM/DD/YYYY'): ''}</IonText>\n                                                    </IonCol>\n                                                </IonRow>\n                                            </IonGrid>\n                                        </IonCol>\n                                    </IonRow>\n                                ))\n                            }\n                        </IonGrid>\n                    </>\n                );\n            }) \n            }\n            <div className=\"contact\"  dangerouslySetInnerHTML={{__html: CARRIER_PROFILE_FOOTER}}></div>\n        </IonContent>\n    )\n}\n\nexport default CarrierProfileDesktop;","import React, { Component, useState } from \"react\";\nimport {\n  IonContent,\n  IonPage,\n  IonCard,\n  IonList,\n  IonRow,\n  IonCol,\n  IonCardHeader,\n  IonCardContent,\n  IonIcon,\n  IonImg,\n  IonLabel,\n  IonGrid,\n  IonText,\n  isPlatform\n} from \"@ionic/react\";\nimport AppHeader from \"../../../components/app/Bars/Bar-header\";\nimport \"./carrierProfile.scss\";\nimport { CarrierInsuranceCard } from \"../../../components/app/carrierInsuranceCard/carrierInsuranceCard\";\nimport { CarrierInfoAccordian } from \"../../../components/app/carrierInsuranceCard/CarrierInfoAccordian\";\nimport { manageCarrierdata, manageContactdata } from \"./CarrierProfile.utils\";\nimport PullToRefresh from \"../../../components/PullToRefresh/PullToRefresh\";\nimport { capitalize } from \"lodash\";\nimport CarrierProfileDesktop from \"./CarrierProfileDesktop\";\nimport {\n  CARRIER_CERITIFCATION,\n  CARRIER_QUALIFICATION_STATUS,\n  CARRIER_INSURENCE,\n  CARRIER_CONTACT_DETAILS,\n  CARRIER_INFO,\n  CARRIER_PROFILE_FOOTER\n} from \"../../../utils/constants\";\nimport moment from \"moment\";\n\nconst CarrierProfilePage = (props: any) => {\n  const {\n    carrierProfile,\n    history,\n    backUrl,\n    isPullToRefresh,\n    getCarrierProfile\n  } = props;\n  const [showCarrier, setShowCarrier] = useState(true);\n  const [showContact, setShowContact] = useState(true);\n  const [showCarrierInsurance, setShowCarrierInsurance] = useState(true);\n  if (isPlatform(\"desktop\")) {\n    const cprops = {\n      ...props,\n      showCarrier,\n      setShowCarrier,\n      showContact,\n      setShowContact,\n      showCarrierInsurance,\n      setShowCarrierInsurance\n    };\n    return <CarrierProfileDesktop {...cprops} />;\n  }\n\n    return (\n        <IonPage className=\"desktop-page\" data-test=\"IonPage-Manage\">\n            <AppHeader title=\"Carrier profile\" backUrl={\"/app/\" + backUrl} History={history} />\n            <IonContent className=\"ion-padding custom-padding recent_container\">\n                <PullToRefresh status={isPullToRefresh} onPullToRefresh={getCarrierProfile} />\n                {\n                   carrierProfile && carrierProfile.map((profile:any, index: number) => {\n                       const certifications = (profile && profile.certifications && profile.certifications.filter((certificate:any)=> {\n                            return (certificate.certificationCode.toLowerCase() !== 'hazmat' || (certificate.certificationCode.toLowerCase() === 'hazmat') && new Date(moment(certificate.certificateExpireDate).format('YYYY-MM-DD')).getTime() >= new Date().getTime());\n                       })) || [];\n                       return (\n                           <React.Fragment  key={`profile${index}`}>\n                                <CarrierInfoAccordian showAccordian={showCarrier} accordianClick={() => setShowCarrier(!showCarrier)} carrierHeader={CARRIER_INFO} data={manageCarrierdata(profile)} />\n                                <CarrierInfoAccordian showAccordian={showContact} accordianClick={() => setShowContact(!showContact)} carrierHeader={CARRIER_CONTACT_DETAILS} data={manageContactdata(profile)} />\n                                <CarrierInsuranceCard showAccordian={showCarrierInsurance} accordianClick={() => setShowCarrierInsurance(!showCarrierInsurance)} carrierHeader={CARRIER_INSURENCE} data={profile.insurances} />\n                                <IonCard class=\"carrier-card\">\n                                        <IonCardHeader class={'card-header-pad carrier-accordion-header'}>\n                                            <IonLabel className=\"carrier-card-title\">{CARRIER_CERITIFCATION}</IonLabel>\n                                        </IonCardHeader>\n                                        <IonCardContent class={\"accordianCardContent\"} >\n                                            {\n                                                certifications.map((certificate: any, index:number) => (\n                                                    <IonGrid className=\"cert-grid\" key={`cer${index}`}>\n                                                        <IonRow className=\"cert-header\">\n                                                            <IonCol size='2'><IonImg alt=\"logo\" src={`/assets/icon/${certificate.certificationDesc.toLowerCase()}.svg`} className=\"certificate-png\" /></IonCol>\n                                                            <IonCol size='6'>\n                                                                <IonText className=\"cert-desc\">{capitalize(certificate.certificationDesc)}</IonText>\n                                                            </IonCol>\n                                                            <IonCol size='4'><IonList className=\"HazmatDate date_approved\">{( certificate && certificate.certificateExpireDate && certificate.certificationCode.toLowerCase() === 'hazmat') ? moment(certificate.certificateExpireDate).format('MM/DD/YYYY'): ''}</IonList></IonCol>\n                                                        </IonRow>\n                                                        <IonLabel className=\"inner-card-title\">{CARRIER_QUALIFICATION_STATUS}</IonLabel>\n                                                        <IonRow>\n                                                            <IonCol size='2'><IonIcon src=\"assets/icon/tick-icon.svg\" className=\"tick-icon\" /></IonCol>\n                                                            <IonCol size='6' className=\"Approved\">\n                                                                <IonText className=\"qualficiation-desc\">{capitalize(certificate.qualificationStatus)}</IonText>\n                                                            </IonCol>\n                                                            <IonCol size='4'>\n                                                                <IonText className=\"qualficiation-expiry\"></IonText>\n                                                            </IonCol>\n                                                        </IonRow>\n                                                    </IonGrid>\n                                                ))\n                                            }\n                                        </IonCardContent>\n                                </IonCard>\n                           </React.Fragment>\n                       )\n                   }) \n                }\n                \n                <div className=\"contact\"  dangerouslySetInnerHTML={{__html: CARRIER_PROFILE_FOOTER}}></div>\n            </IonContent>\n        </IonPage>\n    );\n}\n\nexport default CarrierProfilePage;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { getCarrierProfile, getCarrierProfileLoaded } from '../../../selectors/Manage/selector';\nimport { CarrierProfileModel } from '../../../models/manage/carrier-profile.model';\nimport { ToastMessage } from '../../../utils/ToastMessage';\nimport { OOPS_MESSAGE, EVENT, SCREEN } from '../../../utils/constants';\nimport { logEvent } from '../../../utils/Analytics';\nimport { getUserDetails, getRefreshStatus } from '../../../selectors/selector';\nimport { loadCarrierData } from '../../../actions/manage/action';\nimport CarrierProfilePage from '../../../pages/Manage/CarrierProfile/CarrierProfile.page';\n\nexport const CarrierProfileContainer = (props: any) => {\n  const { loaded, userDetails, loadCarrierProfile } = props;\n  const carrierProfileModel = new CarrierProfileModel();\n  const getCarrierProfile = (isPullToRefresh = false) => {\n    const { carrierId } = userDetails;\n    const query = carrierProfileModel.getProfile(carrierId);\n    const callback = () => {\n      ToastMessage.show(OOPS_MESSAGE);\n    };\n    loadCarrierProfile({\n      query,\n      isPullToRefresh,\n      callback\n    });\n  };\n\n  useEffect(() => {\n    if (!loaded) {\n      getCarrierProfile();\n    }\n  }, [loaded]);\n\n  useEffect(() => {\n    logEvent(EVENT.SV_VIEW_CARRIER_PROFILE, {\n      screen: SCREEN.CARRIER_PROFILE,\n      carrierId: props.userDetails.carrierId\n    });\n  }, []);\n\n  return <CarrierProfilePage {...props} backUrl=\"manage\" getCarrierProfile={getCarrierProfile} />;\n};\n\nconst mapStateToProps = createStructuredSelector({\n  userDetails: getUserDetails(),\n  loaded: getCarrierProfileLoaded(),\n  isPullToRefresh: getRefreshStatus(),\n  carrierProfile: getCarrierProfile()\n});\n\nexport const mapDispatchToProps = (dispatch: Function) => ({\n  loadCarrierProfile: (payload: any) => dispatch(loadCarrierData(payload))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CarrierProfileContainer);\n","import { ActionType } from \"../../schemas/Home/Home.schema\";\nimport { put, call } from \"redux-saga/effects\";\nimport { showLoading, hideLoading } from \"../../actions/Login/action\";\nimport { DomainConverter } from \"../../utils/common\";\nimport { capacityListSuccess, manageCapacityAddSuccess, manageCapacityRemoveSuccess, manageCapacityUpdateSuccess } from \"../../actions/manage/action\";\nimport request from \"../../utils/request\";\n\n/**\n *  Get Manage Capacity List\n * \n * @param action \n */\nexport function* getManageCapaityList(action: ActionType): any {\n    const { query, isPullToRefresh, callback } = action.payload as any;\n    try {\n        yield put(showLoading(isPullToRefresh));\n        const queryValue = DomainConverter.domainToData<any>(query);\n        const response = yield call(request, [\n            \"MANAGE\",\n            \"MY_CAPACITY\",\n            null,\n            \"\",\n            queryValue,\n            \"application/json\",\n        ]);\n        const capacityList = response.data && response.data.getCarrierCapacity && response.data.getCarrierCapacity.capacity ? response.data.getCarrierCapacity.capacity : [];\n        yield put(capacityListSuccess({ capacityList, isRefresh: isPullToRefresh || !callback }));\n        if (callback) {\n            callback(capacityList.length);\n        }\n        yield put(hideLoading(isPullToRefresh));\n\n    } catch (e) {\n        yield put(hideLoading(isPullToRefresh));\n    }\n}\n\nconst formatData = (input:any) => ({\n    ...input,\n    capacityId: input.capacityId,\n    lastUpdatedBy: input.lastUpdatedBy,\n    lastUpdatedByEmail: input.userEmail,\n    lastUpdatedByPhoneNumber: input.userPhone,\n    lastUpdatedDateTime: new Date().toISOString(),\n    destination: {\n        city: input.destinationCity,\n        state: input.destinationState,\n        country: input.destinationCountry,\n        latitude: input.destinationLatitude,\n        longitude: input.destinationLongitude,\n        radius: input.destinationRadius\n    },\n    origin: {\n        city: input.originCity,\n        state: input.originState,\n        country: input.originCountry,\n        latitude: input.originLatitude,\n        longitude: input.originLongitude,\n        radius: input.originRadius\n    }\n})\n\n/**\n *  Add Manage Capacity List\n * \n * @param action \n */\nexport function* addManageCapacity(action: ActionType): any {\n    const { params: { query, input }, callback } = action.payload as any;\n    try {\n        yield put(showLoading());\n        const queryValue = DomainConverter.dataToMutation<any>(query, input);\n        const response = yield call(request, [\n            \"MANAGE\",\n            \"MY_CAPACITY\",\n            null,\n            \"\",\n            queryValue,\n            \"application/json\",\n        ]);\n        if (response.data && response.data.addCarrierCapacity) {\n            const { capacityID: capacityId , lastUpdatedByUserName: lastUpdatedBy} = response.data.addCarrierCapacity;\n            yield put(manageCapacityAddSuccess({\n                capacityItem: formatData({\n                    ...input,\n                    capacityId,\n                    lastUpdatedBy\n                })\n            }));\n        }\n        callback(!!response.data);\n        yield put(hideLoading());\n    } catch (e) {\n        callback();\n        yield put(hideLoading());\n    }\n}\n\n/**\n *  Add Manage Capacity List\n * \n * @param action \n */\nexport function* updateManageCapacity(action: ActionType): any {\n    const { params: { query, input, lastUpdatedBy }, callback } = action.payload as any;\n    try {\n        yield put(showLoading());\n        const queryValue = DomainConverter.dataToMutation<any>(query, input);\n        const response = yield call(request, [\n            \"MANAGE\",\n            \"MY_CAPACITY\",\n            null,\n            \"\",\n            queryValue,\n            \"application/json\",\n        ]);\n        if (response.data && response.data.updateCarrierCapacity) {\n            yield put(manageCapacityUpdateSuccess({\n                capacityItem: formatData({\n                    ...input,\n                    lastUpdatedBy\n                })\n            }));\n        }\n        callback(!!response.data);\n        yield put(hideLoading());\n    } catch (e) {\n        callback();\n        yield put(hideLoading());\n    }\n}\n\n/**\n *  Delete Manage Capacity List\n * \n * @param action \n */\nexport function* removeManageCapacity(action: ActionType): any {\n    const { query, capacityId, callback } = action.payload as any;\n    try {\n        yield put(showLoading());\n        const queryValue = DomainConverter.domainToData<any>(query);\n        const response = yield call(request, [\n            \"MANAGE\",\n            \"MY_CAPACITY\",\n            null,\n            \"\",\n            queryValue,\n            \"application/json\",\n        ]);\n        if (response.data && response.data.deleteCarrierCapacity) {\n            yield put(manageCapacityRemoveSuccess({ capacityId }));\n        }\n        callback(!!response.data);\n        yield put(hideLoading());\n    } catch (e) {\n        callback();\n        yield put(hideLoading());\n    }\n}","import { ActionType } from \"../../schemas/Home/Home.schema\";\nimport { put, call } from \"redux-saga/effects\";\nimport { showPullToRefresh, showLoading, hidePullToRefresh, hideLoading } from \"../../actions/Login/action\";\nimport { DomainConverter } from \"../../utils/common\";\nimport { membersListSuccess, validateUserStatus, addUserDetailsSuccess, editUserDetailsSuccess, removeUserDetailsSuccess } from \"../../actions/manage/action\";\nimport request from \"../../utils/request\";\nimport { formatPhoneNumber } from \"../../pages/Manage/ManageUser/ManageUserUtil\";\nimport { fetchUserDetailsSuccess } from \"../../actions/App/action\";\nimport { addDriverSuccess } from \"../../actions/carrierAssign/action\";\n\n/**\n * Get Manage Users List\n * @param action \n */\nexport function* getManageUsersList(action: ActionType): any {\n  const { fetchAllUsersQuery, isPullToRefresh } = action.payload as any;\n  try {\n    yield put(isPullToRefresh ? showPullToRefresh() : showLoading());\n    const fetchAllUsersValue = DomainConverter.domainToData<any>(fetchAllUsersQuery);\n    const fetchAllUsersResponse = yield call(request, [\n      \"FETCH_USER_DETAILS\",\n      \"USER_DETAILS\",\n      null,\n      \"\",\n      fetchAllUsersValue,\n      \"application/json\",\n    ]);\n    const anyList = fetchAllUsersResponse.data ? fetchAllUsersResponse.data.getMembers : [];\n    let usersList = [...anyList];\n    usersList = usersList.filter((user: any, index: number) => usersList.findIndex((user1: any) => user.userPrincipalName === user1.userPrincipalName) === index);\n    yield put(membersListSuccess({ usersList }));\n    yield put(isPullToRefresh ? hidePullToRefresh() : hideLoading());\n  } catch (e) {\n    yield put(isPullToRefresh ? hidePullToRefresh() : hideLoading());\n  }\n}\n\n\n/**\n * Validate user by passing an email\n * @param action \n */\nexport function* validateUser(action: ActionType): any {\n  const { query, callback } = action.payload as any;\n  try {\n    yield put(showLoading());\n    const fetchAllUsersValue = DomainConverter.domainToData<any>(query);\n    const response = yield call(request, [\n      \"FETCH_USER_DETAILS\",\n      \"USER_DETAILS\",\n      null,\n      \"\",\n      fetchAllUsersValue,\n      \"application/json\",\n    ]);\n    if (response && response.data) {\n      const details = (response && response.data && response.data.validateUser) || {};\n      const isUserValid = !!(response && response.data && response.data.validateUser);\n      yield put(validateUserStatus({ isUserValid, details }))\n    } else {\n      callback();\n    }\n    yield put(hideLoading());\n  } catch (e) {\n    callback();\n    yield put(hideLoading());\n  }\n}\n\n\n/**\n * Transfer user  from one Carrier to Other Carrier\n * @param action \n */\nexport function* transferUser(action: ActionType): any {\n  const { query, callback } = action.payload as any;\n  try {\n    yield put(showLoading());\n    const fetchAllUsersValue = DomainConverter.domainToData<any>(query);\n    const response = yield call(request, [\n      \"FETCH_USER_DETAILS\",\n      \"USER_DETAILS\",\n      null,\n      \"\",\n      fetchAllUsersValue,\n      \"application/json\",\n    ]);\n    if (response && response.data) {\n      const status = !!(response && response.data && response.data.transferMember && response.data.transferMember.status);\n      callback(status);\n    } else {\n      callback();\n    }\n    yield put(hideLoading());\n  } catch (e) {\n    callback();\n    yield put(hideLoading());\n  }\n}\n\n/**\n * Transfer user  from one Carrier to Other Carrier\n * @param action \n */\nexport function* confirmTransfer(action: ActionType): any {\n  const { query, callback } = action.payload as any;\n  try {\n    yield put(showLoading());\n    const queryDetails = DomainConverter.domainToData<any>(query);\n    const response = yield call(request, [\n      \"FETCH_USER_DETAILS\",\n      \"USER_DETAILS\",\n      null,\n      \"\",\n      queryDetails,\n      \"application/json\",\n    ]);\n    if (response && response.data) {\n      const status = !!(response && response.data && response.data.confirmTransfer && response.data.confirmTransfer.status);\n      callback(status);\n    } else {\n      callback();\n    }\n    yield put(hideLoading());\n  } catch (e) {\n    callback();\n    yield put(hideLoading());\n  }\n}\n\n\n/**\n * Add user details\n * @param action \n */\nexport function* addUser(action:ActionType): any {\n  const { query, callback, isCarrierAssign = false } = action.payload as any;\n  try {\n    yield put(showLoading());\n    const fetchAllUsersValue = DomainConverter.domainToData<any>(query);\n    const response = yield call(request, [\n      \"FETCH_USER_DETAILS\",\n      \"USER_DETAILS\",\n      null,\n      \"\",\n      fetchAllUsersValue,\n      \"application/json\",\n    ]);\n    if(response && response.data && response.data.addMember && response.data.addMember.status) {\n      const member = (response && response.data && response.data.addMember && response.data.addMember.member) || {};\n      yield put(addUserDetailsSuccess({member}));\n      if(isCarrierAssign) {\n        yield put(addDriverSuccess({member}));\n      }\n      callback(true);\n    } else {\n      callback();\n    }\n    yield put(hideLoading());\n  } catch (e) {\n      callback();\n      yield put(hideLoading());\n  }\n}\n\n/**\n * Update user details\n * @param action \n */\nexport function* updateUser(action:ActionType): any {\n  const { query, isProfile = false, callback } = action.payload as any;\n  try {\n    yield put(showLoading());\n    const fetchAllUsersValue = DomainConverter.domainToData<any>(query);\n    const response = yield call(request, [\n      \"FETCH_USER_DETAILS\",\n      \"USER_DETAILS\",\n      null,\n      \"\",\n      fetchAllUsersValue,\n      \"application/json\",\n    ]);\n    if(response && response.data && response.data.updateMember && response.data.updateMember.status) {\n      const member = (response && response.data && response.data.updateMember && response.data.updateMember.member) || {};\n      const roles = (member && member.userApplicationDetails && member.userApplicationDetails.reduce((roles:Array<any>, item:any) => {\n        const itemRoles = item.roles && item.roles.map((role:any) => role.roleName) || [] ;\n        return [...roles, ...itemRoles];\n    }, [])) || [];\n      if(isProfile) {\n        yield put(fetchUserDetailsSuccess({...member, defaultMobileNumber:member.mobileNumber || '', mobileNumber: member.mobileNumber ? formatPhoneNumber(member.mobileNumber): '',roles}));\n      } else {\n        yield put(editUserDetailsSuccess({member: {...member, defaultMobileNumber:member.mobileNumber || '', mobileNumber: member.mobileNumber ? formatPhoneNumber(member.mobileNumber): '',roles}}));\n      }\n      callback(true);\n    } else {\n      callback();\n    }\n    yield put(hideLoading());\n  } catch (e) {\n      callback();\n      yield put(hideLoading());\n  }\n}\n\n/**\n * Remove user details\n * @param action \n */\nexport function* removeUser(action:ActionType): any {\n  const { query, userId, callback } = action.payload as any;\n  try {\n    yield put(showLoading());\n    const value = DomainConverter.domainToData<any>(query);\n    const response = yield call(request, [\n      \"FETCH_USER_DETAILS\",\n      \"USER_DETAILS\",\n      null,\n      \"\",\n      value,\n      \"application/json\",\n    ]);\n    if(response && response.data && response.data.updateMember && response.data.updateMember.status) {\n      yield put(removeUserDetailsSuccess({userId}));\n      callback(true);\n    } else {\n      callback();\n    }\n    yield put(hideLoading());\n  } catch (e) {\n      callback();\n      yield put(hideLoading());\n  }\n}","import {all, put, takeLatest, call} from 'redux-saga/effects';\nimport {showLoading, hideLoading} from '../../actions/Login/action';\n\nimport * as constants from '../../utils/constants';\nimport { DomainConverter } from '../../utils/common';\nimport request from '../../utils/request';\nimport { ActionType } from '../../schemas/App/App.Schema';\nimport { carrierDataSuccess } from '../../actions/manage/action';\n\nexport function* loadCarrierData(action: ActionType): any {\n  const { query, isPullToRefresh, callback } = action.payload as any;\n    try {\n        yield put(showLoading(isPullToRefresh));\n        const queryValue = DomainConverter.domainToData<any>(query);\n        const response = yield call(request, [\n            \"MANAGE\",\n            \"CARRIER_PROFILE\",\n            null,\n            \"\",\n            queryValue,\n            \"application/json\",\n        ]);\n        const data = response.data && response.data.getCarrierProfile ? response.data.getCarrierProfile : [];\n        yield put(carrierDataSuccess({ data }));\n        yield put(hideLoading(isPullToRefresh));\n    } catch (e) {\n      if (callback) {\n        callback();\n      }\n      yield put(hideLoading(isPullToRefresh));\n    }\n}\n","import { all, put, call, takeLatest } from 'redux-saga/effects';\nimport { showLoading, hideLoading } from '../../actions/Login/action';\nimport * as constants from '../../utils/constants';\nimport request from '../../utils/request';\nimport { GetManageCardData } from '../../actions/manage/action';\nimport { ManageCardData } from '../../utils/mock_Data';\nimport { getManageCapaityList, addManageCapacity, removeManageCapacity, updateManageCapacity } from './ManageCapacitySaga';\nimport { getManageUsersList, validateUser, addUser, transferUser, updateUser, confirmTransfer, removeUser } from './ManageUserSaga';\nimport { loadCarrierData } from './ManageCarrierSaga';\n\nexport function* profileImg(data: any) {\n  try {\n    yield put(showLoading());\n    const body = {\n      \"image-content\": \"data.payload\"\n    }\n    const response = yield call(request, [\"MANAGE\", \"PROFILE_IMG\", null, \"Content-type\", body, null]);\n    // yield put(PROFILE_IMAGE_SET(repos));\n    yield put(hideLoading());\n  } catch (e) {\n    yield put(hideLoading());\n  }\n}\n\nexport function* ManageCardDataData() {\n  try {\n    yield put(showLoading());\n    const repos = ManageCardData;\n    yield put(GetManageCardData(repos));\n    yield put(hideLoading());\n  } catch (e) {\n    yield put(hideLoading());\n  }\n}\n\n\n\n\nexport default function* rootSaga() {\n  yield all([\n    takeLatest(constants.PROFILE_IMAGE_SET, profileImg),\n    takeLatest(constants.MANAGE_CARD_DATA, ManageCardDataData),\n    takeLatest(constants.GET_MANAGE_USERS_LIST, getManageUsersList),\n    takeLatest(constants.MANAGE_USER_VALIDATE, validateUser),\n    takeLatest(constants.MANAGE_USER_TRANSFER, transferUser),\n    takeLatest(constants.MANAGE_USER_TRANSFER_COFIRM_REQUEST, confirmTransfer),\n    takeLatest(constants.MANAGE_USER_ADD, addUser),\n    takeLatest(constants.MANAGE_USER_EDIT, updateUser),\n    takeLatest(constants.MANAGE_USER_REMOVE, removeUser),\n    takeLatest(constants.GET_MANAGE_CAPACITY_LIST, getManageCapaityList),\n    takeLatest(constants.MANAGE_CAPACITY_ADD, addManageCapacity),\n    takeLatest(constants.MANAGE_CAPACITY_REMOVE, removeManageCapacity),\n    takeLatest(constants.MANAGE_CAPACITY_EDIT, updateManageCapacity),\n    takeLatest(constants.CARRIER_MANAGE_DATA_REQUEST, loadCarrierData),\n  ]);\n}","import React, { Component, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router';\nimport ManageUserPage from '../../../pages/Manage/ManageUser/ManageUser.page';\nimport { IUserListPayload } from '../../../schemas/manage/manage.Schema';\nimport {\n  getMembersList,\n  setSelectedUser,\n  setFilter,\n  resetLoadedStatus\n} from '../../../actions/manage/action';\nimport { getUserDetails, getRefreshStatus, getNetworkStatus } from '../../../selectors/selector';\nimport { UserDetails } from '../../../models/userPforile/userProfile.modal';\nimport {\n  getManageUsers,\n  getSelectedFilter,\n  getManageUsersLoaded\n} from '../../../selectors/Manage/selector';\nimport { IONICWrapper } from '../../../utils/common';\nimport { showNetworkAlert } from '../../../actions/App/action';\nimport useInjectSaga from '../../../utils/injectSaga';\nimport useInjectReducer from '../../../utils/injectReducer';\nimport reducer from '../../../reducers/manage/reducer';\nimport saga from '../../../saga/Manage/saga';\nimport { logEvent } from '../../../utils/Analytics';\nimport { EVENT, SCREEN } from '../../../utils/constants';\n\nconst key = 'manage';\n\nexport const ManageUserContainer: React.FC<any> = (props: any) => {\n  const { userDetails, getUsersListFn, usersList, isUsersListLoaded, history } = props;\n\n  const users = usersList.map((user: any) => {\n    const roles = user.userApplicationDetails.reduce((roles: Array<any>, item: any) => {\n      const itemRoles = (item.roles && item.roles.map((role: any) => role.roleName)) || [];\n      return [...roles, ...itemRoles];\n    }, []);\n    return { ...user, roles };\n  });\n\n  const getUsersList = (isPullToRefresh = false) => {\n    const { carrierId } = userDetails;\n    const userDetailsModel = new UserDetails();\n    const fetchAllUsersQuery = userDetailsModel.getUsers(carrierId, '');\n    getUsersListFn({\n      fetchAllUsersQuery,\n      isPullToRefresh\n    });\n  };\n\n  useEffect(() => {\n    const status =\n      (history &&\n        history.location &&\n        history.location.state &&\n        history.location.state.resetLoaded) ||\n      false;\n    if (status) {\n      props.resetUsersLoaded();\n    }\n  }, [history]);\n\n  useEffect(() => {\n    if (userDetails && !isUsersListLoaded) {\n      getUsersList();\n    }\n  }, [userDetails, isUsersListLoaded]);\n\n  // Analytics implementation\n  logEvent(EVENT.SV_MANAGE_USERS, {\n    screen: SCREEN.MANAGE_USERS,\n    carrierId: props.userDetails.carrierId\n  });\n  return <ManageUserPage {...props} module=\"manage\" users={users} getUsersList={getUsersList} />;\n};\n\nconst mapStateToProps = createStructuredSelector({\n  userDetails: getUserDetails(),\n  isPullToRefresh: getRefreshStatus(),\n  usersList: getManageUsers(),\n  isNetworkAvailable: getNetworkStatus(),\n  filters: getSelectedFilter(),\n  isUsersListLoaded: getManageUsersLoaded()\n});\n\nexport const mapDispatchToProps = (dispatch: Function) => ({\n  getUsersListFn: (payload: IUserListPayload) => dispatch(getMembersList(payload)),\n  selectedUser: (payload: IUserListPayload) => dispatch(setSelectedUser(payload)),\n  showNetworkAlert: () => dispatch(showNetworkAlert()),\n  setFilter: (payload: any) => dispatch(setFilter(payload)),\n  resetUsersLoaded: () => dispatch(resetLoadedStatus())\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\n\nconst withReducer = useInjectReducer({ key, reducer });\n\nconst withSaga = useInjectSaga({ key, saga });\n\nexport default compose(withSaga, withReducer, withConnect)(withRouter(ManageUserContainer));\n","export const states = [\n  {\n    name: 'Alabama',\n    code: 'AL'\n  },\n  {\n    name: 'Alaska',\n    code: 'AK'\n  },\n  {\n    name: 'American Samoa',\n    code: 'AS'\n  },\n  {\n    name: 'Arizona',\n    code: 'AZ'\n  },\n  {\n    name: 'Arkansas',\n    code: 'AR'\n  },\n  {\n    name: 'California',\n    code: 'CA'\n  },\n  {\n    name: 'Colorado',\n    code: 'CO'\n  },\n  {\n    name: 'Connecticut',\n    code: 'CT'\n  },\n  {\n    name: 'Delaware',\n    code: 'DE'\n  },\n  {\n    name: 'District Of Columbia',\n    code: 'DC'\n  },\n  {\n    name: 'Federated States Of Micronesia',\n    code: 'FM'\n  },\n  {\n    name: 'Florida',\n    code: 'FL'\n  },\n  {\n    name: 'Georgia',\n    code: 'GA'\n  },\n  {\n    name: 'Guam',\n    code: 'GU'\n  },\n  {\n    name: 'Hawaii',\n    code: 'HI'\n  },\n  {\n    name: 'Idaho',\n    code: 'ID'\n  },\n  {\n    name: 'Illinois',\n    code: 'IL'\n  },\n  {\n    name: 'Indiana',\n    code: 'IN'\n  },\n  {\n    name: 'Iowa',\n    code: 'IA'\n  },\n  {\n    name: 'Kansas',\n    code: 'KS'\n  },\n  {\n    name: 'Kentucky',\n    code: 'KY'\n  },\n  {\n    name: 'Louisiana',\n    code: 'LA'\n  },\n  {\n    name: 'Maine',\n    code: 'ME'\n  },\n  {\n    name: 'Marshall Islands',\n    code: 'MH'\n  },\n  {\n    name: 'Maryland',\n    code: 'MD'\n  },\n  {\n    name: 'Massachusetts',\n    code: 'MA'\n  },\n  {\n    name: 'Michigan',\n    code: 'MI'\n  },\n  {\n    name: 'Minnesota',\n    code: 'MN'\n  },\n  {\n    name: 'Mississippi',\n    code: 'MS'\n  },\n  {\n    name: 'Missouri',\n    code: 'MO'\n  },\n  {\n    name: 'Montana',\n    code: 'MT'\n  },\n  {\n    name: 'Nebraska',\n    code: 'NE'\n  },\n  {\n    name: 'Nevada',\n    code: 'NV'\n  },\n  {\n    name: 'New Hampshire',\n    code: 'NH'\n  },\n  {\n    name: 'New Jersey',\n    code: 'NJ'\n  },\n  {\n    name: 'New Mexico',\n    code: 'NM'\n  },\n  {\n    name: 'New York',\n    code: 'NY'\n  },\n  {\n    name: 'North Carolina',\n    code: 'NC'\n  },\n  {\n    name: 'North Dakota',\n    code: 'ND'\n  },\n  {\n    name: 'Northern Mariana Islands',\n    code: 'MP'\n  },\n  {\n    name: 'Ohio',\n    code: 'OH'\n  },\n  {\n    name: 'Oklahoma',\n    code: 'OK'\n  },\n  {\n    name: 'Oregon',\n    code: 'OR'\n  },\n  {\n    name: 'Palau',\n    code: 'PW'\n  },\n  {\n    name: 'Pennsylvania',\n    code: 'PA'\n  },\n  {\n    name: 'Puerto Rico',\n    code: 'PR'\n  },\n  {\n    name: 'Rhode Island',\n    code: 'RI'\n  },\n  {\n    name: 'South Carolina',\n    code: 'SC'\n  },\n  {\n    name: 'South Dakota',\n    code: 'SD'\n  },\n  {\n    name: 'Tennessee',\n    code: 'TN'\n  },\n  {\n    name: 'Texas',\n    code: 'TX'\n  },\n  {\n    name: 'Utah',\n    code: 'UT'\n  },\n  {\n    name: 'Vermont',\n    code: 'VT'\n  },\n  {\n    name: 'Virgin Islands',\n    code: 'VI'\n  },\n  {\n    name: 'Virginia',\n    code: 'VA'\n  },\n  {\n    name: 'Washington',\n    code: 'WA'\n  },\n  {\n    name: 'West Virginia',\n    code: 'WV'\n  },\n  {\n    name: 'Wisconsin',\n    code: 'WI'\n  },\n  {\n    name: 'Wyoming',\n    code: 'WY'\n  }\n];\n","import { IonGrid, IonImg } from \"@ionic/react\";\nimport React from \"react\";\nimport { capitalize } from \"lodash\";\nimport * as moment from \"moment-timezone\";\nimport { TIMEZONE } from \"../../../utils/constants\";\nimport { states } from \"../../../utils/states\";\n\nexport const columns = (props:any) => [\n\t{\n\t\tname: \"Origin\",\n\t\tselector: \"\",\n\t\tsortable: true,\n\t\tminWidth: \"123px\",\n\t\tcell: (row: any) => <b>{row.originDetails}</b>\n\t  },\n\t  {\n\t\tname: \"Origin Date\",\n\t\tselector: \"originDate\",\n\t\tsortable: true,\n\t  },\n\t  {\n\t\tname: \"Origin Radius\",\n\t\tselector: \"originRadius\",\n\t\tsortable: true,\n\t  },\n\t  {\n\t\tname: \"Destination\",\n\t\tselector: \"\",\n\t\tsortable: true,\n\t\tcell: (row: any) => <b>{row.destinationDetails}</b>\n\t  },\n\t  {\n\t\tname: \"Destination Radius\",\n\t\tselector: \"destinationRadius\",\n\t\tsortable: true,\n\t  },\n\t  {\n\t\tname: \"Trailer Type\",\n\t\tselector: \"trailerType\",\n\t\tsortable: true,\n\t  },\n\t  {\n\t\tname: \"\",\n\t\tselector: \"\",\n\t\tsortable: false,\n\t\twidth: \"150px\",\n\t\tcell: (row: any) => <b>{capitalize(row.capacityType)}</b>\n\t  },\n\t  {\n\t\tname: \"\",\n\t\tselector: \"\",\n\t\tsortable: false,\n\t\twidth: \"50px\",\n\t\tcell: (row: any) => (\n\t\t\t<IonImg src=\"assets/icon/Delete_bin.svg\" class=\"assign-icon\" onClick={() => props.handleDelete(row)}/>\n\t\t)\n\t  },\n\t  {\n\t\tname: \"\",\n\t\tselector: \"\",\n\t\tsortable: false,\n\t\twidth: \"50px\",\n\t\tcell: (row: any) =>(\n\t\t\t<IonGrid class=\"datatable-badge\">\n\t\t\t\t<i></i>\n\t\t\t</IonGrid>\n\t\t)\n\t\t\t\t\n\t},\n];\n\nexport const getTime = (date: string) => {\n\treturn moment.tz(date, TIMEZONE).format('YYYY-MM-DDTHH:mm:ss.SSSZ');\n}\n  \nexport const stateItems = [\n\t{\n\t\tlabel: 'State 1',\n\t\tname: 'state1',\n\t\tvalue: ''\n\t},\n\t{\n\t\tlabel: 'State 2',\n\t\tname: 'state2',\n\t\tvalue: ''\n\t},\n\t{\n\t\tlabel: 'State 3',\n\t\tname: 'state3',\n\t\tvalue: ''\n\t}\n]\n\nexport const  setDetails = (details: any, callback: Function) => {\n\tconst { country, lat, lng, value: address } = details;\n\tconst [city, state] = address.split(', ');\n\treturn callback({\n\t\tcity,\n\t\tstate,\n\t\tcountry,\n\t\tlat,\n\t\tlng,\n\t\taddress\n\t});\n};\n\nexport const keyboardshowHandler = () => {\n\tconst headerDiv = document.getElementsByClassName(\n\t\t\"add-capacity-grid-mobile\"\n\t)[0];\n\theaderDiv.classList.add(\"scroll-up\");\n};\n\nexport const keyboardhideHandler = () => {\n\tconst headerDiv = document.getElementsByClassName(\n\t\t\"add-capacity-grid-mobile\"\n\t)[0];\n\theaderDiv.classList.remove(\"scroll-up\");\n};\n\nexport const formatStatesList = (items:any) => {\n\treturn items.map((value: any) => {\n\t\tconst state = states.find((state:any) => state.code === value);\n\t\treturn (state && state.name) || value;\n\t  });\n}","import React, { memo } from 'react';\nimport { IonCardContent, IonGrid, IonRow, IonCol, IonImg, IonBadge, IonCard } from '@ionic/react';\nimport { getMonth } from '../../../pages/Search/Recent/RecentSearchDesktop';\nimport \"./CapacityCard.scss\";\nimport { Anywhere } from '../../../utils/constants';\nimport { formatStatesList } from 'app/pages/Manage/ManageCapacity/ManagaCapacityUtil';\n\nexport const CardDetails: React.FC<any> = memo((props: any) => {\n    const { states, isDestination } = props;\n    return (\n        <IonRow class=\"stop-details-row\">\n            <IonCol class=\"stop-icon-col\">\n                <IonImg className=\"ellipse_icon\" src={`assets/icon/${props.icon}`} />\n                { props.isOrigin ? <div className=\"stops_border\"></div> : null }\n            </IonCol>\n            <IonCol class=\"stop-details-col capacity\">\n                <p className={`origin_city ${(isDestination && states && states.length > 0) || !props.radius ? 'states-active': ''}`}>\n                {isDestination && states && states.length > 0 ? states.join(', '): props.city === Anywhere  ||  \n                props.city === null ? Anywhere : `${props.city}, ${props.state}`}</p>\n                {\n                    !states || (isDestination && states && states.length === 0 && props.radius) || props.isOrigin ? (\n                        <IonBadge className=\"originRadius\">Radius : {props.radius} mi</IonBadge>\n                    ) : null\n                }\n                { props.isTruck ? (\n                    <IonBadge className='pickupDate'>\n                        {props.fromDate && props.toDate ? `${getMonth(new Date(props.fromDate).getMonth())}\n                        ${(\"0\" + new Date(props.fromDate).getDate()).slice(-2)} to ${getMonth(new Date(props.toDate).getMonth())} \n                        ${(\"0\" + new Date(props.toDate).getDate()).slice(-2)}` : null}\n                    </IonBadge>\n                ) : null }\n            </IonCol>\n        </IonRow>\n    )\n});\n\nconst CapacityCard: React.FC<any> = ({ data, handleClick, handleDelete }) => {\n\n    const details = [\n        {\n            icon: 'origin-pointer.svg',\n            ...data.origin,\n            fromDate: data.pickUpFromDate,\n            toDate: data.pickUpToDate,\n            isOrigin: true,\n            isTruck: data.capacityType.toLowerCase() === 'truck'\n        },\n        {\n            icon: 'dst-pointer.svg',\n            ...data.destination,\n            isDestination: true,\n            states: formatStatesList(data.destinationStates)\n        }\n    ];\n\n    const handleDeleteClick = (event:any) => {\n        event.stopPropagation();\n        handleDelete(data);\n    }\n\n    return (\n        <IonCard data-test=\"capacity-card\" className=\"ion-card-updated\" onClick={() => handleClick(data)}>\n            <IonCardContent className=\"card-content recent-card\">\n                <IonGrid className=\"recent_grid\">\n                    <IonRow>\n                        <IonCol className=\"card-price-col\" size=\"4\">\n                            <p className=\"capacity-type\">{data.capacityType.toLowerCase()}</p>\n                            <p className=\"trailer-type\">{data.trailerType}</p>\n                        </IonCol>\n                        <IonCol className=\"card-city-col\">\n                            <IonImg className=\"star_icon\"  data-test=\"capacity-card-delete\"  src=\"assets/icon/Delete_bin.svg\"  onClick={handleDeleteClick}/>\n                            {details.map((detail: any, index: number) => <CardDetails {...detail} key={`details_${data.capacityId}_${index}`}/>)}\n                        </IonCol>\n                        {/* <IonCol size=\"1\" className=\"star_icon_col\">\n                           \n                        </IonCol> */}\n                    </IonRow>\n                </IonGrid>\n            </IonCardContent>\n        </IonCard>\n    );\n}\n\nexport default CapacityCard;\n","import { VariableType } from 'json-to-graphql-query';\n\nconst location = {\n  city: true,\n  radius: true,\n  state: true,\n  country: true,\n  latitude: true,\n  longitude: true\n};\n\nexport class CapacityModel {\n  /**\n   * Get Capacity List\n   * @param commonCarrierId\n   * @param page\n   * @param size\n   */\n  getList(commonCarrierId: string, page: number, size: number) {\n    return {\n      query: {\n        getCarrierCapacity: {\n          __args: {\n            criteria: {\n              commonCarrierId,\n              page,\n              size\n            }\n          },\n          totalRecords: true,\n          capacity: {\n            capacityId: true,\n            capacityType: true,\n            commonCarrierId: true,\n            trailerType: true,\n            origin: location,\n            pickUpFromDate: true,\n            pickUpToDate: true,\n            preferredDays: true,\n            destination: location,\n            destinationStates: true,\n            lastUpdatedDateTime: true,\n            lastUpdatedBy: true,\n            lastUpdatedByPhoneNumber: true,\n            lastUpdatedByEmail: true\n          }\n        }\n      }\n    };\n  }\n\n  /**\n   * Add Capacity Model\n   */\n  addCapacity() {\n    return {\n      addCarrierCapacity: {\n        __variables: {\n          input: 'CapacityInput'\n        },\n        addCarrierCapacity: {\n          __args: {\n            input: new VariableType('input')\n          },\n          capacityID: true,\n          lastUpdatedByUserName: true\n        }\n      }\n    };\n  }\n\n  /**\n   *  Update Capacity Model\n   */\n  updateCapacity() {\n    return {\n      updateCarrierCapacity: {\n        __variables: {\n          input: 'CapacityInput'\n        },\n        updateCarrierCapacity: {\n          __args: {\n            input: new VariableType('input')\n          }\n        }\n      }\n    };\n  }\n\n  /**\n   *\n   * @param capacityId\n   */\n  deleteCapacity(capacityId: string) {\n    return {\n      mutation: {\n        deleteCarrierCapacity: {\n          __args: {\n            capacityId\n          }\n        }\n      }\n    };\n  }\n}\n","import React from \"react\";\nimport { IonButton, IonImg } from \"@ionic/react\";\n\nconst EmptyListComponent:React.FC<any> = (props:any) => {\n    return (\n      <div className=\"No-Recommended\">\n        <img\n          alt=\"logo\"\n          src={`assets/icon/${props.icon}.svg`}\n          width=\"79.01px\"\n          height=\"84.59px\"\n        />\n        <p className=\"recommended-Error\"  dangerouslySetInnerHTML={{__html: props.message}}>\n        </p>\n        <div className=\"SearchLoadBtn\">\n          <IonButton\n            expand=\"full\"\n            shape=\"round\"\n            onClick={props.callback}\n            size=\"large\"\n            type=\"submit\"\n            class=\"RecommendedSearch\"\n          >\n            <IonImg src=\"assets/icon/add.svg\" class=\"load-search\" />\n            {props.constantButton}\n          </IonButton>\n        </div>\n      </div>\n    );\n}\n\nexport default EmptyListComponent;\n","import { APPLE_DEVICES } from '../utils/constants';\nimport { Device } from '@ionic-enterprise/device';\nimport { isPlatform } from '@ionic/react';\n\nexport const capitalize = (str: any, lower = false) =>\n    (lower ? str.toLowerCase() : str).replace(/(?:^|\\s|[\"'([{])+\\S/g, (match: any) => match.toUpperCase());\n;\n\nexport const deviceModel = () => {\n    const model = APPLE_DEVICES.find((device) => device.identifier === Device.model);\n    return model ? model.generation : Device.model;\n}\n\nexport const manufacturer = () => Device.manufacturer;\nexport const manufacturerForAndroid = () => isPlatform('android') ? Device.manufacturer : \"\";\nexport const operationSystem = () => Device.platform;\nexport const osVersion = () => Device.version;\nexport const osAndVersion = () => `${operationSystem} ${osVersion}`;\n\n","import React, { useState, useEffect } from 'react';\nimport { IonCol, IonModal, IonRow, IonIcon, IonGrid } from '@ionic/react';\nimport './FilterOnly.scss';\n\nconst FilterOnly: React.FC<any> = (props: any) => {\n  const {\n    dropdown: { options, setFilter },\n    filter\n  } = props;\n  const selectedOptions = options.map((option: any, index: number) => ({\n    ...option,\n    selected: index === 0\n  }));\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [selectedOption, setSelectedOptions] = useState<any>(selectedOptions);\n  const [filterOption, setFilterOptions] = useState<any>([]);\n  const sortOrder = 'asc';\n  const selectItems = selectedOption.filter((option: any) => option.selected);\n  const title = selectItems.map((option: any) => `${option.name}`).join('');\n  const openModel = () => {\n    setFilterOptions(selectedOption);\n    setModalOpen(true);\n  };\n\n  const setFilterOption = (opion: any) => {\n    const options = filterOption.map((item: any) => {\n      return {\n        ...item,\n        selected: item.name === opion.name ? !item.selected : false\n      };\n    });\n    const selected = options.find((option: any) => option.selected);\n    if (selected) {\n      setFilterOptions(options);\n    }\n  };\n\n  const sortData = () => {\n    setFilter({\n      filter: {\n        selected: filterOption,\n        direction: sortOrder\n      }\n    });\n  };\n\n  const confirmSelection = () => {\n    sortData();\n    setSelectedOptions(filterOption);\n    setModalOpen(false);\n  };\n\n  useEffect(() => {\n    const selectedOptions =\n      filter && filter.length > 0\n        ? filter\n        : options.map((option: any, index: number) => ({ ...option, selected: index === 0 }));\n    setSelectedOptions(selectedOptions);\n  }, [filter]);\n\n  return (\n    <IonRow class=\"list-items-header\">\n      <IonCol class=\"list-item-button\">\n      <IonGrid class=\"filter-display-text\"> {title} <IonIcon src=\"assets/icon/filter.svg\" onClick={() => openModel()} /></IonGrid>\n        <IonModal\n          show-backdrop\n          backdrop-dismiss={false}\n          isOpen={isModalOpen}\n          cssClass=\"dropdown-modal\"\n          onDidDismiss={() => {\n            setModalOpen(false);\n          }}>\n          <div className=\"search_options\">\n            <IonRow class=\"dropdown-row dropdown-heading\">\n              <IonCol>\n                <p className=\"sortBy_text\">Filter By</p>\n              </IonCol>\n            </IonRow>\n            {filterOption.map((option: any, k: any) => (\n              <IonRow\n                className=\"dropdown-row filter-option\"\n                key={k}\n                onClick={() => setFilterOption(option)}>\n                <IonCol className={option.selected ? 'checked' : ''}>\n                  {option.name} <i className=\"check\"></i>\n                </IonCol>\n              </IonRow>\n            ))}\n            <IonRow class=\"dropdown-handler\">\n              <IonCol size=\"1\" />\n              <IonCol size=\"5\" className=\"dropdown_cancel\" onClick={() => setModalOpen(false)}>\n                <span>Cancel</span>\n              </IonCol>\n              <IonCol size=\"5\" className=\"dropdown_cancel dropdown_ok\" onClick={confirmSelection}>\n                <span>OK</span>\n              </IonCol>\n              <IonCol size=\"1\" />\n            </IonRow>\n          </div>\n        </IonModal>\n      </IonCol>\n    </IonRow>\n  );\n};\n\nexport default FilterOnly;\n","import React from 'react';\nimport DataTable from 'react-data-table-component';\nimport '../../../../theme/variables.scss';\nimport '../../../../theme/responsive-styles.scss';\n\nconst customSort = (rows: any, field: any, direction: any) => {\n  let sortedList = [];\n  if (direction === 'asc') {\n    sortedList = [...rows].sort((a: any, b: any) => (a[field] > b[field] ? 1 : -1));\n  } else {\n    sortedList = [...rows].sort((a: any, b: any) => (a[field] > b[field] ? -1 : 1));\n  }\n  return sortedList;\n};\ninterface datatableProps {\n  columns: any;\n  data: any;\n  redirect?: any;\n  showEndofList: boolean;\n  titleText: any;\n  showHeader: boolean;\n  headerText?: string;\n  pagination: boolean;\n  onButtonClick?: any;\n}\n\nconst DataTableComponent: React.FC<datatableProps> = ({\n  columns,\n  data,\n  redirect,\n  showEndofList,\n  showHeader,\n  titleText,\n  headerText,\n  pagination,\n  onButtonClick\n}) => {\n  const onRowClick = (row: any) => {\n    redirect && redirect(row);\n  };\n  return (\n    <>\n      {data ? (\n        <>\n          {showHeader ? null : <div className=\"searchResults_div\">{headerText}</div>}\n          <DataTable\n            title={titleText}\n            columns={columns}\n            data={data && data.reverse()}\n            highlightOnHover\n            sortFunction={customSort}\n            onRowClicked={onRowClick}\n            pagination={pagination}\n            // customStyles={customStyle}\n          />\n          {showEndofList ? null : <div className=\"end-of-list\">End of list</div>}\n        </>\n      ) : null}\n    </>\n  );\n};\nexport default DataTableComponent;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  IonContent,\n  IonPage,\n  IonGrid,\n  isPlatform,\n  IonButton,\n  IonIcon\n} from \"@ionic/react\";\nimport AppHeader from \"../../../components/app/Bars/Bar-header\";\nimport { CapacityCard } from \"../../../components/app/Manage\";\nimport PullToRefresh from \"../../../components/PullToRefresh/PullToRefresh\";\nimport { CapacityModel } from \"../../../models/manage/capacity.model\";\nimport { ToastMessage } from \"../../../utils/ToastMessage\";\nimport { EmptyListComponent } from \"../../../components/EmptyListComponent\";\nimport {\n  NO_TRUCKS_MESSAGE,\n  EVENT,\n  SCREEN,\n  Anywhere, CAPACITY_REMOVED\n} from \"../../../utils/constants\";\nimport { capitalize } from \"../../../utils/helper\";\nimport { FilterOnly } from \"../../../components/core/FilterOnly\";\nimport { ICapacity } from \"../../../schemas/manage/manage.Schema\";\nimport { getApplicationInfo, logEvent } from \"../../../utils/Analytics\";\nimport DataTableComponent from \"../../../components/shared/dataTableComponent/data-tabel.page\";\nimport { columns } from \"../../../pages/Manage/ManageCapacity/ManagaCapacityUtil\";\nimport moment from \"moment\";\nimport { R2Configuration } from \"../../../utils/common\";\nimport { states } from \"app/utils/states\";\n\nconst ManageCapacity: React.FC<any> = (props: any) => {\n  const {\n    isPullToRefresh,\n    getCapacityList,\n    capacityList,\n    userDetails,\n    isNetWorkAvailable,\n    showNetworkAlert,\n    history,\n    removeCapacityAction,\n    setCapacityFilter: setFilter,\n    filter,\n    onPageScroll\n  } = props;\n  const [capacityListItems, setCapacityListItems] = useState(props.data);\n  const [capacityListDesktop, setCapacityListDesktop] = useState([]);\n  const capacityModel = new CapacityModel();\n\n  const routePath = `/app/${props.module}/ManageMyCapacity`;\n\n  useEffect(() => {\n    // Analytics implementation\n    logEvent(EVENT.SV_MANAGE_CAPACITY, {\n      screen: SCREEN.MANAGE_CAPACITY,\n      carrierId: userDetails.carrierId\n    });\n  }, []);\n\n  const options = [\n    { value: \"\", name: \"All Capacity\" },\n    { value: \"TRUCK\", name: \"Trucks\" },\n    { value: \"LANE\", name: \"Lanes\" }\n  ];\n\n  const dropdown = {\n    options,\n    data: capacityListItems,\n    setFilter\n  };\n\n  const addPage = () => {\n    if (R2Configuration.details.getR2FeatureEnable()) {\n      //KEYS.RELEASE === ENV.UAT || KEYS.RELEASE === ENV.PROD) {\n      ToastMessage.show();\n      return;\n    }\n    if (!isNetWorkAvailable) {\n      showNetworkAlert();\n      return;\n    }\n    history.push(`${routePath}/Add`);\n  };\n\n  const filterCapacityItems = () => {\n    const filterValue = filter.selected\n      .filter((item: any) => item.selected)\n      .map((item: any) => item.value)\n      .join(\"\");\n    if (!filterValue) {\n      return capacityList;\n    }\n    return capacityList.filter(\n      (item: any) => item.capacityType === filterValue\n    );\n  };\n\n  useEffect(() => {\n    const capacityList = filterCapacityItems();\n    const desktopList = capacityList.map((item: any) => ({\n      ...item,\n      originDetails: item.origin\n        ? `${item.origin.city}, ${item.origin.state}`\n        : \"\",\n      originDate:\n        item.capacityType === \"TRUCK\"\n          ? `${moment(item.pickUpFromDate).format(\"MMMM DD\")} to ${moment(\n              item.pickUpToDate\n            ).format(\"MMMM DD\")}`\n          : \"\",\n      originRadius: item.origin ? item.origin.radius || \"\" : \"\",\n      destinationDetails:\n        item && item.destinationStates && item.destinationStates > 0\n          ? item.destinationStates.join(\", \")\n          : item.destination.city === null\n          ? Anywhere\n          : `${item.destination.city}, ${item.destination.state && item.destination.state.toUpperCase()}`,\n      destinationRadius: !(\n        item &&\n        item.destinationStates &&\n        item.destinationStates > 0\n      )\n        ? item.destination.radius\n        : \"\"\n    }));\n    setCapacityListItems(capacityList);\n    setCapacityListDesktop(desktopList);\n  }, [capacityList, filter]);\n\n  const undoCapacity = (capacity: ICapacity) => {\n    const destination = capacity.destination\n      ? {\n          destinationCity: capacity.destination.city,\n          destinationState: capacity.destination.state,\n          destinationCountry: capacity.destination.country,\n          destinationLatitude: capacity.destination.latitude,\n          destinationLongitude: capacity.destination.longitude,\n          destinationRadius: capacity.destination.radius\n        }\n      : {};\n\n    const origin = capacity.origin\n      ? {\n          originCity: capacity.origin.city,\n          originState: capacity.origin.state,\n          originRadius: capacity.origin.radius,\n          originCountry: capacity.origin.country,\n          originLongitude: capacity.origin.latitude,\n          originLatitude: capacity.origin.longitude\n        }\n      : {};\n    const input = {\n      capacityId: null,\n      userId: capacity.lastUpdatedBy,\n      userEmail: capacity.lastUpdatedByEmail,\n      userPhone: capacity.lastUpdatedByPhoneNumber,\n      capacityType: capacity.capacityType,\n      commonCarrierId: capacity.commonCarrierId,\n      trailerType: capacity.trailerType,\n      ...origin,\n      ...destination,\n      preferredDays: capacity.preferredDays,\n      pickUpToDate: capacity.pickUpToDate,\n      pickUpFromDate: capacity.pickUpFromDate,\n      destinationStates: capacity.destinationStates\n    };\n    const query = capacityModel.addCapacity();\n    props.addCapacityItem({ params: { query, input }, callback: () => {} });\n  };\n\n  const handleDelete = (capacity: ICapacity) => {\n    const { capacityId, capacityType } = capacity;\n    const type: any = capacityType;\n    if (!isNetWorkAvailable) {\n      showNetworkAlert();\n      return;\n    }\n    const query = capacityModel.deleteCapacity(capacityId);\n    const callback = () => {\n      ToastMessage.open({\n        showUndo: true,\n        message: CAPACITY_REMOVED.replace(\"{{CAPACITY}}\", capitalize(type, true)),\n        callback: () => {\n          undoCapacity(capacity);\n        }\n      });\n    };\n    removeCapacityAction({ query, capacityId, callback });\n  };\n\n  const handleClick = (capacityItem: any) => {\n    if (!isNetWorkAvailable) {\n      showNetworkAlert();\n      return;\n    }\n    props.setSelectedCapacityAction({ capacityItem });\n    history.push(`${routePath}/View`);\n  };\n\n  return isPlatform(\"desktop\") ? (\n    <IonContent\n      className=\"manage-capacity-desktop\"\n      onIonScrollEnd={onPageScroll}\n    >\n      <DataTableComponent\n        columns={columns({ handleDelete })}\n        data={capacityListDesktop}\n        showEndofList={true}\n        showHeader={false}\n        titleText={<FilterOnly dropdown={dropdown} filter={filter.selected} />}\n        pagination={true}\n        redirect={handleClick}\n      />\n      <div className=\"manage-capacity-buttons\">\n        <IonButton\n          class=\"load-btn\"\n          onClick={() => history.push(\"/app/manage/ManageMyCapacity/Add\")}\n        >\n          <IonIcon src=\"assets/icon/Add_Black.svg\"></IonIcon>Add\n        </IonButton>\n      </div>\n    </IonContent>\n  ) : (\n    <IonPage className=\"desktop-page\" data-test=\"IonPage-Manage\">\n      <AppHeader\n        title=\"Manage My Capacity\"\n        backUrl={\"/app/\" + props.module}\n        History={props.history}\n        addPage={addPage}\n      />\n      <IonContent\n        className=\"ion-padding recent_container\"\n        onIonScrollEnd={onPageScroll}\n      >\n        <PullToRefresh\n          status={isPullToRefresh}\n          onPullToRefresh={getCapacityList}\n        />\n        <FilterOnly dropdown={dropdown} filter={filter.selected} />\n        <IonGrid class=\"recent-list\">\n          {capacityListItems.length > 0 ? (\n            <>\n              {capacityListItems.map((listItem: any, index: number) => (\n                <CapacityCard\n                  data={listItem}\n                  key={`lane${index}`}\n                  handleClick={handleClick}\n                  handleDelete={handleDelete}\n                />\n              ))}\n              <div className=\"end-of-list\">End of list</div>\n            </>\n          ) : (\n            <EmptyListComponent\n              icon=\"no-search-icon\"\n              message={NO_TRUCKS_MESSAGE}\n              callback={addPage}\n              constantButton={\"Add\"}\n            />\n          )}\n        </IonGrid>\n      </IonContent>\n    </IonPage>\n  );\n};\nexport default ManageCapacity;\n","import React from 'react';\nimport { IonPage, IonContent, IonList, IonItem, IonLabel, IonInput, IonGrid, IonRow, IonCol, IonButton } from '@ionic/react';\nimport AppHeader from '../../../components/app/Bars/Bar-header';\n\nconst ManageCapacityViewDesktop = (props:any) => {\n    const { item, listItems, history: { push } } = props;\n    return (\n        <IonPage className=\"desktop-page my-load-desktop-page manage-card-content manage-capacity-view-desktop\">\n            <AppHeader title={'Manage'} imageCapature={props} />\n            <IonContent className=\"custom-padding\">\n                <h1>{item.capacityId}</h1>\n                {\n                    listItems.map((item:any, index: number) => (\n                        <div className=\"manage-capacity-wrapper\" key={`main_${item.title}_${index}`}>\n                            { item.title ? (\n                                <h3 className={item.value?'underline': ''}>\n                                    {item.title}\n                                    <span>{item.value}</span>\n                                </h3>\n                            ): null}\n                            <IonList className=\"manage-capcity-list\">\n                                {\n                                    item.childrens.map((children:any) => (\n                                        <IonItem key={children.title} data-test={children.slug} className=\"manage-capacity-item\">\n                                            <IonLabel position=\"floating\" mode=\"ios\">{children.title}</IonLabel>\n                                            <IonInput\n                                                value={children.value}\n                                                readonly\n                                                type=\"text\"\n                                                className=\"manage-input-field\"\n                                                onClick={children.callback ? children.callback: ()=> {}}\n                                            ></IonInput>\n                                        </IonItem>\n                                    ))\n                                }\n                            </IonList>\n                        </div>\n                    ))\n                }\n                <div className=\"manage-capacity-buttons\">\n                    <IonButton class=\"load-btn\" data-test=\"back-btn\" onClick={() => push('/app/manage')}>\n                        Back\n                    </IonButton>\n                    <IonButton class=\"load-btn\"  data-test=\"edit-btn\"  onClick={() => push('/app/manage/ManageMyCapacity/Edit')}>\n                        Edit\n                    </IonButton>\n                </div>\n            </IonContent>\n        </IonPage>\n    )\n}\n\nexport default ManageCapacityViewDesktop;","import React, { useEffect } from 'react';\nimport { IonContent, IonPage, IonList, IonItem, IonLabel, IonInput, isPlatform } from '@ionic/react';\nimport AppHeader from '../../../components/app/Bars/Bar-header';\nimport { capitalize } from '../../../utils/helper';\nimport moment from 'moment';\nimport { CallNumber } from '@ionic-native/call-number';\nimport { logEvent } from '../../../utils/Analytics';\nimport { EVENT, SCREEN, Anywhere } from '../../../utils/constants';\nimport ManageCapacityViewDesktop from './ManageCapacityViewDesktop.page';\nimport { formatStatesList } from './ManagaCapacityUtil';\n\nexport const  ManageCapacityViewPage:React.FC<any> = (props:any) => {\n    const { \n        selectedCapacity: item,\n        isNetworkAvailable,\n        showNetworkAlert,\n        history,\n        userDetails\n    } = props;\n\n    useEffect(() => {\n        logEvent(EVENT.SV_MANAGE_CAPACITY_ADDEDIT,\n            {\n                screen: SCREEN.MANAGE_CAPACITY_ADDEDIT,\n                carrierId: userDetails.carrierId\n            });\n    }, []);\n\n    const editData = () => {\n\t\tif(isNetworkAvailable) {\n            history.push(`/app/${props.module}/Edit`);\n\t\t} else {\n\t\t\tshowNetworkAlert();\n\t\t}\n    }\n\n    const pickupDateType = item.capacityType === 'TRUCK' ? [{\n        title: 'Pick-up Start Date',\n        slug: 'pickup-start-date',\n        value: item &&  moment(item.pickUpFromDate).format('MMMM DD, YYYY')\n    },\n    {\n        title: 'Pick-up End Date',\n        slug: 'pickup-end-date',\n        value: item && moment(item.pickUpToDate).format('MMMM DD, YYYY')\n    }\n    ] : [{\n        title: 'Days of Week',\n        slug: 'days-of-week',\n        value: (item && item.preferredDays && item.preferredDays.map((value:string) => capitalize(value.substr(0,3), true)).join(', ')) || ''\n    }];\n\n    const radius = !item.destinationStates || (item.destinationStates && item.destinationStates.length === 0 && item.destination.radius) ? [{\n        title: 'Destination Radius',\n        slug: 'destination-radius',\n        value:  item.destination.radius ? `${item.destination.radius}mi` : 'NA'\n    }]: [];\n    \n    const listItems = [\n        {\n            title: 'Last Updated',\n            value: moment(item.lastUpdatedDateTime).format('MMM DD, YYYY h:mm a'),\n            childrens: [\n                {\n                    title: 'Name',\n                    slug: 'last-update-name',\n                    value: item && item.lastUpdatedBy || ''\n                },\n                {\n                    title: 'Email address',\n                    slug: 'last-update-email',\n                    value: item && item.lastUpdatedByEmail || '',\n                    callback: () => {\n                        window.location.href = `mailto:${item.lastUpdatedByEmail}`\n                    }\n                },\n                {\n                    title: 'Phone',\n                    slug: 'last-update-phone',\n                    value: item && item.lastUpdatedByPhoneNumber  || '',\n                    callback: () => {\n                        CallNumber.callNumber(item.lastUpdatedByPhoneNumber, true)\n                        .then((res) => {})\n                        .catch((err) => {});\n                    }\n                }\n            ]\n        },\n        {\n            title: '',\n            value: '',\n            childrens: [\n                {\n                    title: 'Capacity Type',\n                    slug: 'capacity-type',\n                    value: item && capitalize(item.capacityType, true)\n                },\n                {\n                    title: 'Trailer Type',\n                    slug: 'trailer-type',\n                    value: item && item.trailerType\n                }\n            ]\n        },\n        {\n            title: 'Pick-up',\n            value: '',\n            childrens: [\n                {\n                    title: 'Origin',\n                    slug: 'origin-name',\n                    value: item && `${item.origin.city}${item.origin.state ? ', ' + item.origin.state : ''}`\n                },\n                {\n                    title: 'Origin Radius',\n                    slug: 'origin-radius',\n                    value: item && `${item.origin.radius}mi`\n                },\n                ...pickupDateType\n            ]\n        },\n        {\n            title: 'Delivery',\n            value: '',\n            childrens: [\n                {\n                    title: item &&  item.destinationStates && item.destinationStates.length ? 'States': 'Destination',\n                    slug:  item && item.destinationStates && item.destinationStates.length ? 'destination-states': 'destination-details',\n                    value: item && item.destinationStates && item.destinationStates.length > 0 ? formatStatesList(item.destinationStates).join(', ') :  item.destination.city !== null ? `${item.destination.city}${item.destination.state ? \", \" + item.destination.state: ''}`: Anywhere\n                },\n                ...radius\n            ]\n        }\n    ]\n\n    return isPlatform('desktop') ? (\n            <ManageCapacityViewDesktop {...props} item={item} listItems={listItems}/>\n        ) : (\n            <IonPage className=\"desktop-page\">\n                <AppHeader title={item.capacityId} backUrl={\"/app/\" + props.module} History = {props.history} editData={editData} />\n                <IonContent className=\"custom-padding\">\n                    {\n                        listItems.map((item:any, index: number) => (\n                            <div className=\"manage-capacity-wrapper\" key={`main_${item.title}_${index}`}>\n                                { item.title ? (\n                                    <h3 className={item.value?'underline': ''}>\n                                        {item.title}\n                                        <span>{item.value}</span>\n                                    </h3>\n                                ): null}\n                                <IonList className=\"manage-capcity-list\">\n                                    {\n                                        item.childrens.map((children:any) => (\n                                            <IonItem key={children.title} data-test={children.slug} className=\"manage-capacity-item\">\n                                                <IonLabel position=\"floating\" mode=\"ios\">{children.title}</IonLabel>\n                                                <IonInput\n                                                    value={children.value}\n                                                    readonly\n                                                    type=\"text\"\n                                                    className=\"manage-input-field\"\n                                                    onClick={children.callback ? children.callback: ()=> {}}\n                                                ></IonInput>\n                                            </IonItem>\n                                        ))\n                                    }\n                                </IonList>\n                            </div>\n                        ))\n                    }\n                    \n                </IonContent>\n            </IonPage>\n        )\n}\nexport default ManageCapacityViewPage;","import React, { useState, useEffect } from \"react\";\nimport { IonGrid, IonRow, IonCol, IonLabel, IonDatetime } from \"@ionic/react\";\nimport { PickUpdateError } from \"../../../utils/constants\";\nimport { getYearValues } from \"../../../utils/formatData\";\n\nconst PickUpTimeComponent: React.FC<any> = (props: any) => {\n  const { fromDate, toDate, pickUpLocalTime, handleError } = props;\n  const [showError, setShowError] = useState(false);\n  const handleChange = (event: any) => {\n    props.handleChange(event);\n  };\n  const consecYears = getYearValues() || new Date().getFullYear();\n  useEffect(() => {\n    if (fromDate && toDate) {\n      const value = toDate.split(\"T\")[0] < fromDate.split(\"T\")[0];\n      setShowError(value);\n      handleError(value);\n    }\n  }, [fromDate, toDate]);\n\n  useEffect(() => {\n    setShowError(props.error);\n  }, [props.error]);\n\n  return (\n    <>\n      <IonGrid class=\"time-window\">\n        <IonRow class=\"pickuptime-title\">Pick-up Date</IonRow>\n        <IonRow>\n          <IonCol>\n            <IonLabel class=\"pickup-date-title\">From Date</IonLabel>\n            <IonDatetime\n              displayFormat=\"MMM DD, YYYY\"\n              min={pickUpLocalTime && pickUpLocalTime.split(\"T\")[0]}\n              value={fromDate}\n              yearValues={consecYears}\n              onIonChange={(event) => handleChange(event)}\n              mode=\"ios\"\n              name=\"fromDate\"\n            ></IonDatetime>\n          </IonCol>\n          <IonCol>\n            <IonGrid class=\"to-date-grid\">\n              <IonLabel class=\"pickup-date-title\">To Date</IonLabel>\n              <IonDatetime\n                displayFormat=\"MMM DD, YYYY\"\n                min={pickUpLocalTime && pickUpLocalTime.split(\"T\")[0]}\n                value={toDate}\n                yearValues={consecYears}\n                onIonChange={(event) => handleChange(event)}\n                mode=\"ios\"\n                name=\"toDate\"\n              ></IonDatetime>\n            </IonGrid>\n          </IonCol>\n        </IonRow>\n      </IonGrid>\n      {showError ? (\n        <IonGrid className=\"pickupdate-error\">\n          <p>{PickUpdateError}</p>\n        </IonGrid>\n      ) : null}\n    </>\n  );\n};\n\nexport default React.memo(PickUpTimeComponent);\n","import React, { useState, useEffect } from 'react';\nimport { IonRow, IonCol, IonLabel, IonText } from '@ionic/react';\nimport { Days, PICKUP_DAYS_ERROR } from '../../../utils/constants';\nimport './PickupDays.scss';\n\nexport interface IDay {\n  label: string;\n  value: string;\n  selected: boolean;\n}\n\nexport const PickupDaysComponent: React.FC<any> = (props: any) => {\n  const list: Array<IDay> = Days.map((day: any) => {\n    return {\n      label: day.label.toLowerCase(),\n      value: day.value,\n      selected: false\n    };\n  });\n\n  const [daysList, setDaysList] = useState(list);\n  const [allDaysSelected, setAllDaysSelected] = useState(false);\n  const [showError, setError] = useState(false);\n  useEffect(() => {\n    if (props.preferredDays) {\n      const daysList = list.map(day => {\n        return {\n          ...day,\n          selected: props.preferredDays.indexOf(day.value) !== -1\n        };\n      });\n      setDaysList(daysList);\n      setAllDaysSelected(props.preferredDays.length === 7);\n    }\n  }, [props.preferredDays]);\n\n  useEffect(() => {\n    setError(props.showError);\n  }, [props.showError]);\n  const handleSubmit = (list: Array<IDay>) => {\n    const selectedDays = list.filter((day: IDay) => day.selected).map((day: IDay) => day.value);\n    const isAllSelected = selectedDays.length === 7;\n    setAllDaysSelected(isAllSelected);\n    setDaysList(list);\n    props.handleError(false);\n    props.setPickupDays(selectedDays);\n  };\n\n  const handleClick = (selectedDay: IDay) => {\n    const list = daysList.map((day: IDay) => {\n      return {\n        ...day,\n        selected: day.label === selectedDay.label ? selectedDay.selected : day.selected\n      };\n    });\n    handleSubmit(list);\n  };\n\n  const handleAllClick = () => {\n    const list = daysList.map((day: IDay) => ({\n      ...day,\n      selected: !allDaysSelected\n    }));\n    handleSubmit(list);\n  };\n  return (\n    <>\n      <IonRow className=\"pickupdays-title-wrapper\">\n        <IonLabel class=\"pickupdays-title\">Days of Week</IonLabel>\n      </IonRow>\n      <IonRow className=\"pickupday-wrapper\">\n        {daysList.map(day => (\n          <IonCol\n            size=\"3\"\n            className={`pickupday ${day.selected ? 'selected' : ''}`}\n            key={day.label}\n            onClick={() => handleClick({ ...day, selected: !day.selected })}>\n            {day.label}\n          </IonCol>\n        ))}\n        <IonCol\n          className={`pickupday ${allDaysSelected ? 'selected' : ''}`}\n          onClick={handleAllClick} data-test=\"handle-click\">\n          All\n        </IonCol>\n      </IonRow>\n      {showError ? (\n        <IonRow className=\"pickupdays-error-wrapper\">\n          <IonText class=\"pickupdays-error\">{PICKUP_DAYS_ERROR}</IonText>\n        </IonRow>\n      ) : null}\n    </>\n  );\n};\n\nexport default PickupDaysComponent;\n","import React, { useState, useEffect } from 'react';\nimport { IonGrid, IonRow, IonLabel, IonCol, IonIcon } from '@ionic/react';\nimport \"./SelectComponent.scss\";\n\nexport interface IOption {\n  name: string;\n  code: string;\n}\n\nconst SelectComponent: React.FC<any> = (props: any) => {\n  const { options, name, placeholder, label, value } = props;\n  const [showOptions, setShowOptions] = useState(false);\n  const [selectedOption, setSelectedOption] = useState<IOption>({} as IOption);\n    \n  useEffect(() => {\n    if(value) {\n      const item = options.find((option: any) => option.code === value);\n      if(item) {\n        setSelectedOption(item);\n      }\n    }\n  }, [value])\n  const handleSelectChange = (option: IOption) => {\n    setSelectedOption(option);\n    setShowOptions(false);\n    props.handleChange({name, value: option});\n  }\n  return (\n    <IonGrid class=\"select-grid\">\n      <IonRow class=\"select-label-row\">\n        <IonLabel class=\"select-label\">{label}</IonLabel>\n      </IonRow>\n      <IonRow\n        data-test=\"show-options\"\n        class=\"select-type\"\n        onClick={() => setShowOptions(!showOptions)}\n      >\n        <IonCol class=\"select-name\">\n          {selectedOption && selectedOption.name ? selectedOption.name: placeholder}\n        </IonCol>\n        <IonCol class=\"dropDown-icon\">\n          <IonIcon src=\"/assets/icon/grid-down-arrow.svg\" />\n        </IonCol>\n      </IonRow>\n      {options && showOptions ? (\n        <IonGrid className=\"select-suggetion-grid\">\n          {options.map((option: IOption, index: number) => (\n            <IonRow\n              data-test=\"select-change\"\n              className=\"select-change\"\n              key={index}\n              onClick={() => {\n                handleSelectChange(option);\n              }}\n            >\n              <IonCol className=\"select-suggestion-item\">\n                {option.name}\n              </IonCol>\n            </IonRow>\n          ))}\n        </IonGrid>\n      ) : null}\n    </IonGrid>\n  )\n};\n\nexport default SelectComponent;\n","import React from 'react';\nimport { IonPage, IonContent, IonList, IonItem, IonLabel, IonInput, IonGrid, IonRow, IonCol, IonButton, IonFooter, IonCard, IonIcon, IonCardHeader, IonCardContent, IonText, IonToggle } from '@ionic/react';\nimport AppHeader from '../../../components/app/Bars/Bar-header';\nimport { NewDropDown } from '../../../components/shared/NewUIComponents/DropDown';\nimport PickupData from '../../../components/app/Search/PickupData';\nimport { Anywhere } from '../../../utils/constants';\nimport { PickUpTimeComponent } from '../../../components/shared/pickupTimeComponent';\nimport { PickupDaysComponent } from '../../../components/shared/PickupDays';\nimport { SelectComponent } from '../../../components/shared/SelectComponent';\nimport { states } from '../../../utils/states';\nimport DeliverypData from '../../../components/app/Search/DeliverypData';\n\nconst ManageCapacityFormDesktop = (props:any) => {\n    return (\n        <IonPage className=\"desktop-page my-load-desktop-page manage-card-content manage-capacity-view-desktop\">\n            <AppHeader title={'Manage'} imageCapature={props} />\n            <IonContent className=\"ion-padding custom-padding add-capacity-form-content\">\n                <h1>{props.title || 'Add Lane/Truck'}</h1>\n                <IonGrid class=\"capacity-grid\">\n                    <IonRow>\n                        <IonCol size=\"6\">\n                            <IonRow class=\"capacity-label-row\">\n                                <IonLabel class=\"capacity-label\">Capacity Type</IonLabel>\n                            </IonRow>\n                            <IonRow\n                                class=\"capacity-type\"\n                                data-test=\"capacity-type\"\n                                onClick={() => props.setShowCapacityOptions(!props.showCapacityOptions)}\n                            >\n                                <IonCol class=\"capacity-name\">{props.capacityType.name}</IonCol>\n                                {\n                                    !props.capacityId ? (\n                                        <IonCol class=\"dropDown-icon\">\n                                            <IonIcon src=\"/assets/icon/grid-down-arrow.svg\"></IonIcon>\n                                        </IonCol>\n                                    ) : null\n                                }\n                            </IonRow>\n                            <IonRow class=\"capacity-desc\">{props.capacityType.desc}</IonRow>\n\n                            {!props.capacityId && props.capacityOptions && props.showCapacityOptions ? (\n                            <IonGrid class=\"suggetion-grid\"  data-test=\"capacity-type-list\">\n                                {props.capacityOptions.map((capacityType: any, index: number) => (\n                                <IonRow\n                                    key={index}\n                                    data-test=\"capacity-type-list-item\"\n                                    onClick={() => {\n                                        props.setCapacityType(capacityType);\n                                        props.setStatesShow(false);\n                                        props.setShowCapacityOptions(false);\n                                    }}\n                                >\n                                    {capacityType.name}\n                                </IonRow>\n                                ))}\n                            </IonGrid>\n                            ) : null}\n                        </IonCol>\n                    </IonRow>\n                </IonGrid>\n                <IonGrid class=\"capacity-grid-form\">\n                    <IonRow>\n                        <IonCol size=\"6\">\n                            <IonRow class=\"pickup-row\">\n                                <IonCol>\n                                    Pick-up</IonCol>\n                            </IonRow>\n                            <IonRow class=\"pickup-content\">\n                                <IonCol>\n                                    <PickupData\n                                        origin={props.originDetails.address}\n                                        originError={props.originError}\n                                        originRadius={props.originRadius}\n                                        handleChange={props.handleChange}\n                                        rangeDisabled={true}\n                                        isDestination={false}\n                                        defaultValue={Anywhere}\n                                        useHandler={false}\n                                        setErrorValue={props.setErrorValue}\n                                        updateLocalCurrentTime={props.updateLocalCurrentTime}\n                                        showDate={false}\n                                        onFocus={() => {\n                                            if(!props.isOriginEdit) {\n                                                props.setOriginEdit(true);\n                                            }\n                                        }}\n                                    />\n                                    {\n                                        props.capacityType.name === 'Truck' ? (\n                                        <PickUpTimeComponent\n                                            pickUpLocalTime={props.pickUpLocalTime}\n                                            handleChange={props.handleChange}\n                                            fromDate={props.pickupFromDate}\n                                            toDate={props.pickupToDate}\n                                            error={props.pickupTimeError}\n                                            handleError={props.setPickuptimeError}\n                                        />\n                                        ) : (\n                                            <PickupDaysComponent\n                                            setPickupDays={props.setPreferredDays}\n                                            showError={props.pickupDaysError}\n                                            handleError={props.setPickupDaysError}\n                                            />\n                                        )\n                                    }\n                                </IonCol>\n                            </IonRow>\n                        </IonCol>\n                        <IonCol size=\"6\">\n                            <IonRow class=\"pickup-row\">\n                                <IonCol size=\"6\">\n                                    Delivery\n                                </IonCol>\n                                <IonCol size=\"6\">\n                                    <IonCard class=\"trailer-type-card\">\n                                        <NewDropDown\n                                            labelName=\"Trailer type\"\n                                            TrailerType={props.trailerType}\n                                            handleChange={props.handleChange}\n                                        />\n                                    </IonCard>\n                                </IonCol>\n                            </IonRow>\n                            <IonRow class=\"pickup-content\">\n                                <IonCol>\n                                    { \n                                        props.capacityType.name === 'Truck' ? (\n                                            <IonRow class=\"states-wrapper\">\n                                                <IonCol size=\"6\" class=\"state-destination-label\">\n                                                    { props.isStatesShow ? <span>Destination</span>: null }\n                                                </IonCol>\n                                                <IonCol size=\"6\" class=\"state-toggle-wrapper\">\n                                                    <IonText class=\"state-toggle-label\">Select States</IonText>\n                                                    <IonToggle mode=\"ios\" class=\"state-toggle\" checked={props.isStatesShow} name=\"stateToggle\" onIonChange={props.handleChange}></IonToggle>\n                                                </IonCol>\n                                            </IonRow>\n                                        ): null\n                                    }\n                                    {\n                                        props.isStatesShow && props.capacityType.name === 'Truck'?\n                                        (\n                                        <div data-test=\"state-list-wrapper\" className={`states-list-wrapper ${props.stateError ? 'error': ''}`}>\n                                        {\n                                            props.statesList && props.statesList.map((state:any, index:number) => (\n                                                <SelectComponent key={`state${index}`} options={states} placeholder=\"Choose the state\" label={state.label} name={state.name} handleChange={props.handleStateChange} />\n                                                )\n                                            )\n                                        }\n                                        </div>\n                                        ) : (\n                                        <DeliverypData\n                                            destination={(props.destinationDetails.address !== Anywhere  && props.destinationDetails.address !== '') ? props.destinationDetails.address: (props.capacityType.name === 'Truck' ? Anywhere: '')}\n                                            destinationError={props.destinationError}\n                                            Destination={'DestinationDetails'}\n                                            handleChange={props.handleChange}\n                                            rangeDisable={props.destinationDetails && ((props.capacityType.name === 'Lane' && props.destinationDetails.address === Anywhere) || props.destinationDetails.address === '' || props.destinationDetails.address === null)}\n                                            platform=\"mobile\"\n                                            keyboardshowHandler={() => {}}\n                                            keyboardhideHandler={() => {}}\n                                            defaultValue={Anywhere}\n                                            isDestination={true}\n                                            useHandler={true}\n                                            setErrorValue={props.setErrorValue}\n                                            destinationRadius={props.destinationRadius}\n                                            updateLocalCurrentTime={props.updateLocalCurrentTime}\n                                            showDate={false}\n                                            onFocus={() => {\n                                                if(!props.isDestinationEdit) {\n                                                    props.setDestinationEdit(true);\n                                                }\n                                            }}\n                                        />\n                                        )\n                                    }\n                                </IonCol>\n                            </IonRow>\n                        </IonCol>\n                    </IonRow>\n                </IonGrid>\n                <div className=\"manage-capacity-buttons\">\n                    <IonButton class=\"load-btn\" data-test=\"back-btn\" onClick={() => props.handleBackButton()}>\n                        Back\n                    </IonButton>\n                    <IonButton class=\"load-btn save-btn\"  data-test=\"save-btn\"  onClick={() =>  props.handleSubmit()}>\n                        Save\n                    </IonButton>\n                </div>\n            </IonContent>\n        </IonPage>\n    );\n}\n\nexport default ManageCapacityFormDesktop;","import React, { useState, useEffect } from \"react\";\nimport {\n    IonPage,\n    IonContent,\n    IonFooter,\n    IonButton,\n    IonGrid,\n    IonCard,\n    IonRow,\n    IonIcon,\n    IonLabel,\n    IonCol,\n    IonCardHeader,\n    IonToggle,\n    IonCardContent,\n    IonText,\n    isPlatform, \n    useIonViewWillEnter\n} from \"@ionic/react\";\nimport AppHeader from \"../../../components/app/Bars/Bar-header\";\nimport { NewDropDown } from \"../../../components/shared/NewUIComponents/DropDown\";\nimport PickupData from \"../../../components/app/Search/PickupData\";\nimport DeliverypData from \"../../../components/app/Search/DeliverypData\";\nimport { Anywhere, DryVan, PickUpdate, Trailer, Origin, Destination, CityError, US, USA } from \"../../../utils/constants\";\nimport \"./ManageCapacity.scss\";\nimport { PickUpTimeComponent } from \"../../../components/shared/pickupTimeComponent\";\nimport { PickupDaysComponent } from \"../../../components/shared/PickupDays\";\nimport { ILocationDetails } from \"../../../schemas/manage/manage.Schema\";\nimport { SelectComponent } from \"../../../components/shared/SelectComponent\";\nimport { states } from \"../../../utils/states\";\nimport ManageCapacityFormDesktop from \"./ManageCapacityFormDesktop.page\";\nimport { getTime, keyboardhideHandler, keyboardshowHandler, setDetails, stateItems } from \"./ManagaCapacityUtil\";\n\nconst capacityOptions = [\n    { name: \"Truck\", desc: \"Spot capacity currently available.\" },\n    { name: \"Lane\", desc: \"Frequently desired origin to destination.\" },\n];\n\nconst currentDate = new Date();\nlet date = new Date();\ndate.setDate(date.getDate() + 1);\n\nconst location: ILocationDetails = {\n    city: Anywhere,\n    state: null,\n    country: null,\n    lat: null,\n    lng: null,\n    address: null\n};\nconst ManageCapacityFormPage: React.FC<any> = (props: any) => {\n    const { userDetails, selectedCapacity = null } = props;\n    const [showCapacityOptions, setShowCapacityOptions] = useState(false);\n    const [capacityType, setCapacityType] = useState(capacityOptions[0]);\n    const [trailerType, setTrailerType] = useState(DryVan);\n    const [originDetails, setOriginDetails] = useState({} as ILocationDetails);\n    const [showOrigin, setShowOrigin] = useState(false);\n    const [originRadius, setOriginRadius] = useState(100);\n    const [pickUpLocalTime, setPickUpLocalTime] = useState(\n        currentDate.toISOString()\n    );\n    const [pickupFromDate, setPickupFromDate] = useState(\n        currentDate.toISOString()\n    );\n    const [pickupToDate, setPickupToDate] = useState(date.toISOString());\n    const [preferredDays, setPreferredDays] = useState([]);\n    const [showDelivaryfields, setShowDelivaryfields] = useState(false);\n    const [destinationDetails, setDestinationDetails] = useState({ ...location, city: null, address: '' } as ILocationDetails);\n    const [destinationRadius, setDestinationRadius] = useState(100);\n    const [isStatesShow, setStatesShow] = useState(false);\n    const [originError, setOriginError] = useState<any>(false);\n    const [destinationError, setDestinationError] = useState<any>(false);\n    const [stateError, setStatesError] = useState(false);\n    const [pickupTimeError, setPickuptimeError] = useState(false);\n    const [pickupDaysError, setPickupDaysError] = useState(false);\n    const [isOriginEdit, setOriginEdit] = useState(false);\n    const [isDestinationEdit, setDestinationEdit] = useState(false);\n    \n    const [statesList, setStatesList] = useState(stateItems);\n\n    let dateUpdated = false;\n\n    const handleChange = (event: any) => {\n        const { name, value } = event.target;\n        switch (name) {\n            case Trailer:\n                setTrailerType(value);\n                break;\n            case \"fromDate\":\n                setPickupFromDate(value);\n                break;\n            case \"toDate\":\n                setPickupToDate(value);\n                break;\n            case Origin:\n                setOriginError(false);\n                if(isOriginEdit) {\n                    setDetails(event.target, setOriginDetails);\n                }\n                break;\n            case \"originRadius\":\n                setOriginRadius(value);\n                break;\n            case Destination:\n                setDestinationError(false);\n                if(isDestinationEdit) {\n                    setDetails(event.target, setDestinationDetails);\n                }\n                break;\n            case \"destinationRadius\":\n                setDestinationRadius(value);\n                break;\n            case 'stateToggle':\n                setStatesShow(!isStatesShow);\n                break;\n        }\n    };\n\n    const setSelectedData = () => {\n        const statesList = stateItems.map((state:any, index:number) => {\n            return {...state, value:selectedCapacity.destinationStates[index] || ''}\n        })\n        setOriginEdit(false);\n        setCapacityType(capacityOptions[selectedCapacity.capacityType === 'TRUCK' ? 0 : 1]);\n        setTrailerType(selectedCapacity.trailerType);\n        setOriginDetails({ ...selectedCapacity.origin,lat: selectedCapacity.origin.latitude, lng: selectedCapacity.origin.longitude, address: selectedCapacity.origin.city + (selectedCapacity.origin.state ? `, ${selectedCapacity.origin.state}` : '') } as ILocationDetails);\n        setOriginRadius(selectedCapacity.origin.radius);\n        if(selectedCapacity.pickUpFromDate !== '') {\n            setPickUpLocalTime(selectedCapacity.pickUpFromDate);\n        }\n        if(selectedCapacity.pickUpFromDate && selectedCapacity.pickUpFromDate !== '') {\n            setPickupFromDate(selectedCapacity.pickUpFromDate);\n        }\n        if(selectedCapacity.pickUpToDate && selectedCapacity.pickUpToDate !== '') {\n            setPickupToDate(selectedCapacity.pickUpToDate);\n        }\n        setPreferredDays(selectedCapacity.preferredDays);\n        setDestinationDetails({ ...selectedCapacity.destination, address: selectedCapacity.destination.city !== null ? selectedCapacity.destination.city + (selectedCapacity.destination.state ? `, ${selectedCapacity.destination.state}` : '') : Anywhere } as ILocationDetails);\n        setDestinationRadius(selectedCapacity.destination.radius || 100);\n        setStatesShow(selectedCapacity && selectedCapacity.destinationStates.length > 0);\n        setStatesList(statesList);\n        setShowDelivaryfields(false);\n        setDestinationEdit(false);\n        setPickupDaysError(false);\n        setPickuptimeError(false);\n    }\n\n    useEffect(() => {\n        if (selectedCapacity) {\n            setSelectedData();\n        }\n    }, [selectedCapacity]);\n\n    useIonViewWillEnter(() => {\n        if(!showOrigin && !selectedCapacity) {\n          setShowOrigin(true);\n          clearFields();\n        }\n      });\n\n    const setErrorValue = (value: boolean, name: string) =>  name === Origin ? setOriginError(value): setDestinationError(value);\n\n    const updateLocalCurrentTime = (feildName: string, localTime: string) => {\n        if (feildName === PickUpdate) {\n            if (!dateUpdated && localTime) {\n                setPickupFromDate(pickUpLocalTime);\n                dateUpdated = true;\n            }\n            setPickUpLocalTime(localTime);\n        }\n    };\n\n\n    const handleStateChange = ({ name, value }: any) => {\n        const list = statesList.map((state: any) => ({ ...state, value: state.name === name ? value.code : state.value }));\n        const destinationStates = list.filter(state => state.value !== '').map(state => state.value);\n        setStatesError(destinationStates.length === 0);\n        setStatesList(list);\n    }\n\n    const clearFields = () => {\n        setCapacityType(capacityOptions[0]);\n        setTrailerType(DryVan);\n        setOriginDetails({} as ILocationDetails);\n        setOriginRadius(100);\n        setPickUpLocalTime(currentDate.toISOString());\n        setPickupFromDate(currentDate.toISOString());\n        setPickupToDate(date.toISOString());\n        setPreferredDays([]);\n        setShowDelivaryfields(false);\n        setDestinationDetails({ ...location, address: Anywhere } as ILocationDetails);\n        setDestinationRadius(100);\n        setStatesShow(false);\n        setOriginError(false);\n        setStatesList(stateItems);\n    }\n\n    const handleBackButton = () => {\n        if(selectedCapacity)  {\n            setSelectedData();\n            props.history.push('/app/' + props.module);\n        } else {\n            setShowOrigin(false);\n            const path = isPlatform('desktop') ? '/app/manage' : '/app/' + props.module;\n            props.history.push(path);\n        }\n    }\n\n    const handleSubmit = () => {\n\n        if(!(originDetails && originDetails.city && originDetails.lat && originDetails.lng)) {\n            setOriginError(CityError);\n            return true;\n        }\n\n        if (pickupTimeError && capacityType.name === 'Truck') {\n            return true;\n        }\n\n        if(capacityType.name === 'Lane' && preferredDays.length === 0) {\n            setPickupDaysError(true);\n            return true;\n        }\n\n        if(capacityType.name === 'Lane' && !(destinationDetails && destinationDetails.city && destinationDetails.city !== Anywhere)) {\n            setDestinationError(CityError);\n            setShowDelivaryfields(true);\n            return true;\n          }\n\n        const destinationStates = statesList.filter(state => state.value !== '').map(state => state.value);\n\n        if (isStatesShow && destinationStates.length === 0) {\n            setStatesError(true);\n            return true;\n        }\n\n        setOriginEdit(false);\n        setDestinationEdit(false);\n\n        const destination = !isStatesShow && destinationDetails.city !== Anywhere ? {\n            destinationCity: destinationDetails.city,\n            destinationState: destinationDetails.state,\n            destinationCountry: destinationDetails.country === US ? USA:  destinationDetails.country,\n            destinationLatitude: destinationDetails.lat,\n            destinationLongitude: destinationDetails.lng,\n        } : {\n            destinationCity: null,\n            destinationState: null,\n            destinationCountry: null,\n            destinationLatitude: null,\n            destinationLongitude: null,\n        };\n\n        const payload = {\n            capacityId: (selectedCapacity && selectedCapacity.capacityId) || null,\n            userId: userDetails.userPrincipalName,\n            userEmail: userDetails.email,\n            userPhone: userDetails.mobileNumber || userDetails.phone,\n            capacityType: capacityType.name.toUpperCase(),\n            commonCarrierId: userDetails.carrierId,\n            trailerType,\n            originCity: originDetails.city,\n            originState: originDetails.state,\n            originRadius,\n            originCountry: originDetails.country === US ? USA:  originDetails.country,\n            originLongitude: originDetails.lng,\n            originLatitude: originDetails.lat,\n            ...destination,\n            destinationRadius: destination.destinationCity !== null ? destinationRadius: null,\n            preferredDays: capacityType.name === 'Lane' ? preferredDays : [],\n            pickUpToDate:  capacityType.name !== 'Lane' ? getTime(pickupToDate) : null,\n            pickUpFromDate:  capacityType.name !== 'Lane' ? getTime(pickupFromDate) : null,\n            destinationStates: isStatesShow ? destinationStates : []\n        };\n\n        props.handleSubmit(payload, clearFields);\n    };\n\n\n    return isPlatform('desktop') ? (\n        <ManageCapacityFormDesktop \n            {...props} \n            capacityId={selectedCapacity && selectedCapacity.capacityId || null}\n            title={selectedCapacity && selectedCapacity.capacityId || null}\n            statesList={statesList}\n            capacityOptions={capacityOptions}\n            showCapacityOptions={showCapacityOptions}\n            setShowCapacityOptions={setShowCapacityOptions}\n            capacityType={capacityType}\n            setCapacityType={setCapacityType}\n            trailerType={trailerType}\n            originDetails={originDetails}\n            originRadius={originRadius}\n            pickUpLocalTime={pickUpLocalTime}\n            handleChange={handleChange}\n            pickupFromDate={pickupFromDate}\n            pickupToDate={pickupToDate}\n            pickupTimeError={pickupTimeError}\n            setPickuptimeError={setPickuptimeError}\n            setPreferredDays={setPreferredDays}\n            pickupDaysError={pickupDaysError}\n            setPickupDaysError={setPickupDaysError}\n            showDelivaryfields={showDelivaryfields}\n            setShowDelivaryfields={setShowDelivaryfields}\n            destinationDetails={destinationDetails}\n            destinationRadius={destinationRadius}\n            isStatesShow={isStatesShow}\n            setStatesShow={setStatesShow}\n            handleStateChange={handleStateChange}\n            isOriginEdit={isOriginEdit}\n            setOriginEdit={setOriginEdit}\n            isDestinationEdit={isDestinationEdit}\n            setDestinationEdit={setDestinationEdit}\n            setErrorValue={setErrorValue}\n            handleSubmit={handleSubmit}\n            handleBackButton={handleBackButton}\n        />\n      )\n      :(\n        <IonPage className=\"manage-userslist-page\">\n            <AppHeader\n                title={(selectedCapacity && selectedCapacity.capacityId) || 'Add Lane/Truck'}\n                customBackUrl={handleBackButton}\n                History={props.history}\n            />\n            <IonContent className=\"ion-padding add-capacity-content\">\n                <IonContent className=\"add-capacity-form-content\">\n                    <IonGrid class=\"capacity-grid\">\n                        <IonRow class=\"capacity-label-row\">\n                            <IonLabel class=\"capacity-label\">Capacity Type</IonLabel>\n                        </IonRow>\n                        <IonRow\n                            class=\"capacity-type\"\n                            data-test=\"capacity-type\"\n                            onClick={() => setShowCapacityOptions(!showCapacityOptions)}\n                        >\n                            <IonCol class=\"capacity-name\">{capacityType.name}</IonCol>\n                            {\n                                !selectedCapacity ? (\n                                    <IonCol class=\"dropDown-icon\">\n                                        <IonIcon src=\"/assets/icon/grid-down-arrow.svg\"></IonIcon>\n                                    </IonCol>\n                                ): null\n                            }\n                           \n                        </IonRow>\n                        <IonRow class=\"capacity-desc\">{capacityType.desc}</IonRow>\n                        {!selectedCapacity && capacityOptions && showCapacityOptions ? (\n                            <IonGrid class=\"suggetion-grid\"  data-test=\"capacity-type-list\">\n                                {capacityOptions.map((capacityType: any, index: number) => (\n                                <IonRow\n                                    key={index}\n                                    data-test=\"capacity-type-list-item\"\n                                    onClick={() => {\n                                    setCapacityType(capacityType);\n                                    setStatesShow(false);\n                                    setShowCapacityOptions(false);\n                                    }}\n                                >\n                                    {capacityType.name}\n                                </IonRow>\n                                ))}\n                            </IonGrid>\n                            ) : null}\n                    </IonGrid>\n                    <IonGrid class=\"add-capacity-grid-mobile\">\n                        <IonCard class=\"trailer-type-card\">\n                            <NewDropDown\n                                labelName=\"Trailer type\"\n                                TrailerType={trailerType}\n                                handleChange={handleChange}\n                            />\n                        </IonCard>\n                        <IonGrid class=\"add-capacity-pick-up\">\n                            <IonRow class=\"pickup-row\">Pick-up</IonRow>\n                            { (showOrigin ||selectedCapacity) ? <PickupData\n                                origin={originDetails.address}\n                                originError={originError}\n                                originRadius={originRadius}\n                                handleChange={handleChange}\n                                rangeDisabled={true}\n                                isDestination={false}\n                                defaultValue={Anywhere}\n                                useHandler={false}\n                                setErrorValue={setErrorValue}\n                                updateLocalCurrentTime={updateLocalCurrentTime}\n                                showDate={false}\n                                onFocus={() => {\n                                    if(!isOriginEdit) {\n                                        setOriginEdit(true);\n                                    }\n                                }}\n                            /> : null }\n                            {\n                                capacityType.name === 'Truck' ? (\n                                    <PickUpTimeComponent\n                                        pickUpLocalTime={pickUpLocalTime}\n                                        handleChange={handleChange}\n                                        fromDate={pickupFromDate}\n                                        toDate={pickupToDate}\n                                        error={pickupTimeError}\n                                        handleError={setPickuptimeError}\n                                    />\n                                ) : (\n                                        <PickupDaysComponent\n                                            preferredDays={preferredDays}\n                                            setPickupDays={setPreferredDays}\n                                            showError={pickupDaysError}\n                                            handleError={setPickupDaysError}\n                                        />\n                                    )\n                            }\n\n                            <IonCard class=\"delivery-type-card\">\n                                <IonCardHeader\n                                    class={`${\n                                        showDelivaryfields ? \"\" : \"changeColor\"\n                                        }`}\n                                    data-test=\"delivery-type-accordian\"\n                                    onClick={() => setShowDelivaryfields(!showDelivaryfields)}\n                                >\n                                    <span> Delivery</span>\n                                    {showDelivaryfields ? (\n                                        <IonIcon data-test=\"delivery-minus-icon\" src=\"assets/icon/minus-icon.svg\" />\n                                    ) : (\n                                            <div className=\"desitnation-city\">\n                                                {selectedCapacity && selectedCapacity.destinationStates && selectedCapacity.destinationStates.length === 0 ? `${(destinationDetails.address !== Anywhere  && destinationDetails.address !== '') ? destinationDetails.address : (capacityType.name === 'Truck' ? Anywhere: '')}`: ''}\n                                                <IonIcon src=\"assets/icon/plus.svg\" />\n                                            </div>\n                                        )}\n                                </IonCardHeader>\n                                <IonCardContent\n                                    class={`${\n                                        showDelivaryfields ? \"fadein\" : \"fadeout\"\n                                        }`}\n                                >\n                                    {\n                                        capacityType.name === 'Truck' ? (\n                                            <IonText className=\"states-toggle-wrapper\">\n                                                <div className=\"destination-wrapper\">\n                                                    {isStatesShow ? <span>Destination</span> : null}\n                                                </div>\n                                                <div className=\"state-wrapper\">\n                                                    <span>Select States</span>\n                                                    <IonToggle mode=\"ios\" class=\"state-toggle\" checked={isStatesShow} name=\"stateToggle\" onIonChange={handleChange}></IonToggle>\n                                                </div>\n                                            </IonText>\n                                        ) : null\n                                    }\n                                    {\n                                        isStatesShow && capacityType.name === 'Truck' ?\n                                            (\n                                                <div data-test=\"state-list-wrapper\" className={`states-list-wrapper ${stateError ? 'error' : ''}`}>\n                                                    {\n                                                        statesList && statesList.map((state: any, index: number) => (\n                                                            <SelectComponent key={`state${index}`} options={states} placeholder=\"Choose the state\" label={state.label} name={state.name} value={statesList[index] && statesList[index].value} handleChange={handleStateChange} />\n                                                        )\n                                                        )\n                                                    }\n                                                </div>\n                                            ) : (\n                                                <DeliverypData\n                                                    destination={`${destinationDetails.address !== Anywhere ? destinationDetails.address : (capacityType.name === 'Truck' ? Anywhere: '')}`}\n                                                    destinationError={destinationError}\n                                                    Destination={'DestinationDetails'}\n                                                    handleChange={handleChange}\n                                                    rangeDisable={destinationDetails && ((capacityType.name === 'Lane' && destinationDetails.address === Anywhere) || destinationDetails.address === '' || destinationDetails.address === null)}\n                                                    platform=\"mobile\"\n                                                    keyboardshowHandler={keyboardshowHandler}\n                                                    keyboardhideHandler={keyboardhideHandler}\n                                                    defaultValue={Anywhere}\n                                                    isDestination={true}\n                                                    useHandler={true}\n                                                    setErrorValue={setErrorValue}\n                                                    destinationRadius={destinationRadius}\n                                                    updateLocalCurrentTime={updateLocalCurrentTime}\n                                                    showDate={false}\n                                                    onFocus={() => {\n                                                        if(!isDestinationEdit) {\n                                                            setDestinationEdit(true);\n                                                        }\n                                                    }}\n                                                />\n                                            )\n                                    }\n\n                                </IonCardContent>\n                            </IonCard>\n                        </IonGrid>\n                    </IonGrid>\n                </IonContent>\n                <IonFooter class=\"addTruckFooter\">\n                    <IonButton expand=\"full\" data-test=\"capacity-submit\" onClick={handleSubmit}>Save</IonButton>\n                </IonFooter>\n            </IonContent>\n        </IonPage>\n    );\n};\nexport default ManageCapacityFormPage;\n","import React, { useEffect, useState } from 'react';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { isPlatform } from '@ionic/react';\nimport { withRouter } from 'react-router';\nimport { compose } from 'redux';\nimport { ManageCapacity } from '../../../pages/Manage/ManageCapacity';\nimport {\n  getNetworkStatus,\n  getUserDetails,\n  getRefreshStatus,\n  getLoading\n} from '../../../selectors/selector';\nimport { showNetworkAlert } from '../../../actions/App/action';\nimport {\n  getManageCapacity,\n  getManageCapacityFilter,\n  getManageCapacityLoaded\n} from '../../../selectors/Manage/selector';\nimport { CapacityModel } from '../../../models/manage/capacity.model';\nimport {\n  getCapacityList,\n  removeManageCapacity,\n  setSelectedCapacity,\n  setCapacityFilter,\n  addManageCapacity\n} from '../../../actions/manage/action';\nimport useInjectSaga from '../../../utils/injectSaga';\nimport useInjectReducer from '../../../utils/injectReducer';\nimport reducer from '../../../reducers/manage/reducer';\nimport saga from '../../../saga/Manage/saga';\n\nconst key = 'manage';\n\nexport const ManageCapacityContainer: React.FC<any> = (props: any) => {\n  const { capacityList, isLoading, isCapacityLoaded, userDetails, getCapacityListAction } = props;\n  const capacityModel = new CapacityModel();\n  const maxPages = 5;\n  const pageSize = isPlatform('desktop') ? 99 : 10;\n  const [currentPage, setCurrentPage] = useState(0);\n  const [isCapacityEnd, setCapacityEnd] = useState(false);\n\n  const resetValues = () => {\n    setCurrentPage(0);\n    setCapacityEnd(false);\n  };\n\n  const getCapacityList = (isPullToRefresh = false, page = 0, callback: any = false) => {\n    const { carrierId } = userDetails;\n    const query = capacityModel.getList(carrierId, page, pageSize);\n    if (isPullToRefresh) {\n      resetValues();\n    }\n    getCapacityListAction({\n      query,\n      isPullToRefresh,\n      callback\n    });\n  };\n\n  useEffect(() => {\n    if (userDetails && !isCapacityLoaded) {\n      resetValues();\n      getCapacityList();\n    }\n  }, [userDetails, isCapacityLoaded]);\n\n  const onPageScroll = async (event: any) => {\n    const scroll = await event.currentTarget.getScrollElement();\n    if (scroll.scrollTop === 0) {\n      return true;\n    }\n    if (!isPlatform('desktop') && !isCapacityEnd && !isLoading && currentPage < maxPages) {\n      const page = currentPage + 1;\n      const callback = (itemsCount: number) => {\n        if (itemsCount === 0 || itemsCount % pageSize !== 0) {\n          setCapacityEnd(true);\n        }\n      };\n      setCurrentPage(page);\n      getCapacityList(false, page, callback);\n    }\n  };\n\n  return (\n    <ManageCapacity\n      module=\"manage\"\n      {...props}\n      data={capacityList}\n      getCapacityList={getCapacityList}\n      onPageScroll={onPageScroll}\n    />\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: getLoading(),\n  isCapacityLoaded: getManageCapacityLoaded(),\n  isNetWorkAvailable: getNetworkStatus(),\n  userDetails: getUserDetails(),\n  isPullToRefresh: getRefreshStatus(),\n  capacityList: getManageCapacity(),\n  filter: getManageCapacityFilter()\n});\n\nexport const mapDispatchToProps = (dispatch: Function) => ({\n  showNetworkAlert: () => dispatch(showNetworkAlert()),\n  getCapacityListAction: (payload: any) => dispatch(getCapacityList(payload)),\n  addCapacityItem: (payload: any) => dispatch(addManageCapacity(payload)),\n  removeCapacityAction: (payload: any) => dispatch(removeManageCapacity(payload)),\n  setSelectedCapacityAction: (payload: any) => dispatch(setSelectedCapacity(payload)),\n  setCapacityFilter: (payload: any) => dispatch(setCapacityFilter(payload))\n});\n\nconst withReducer = useInjectReducer({ key, reducer });\nconst withSaga = useInjectSaga({ key, saga });\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\n\nexport default compose(withSaga, withReducer, withConnect)(withRouter(ManageCapacityContainer));\n","import React from 'react';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { isPlatform } from '@ionic/react';\nimport { getNetworkStatus, getUserDetails } from '../../../selectors/selector';\nimport { showNetworkAlert } from '../../../actions/App/action';\nimport { ToastMessage } from '../../../utils/ToastMessage';\nimport { OOPS_MESSAGE, ADD_CAPACITY_SUCCESS, EVENT, SCREEN } from '../../../utils/constants';\nimport { ICapacityPayload } from '../../../schemas/manage/manage.Schema';\nimport { CapacityModel } from '../../../models/manage/capacity.model';\nimport { addManageCapacity } from '../../../actions/manage/action';\nimport { logEvent } from '../../../utils/Analytics';\nimport ManageCapacityFormPage from 'app/pages/Manage/ManageCapacity/ManageCapacityForm.page';\n\nexport const ManagCapacityAddContainer: React.FC<any> = (props: any) => {\n  const { isNetWorkAvailable, showNetworkAlert, history, userDetails } = props;\n\n  const handleSubmit = (input: ICapacityPayload, clearFields: Function) => {\n    if (!isNetWorkAvailable) {\n      showNetworkAlert();\n      return true;\n    }\n    const capacityModel = new CapacityModel();\n    const query = capacityModel.addCapacity();\n    const callback = (status: boolean) => {\n      ToastMessage.show(status ? ADD_CAPACITY_SUCCESS : OOPS_MESSAGE);\n      // Analytics implementation\n      logEvent(status ? EVENT.UE_MANAGE_CAPACITY_SUCCESS : EVENT.UE_MANAGE_CAPACITY_FAILED, {\n        screen: SCREEN.MANAGE_CAPACITY_ADDEDIT,\n        carrierId: (userDetails && userDetails.carrierId) || '',\n        capacityType: 'lane' // TODO <lane/truck>\n      });\n      clearFields();\n      history.push(`/app/manage${!isPlatform('desktop') ? '/ManageMyCapacity' : ''}`);\n    };\n    props.addCapacityItem({ params: { query, input }, callback });\n  };\n\n  return (\n    <ManageCapacityFormPage\n      module=\"manage/ManageMyCapacity\"\n      {...props}\n      handleSubmit={handleSubmit}\n    />\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isNetWorkAvailable: getNetworkStatus(),\n  userDetails: getUserDetails()\n});\n\nexport const mapDispatchToProps = (dispatch: Function) => ({\n  showNetworkAlert: () => dispatch(showNetworkAlert()),\n  addCapacityItem: (payload: any) => dispatch(addManageCapacity(payload))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManagCapacityAddContainer);\n","import React from 'react';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { getNetworkStatus, getUserDetails } from '../../../selectors/selector';\nimport { showNetworkAlert } from '../../../actions/App/action';\nimport { ICapacityPayload } from '../../../schemas/manage/manage.Schema';\nimport { CapacityModel } from '../../../models/manage/capacity.model';\nimport { ToastMessage } from '../../../utils/ToastMessage';\nimport { EDIT_CAPACITY_SUCCESS, OOPS_MESSAGE } from '../../../utils/constants';\nimport { ManageCapacityFormPage } from '../../../pages/Manage/ManageCapacity';\nimport { getSelectedManageCapacity } from '../../../selectors/Manage/selector';\nimport { updateManageCapacity } from '../../../actions/manage/action';\n\nconst path = 'manage/ManageMyCapacity';\n\nexport const ManageCapacityEditContainer: React.FC<any> = (props: any) => {\n  const { isNetWorkAvailable, showNetworkAlert, history, selectedCapacity, userDetails } = props;\n\n  const handleSubmit = (input: ICapacityPayload, clearFields: Function) => {\n    if (!isNetWorkAvailable) {\n      showNetworkAlert();\n      return true;\n    }\n    const lastUpdatedBy = `${userDetails.firstName} ${userDetails.lastName}`;\n    const capacityModel = new CapacityModel();\n    const query = capacityModel.updateCapacity();\n    const callback = (status: boolean) => {\n      ToastMessage.show(status ? EDIT_CAPACITY_SUCCESS : OOPS_MESSAGE);\n      if (status) {\n        history.push(`/app/${path}/View`);\n      }\n    };\n    props.updateCapacityItem({ params: { query, input, lastUpdatedBy }, callback });\n  };\n\n  return selectedCapacity ? (\n    <ManageCapacityFormPage module={`${path}/View`} {...props} handleSubmit={handleSubmit} />\n  ) : null;\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isNetWorkAvailable: getNetworkStatus(),\n  userDetails: getUserDetails(),\n  selectedCapacity: getSelectedManageCapacity()\n});\n\nexport const mapDispatchToProps = (dispatch: Function) => ({\n  showNetworkAlert: () => dispatch(showNetworkAlert()),\n  updateCapacityItem: (payload: any) => dispatch(updateManageCapacity(payload))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageCapacityEditContainer);\n","import React from 'react';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { getNetworkStatus, getUserDetails } from '../../../selectors/selector';\nimport { showNetworkAlert } from '../../../actions/App/action';\nimport { ManageCapacityViewPage } from '../../../pages/Manage/ManageCapacity';\nimport { getSelectedManageCapacity } from '../../../selectors/Manage/selector';\n\nexport const ManageCapacityViewContainer: React.FC<any> = (props: any) => {\n  return props.selectedCapacity ? (\n    <ManageCapacityViewPage {...props} module=\"manage/ManageMyCapacity\" />\n  ) : null;\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isNetworkAvailable: getNetworkStatus(),\n  userDetails: getUserDetails(),\n  selectedCapacity: getSelectedManageCapacity()\n});\n\nexport const mapDispatchToProps = (dispatch: Function) => ({\n  showNetworkAlert: () => dispatch(showNetworkAlert())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageCapacityViewContainer);\n","import React, { Component } from 'react';\nimport ProfileContainer from '../../../containers/ManageContainer/ProfileContainer/ProfileContainer';\nimport CarrierProfileContainer from '../../../containers/ManageContainer/CarrieProfileContainer/CarrierProfileContainer';\nimport ManagUserContainer from '../../../containers/ManageContainer/ManageUserContainer/ManageUserContainer';\nimport { ManageCapacityContainer } from '../ManageCapacityContainer';\n\nconst SectionContainer = (props: any) => {\n  const renderSwitch = (section: string) => {\n    switch (section) {\n      case 'My Profile':\n        return <ProfileContainer />;\n      case 'Carrier Profile':\n        return <CarrierProfileContainer />;\n      case 'Manage Users':\n        return <ManagUserContainer />;\n      case 'Manage My Capacity':\n        return <ManageCapacityContainer />;\n      default:\n        return <ProfileContainer />;\n    }\n  };\n  return renderSwitch(props.section);\n};\n\nexport default SectionContainer;\n","import React, { useState } from \"react\";\nimport {\n  IonPage,\n} from \"@ionic/react\";\nimport \"./Manage.scss\";\nimport AppHeader from '../../components/app/Bars/Bar-header'\nimport {SectionContainer } from \"../../containers/ManageContainer/sectionContainer\";\n\nexport const  ManageDesktopPage:React.FC<any> = (props:any) => {\n\n  const manageCards = props.manageCards.map((card:any) => card.profileHeading);\n\n  const [segment, setSegment] = useState<any>({ name: \"Profile\", data: {} });\n  const onChangeSegment = (segmentName: string) => {\n    setSegment({ name: segmentName, data: {} });\n  };\n\n    return (\n      <IonPage className=\"desktop-page my-load-desktop-page manage-card-content\">\n          <AppHeader\n            title=\"Manage\"\n            getSegment={(e: any) => {\n              setSegment({ name: e.detail.value as any, data: {} });\n            }}\n            segments={manageCards}\n            activeSegment={segment.name}\n            imageCapature={props}\n          />\n          <SectionContainer\n              onRedirectToTab={onChangeSegment}\n              section={segment.name}\n            />\n      </IonPage>\n    );\n}\nexport default ManageDesktopPage;\n","import React, { useState, useEffect } from 'react';\nimport './Manage.scss';\nimport { IonContent, IonPage, IonList, IonItem, isPlatform } from '@ionic/react';\nimport { EnumType } from 'json-to-graphql-query';\nimport { ToastMessage } from '../../utils/ToastMessage';\nimport ImageCapture from '../../components/ImageCapture/ImageCapture';\nimport ManageDesktopPage from './ManageDesktop.page';\nimport { isEntitled, R2Configuration, IONICWrapper } from '../../utils/common';\nimport { CustomModal } from '../../components/CustomModal';\nimport {\n  MANAGE_USER_CONFIRM_TRANSFER_TITLE,\n  MANAGE_USER_CONFIRM_TRANSFER_MESSAGE,\n  KEYS,\n  ENV,\n  EVENT,\n  SCREEN,\n  TAB,\n  Roles,\n  NO_ACCESS_MSG\n} from '../../utils/constants';\nimport { getApplicationInfo, logEvent } from '../../utils/Analytics';\n\nexport interface ManageCardSubList {\n  cradImg: string;\n  profileHeading: string;\n  profileRouting: string;\n}\nexport interface ImanageCard {\n  manageCard: ManageCardSubList[];\n  history?: any;\n  userDetails?: any;\n  isTransferRequest?: any;\n  transferDetails?: any;\n  transferRequestReset?: any;\n  handleTransfer?: any;\n}\nconst ManagePage: React.FC<ImanageCard> = (props: ImanageCard) => {\n  const {\n    history: { push },\n    userDetails,\n    isTransferRequest,\n    transferDetails,\n    transferRequestReset\n  } = props;\n  const [manageCards, SetManageCards] = useState<any>([]);\n  const [alertProps, setAlertProps] = useState<any>(null);\n\n  useEffect(() => {\n    // Analytics implementation\n    logEvent(EVENT.SV_MANAGE_PROFILE,\n      {\n        screen: SCREEN.MANAGE_PROFILE,\n        carrierId: props && props.userDetails && props.userDetails.carrierId,\n      });\n  }, []);\n\n  useEffect(() => {\n    const cards = props.manageCard.filter((card: any) => {\n      return !(\n        IONICWrapper.details.auth &&\n        IONICWrapper.details.auth.user.roles.includes(Roles.carrierGuest)\n      )\n        ? isEntitled('manage', convertToCamel(card.profileHeading))\n        : true;\n    });\n    SetManageCards(cards);\n  }, [userDetails, props.manageCard]);\n\n  const navigateToPage = (profile: ManageCardSubList) => {\n    const { profileHeading, profileRouting } = profile;\n\n    if (!isEntitled('manage', convertToCamel(profileHeading))) {\n      ToastMessage.show(NO_ACCESS_MSG);\n      return;\n    }\n\n    switch (profileHeading) {\n      case 'My Profile':\n        push(profileRouting);\n        break;\n      case 'Manage Users':\n      case 'Manage My Capacity':\n      case 'Carrier Profile':\n        R2Configuration.details.getR2FeatureEnable() // (KEYS.RELEASE === ENV.UAT || KEYS.RELEASE === ENV.PROD)\n          ? ToastMessage.show()\n          : push(profileRouting);\n        break;\n    }\n  };\n\n  const handleTransfer = (confirm: boolean) => {\n    const roles = (transferDetails.roles && [new EnumType(transferDetails.roles)]) || [];\n    const payload = {\n      userId: userDetails.userPrincipalName,\n      carrierId: transferDetails.carrierId,\n      confirm,\n      roles\n    };\n    props.handleTransfer(payload);\n  };\n\n  const defaultProps = {\n    isOpen: false,\n    title: MANAGE_USER_CONFIRM_TRANSFER_TITLE,\n    message: MANAGE_USER_CONFIRM_TRANSFER_MESSAGE,\n    buttons: [\n      {\n        label: 'Not Now',\n        callback: () => {\n          setAlertProps(null);\n          transferRequestReset();\n          handleTransfer(false);\n        }\n      },\n      {\n        label: 'Agree',\n        callback: () => {\n          setAlertProps(null);\n          handleTransfer(true);\n        }\n      }\n    ]\n  };\n\n  useEffect(() => {\n    if (isTransferRequest) {\n      setAlertProps({\n        ...defaultProps,\n        isOpen: true,\n        message: defaultProps.message.replace('{{COMPANY}}', transferDetails.carrierName)\n      });\n    } else {\n      setAlertProps(null);\n    }\n  }, [isTransferRequest]);\n\n  function convertToCamel(feature: any) {\n    const words = feature.split(' ');\n    let featureName = '';\n    for (let i = 0, len = words.length; i < len; i++) {\n      const currentStr = words[i];\n      let tempStr = currentStr.toLowerCase();\n      if (i !== 0) {\n        tempStr = tempStr.substr(0, 1).toUpperCase() + tempStr.substr(1);\n      }\n      featureName += tempStr;\n    }\n    return featureName;\n  }\n\n  return isPlatform('desktop') ? (\n    <ManageDesktopPage {...props} manageCards={manageCards} />\n  ) : (\n    <IonPage className=\"manage-header \">\n      <IonContent className=\"manage-card-content\">\n        <ImageCapture {...props} />\n        <div className=\"manage_options\">\n          <IonList mode=\"ios\" className=\"manage-list\">\n            {manageCards &&\n              manageCards.map((profileData: any, key: any) => (\n                <IonItem\n                  key={key}\n                  data-test=\"manage-link\"\n                  onClick={() => {\n                    navigateToPage(profileData);\n                  }}\n                  class=\"manage_list_item\"\n                  lines={key === props.manageCard.length - 1 ? 'none' : 'inset'}>\n                  {profileData.profileHeading}\n                  <img\n                    slot=\"end\"\n                    alt=\"logo\"\n                    src=\"/assets/icon/more-arrow.svg\"\n                    className=\"moresideimg\"\n                  />\n                </IonItem>\n              ))}\n          </IonList>\n        </div>\n      </IonContent>\n      {alertProps ? <CustomModal {...alertProps} /> : null}\n    </IonPage>\n  );\n};\nexport default ManagePage;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport { isPlatform } from '@ionic/react';\nimport ManagePage from '../../pages/Manage/Manage.page';\nimport useInjectSaga from '../../utils/injectSaga';\nimport useInjectReducer from '../../utils/injectReducer';\nimport {\n  makeManageCardData,\n  isTransferRequested,\n  getTransferRequestDetails\n} from '../../selectors/Manage/selector';\nimport reducer from '../../reducers/manage/reducer';\nimport saga from '../../saga/Manage/saga';\nimport {\n  ManageCard,\n  profileImageSet,\n  transferRequestReset,\n  confirmTransferRequest,\n  transferRequest\n} from '../../actions/manage/action';\nimport { showPermissionAlert, logout } from '../../actions/Login/action';\nimport { getLoading, getUserDetails } from '../../selectors/selector';\nimport { UserDetails } from '../../models/userPforile/userProfile.modal';\nimport { ToastMessage } from '../../utils/ToastMessage';\nimport { OOPS_MESSAGE } from '../../utils/constants';\nimport { GPSWrapper, clear } from '../../utils/common';\nimport { useAuthService } from '../../services/Auth';\n\nconst key = 'manage';\nconst ManageContainer = (props: any) => {\n  const { history } = props;\n  const authService = useAuthService();\n  useEffect(() => {\n    if (props.manageCard.length === 0) {\n      props.manageData();\n    }\n  }, []);\n\n  useEffect(() => {\n    const transfer =\n      (history && history.location && history.location.state && history.location.state.transfer) ||\n      false;\n    if (transfer) {\n      props.transferRequest({ transfer });\n    }\n  }, [history]);\n\n  async function azureLogout() {\n    if (isPlatform('capacitor')) {\n      GPSWrapper.details.stopGPS();\n    }\n    await clear();\n    await authService.logout();\n    await props.logout();\n  }\n\n  const handleTransfer = (payload: any) => {\n    const userProfileModel = new UserDetails();\n    const query = userProfileModel.confirmTransfer(payload);\n    const callback = async (status = false) => {\n      if (!status) {\n        ToastMessage.show(OOPS_MESSAGE);\n      }\n      if (status && payload.confirm) {\n        await azureLogout();\n        return true;\n      }\n      props.transferRequestReset();\n    };\n    props.confirmTransfer({ query, callback });\n  };\n\n  return <ManagePage {...props} handleTransfer={handleTransfer} />;\n};\n\nconst mapStateToProps = createStructuredSelector({\n  loading: getLoading(),\n  manageCard: makeManageCardData(),\n  userDetails: getUserDetails(),\n  isTransferRequest: isTransferRequested(),\n  transferDetails: getTransferRequestDetails()\n});\n\nconst mapDispatchToProps = (dispatch: Function) => ({\n  manageData: () => dispatch(ManageCard()),\n  transferRequest: (payload: any) => dispatch(transferRequest(payload)),\n  showPermissionAlert: (data: any) => dispatch(showPermissionAlert(data)),\n  profileImg: (data: any) => dispatch(profileImageSet(data)),\n  transferRequestReset: () => dispatch(transferRequestReset()),\n  confirmTransfer: (payload: any) => dispatch(confirmTransferRequest(payload)),\n  logout: () => dispatch(logout())\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nconst withReducer = useInjectReducer({ key, reducer });\nconst withSaga = useInjectSaga({ key, saga });\n\nexport default compose(withSaga, withReducer, withConnect)(ManageContainer);\n","import { IonContent, IonPage, IonCard, IonGrid, IonRow, IonCol } from '@ionic/react';\nimport React, { Component } from 'react';\nimport AppHeader from '../../components/app/Bars/Bar-header';\nimport './ExecutePage.page.scss';\nimport { ToastMessage } from '../../utils/ToastMessage';\nimport PullToRefresh from '../../components/PullToRefresh/PullToRefresh';\nimport {\n  PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n  NO_NEWORK,\n  STRING_STOP_TRACKING_TRIP,\n  EVENT,\n  SCREEN,\n  TAB,\n  OFFLINE_MODE_STATE\n} from '../../utils/constants';\nimport { GPSWrapper } from '../../utils/common';\nimport { logEvent } from '../../utils/Analytics';\n\nclass ExecutePage extends Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    const shipmentID = GPSWrapper.details.getGPStrackingShipmentID(); // GPS tracking stop button implementation\n    this.state = {\n      isShowFinanceAlert: false,\n      isShowStopButton: !!shipmentID, // GPS tracking stop button implementation\n      shipmentID: shipmentID || null // GPS tracking stop button implementation\n    };\n  }\n\n  componentDidMount() {\n    // Analytics implementation\n    logEvent(EVENT.SV_VIEW_MYLOADS, {\n      screen: SCREEN.MYLOADS,\n      carrierId: (this.props && this.props.userDetails && this.props.userDetails.carrierId) || ''\n    });\n  }\n\n  // GPS tracking stop button implementation\n  componentDidUpdate(prevProps: any, prevState: any) {\n    const shipmentID = GPSWrapper.details.getGPStrackingShipmentID();\n    if (prevState.shipmentID !== shipmentID) {\n      if (shipmentID) {\n        this.setState({ isShowStopButton: true, shipmentID });\n      } else {\n        this.setState({ isShowStopButton: false, shipmentID: null });\n      }\n    }\n  }\n\n  // My Loads Tile Click Handler\n  onTileClick = (card: any, index: number, event: any) => {\n    event.preventDefault();\n    if (\n      !this.props.isInPullToRefresh &&\n      (this.props.myLoadCount[index] > 0 || this.props.isNetworkAvailable || OFFLINE_MODE_STATE)\n    ) {\n      card.myLoadRouting !== '' ? this.props.history.push(card.myLoadRouting) : ToastMessage.show();\n    } else if (!this.props.isNetworkAvailable) {\n      // call action to show Popup along with message.\n      this.props.showAlert({\n        isShowAlert: true,\n        alertMessage: PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n        alertTitle: NO_NEWORK\n      });\n    }\n  };\n\n  // Manage Financial Click Handler\n  // onManageFinacialClick = (card: any) => {\n  //     this.setState({ isShowFinanceAlert: true });\n  // }\n\n  // navigateToURL = async () => {\n  //     const { Browser } = Plugins;\n  //     if (!this.props.isInPullToRefresh)\n  //         await Browser.open({ url: MANAGE_FINANCE_URL });\n  //     this.setState({ isShowFinanceAlert: false });\n  // }\n\n  // onDismiss = async () => {\n\n  //     this.setState({ isShowFinanceAlert: false });\n  // }\n\n  stopTripClicked = () => {\n    this.setState({ isShowStopButton: false, shipmentID: null });\n    GPSWrapper.details.stopGPS();\n  };\n\n  render() {\n    const { myLoadCard, myLoadCount } = this.props;\n    return (\n      <IonPage className=\"desktop-page myLoad-landing-page\">\n        <AppHeader title=\"My Loads\" />\n        <IonContent className=\"myload-content\">\n          <IonContent class=\"myload-page-content\">\n            <PullToRefresh\n              onPullToRefresh={this.props.getUserLoads}\n              status={this.props.isInPullToRefresh}\n            />\n\n            <IonGrid class=\"myload-mobile-grid\">\n              {myLoadCard.map((card: any, index: number) => (\n                <IonCard\n                  class={`myload-tab-card ${\n                    index % 2 === 0 && index !== 4 ? 'myload-tab-right-card' : ''\n                  }`}\n                  key={index}\n                  onClick={(event: any) => {\n                    this.onTileClick(card, index, event);\n                  }}>\n                  <IonGrid className={`item-dev ${card.className}`}>\n                    <div className=\"icon-wrapper\">\n                      <img className=\"thumbnail-img\" alt=\"assign\" src={card.cradImg} />\n                      <div className=\"itemlabel\">{card.title}</div>\n                    </div>\n                    <div className={myLoadCount[card.count] ? 'circle-div' : ''}>\n                      {myLoadCount[card.count] && myLoadCount[card.count] > 99\n                        ? 99\n                        : myLoadCount[card.count] || ''}\n                    </div>\n                  </IonGrid>\n                </IonCard>\n              ))}\n            </IonGrid>\n            <div className=\"myLoads_div_desktop\">\n              <IonRow className=\"myLoads_row_desktop\">\n                {myLoadCard.map((card: any, index: number) => (\n                  <IonCol size=\"2.4\" className={`thumbnail-item-col ${card.class}`} key={index}>\n                    <IonCard\n                      class=\"myload-tab-card\"\n                      onClick={(event: any) => {\n                        this.onTileClick(card, index, event);\n                      }}>\n                      <IonGrid className={`item-dev ${card.className}`}>\n                        <div className=\"icon-wrapper\">\n                          <div className={this.props.myLoadCount[card.count] ? 'circle-div' : ''}>\n                            {this.props.myLoadCount[card.count] &&\n                            this.props.myLoadCount[card.count] > 99\n                              ? 99\n                              : this.props.myLoadCount[card.count] || ''}\n                          </div>\n                          <img className=\"thumbnail-img\" alt=\"assign\" src={card.cradImg} />\n                          <div className=\"itemlabel\">{card.title}</div>\n                        </div>\n                      </IonGrid>\n                    </IonCard>\n                  </IonCol>\n                ))}\n              </IonRow>\n              {\n                // Commented  as per defect : DE3741\n                /* {isEntitled(\"MyLoad\", \"manageFinancial\") && <div className=\"manage-financial-div\">\n                            <IonGrid className=\"manage-financial\">\n                                <div className=\"manage-itemlabel\" onClick={this.onManageFinacialClick}>  <img className=\"manage-img\" alt=\"assign\" src=\"assets/icon/manage2.svg\"></img><p>Manage Financial</p></div>\n                            </IonGrid>\n                            {(\n                                <Alert\n                                    title={\"\"}\n                                    isOpen={this.state.isShowFinanceAlert}\n                                    message={\"You are being redirected to an external site\"}\n                                    close={this.navigateToURL}\n                                    dismiss={this.onDismiss}\n                                />\n                            )}\n                        </div>} */\n              }\n            </div>\n          </IonContent>\n          {/* GPS tracking stop button implementation */}\n          {/* {this.state.isShowStopButton &&\n                        <IonGrid class=\"loadPageFooter\">\n                            <IonButton expand=\"full\" onClick={this.stopTripClicked}>{STRING_STOP_TRACKING_TRIP + this.state.shipmentID}</IonButton>\n                        </IonGrid>\n                    } */}\n        </IonContent>\n      </IonPage>\n    );\n  }\n}\n\nexport default ExecutePage;\n","import { IUserInformation } from \"../schemas/Exicution/exicution.schema\";\n\nexport class ExicutionLoads {\n  private user_details: IUserInformation = {};\n\n  get carrierId() {\n    return this.user_details.carrierId;\n  }\n\n  set carrierId(value) {\n    if (value) {\n      this.user_details.carrierId = value;\n    }\n  }\n  get driverId() {\n    return this.user_details.driverId;\n  }\n\n  set driverId(value) {\n    if (value) {\n      this.user_details.driverId = value;\n    }\n  }\n  get filter() {\n    return this.user_details.filter;\n  }\n\n  set filter(value) {\n    if (value) {\n      this.user_details.filter = value;\n    }\n  }\n  // To send arguments conditionaly.\n  args = () => {\n    if (this.user_details.driverId) {\n      return {\n        carrierId: this.user_details.carrierId,\n        driverId: this.user_details.driverId,\n        filter: this.user_details.filter,\n      };\n    } else {\n      return {\n        carrierId: this.user_details.carrierId,\n        filter: this.user_details.filter,\n      };\n    }\n  };\n  loadDetails = {\n    shipmentId: true,\n    lineOfBusiness: true,\n    transportMode: true,\n    totalWeight: true,\n    weightUOM: true,\n    totalDistance: true,\n    distanceUOM: true,\n    numberOfStops: true,\n    sourceTMS: true,\n    driverAssignmentStatus: true,\n    assignedCarrierId: true,\n    assignedTMSCarrierId: true,\n    isAppointmentConfirmed: true,\n    isHazardous: true,\n    isHighValue: true,\n    isTemperatureControlled: true,\n    isFreezeProtected: true,\n    equipmentType: true,\n    executionStatus: true,\n    masterBillOfLoading: true,\n    startState: true,\n    startCity: true,\n    startCountry: true,\n    startDateTime: true,\n    shipmentServices: {\n      serviceDescription: true,\n    },\n    loadStop: {\n      stopType: true,\n      sequenceNo: true,\n      locationName: true,\n      addressLine1: true,\n      addressLine2: true,\n      city: true,\n      state: true,\n      country: true,\n      estimatedArrivalDateTime: true,\n      plannedArrivalDateTime: true,\n      actualArrivalDateTime: true,\n      estimatedStopDuration: true,\n      plannedDepartureDateTime: true,\n      actualDepartureDateTime: true,\n      appointmentEarlyDateTime: true,\n      appointmentLateDateTime: true,\n      actualETADateTime:true,\n      plannedEtaDateTime: true,\n    },\n    shipmentInvolvedParties: {\n      id: true,\n      partyId: true,\n      partyType: true,\n      partyName: true,\n      partyEmail: true,\n      partyPhone: true,\n    },\n    assignmentTransaction: {\n      transactionId: true,\n      driverId: true,\n      driverName: true\n    }\n  };\n  getRequestPayload() {\n    return {\n      query: {\n        getShipments: {\n          __args: this.args(),\n          inTransitCount: true,\n          driverAssignedCount: true,\n          carrierAssignedCount: true,\n          driverAssignedPendingCount: true,\n          deliveredCount: true,\n          inTransitShipments: this.loadDetails,\n          driverAssignedShipments: this.loadDetails,\n          carrierAssginedShipments: this.loadDetails,\n          driverAssignmentPendingShipments: this.loadDetails,\n          deliveredShipments: this.loadDetails,\n        },\n      },\n    };\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport ExecutePage from '../../pages/Execute/ExecutePage.page';\nimport useInjectSaga from '../../utils/injectSaga';\nimport useInjectReducer from '../../utils/injectReducer';\nimport { makeMyLoadCardData, getCount } from '../../selectors/Myload/selector';\nimport reducer from '../../reducers/myload/reducer';\nimport saga from '../../saga/MyLoad/saga';\nimport { MyLoadCard, profileImageSet } from '../../actions/myload/action';\nimport { showPermissionAlert } from '../../actions/Login/action';\nimport {\n  getLoading,\n  getRefreshStatus,\n  getNetworkStatus,\n  getUserDetails\n} from '../../selectors/selector';\nimport { fetchShipments } from '../../actions/carrierAssign/action';\nimport { isEntitled } from '../../utils/common';\nimport { ExicutionLoads } from '../../models/ExicutionLoads.model';\nimport { showAlert } from '../../actions/App/action';\n\nconst key = 'myload';\nclass ExecuteContainer extends PureComponent<any, any> {\n  componentDidMount() {\n    this.props.myLoadData();\n    if (this.props && this.props.userDetails && this.props.userDetails.carrierId) {\n      this.getUserLoads(false);\n    }\n  }\n\n  componentDidUpdate(prevProps: any) {\n    const prevUserDetails = (prevProps && prevProps.userDetails) || {};\n    const currentUserDetails = (this.props && this.props.userDetails) || {};\n    if (\n      currentUserDetails &&\n      currentUserDetails.carrierId !== prevUserDetails.carrierId &&\n      !this.props.loading\n    ) {\n      this.getUserLoads(false);\n    }\n  }\n\n  getUserLoads = (isHideLoader = false) => {\n    if (!this.props.isNetworkAvailable) {\n      return;\n    }\n    try {\n      const carrierId =\n        (this.props && this.props.userDetails && this.props.userDetails.carrierId) || '';\n\n      const userPrincipalName =\n        (this.props && this.props.userDetails && this.props.userDetails.userPrincipalName) || '';\n      const modelLoad: ExicutionLoads = new ExicutionLoads();\n      const isDriver = !isEntitled('myLoad', 'carrierAssigned');\n      modelLoad.carrierId = carrierId;\n      modelLoad.filter = {\n        carrierAssigned: !isDriver,\n        driverAssigned: true,\n        inTransit: true,\n        driverAssignmentPending: true,\n        delivered: true\n      };\n      if (isDriver) {\n        modelLoad.driverId = userPrincipalName;\n      }\n      this.props.fetchShipments(modelLoad.getRequestPayload(), isHideLoader);\n    } catch (error) {\n      console.log('ERROR:', error);\n    }\n  };\n\n  render() {\n    return <ExecutePage {...this.props} getUserLoads={this.getUserLoads} />;\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  loading: getLoading(),\n  myLoadCount: getCount(),\n  myLoadCard: makeMyLoadCardData(),\n  userDetails: getUserDetails(),\n  isInPullToRefresh: getRefreshStatus(),\n  isNetworkAvailable: getNetworkStatus()\n});\n\nconst mapDispatchToProps = (dispatch: Function) => ({\n  myLoadData: () => dispatch(MyLoadCard()),\n  showPermissionAlert: (data: any) => dispatch(showPermissionAlert(data)),\n  profileImg: (data: any) => dispatch(profileImageSet(data)),\n  fetchShipments: (details: any, hideLoader: boolean) =>\n    dispatch(fetchShipments(details, hideLoader)),\n  showAlert: (data: any) => dispatch(showAlert(data))\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nconst withReducer = useInjectReducer({ key, reducer });\nconst withSaga = useInjectSaga({ key, saga });\nexport default compose < any > (withSaga, withReducer, withConnect)(React.memo(ExecuteContainer));\n","export type LatLng = {\n  lat: string;\n  lng: string;\n};\n\nexport type MapProps = {\n  defaultCenter?: LatLng;\n  zoom?: number;\n  mapTypeId?: MapType;\n  disableDefaultUI?: boolean;\n  mapTypeControl?: boolean;\n  scaleControl?: boolean;\n  zoomControl?: boolean;\n  streetViewControl?: boolean;\n  fullscreenControl?: boolean;\n  className?: string;\n};\n\nexport type MapState = {\n  isMapReady: boolean;\n  map: any;\n  google: any;\n  directionsService: any;\n  directionsRenderer: any;\n};\n\nexport enum MapType {\n  roadmap = \"roadmap\",\n  satellite = \"satellite\",\n  hybrid = \"hybrid\",\n  terrain = \"terrain\",\n}\n\nexport type MarkerProps = {\n  position: LatLng | string;\n  title?: string;\n  icon?: string;\n};\n\nexport type InfoWindowProps = {\n  content?: string;\n  pixelOffset?: string;\n  position?: LatLng;\n  maxWidth?: string;\n  title?: string;\n};\n\nexport enum TravelMode {\n  DRIVING = \"DRIVING\",\n  BICYCLING = \"BICYCLING\",\n  TRANSIT = \"TRANSIT\",\n  WALKING = \"WALKING\",\n}\n\nexport enum UnitSystem {\n  METRIC = \"METRIC\",\n  IMPERIAL = \"IMPERIAL\",\n}\n\nexport type DirectionLocation = {\n  locationName: LatLng | string | any;\n  locationType: string;\n  index: number;\n  isMarkerAdded: boolean;\n  latLng: LatLng;\n  postalCode: any;\n  city?: string,\n  state?: string\n};\n\nexport type DirectionsWaypoint = {\n  location: DirectionLocation;\n  stopover?: boolean;\n};\n\nexport type DirectionsRequest = {\n  origin: DirectionLocation;\n  destination: DirectionLocation;\n  travelMode?: TravelMode;\n  unitSystem?: UnitSystem;\n  waypoints?: DirectionsWaypoint[];\n  optimizeWaypoints?: boolean;\n  zoomLevel?: any;\n  directionRenderCallback: () => void;\n  isShowAddrInfoWindow: boolean;\n};\n\nexport type ShapeProps = {\n  strokeColor?: string;\n  strokeOpacity?: number;\n  strokeWeight?: number;\n  fillColor?: string;\n  fillOpacity?: number;\n};\n\nexport type CircleProps = {\n  center: LatLng;\n  radius: number;\n} & ShapeProps;\n\nexport type PolylineOptions = {\n  path: LatLng[];\n} & ShapeProps;\n\nexport type PolygonOptions = {\n  paths: LatLng[];\n} & ShapeProps;\n\nexport type RectangleOptions = {\n  bounds: {\n    north: number;\n    south: number;\n    east: number;\n    west: number;\n  };\n} & ShapeProps;\n\nexport enum ControlPosition {\n  TOP_CENTER = \"TOP_CENTER\",\n  TOP_LEFT = \"TOP_LEFT\",\n  TOP_RIGHT = \"TOP_RIGHT\",\n  LEFT_TOP = \"LEFT_TOP\",\n  RIGHT_TOP = \"RIGHT_TOP\",\n  LEFT_CENTER = \"LEFT_CENTER\",\n  RIGHT_CENTER = \"RIGHT_CENTER\",\n  LEFT_BOTTOM = \"LEFT_BOTTOM\",\n  RIGHT_BOTTOM = \"RIGHT_BOTTOM\",\n  BOTTOM_CENTER = \"BOTTOM_CENTER\",\n  BOTTOM_LEFT = \"BOTTOM_LEFT\",\n  BOTTOM_RIGHT = \"BOTTOM_RIGHT\",\n}\n\nexport type CustomControlProps = {\n  text: string;\n  controlPosition: ControlPosition;\n  iconName?: string;\n  onClick?: () => void;\n};\n","import { createSelector } from \"reselect\";\nimport { initalHomeState } from \"./../../reducers/Home/reducer\";\n\nconst carrierData = (state: any) => state.carrier;\nconst searchData = (state: any) => state.search;\n\nexport const makeSelectRecommendedLoaded = () =>\n  createSelector([carrierData], (carrier) => {\n    return carrier.recommended.loaded || initalHomeState.recommended.loaded;\n  });\n\nexport const makeSelectRecommended = () =>\n  createSelector([carrierData], (carrier) => carrier.recommended.data ||  initalHomeState.recommended.data);\n\n  export const getRecommendedFilter = () =>\n  createSelector([carrierData], (carrier) => {\n    return carrier.recommended.filter || initalHomeState.recommended;\n  });\n\nexport const makeSelectWatched = () =>\n  createSelector([carrierData], (carrier) => {\n    return carrier.watched.data || initalHomeState.watched.data;\n  });\n\nexport const makeSelectWatchedLoaded = () =>\n  createSelector([carrierData], (carrier) => {\n    return carrier.watched.loaded || initalHomeState.watched.loaded;\n  });\nexport const getTotalWatchedRecords = () =>\n  createSelector([carrierData], (carrier) => {\n    return carrier.watched.totalRecords || initalHomeState.watched.totalRecords;\n  });\n  export const getTotalRecommendedRecords = () =>\n  createSelector([carrierData], (carrier) => {\n    return carrier.recommended.totalRecords || initalHomeState.recommended.totalRecords;\n  });\nexport const getWatchedFilter = () =>\n  createSelector([carrierData], (carrier) => {\n    return carrier.watched.filter || initalHomeState.watched;\n  });\n\nexport const getIdParam = (_state: any, props: any) => {\n  const stringParam =\n    (props && props.match && props.match.params && props.match.params[\"id\"]) ||\n    \"\";\n  return stringParam;\n};\nexport const getModule = (_state: any, props: any) => {\n  const module =\n    (props && props.match && props.match.params && props.match.params[0]) || \"\";\n  return module;\n};\nexport const getLoad = () =>\n  createSelector(\n    carrierData,\n    searchData,\n    getIdParam,\n    getModule,\n    (carrierData, searchData, id, module) => {\n      if (module === \"search/results\" && searchData) {\n        return (\n          (searchData &&\n            searchData.loads &&\n            searchData.loads.searchLoads &&\n            searchData.loads.searchLoads.find((x: any) => x.loadId === id)) ||\n          {}\n        );\n      }\n      if (module === \"home/watched\" && carrierData) {\n        console.log(carrierData, \"load\");\n        return (\n          (carrierData &&\n            carrierData.watched &&\n            carrierData.watched.data &&\n            carrierData.watched.data.find((x: any) => x.loadId === id)) ||\n          {}\n        );\n      }\n      if (module === \"home/recommended\" && carrierData) {\n      \n        return (\n          (carrierData &&\n            carrierData.recommended &&\n            carrierData.recommended.data &&\n            carrierData.recommended.data.find((x: any) => x.loadId === id)) ||\n          {}\n        );\n      }\n    }\n  );\n\nexport const getParams = () =>\n  createSelector(searchData, (loads) => (loads && loads.params) || {});\n\nexport const getApiErrorMessage= () =>\ncreateSelector([carrierData], (carrier) => {\n return (carrier.apiErrorMessage) || initalHomeState.apiErrorMessage;\n});\n\nexport const getMemberApiError= () =>\ncreateSelector([carrierData], (carrier) => {\n return (carrier.showMemberAPIError) || initalHomeState.showMemberAPIError;\n})\n","import { Plugins, FilesystemDirectory, Capacitor } from '@capacitor/core';\r\n\r\nconst { Filesystem } = Plugins;\r\n\r\nexport const FileSaver = (\r\n  _data: string,\r\n  location: FilesystemDirectory = FilesystemDirectory.Documents,\r\n  fileName: string = ''\r\n) => {\r\n  const writeFile_Mobile = async () => {\r\n    console.log('PDf', _data);\r\n\r\n    try {\r\n      await Filesystem.writeFile({\r\n        path: fileName,\r\n        data: _data,\r\n        directory: FilesystemDirectory.Cache\r\n        // encoding: FilesystemEncoding.UTF8 // not requred to save base64\r\n      });\r\n\r\n      let path = await Filesystem.getUri({\r\n        directory: FilesystemDirectory.Cache,\r\n        path: fileName\r\n      });\r\n\r\n      return Capacitor.convertFileSrc(path.uri);\r\n    } catch (e) {\r\n      console.error('File System Error', e);\r\n      throw e;\r\n    }\r\n  };\r\n\r\n  const writeFile_Web = () => {\r\n    var startIndex = _data.indexOf('base64,') + 7;\r\n\r\n    var b64 = _data.substring(startIndex);\r\n\r\n    var byteCharacters = atob(b64);\r\n\r\n    var byteNumbers = new ArrayBuffer(byteCharacters.length);\r\n\r\n    var byteArray = new Uint8Array(byteNumbers);\r\n\r\n    for (let i = 0; i < byteCharacters.length; i++) {\r\n      byteArray[i] = byteCharacters.charCodeAt(i);\r\n    }\r\n\r\n    const fileBlob = new Blob([byteArray], { type: 'application/pdf' });\r\n    return URL.createObjectURL(fileBlob);\r\n  };\r\n  return { writeFile_Mobile, writeFile_Web };\r\n};\r\n","import React, { useState, useEffect } from 'react';\nimport { IonCard, IonCardHeader, IonCardContent, IonIcon } from '@ionic/react';\nimport { ToastMessage } from '../../../utils/ToastMessage';\nimport { logEvent } from '../../../utils/Analytics';\nimport { TERM_AND_CONDITION_1, TERM_AND_CONDITION_2 } from '../../../utils/constants';\nconst TermsAndCondition = (props: any) => {\n    const [showTerms,setshowTerms] = useState(false);\n\n    useEffect(() => {\n        props.setTermsAndConState();\n      }, []);\n\n    return (\n        <IonCard class=\"ion-card\" >\n            <IonCardHeader class={`accordion-header ${showTerms ? '' : 'changeColor'}`} onClick={() => {\n                logEvent('ue_load_terms_view', {page: 'Load Details'});\n                 setshowTerms(!showTerms)\n            }}>\n                <span>Terms <span className=\"tm-class\">&amp;</span> Conditions </span>\n                {\n                    showTerms ?\n                        <IonIcon className=\"loadDetails-plusIcon\" src=\"assets/icon/minus-icon.svg\" />\n                        :\n                        <IonIcon className=\"loadDetails-plusIcon\" src=\"assets/icon/plus.svg\" />\n                }\n            </IonCardHeader>\n            <IonCardContent class={`term-class ${showTerms ? 'fadein' : 'fadeout'}`}>\n                <p className=\"terms_conditions_p\">{TERM_AND_CONDITION_1}</p>\n                <p className=\"terms_conditions_p\">{TERM_AND_CONDITION_2}</p>\n            </IonCardContent>\n        </IonCard>\n    )\n}\nexport default TermsAndCondition;\n","import React, { Component } from \"react\";\nimport { MapState, MapProps, MapType } from \"./map.type\";\n\nexport class GoogleMap extends Component<MapProps, MapState> {\n  private readonly mapContainer = React.createRef<HTMLDivElement>();\n\n  constructor(props: MapProps) {\n    super(props);\n    this.state = {\n      isMapReady: false,\n      map: null,\n      google: null,\n      directionsService: null,\n      directionsRenderer: null,\n    };\n  }\n\n  initMap = () => {\n    const {\n      defaultCenter,\n      zoom,\n      mapTypeId,\n      disableDefaultUI,\n      mapTypeControl,\n      scaleControl,\n      streetViewControl,\n      zoomControl,\n      fullscreenControl,\n    } = this.props;\n    const center: any = defaultCenter;\n\n    const map = new google.maps.Map(this.mapContainer.current!, {\n      center,\n      zoom,\n      disableDefaultUI,\n      mapTypeControl,\n      scaleControl,\n      streetViewControl,\n      mapTypeId: mapTypeId || MapType.roadmap,\n      zoomControl,\n      fullscreenControl,\n    });\n    const directionsService = new google.maps.DirectionsService();\n    const directionsRenderer = new google.maps.DirectionsRenderer({\n      map,\n      suppressMarkers: true,\n      // markerOptions: {\n      //   icon: \"http://maps.google.com/mapfiles/ms/icons/orange-dot.png\"\n      // }\n    });\n    directionsRenderer.setMap(map);\n\n    this.setState({\n      map,\n      google,\n      isMapReady: true,\n      directionsService,\n      directionsRenderer,\n    });\n  };\n\n  renderChildren = () => {\n    const { children, defaultCenter } = this.props;\n\n    if (!children) return;\n    const { map, google, directionsService, directionsRenderer } = this.state;\n    return React.Children.map(children, (child: any) => {\n      if (!child) return;\n      return React.cloneElement(child, {\n        map,\n        google,\n        mapCenter: defaultCenter,\n        directionsService,\n        directionsRenderer,\n      });\n    });\n  };\n\n  render() {\n    const { className } = this.props;\n    return (\n      <React.Fragment>\n        <div\n          style={{\n            height: \"100%\",\n            width: \"100%\",\n            translate: \"translate3d(0)\",\n            opacity: 1,\n            position: 'relative'\n          }}\n          ref={this.mapContainer}\n          className={className}\n        />\n        {this.renderChildren()}\n      </React.Fragment>\n    );\n  }\n\n  componentDidMount() {\n    this.initMap();\n  }\n}\n","import React, { useEffect } from \"react\";\nimport {\n  DirectionsRequest,\n  TravelMode,\n  DirectionsWaypoint,\n  DirectionLocation,\n} from \"./map.type\";\n\nexport class DirectionsService extends React.PureComponent<DirectionsRequest> {\n  private initiallyLoaded: boolean;\n  private readonly markers: any[];\n  private markerLocation: DirectionLocation[];\n  private isOriginIdentified = false;\n  private isDestinationIdentified = false;\n\n  private readonly icons = {\n    start: \"assets/images/origin.svg\",\n    waypoint: \"assets/images/stops.svg\",\n    end: \"assets/images/destination.svg\",\n    nfr: \"assets/images/stops-green.svg\",\n  };\n  constructor(props: DirectionsRequest) {\n    super(props);\n    this.initiallyLoaded = false;\n    this.markers = [];\n    this.markerLocation = [];\n  }\n\n  render() {\n    return null;\n  }\n\n  componentDidMount() {\n    this.renderDirections();\n  }\n\n  componentDidUpdate(prevProps: DirectionsRequest) {\n    if (\n      JSON.stringify(this.props.origin) !== JSON.stringify(prevProps.origin) ||\n      JSON.stringify(this.props.destination) !==\n        JSON.stringify(prevProps.destination) ||\n      JSON.stringify(this.props.waypoints) !==\n        JSON.stringify(prevProps.waypoints) ||\n      this.initiallyLoaded === false\n    ) {\n      this.initiallyLoaded = true;\n      this.renderDirections();\n    }\n  }\n\n  renderDirections = () => {\n    const {\n      origin,\n      destination,\n      travelMode = TravelMode.DRIVING,\n      waypoints,\n      optimizeWaypoints,\n      map,\n      google,\n      directionsService,\n      directionsRenderer,\n      directionRenderCallback,\n    } = this.props as any;\n\n    if (google) {\n      let serviceWaypoints: { location: string; stopover?: boolean }[] = [];\n      if (waypoints) {\n        serviceWaypoints = waypoints.map(\n          (item: DirectionsWaypoint, index: number) => {\n            const lat =\n              (item.location &&\n                item.location.latLng &&\n                item.location.latLng.lat) ||\n              \"\";\n            const lng =\n              (item.location &&\n                item.location.latLng &&\n                item.location.latLng.lng) ||\n              \"\";\n\n            return {\n              location: new google.maps.LatLng(lat, lng),\n              stopover: item.stopover,\n            };\n          }\n        );\n      }\n      const originLat = (origin && origin.latLng && origin.latLng.lat) || \"\";\n      const originLng = (origin && origin.latLng && origin.latLng.lng) || \"\";\n\n      const destinationLat =\n        (destination && destination.latLng && destination.latLng.lat) || \"\";\n      const destinationLng =\n        (destination && destination.latLng && destination.latLng.lng) || \"\";\n\n      const request = {\n        origin: new google.maps.LatLng(originLat, originLng),\n        destination: new google.maps.LatLng(destinationLat, destinationLng),\n        travelMode,\n        waypoints: serviceWaypoints,\n        optimizeWaypoints,\n      };\n\n      this.clearAllMarker();\n      this.clearMarkerLocations();\n      directionsService.route(request, (result: any, status: string) => {\n        if (status === \"OK\") {\n          const route: any[] = result.routes[0].legs;\n          if (route) {\n            const total = route.length;\n            this.addMarkerLocations();\n\n            let allDestination: DirectionLocation[] = this.markerLocation.filter(\n              (item: DirectionLocation) => {\n                return item.locationType === \"D\";\n              }\n            );\n\n            allDestination = allDestination\n              .slice()\n              .sort(\n                (a: DirectionLocation, b: DirectionLocation) =>\n                  a.index - b.index\n              );\n\n            this.clearAllMarker();\n            route.forEach((item: any, index: number) => {\n              this.drawMarkerWithCustomPin(\n                item.start_location,\n                item.start_address,\n                map,\n                allDestination[allDestination.length - 1].index\n              );\n              if (index + 1 === total) {\n                this.drawMarkerWithCustomPin(\n                  item.end_location,\n                  item.end_address,\n                  map,\n                  allDestination[allDestination.length - 1].index\n                );\n              }\n            });\n          }\n          const _map = directionsRenderer.getMap();\n          directionsRenderer.setDirections(result);\n          _map.setZoom(14);\n        } else {\n          directionsRenderer.setDirections({ routes: [] });\n        }\n        directionRenderCallback();\n      });\n    }\n  };\n\n  drawMarkerWithCustomPin = (\n    startLocation: any,\n    startAddress: string,\n    map: any,\n    destinationIndex: number\n  ) => {\n    let iconPath = this.icons.waypoint;\n    const locationResponse: {\n      locationType: string;\n      index: number;\n    } = this.addMarkerToTheLocation(startAddress);\n\n    if (locationResponse.locationType === \"P\" && !this.isOriginIdentified) {\n      iconPath = this.icons.start;\n      this.isOriginIdentified = true;\n    } else if (\n      locationResponse.locationType === \"D\" &&\n      !this.isDestinationIdentified &&\n      locationResponse.index === destinationIndex\n    ) {\n      iconPath = this.icons.end;\n      this.isDestinationIdentified = true;\n    } else if (locationResponse.locationType === \"NFR\") {\n      iconPath = this.icons.nfr;\n    }\n\n    this.createMarker(startLocation, startAddress, map, iconPath);\n  };\n\n  createMarker = (position: any, address: string, map: any, icon: any) => {\n    const marker = new google.maps.Marker({\n      position,\n      map,\n      icon,\n    });\n    \n    if(!this.props.isShowAddrInfoWindow){\n      let data = address.split(', ');\n      if(data && data.length> 1){\n        address = data[1] + \", \" + data[2];\n      }\n    }\n\n    const infoWindow = new google.maps.InfoWindow({\n      content: address,\n    });\n    \n    google.maps.event.addDomListener(marker, \"click\", function() {\n      infoWindow.open(map, marker);\n    });\n    this.markers.push(marker);\n  };\n\n  clearAllMarker = () => {\n    if (this.markers) {\n      this.markers.forEach((marker) => {\n        marker.setMap(null);\n      });\n    }\n  };\n  addMarkerLocations = () => {\n    const { origin, destination, waypoints } = this.props;\n    let _markerLocations: DirectionLocation[] = [];\n    _markerLocations.push(origin);\n    _markerLocations.push(destination);\n    if (waypoints) {\n      waypoints.forEach((item: DirectionsWaypoint, index: number) => {\n        _markerLocations.push(item.location);\n      });\n    }\n    _markerLocations = _markerLocations\n      .slice()\n      .sort((a: DirectionLocation, b: DirectionLocation) => a.index - b.index);\n\n    this.markerLocation = _markerLocations;\n  };\n  addMarkerToTheLocation = (\n    locationName: string\n  ): { locationType: string; index: number } => {\n    let locationResponse: { locationType: string; index: number } = {\n      locationType: \"\",\n      index: 0,\n    };\n\n    if (this.markerLocation) {\n      const locationParts: string[] = locationName.split(\",\");\n      let locationMatched = false;\n      this.markerLocation.forEach(\n        (location: DirectionLocation, index: number) => {\n          if (locationMatched) {\n            return false;\n          }\n          let name: string = location.locationName;\n          name = name.toUpperCase();\n          let countSubstr = 0;\n          locationParts.forEach((str: string) => {\n            if (name.includes(str.toUpperCase())) {\n              countSubstr++;\n            }\n          });\n\n          if (\n            // locationParts.length - 1 <= countSubstr &&\n            2 <= countSubstr &&\n            !this.markerLocation[index].isMarkerAdded\n          ) {\n            this.markerLocation[index].isMarkerAdded = true;\n            locationResponse = {\n              locationType: this.markerLocation[index].locationType,\n              index,\n            };\n            locationMatched = true;\n          }\n        }\n      );\n    }\n\n    return locationResponse;\n  };\n  clearMarkerLocations = () => {\n    this.markerLocation = [];\n    this.isDestinationIdentified = false;\n    this.isOriginIdentified = false;\n  };\n}\n","import React from \"react\";\nimport { isPlatform, IonLoading, IonGrid } from \"@ionic/react\";\nimport { GoogleMap } from \"../../../components/shared/GoogleMap/map/map\";\nimport {\n  MapType,\n  DirectionsWaypoint,\n  DirectionLocation\n} from \"../../../components/shared/GoogleMap/map/map.type\";\nimport { DirectionsService } from \"../../../components/shared/GoogleMap/map/directionsService\";\nimport \"./LoadMap.scss\";\nimport { GoogleMapsWrapper } from \"../../../utils/common\";\n\nexport interface ILoadStops {\n  appointmentFrom?: Date;\n  appointmentTo?: Date;\n  city?: string;\n  country?: string;\n  deadHead?: string;\n  postalCode?: string;\n  specialServices?: any[];\n  state?: string;\n  stopId?: string;\n  stopType?: string; // P-Pickup D- Drop\n  timeZone?: string;\n  stopSequence?: number;\n  sequenceNo?: number;\n  longitude?: string;\n  latitude?: string;\n  locationName?: string;\n}\nexport interface ILoadMapProps {\n  loadStop: ILoadStops[];\n  isNetworkAvailable?: boolean;\n}\n\ninterface ILoadMapState {\n  isShowMap: boolean;\n  origin: DirectionLocation;\n  destination: DirectionLocation;\n  waypoints: DirectionsWaypoint[];\n  isMapVisible: boolean;\n  isShowAddrInfoWindow: boolean;\n}\n\nexport class LoadMap extends React.PureComponent<ILoadMapProps, ILoadMapState> {\n  constructor(props: ILoadMapProps) {\n    super(props);\n    this.state = {\n      isShowMap: false,\n      origin: {\n        locationName: \"\",\n        locationType: \"\",\n        index: -1,\n        isMarkerAdded: false,\n        latLng: { lat: \"\", lng: \"\" },\n        postalCode: \"\",\n        city: \"\",\n        state: \"\",\n      },\n      destination: {\n        locationName: \"\",\n        locationType: \"\",\n        index: -1,\n        isMarkerAdded: false,\n        latLng: { lat: \"\", lng: \"\" },\n        postalCode: \"\",\n        city: \"\",\n        state: \"\"\n      },\n      waypoints: [],\n      isMapVisible: false,\n      isShowAddrInfoWindow: true\n    };\n  }\n\n  async componentDidMount(): Promise<void> {\n    const locationDetails = await this.getLocations(this.props);\n    if (locationDetails.origin) {\n      this.setState({\n        origin: locationDetails.origin\n      });\n    }\n    if (locationDetails.destination) {\n      this.setState({\n        destination: locationDetails.destination\n      });\n    }\n    this.setState({\n      waypoints: locationDetails.waypoints || [],\n      isShowMap: true,\n      isMapVisible: false\n    });\n  }\n\n  async componentDidUpdate(prevProps: ILoadMapProps): Promise<void> {\n    const locationDetails = await this.getLocations(this.props);\n    const oldLocationDetails = await this.getLocations(prevProps);\n    if (\n      JSON.stringify(locationDetails) !== JSON.stringify(oldLocationDetails)\n    ) {\n      if (locationDetails.origin) {\n        this.setState({\n          origin: locationDetails.origin\n        });\n      }\n      if (locationDetails.destination) {\n        this.setState({\n          destination: locationDetails.destination\n        });\n      }\n      this.setState({\n        waypoints: locationDetails.waypoints || [],\n        isShowMap: true,\n        isMapVisible: false\n      });\n    }\n  }\n\n  directionRenderCallback = (): void => {\n    this.setState({ isMapVisible: true });\n  };\n\n  getLocations = async (\n    data: ILoadMapProps\n  ): Promise<Partial<ILoadMapState>> => {\n    let { loadStop = [] } = data;\n    let origin: DirectionLocation = {\n      locationName: \"\",\n      locationType: \"\",\n      index: -1,\n      isMarkerAdded: false,\n      latLng: { lat: \"\", lng: \"\" },\n      postalCode: \"\",\n      city: \"\",\n      state:\"\"\n    };\n    let destination: DirectionLocation = {\n      locationName: \"\",\n      locationType: \"\",\n      index: -1,\n      isMarkerAdded: false,\n      latLng: { lat: \"\", lng: \"\" },\n      postalCode: \"\",\n      city: \"\",\n      state: \"\"\n    };\n    const waypoints: DirectionsWaypoint[] = [];\n    const totalPoints = loadStop.length;\n    loadStop = loadStop.slice().sort((load1: ILoadStops, load2: ILoadStops) => {\n      if (load1.sequenceNo && load2.sequenceNo) {\n        return load1.sequenceNo - load2.sequenceNo;\n      }\n      if (load1.stopSequence && load2.stopSequence) {\n        return load1.stopSequence - load2.stopSequence;\n      }\n      return 0;\n    });\n\n    loadStop.forEach((item: ILoadStops, index: number) => {\n      if (index === 0) {\n        origin = {\n          locationName: `${item.locationName} ${item.city} ${item.state} ${item.country}`,\n          locationType: item.stopType || \"\",\n          latLng: { lat: item.latitude || \"\", lng: item.longitude || \"\" },\n          index,\n          isMarkerAdded: false,\n          postalCode: item.postalCode,\n          city: item.city,\n          state: item.state\n        };\n      } else if (index + 1 === totalPoints) {\n        destination = {\n          locationName: `${item.locationName} ${item.city} ${item.state} ${item.country}`,\n          locationType: item.stopType || \"\",\n          index,\n          isMarkerAdded: false,\n          latLng: { lat: item.latitude || \"\", lng: item.longitude || \"\" },\n          postalCode: item.postalCode,\n          city: item.city,\n          state: item.state\n        };\n      } else {\n        waypoints.push({\n          location: {\n            locationName: `${item.locationName} ${item.city} ${item.state} ${item.country}`,\n            locationType: item.stopType || \"\",\n            index,\n            isMarkerAdded: false,\n            latLng: { lat: item.latitude || \"\", lng: item.longitude || \"\" },\n            postalCode: item.postalCode\n          },\n          stopover: true\n        });\n      }\n    });\n\n    if (origin.city && origin.state && (!origin.latLng.lat || !origin.latLng.lng)) {\n      this.setState({isShowAddrInfoWindow: false});\n      await this.setLatLngByCityName(origin.city +\",\"+ origin.state, origin);\n    } else {\n      this.setState({isShowAddrInfoWindow: true});\n    }\n\n    if (destination.city && destination.state && (!destination.latLng.lat || !destination.latLng.lng)) {\n      await this.setLatLngByCityName(destination.city +\",\" + destination.state, destination);\n    }\n    return { origin, destination, waypoints };\n  };\n\n  setLatLngByCityName = async (cityState: string, place: any) => {\n    const location: any = await GoogleMapsWrapper.details.getGeoCoderLatLong(cityState);\n    place.isMarkerAdded = true;\n    place.latLng.lat = location.lat.toString();\n    place.latLng.lng = location.lng.toString();\n  };\n\n  render() {\n    const { origin, destination, waypoints, isMapVisible, isShowAddrInfoWindow } = this.state;\n    const isDesktop = isPlatform(\"desktop\");\n    return (\n      <>\n        <IonLoading\n          isOpen={!isMapVisible}\n          spinner={null}\n          message={`<img src= \"assets/images/Schneider_Spinner-transparent.gif\" className=\"loader-image\" />`}\n          show-backdrop={false}\n          cssClass=\"loader-message\"\n        />\n        <div\n          className=\"load-map\"\n          style={{\n            display: `${isMapVisible ? \"block\" : \"none\"}`,\n            position: 'relative'\n          }}\n        >\n            <IonGrid class=\"map-grid\" style={{ height: \"250px\", overflow: \"hidden\", position: 'absolute', top: 0, left: 0, width: '100%'}}>\n            {this.state.isShowMap && (\n              <GoogleMap\n                defaultCenter={{ lng: \"105.2551\", lat: \"54.526\" }}\n                zoom={10}\n                mapTypeControl={false}\n                streetViewControl={false}\n                mapTypeId={MapType.roadmap}\n                zoomControl={isDesktop}\n                fullscreenControl\n              >\n                <DirectionsService\n                  origin={origin}\n                  destination={destination}\n                  waypoints={waypoints}\n                  isShowAddrInfoWindow ={isShowAddrInfoWindow}\n                  optimizeWaypoints\n                  directionRenderCallback={this.directionRenderCallback}\n                />\n              </GoogleMap>\n            )}\n          </IonGrid>\n        </div>\n      </>\n    );\n  }\n}\n","export interface ActionType {\n    type: string;\n    payload?: object;\n  }\nexport interface IBuyRequest {\n    userId?: string;\n    sourceSystem?: string;\n    loadId?: string;\n    binRateId?: string;\n    amount?: number;\n    currency?: Currency;\n    carrierId?:string;\n    lhlCharges ?: number;\n    fsrCharges ?: number;\n}\n\n\nexport enum Currency {\n    USD = \"USD\",\n    CAD = \"CAD\"\n  }\n  export interface IBuyResponse {\n    status ?: string;\n    message?: string;\n}\n","import React from 'react';\nimport {\n  IonModal,\n  IonCardContent,\n  IonCardHeader,\n  IonCard,\n  IonRow,\n  IonCol,\n  IonButton,\n  isPlatform\n} from '@ionic/react';\nimport * as Constants from '../../../utils/constants';\nimport './BookLoadModal.scss';\nimport { logEvent } from '../../../utils/Analytics';\n\ninterface BookLoadModalProps {\n  isBookLoadModal: boolean;\n  closeBookLoadModal: Function;\n  bookedDetails: any;\n  buyLoad: any;\n  declineBookLoad: any;\n  carrierId: any;\n  lead: string;\n}\nexport const BookLoadModal: React.FC<BookLoadModalProps> = ({\n  isBookLoadModal,\n  closeBookLoadModal,\n  bookedDetails,\n  buyLoad,\n  declineBookLoad,\n  carrierId,\n  lead\n}) => {\n  const acceptBookLoad = () => {\n    buyLoad();\n    // Analytics implementation\n    logEvent(Constants.EVENT.UE_LOAD_RATE_ACCEPT, {\n      screen: Constants.SCREEN.LOAD_DETAILS_RATE,\n      carrierId,\n      lead\n    });\n  };\n  const decimalTotalCharge = (Math.round(bookedDetails.totalCharge*100)/100).toFixed(2);\n  return (\n    <>\n      <IonModal\n        isOpen={isBookLoadModal}\n        cssClass=\"dropdown-modal\"\n        backdropDismiss={false}\n        onDidDismiss={() => closeBookLoadModal()}>\n        <div className=\"modal-div\" onClick={() => closeBookLoadModal()}>\n          <IonCard className=\"BookLoadCard\">\n            <IonCardHeader className=\"start-trip-cardContent\" onClick={() => closeBookLoadModal()}>\n              {Constants.VIEW_RATE_DETAILS}\n            </IonCardHeader>\n            <IonCardContent className=\"book-card-content\">\n              <div className=\"book-load-cardContent\">\n                <IonRow>\n                  <IonCol className=\"reference-type-header book-header\" size=\"4\">\n                    {Constants.CHARGE_DESCRIPTION}\n                  </IonCol>\n                  <IonCol className=\"reference-type-header book-load-col2 book-header\" size=\"8\">\n                    <IonRow>\n                      <IonCol size=\"4.5\" className=\"book-load-col3 \">\n                        {Constants.RATE_QUALIFIER}\n                      </IonCol>\n                      <IonCol size=\"3\" className=\"book-load-col3 \">\n                        {Constants.BOOLOAD_QTY}\n                      </IonCol>\n                      <IonCol size=\"4.5\" className=\"book-load-col\">\n                        {Constants.BOOKLOAD_TOTAL}\n                      </IonCol>\n                    </IonRow>\n                  </IonCol>\n                </IonRow>\n                <IonCardContent className=\"rate-card-scroll\">\n                  <BookLoadTable\n                    bookloadName={bookedDetails.lineHaulCharge.chargeDescription}\n                    rateQualifier={bookedDetails.lineHaulCharge.rateQualifier}\n                    quantity={bookedDetails.lineHaulCharge.quantity}\n                    charge={bookedDetails.lineHaulCharge.charge}\n                    unitCharge={bookedDetails.lineHaulCharge.unitCharge}\n                  />\n                  <BookLoadTable\n                    bookloadName={bookedDetails.fuelCharge.chargeDescription}\n                    rateQualifier={bookedDetails.fuelCharge.rateQualifier}\n                    quantity={bookedDetails.fuelCharge.quantity}\n                    charge={bookedDetails.fuelCharge.charge}\n                    unitCharge={bookedDetails.fuelCharge.unitCharge}\n                  />\n\n                  {bookedDetails.accessorials.map((bookLoad: any, index: number) => (\n                    <BookLoadTable\n                      key={index}\n                      bookloadName={bookLoad.accessorialDescription}\n                      rateQualifier={bookLoad.accessorialCharge.rateQualifier}\n                      quantity={bookLoad.accessorialCharge.quantity}\n                      charge={bookLoad.accessorialCharge.charge}\n                      unitCharge={bookedDetails.accessorialCharge.unitCharge}\n                    />\n                  ))}\n                </IonCardContent>\n                <IonRow className=\"book-load-row\">\n                  <IonCol>Total</IonCol>\n                  <IonCol className=\"Total-count\">${decimalTotalCharge}</IonCol>\n                </IonRow>\n              </div>\n            </IonCardContent>\n            <p className=\"book-load-p\">{Constants.BOOK_LOAD_MODAL_ACCEPT}</p>\n            <IonRow class=\"accept-btn-row\">\n              <IonCol size={isPlatform('mobile') ? '' : '5'}>\n                <IonButton\n                  data-test=\"ToastMessage-IonButton1\"\n                  class=\"load-btn \"\n                  onClick={() => declineBookLoad()}>\n                  {Constants.BOOKLOAD_DECLINE_CTA_TEXT}\n                </IonButton>\n              </IonCol>\n              <IonCol size={isPlatform('mobile') ? '0' : '0.8'} />\n              <IonCol size={isPlatform('mobile') ? '' : '5'}>\n                <IonButton\n                  data-test=\"acceptBuyLoad\"\n                  class=\"load-btn\"\n                  onClick={() => acceptBookLoad()}>\n                  {Constants.BOOKLOAD_ACCEPT_CTA_TEXT}\n                </IonButton>\n              </IonCol>\n            </IonRow>\n          </IonCard>\n        </div>\n      </IonModal>\n    </>\n  );\n};\n\nexport const BookLoadTable = (props: any) => {\n  const decimalCharge = (Math.round(props.charge*100)/100).toFixed(2);\n  return (\n    <>\n      <IonRow className=\"book-header-border\">\n        <IonCol className=\"reference-val \" size=\"4.5\">\n          {props.bookloadName}\n        </IonCol>\n        <IonCol size=\"7.5\">\n          <IonRow>\n            <IonCol className=\"reference-val bookload-OK book-load-col3\" size=\"4.5\">\n              {`${props.unitCharge}/${props.rateQualifier}`}\n            </IonCol>\n            <IonCol className=\"reference-val book-load-col3  bookload-OK\" size=\"3\">\n              {props.quantity}\n            </IonCol>\n            <IonCol className=\"reference-val book-load-col \" size=\"4.5\">\n              ${decimalCharge}\n            </IonCol>\n          </IonRow>\n        </IonCol>\n      </IonRow>\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport {\n  IonModal,\n  IonCardContent,\n  IonCardHeader,\n  IonCard,\n  IonRow,\n  IonCol,\n  IonButton\n} from '@ionic/react';\nimport * as Constants from '../../../utils/constants';\nimport './BookLoadModal.scss';\nimport { BOOKLOAD_THANK_YOU_MESSAGE } from '../../../utils/constants';\n\nexport const BookLoadConfirmModal = (props: any) => {\n  const [confirmModal, setConfirmModal] = useState(false);\n  const confirmModalclose = (): void => {\n    setConfirmModal(false);\n  };\n  const confirmBookLoadOk = (): void => {\n    setConfirmModal(false);\n    props.confirmBookLoad();\n  };\n  useEffect(() => {\n    setConfirmModal(true);\n  }, [props.confirmModal]);\n\n  return (\n    <IonModal\n      isOpen={confirmModal}\n      cssClass=\"dropdown-modal\"\n      backdropDismiss={false}\n      onDidDismiss={() => confirmModalclose()}>\n      <IonCard className=\"bookLoad-thankyou\">\n        <IonCardHeader className=\"start-trip-cardContent\">\n          {props.bookLoadResponse.status === Constants.BOOKLOAD_STATUS_OK\n            ? Constants.BOOKLOAD_THANKYOU_HEADER\n            : props.bookLoadResponse.status === Constants.BOOKLOAD_STATUS_REJECTED\n            ? Constants.BOOKLOAD_REQUEST_REJECTED_HEADER\n            : props.bookLoadResponse.status === Constants.BOOKLOAD_ONHOLD\n            ? Constants.BOOKLOAD_ON_HOLD\n            : props.bookLoadResponse.status === Constants.BOOKLOAD_CANCELLED\n            ? Constants.BOOKLOAD_CANCELLED_MESSAGE\n            : null}\n        </IonCardHeader>\n        <IonCardContent>\n          <p className=\"bookload-thanku-p\">\n            {props.bookLoadResponse.status === Constants.BOOKLOAD_STATUS_OK\n              ? BOOKLOAD_THANK_YOU_MESSAGE.replace('{{LOAD_ID}}', props.loadId)\n              : props.bookLoadResponse.status === Constants.BOOKLOAD_STATUS_REJECTED\n              ? props.bookLoadResponse.message\n              : props.bookLoadResponse.status === Constants.BOOKLOAD_ONHOLD\n              ? props.bookLoadResponse.message\n              : props.bookLoadResponse.status === Constants.BOOKLOAD_CANCELLED\n              ? props.bookLoadResponse.message\n              : null}\n          </p>\n          <IonRow className=\"book-load-thankyou-row\" data-test-id=\"buyload-validation\">\n            <IonCol size=\"3\" />\n            <IonCol className=\"bookload-OK\" size=\"6\">\n              <IonButton class=\"load-btn\" onClick={confirmBookLoadOk} data-test=\"confirm-bookload\">\n                Ok\n              </IonButton>\n            </IonCol>\n          </IonRow>\n        </IonCardContent>\n      </IonCard>\n    </IonModal>\n  );\n};\n\nexport const GetShipmentModal = (props: any) => {\n  const [isGetShipmentModal, setisGetShipmentModal] = useState(props.isGetShipmentModal);\n  const getShipmentOk = () => {\n    setisGetShipmentModal(false);\n    props.declineBookLoad();\n  };\n  useEffect(() => {\n    setisGetShipmentModal(props.isGetShipmentModal);\n  }, [props.isGetShipmentModal]);\n  return (\n    <IonModal\n      isOpen={isGetShipmentModal}\n      cssClass=\"dropdown-modal\"\n      backdropDismiss={false}\n      onDidDismiss={() => props.closeBookLoadModal()}>\n      <IonCard className=\"bookLoad-thankyou\">\n        <IonCardHeader className=\"start-trip-cardContent\">\n          {Constants.BOOKLOAD_THANKYOU_HEADER}\n        </IonCardHeader>\n        <IonCardContent>\n          <p className=\"bookload-thanku-p\">{Constants.BOOKLOAD_THANK_YOU_ERROR_MESSAGE}</p>\n          <IonRow className=\"book-load-thankyou-row\">\n            <IonCol size=\"3\" />\n            <IonCol className=\"bookload-OK\" size=\"6\">\n              <IonButton class=\"load-btn\" onClick={getShipmentOk} data-test=\"getShipment\">\n                Ok\n              </IonButton>\n            </IonCol>\n          </IonRow>\n        </IonCardContent>\n      </IonCard>\n    </IonModal>\n  );\n};\n","import { IBuyRequest } from \"../../schemas/BookLoad/BookLoad.schema\";\nimport { VariableType } from 'json-to-graphql-query';\nexport class BookLoad {\n  private __BookLoad_state: IBuyRequest = {};\n\n  constructor() { }\n  get userId() {\n    return this.__BookLoad_state.userId;\n  }\n  set userId(value) {\n    this.__BookLoad_state.userId = value;\n  }\n  get carrierId() {\n    return this.__BookLoad_state.carrierId;\n  }\n  set carrierId(value) {\n    this.__BookLoad_state.carrierId = value;\n  }\n  set sourceSystem(value) {\n    this.__BookLoad_state.sourceSystem = value;\n  }\n  get sourceSystem() {\n    return this.__BookLoad_state.sourceSystem;\n  }\n  set loadId(value) {\n    this.__BookLoad_state.loadId = value;\n  }\n  get loadId() {\n    return this.__BookLoad_state.loadId;\n  }\n  set binRateId(value) {\n    this.__BookLoad_state.binRateId = value;\n  }\n  get binRateId() {\n    return this.__BookLoad_state.binRateId;\n  }\n  set amount(value) {\n    this.__BookLoad_state.amount = value;\n  }\n  get amount() {\n    return this.__BookLoad_state.amount;\n  }\n  set currency(value) {\n    this.__BookLoad_state.currency = value;\n  }\n  get currency() {\n    return this.__BookLoad_state.currency;\n  }\n  set lhlCharges(value) {\n    this.__BookLoad_state.lhlCharges = value;\n  }\n  get lhlCharges() {\n    return this.__BookLoad_state.lhlCharges;\n  }\n  set fsrCharges(value) {\n    this.__BookLoad_state.fsrCharges = value;\n  }\n  get fsrCharges() {\n    return this.__BookLoad_state.fsrCharges;\n  }\n  \n  getRequestPayload() {\n    return {\n        bookLoad: {\n          __variables: {\n            input: 'BuyRequest'\n          },\n          buy: {\n            __args: {\n              input: new VariableType('input')\n            },\n            status: true,\n            message: true\n          }\n        },\n    };\n  }\n \n}","import { IGetShipmentRequest } from \"../../schemas/getShipment/GetShipment.schema\";\nimport { stopActivityProps } from \"../stopActivity.model\";\nexport class GetShipment {\n  private __GetShipment_state: IGetShipmentRequest = {\n    shipmentIds: [],\n  };\n\n  set shipmentIds(value) {\n    this.__GetShipment_state.shipmentIds = value;\n  }\n  \n  get shipmentIds() {\n    return this.__GetShipment_state.shipmentIds;\n  }\n\n  getRequestShipmentPayload() {\n    return {\n      query: {\n        getShipment: {\n          __args: {\n            shipmentIds: this.__GetShipment_state.shipmentIds,\n          },\n            shipmentId: true,\n            lineOfBusiness: true,\n            transportMode: true,\n            totalWeight: true,\n            weightUOM: true,\n            totalDistance: true,\n            distanceUOM: true,\n            numberOfStops: true,\n            sourceTMS: true,\n            driverAssignmentStatus: true,\n            assignedCarrierId: true,\n            assignedTMSCarrierId: true,\n            isAppointmentConfirmed: true,\n            isHazardous: true,\n            isHighValue: true,\n            isTemperatureControlled: true,\n            isFreezeProtected: true,\n            readyDateTime: true,\n            readyDateTimeZone: true,\n            equipmentType: true,\n            predecessorShipmentId: true,\n            successorShipmentId: true,\n            assignmentStatus: true,\n            executionStatus: true,\n            masterBillOfLoading: true,\n            shipmentServices: {\n              serviceDescription: true,\n            },\n            startState: true,\n            startCity: true,\n            startCountry: true,\n            startDateTime: true,\n            loadStop: {\n              stopId: true,\n              locationId: true,\n              stopType: true,\n              sequenceNo: true,\n              locationName: true,\n              addressLine1: true,\n              addressLine2: true,\n              city: true,\n              state: true,\n              country: true,\n              postalCode: true,\n              timeZone: true,\n              longitude: true,\n              latitude: true,\n              estimatedArrivalDateTime: true,\n              plannedArrivalDateTime: true,\n              actualArrivalDateTime: true,\n              estimatedStopDuration: true,\n              plannedEtaDateTime: true,\n              plannedDepartureDateTime: true,\n              actualDepartureDateTime: true,\n              appointmentEarlyDateTime: true,\n              appointmentLateDateTime: true,\n              estimatedStopDurationUom: true,\n              actualETADateTime: true,\n              isTrailerInSet: true,\n              stopActivity: stopActivityProps,\n              stopReference: {\n                id: true,\n                type: true,\n                value: true,\n                stopId: true,\n                shipmentId: true,\n                display: true\n              },\n            },\n          shipmentInvolvedParties: {\n            id: true,\n            partyId: true,\n            partyType: true,\n            partyName: true,\n            partyEmail: true,\n            partyPhone: true,\n          },\n          shipmentReferences: {\n            id: true,\n            type: true,\n            value: true,\n            stopId: true,\n            shipmentId: true,\n            display: true\n          },\n          assignmentTransaction: {\n            transactionId: true,\n            driverId: true,\n            driverName: true\n          }\n        },\n      },\n    };\n  }\n}\n","import React, { useEffect, useState, useMemo } from \"react\";\nimport {\n  isPlatform,\n  IonModal,\n  IonContent,\n  IonToolbar,\n  IonButtons,\n  IonTitle,\n  IonIcon,\n  IonLoading,\n} from \"@ionic/react\";\nimport { GoogleMap } from \"../../../components/shared/GoogleMap/map/map\";\nimport { Places } from \"../../../components/shared/GoogleMap/map/places\";\nimport { MapType } from \"../../../components/shared/GoogleMap/map/map.type\";\n\nimport \"./LoadMap.scss\";\n\nexport interface ILoadMapSatelliteProps {\n  locationName: string;\n  shipmentId: string;\n  position?: any;\n  showSatelliteMap: boolean;\n  onDismissSatelliteMap: () => void;\n}\n\nexport interface ILoadMapSatelliteState {\n  isMapVisible: boolean;\n  isShowMap: boolean;\n}\n\nexport class LoadMapSatellite extends React.Component<\nILoadMapSatelliteProps,\nILoadMapSatelliteState\n> {\n  private readonly container = React.createRef<HTMLDivElement>();\n\n  private map?: google.maps.Map;\n\n  private readonly service?: google.maps.places.PlacesService;\n\n  private infowindow?: google.maps.InfoWindow;\n\n  constructor(props: ILoadMapSatelliteProps) {\n    super(props);\n  }\n\n  initMap = (): void => {\n    if (!this.props.showSatelliteMap) {\n      return;\n    }\n    this.infowindow = new google.maps.InfoWindow();\n    this.map = new google.maps.Map(this.container.current!, {\n      center: this.props.position,\n      zoom: 18,\n      mapTypeId: \"hybrid\",\n      mapTypeControl: false,\n      streetViewControl: true,\n      zoomControl: true,\n      fullscreenControl: false,\n    });\n    this.createMarker(this.props.position);\n  };\n\n  createMarker = (pposition: any) => {\n    const marker = new google.maps.Marker({\n      map: this.map,\n      position: pposition,\n      icon: \"assets/images/destination.svg\",\n    });\n\n    google.maps.event.addListener(marker, \"click\", () => {\n      if(this.infowindow) {\n        this.infowindow.setContent(this.props.locationName);\n        this.infowindow.open(this.map, marker);\n      }\n    });\n  };\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.initMap();\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: ILoadMapSatelliteProps) {\n    setTimeout(() => {\n      this.initMap();\n    }, 1000);\n  }\n\n  render() {\n    const isDesktop = isPlatform(\"desktop\");\n    const {\n      shipmentId,\n      showSatelliteMap,\n      onDismissSatelliteMap,\n    } = this.props;\n\n    return (\n      <>\n        <IonModal\n          isOpen={showSatelliteMap}\n          onDidDismiss={() => onDismissSatelliteMap()}\n          animated={false}\n          cssClass={`${\n            isDesktop ? \"satellite-view-desktop\" : \"satellite-view-mobile\"\n          }`}\n        >\n          <IonContent fullscreen={isDesktop}>\n            <IonToolbar className=\"satellite-toolbar\">\n              <IonButtons\n                slot=\"end\"\n                onClick={() => {\n                  onDismissSatelliteMap();\n                }}\n              >\n                <IonIcon className=\"satellite-close\" icon=\"close\" />\n              </IonButtons>\n              <IonTitle className=\"satellite-title\">{`${\n                isDesktop ? \"Satellite view\" : shipmentId\n              }`}</IonTitle>\n            </IonToolbar>\n            <div className=\"satellite-map\" ref={this.container}></div>\n          </IonContent>\n        </IonModal>\n      </>\n    );\n  }\n}\n","import {\n  IDriverListRequest\n} from \"../../schemas/carrierAssign/CarrierAssign.schema\";\n\nexport class DriverList {\n  private __DriverList_state: IDriverListRequest = {};\n\n  get carrierId() {\n    return this.__DriverList_state.carrierId;\n  }\n\n  set carrierId(value) {\n    if (value) {\n      this.__DriverList_state.carrierId = value;\n    }\n  }\n\n  get role() {\n    return this.__DriverList_state.role;\n  }\n\n  set role(value) {\n    if (value) {\n      this.__DriverList_state.role = value;\n    }\n  }\n\n  getRequestPayload() {\n    return {\n      query: {\n        getMembers: {\n          __args: {\n            input: {\n              carrierId: this.__DriverList_state.carrierId,\n              role: this.__DriverList_state.role\n            }\n          },\n          userPrincipalName: true,\n          firstName: true,\n          lastName: true,\n          companyName: true,\n          email: true,\n          liablePartyId: true,\n          liablePartyName: true,\n          lastSelectedCustomer: true,\n          lastSelectedCarrier: true,\n          carrier: true,\n          carrierId: true,\n          tractorNumber: true,\n          internalUser: true,\n          customer: true,\n          registered: true,\n          mobileNumber: true,\n          address: {\n            addressLine1: true,\n            addressLine2: true,\n            addressType: true,\n            city: true,\n            state: true,\n            postalCode: true\n          },\n          phone: {\n            number: true,\n            type: true\n          }\n        }\n      }\n    };\n  }\n}\n","import {\n  ActionType,\n  ShowToaster,\n} from \"../../schemas/carrierAssign/CarrierAssign.schema\";\nimport * as Constants from \"../../utils/constants\";\nimport produce from \"immer\";\n\nexport const carrierAssignInitialState: ShowToaster = {\n  showToaster: false,\n  DriverList: [],\n  assignShipmentDriverResponse: undefined,\n  shipmentForStartTrip: {},\n  timestamp: \"\",\n  loads: {}\n};\n\nexport default (state = carrierAssignInitialState, action: ActionType) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case Constants.SHOW_TOASTER_VALUE:\n        draft.showToaster = !draft.showToaster;\n        break;\n      case Constants.LOAD_DATA:\n        draft.loads = action.payload;\n        break;\n      case Constants.ASSIGN_DRIVER_LIST:\n        draft.DriverList = action.payload;\n        break;\n      case Constants.ADD_DRIVER_SUCCESS:\n        draft.DriverList = [(action.payload as any).member, ...draft.DriverList];\n        break;\n      case Constants.CarrierActionTypes.ASSIGN_DRIVER_TO_SHIPMENT_RESPONSE:\n        draft.assignShipmentDriverResponse = action.payload;\n        break;\n      case Constants.CarrierActionTypes\n        .CLEAR_ASSIGN_DRIVER_TO_SHIPMENT_RESPONSE:\n        draft.assignShipmentDriverResponse = undefined;\n        break;\n      case Constants.CarrierActionTypes.SHIPMENT_FOR_STARTTRIP:\n        draft.shipmentForStartTrip = action.payload;\n      case Constants.CarrierActionTypes.SHIPMENT_FOR_STARTTRIP_TIMESTAMP:\n        draft.timestamp = action.payload ? action.payload.toString() : \"\";\n        break;\n    }\n  });\n","import {\n  ICarrierAssigned,\n  IAssignShipmentToDriverInputProps,\n} from \"../../schemas/carrierAssign/CarrierAssign.schema\";\nimport { setObject, getObject } from \"../../utils/common\";\nimport { stopActivityProps } from \"../stopActivity.model\";\n\nexport class CarrierLoads {\n  private __carrier_loads_state: ICarrierAssigned = {};\n  get carrierId() {\n    return this.__carrier_loads_state.carrierId;\n  }\n\n  set carrierId(value) {\n    if (value) {\n      this.__carrier_loads_state.carrierId = value;\n    }\n  }\n\n  assignShipmentToDriver(data: IAssignShipmentToDriverInputProps) {\n    return {\n      mutation: {\n        assignDriverToShipment: {\n          __args: {\n            input: data,\n          },\n          status: true,\n          message: true,\n          shipment: {\n            shipmentId: true,\n            lineOfBusiness: true,\n            transportMode: true,\n            totalWeight: true,\n            weightUOM: true,\n            totalDistance: true,\n            distanceUOM: true,\n            numberOfStops: true,\n            sourceTMS: true,\n            assignedCarrierId: true,\n            assignedTMSCarrierId: true,\n            isAppointmentConfirmed: true,\n            isHazardous: true,\n            isHighValue: true,\n            isTemperatureControlled: true,\n            isFreezeProtected: true,\n            readyDateTime: true,\n            readyDateTimeZone: true,\n            equipmentType: true,\n            predecessorShipmentId: true,\n            successorShipmentId: true,\n            assignmentStatus: true,\n            executionStatus: true,\n            masterBillOfLoading: true,\n            driverAssignmentStatus: true,\n            shipmentServices: {\n              serviceDescription: true,\n            },\n            startState: true,\n            startCity: true,\n            startCountry: true,\n            startDateTime: true,\n            loadStop: {\n              stopId: true,\n              locationId: true,\n              stopType: true,\n              sequenceNo: true,\n              locationName: true,\n              addressLine1: true,\n              addressLine2: true,\n              city: true,\n              state: true,\n              country: true,\n              postalCode: true,\n              timeZone: true,\n              longitude: true,\n              latitude: true,\n              estimatedArrivalDateTime: true,\n              plannedArrivalDateTime: true,\n              actualArrivalDateTime: true,\n              estimatedStopDuration: true,\n              plannedDepartureDateTime: true,\n              actualDepartureDateTime: true,\n              appointmentEarlyDateTime: true,\n              appointmentLateDateTime: true,\n              estimatedStopDurationUom: true,\n              plannedEtaDateTime: true,\n              stopActivity: stopActivityProps,\n              stopReference: {\n                id: true,\n                type: true,\n                value: true,\n                stopId: true,\n                shipmentId: true,\n              },\n            },\n            shipmentInvolvedParties: {\n              id: true,\n              partyId: true,\n              partyType: true,\n              partyName: true,\n              partyEmail: true,\n              partyPhone: true,\n            },\n            assignmentTransaction: {\n              transactionId: true,\n              shipmentId: true,\n              transactionType: true,\n              driverId: true,\n              driverPhone: true,\n              driverEmail: true,\n              status: true,\n              driverName: true,\n            },\n          },\n        },\n      },\n    };\n  }\n  carrierLoads(_loads: []) {\n    return setObject(\"Carrier-Loads\", _loads);\n  }\n  getCarrierLoads() {\n    return getObject(\"Carrier-Loads\");\n  }\n}\nconst carrierLoadModal = new CarrierLoads();\nObject.freeze(carrierLoadModal);\n\nexport default carrierLoadModal;\n","import { createSelector } from \"reselect\";\nimport { carrierAssignInitialState } from \"./../../reducers/carrierAssign/reducer\";\nimport { myLoadInitialState } from \"./../../reducers/myload/reducer\";\n\nconst selectData = (state: any) => state.carrierAssigned;\nconst selctCarrierData = (state: any) =>\n  (state && state.myload && state.myload.carrierAssigned) ||\n  myLoadInitialState.carrierAssigned;\nconst selctAssignedData = (state: any) =>\n  (state && state.myload && state.myload.driverAssigned) ||\n  myLoadInitialState.driverAssigned;\nconst selctIntransitData = (state: any) =>\n  (state && state.myload && state.myload.inTransit) ||\n  myLoadInitialState.inTransit;\nconst selctDeliveredData = (state: any) =>\n  (state && state.myload && state.myload.delivered) ||\n  myLoadInitialState.delivered;\n\nexport const getShowToasterValue = () =>\n  createSelector(\n    [selectData],\n    (ShowToaster) =>\n      ShowToaster.showToaster || carrierAssignInitialState.showToaster\n  );\n\nexport const getCarrierLoads = () =>\n  createSelector(\n    selctCarrierData,\n    (carrierAssigned) => carrierAssigned || myLoadInitialState.carrierAssigned\n  );\n\nexport const getDriverList = () =>\n  createSelector(\n    [selectData],\n    (DriverList) =>\n      (DriverList && DriverList.DriverList) ||\n      carrierAssignInitialState.DriverList\n  );\n\nexport const getAssignedLoads = () =>\n  createSelector(selctAssignedData, (driverAssigned) => driverAssigned);\nexport const getAssignShipmentDriverResponse = () =>\n  createSelector(\n    [selectData],\n    (carrierAssigned) =>\n      carrierAssigned.assignShipmentDriverResponse ||\n      carrierAssignInitialState.assignShipmentDriverResponse\n  );\n\nexport const getInTransitLoad = () =>\n  createSelector(\n    selctIntransitData,\n    (inTransit) => inTransit || myLoadInitialState.inTransit\n  );\n\nexport const getStartTripShipment = () =>\n  createSelector(\n    selectData,\n    (shipmentData) => shipmentData && shipmentData.shipmentForStartTrip\n  );\n\n  export const getStartTripShipmentTimeStamp = () =>\n  createSelector(\n    selectData,\n    (shipmentData) => shipmentData && shipmentData.timestamp\n  );\n\n  export const getDeliveredLoad = () =>\n  createSelector(\n    [selctDeliveredData],\n    (delivered) => delivered || myLoadInitialState.delivered\n  );\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport {\n  IonModal,\n  IonButton,\n  IonCard,\n  IonLabel,\n  IonImg,\n  IonCardContent,\n  IonGrid,\n  IonRow,\n  IonCol,\n  isPlatform,\n  IonToast\n} from '@ionic/react';\nimport './CarrierAssignedModal.scss';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport { IAssignShipmentToDriverInputProps } from '../../../schemas/carrierAssign/CarrierAssign.schema';\nimport { LoadTileFooter } from '../../../components/app/home/Load-Tile-Footer';\nimport {\n  assignDriverToShipment,\n  clearAssignDriverToShipmentResponse,\n  loadAssignedrData,\n  loadCarrierData,\n  carrierAssignedLoads\n} from '../../../actions/carrierAssign/action';\nimport useInjectSaga from '../../../utils/injectSaga';\nimport useInjectReducer from '../../../utils/injectReducer';\nimport saga from '../../../saga/CarrierAssign/saga';\nimport reducer from '../../../reducers/carrierAssign/reducer';\nimport { CarrierLoads } from '../../../models/home/CarrierAssignLoad.model';\nimport { IONICWrapper } from '../../../utils/common';\nimport { getAssignShipmentDriverResponse } from '../../../selectors/carrierAssign/selector';\nimport { getUserDetails } from '../../../selectors/selector';\n\nimport { getLoaddata } from '../../../selectors/Myload/selector';\nimport { logEvent } from '../../../utils/Analytics';\nimport { ASSIGN_DRIVER_POPUP_TITLE, EVENT, LOAD_ASSIGN_FAIL, LOAD_ASSIGN_SUCCESS, SCREEN } from '../../../utils/constants';\nimport { getAppointmentTime } from '../../../utils/formatData';\n\nexport interface ICarrirAssignModalOwnProps {\n  isOpen: boolean;\n  onDismiss: () => void;\n}\n\nexport const StopDetailsOnDialog = (props: any) => {\n  const stopDetail = props.stopDetails;\n  return (\n    <IonRow data-test=\"stop-details-dialog\" class=\"stop-details-row\">\n      <IonCol class=\"stop-icon-col\">\n        {props.index < props.length - 1 ? (\n          <>\n            <IonImg className=\"ellipse_icon\" src=\"assets/icon/origin-pointer.svg\" />\n            <div className=\"stops_border\"></div>\n          </>\n        ) : (\n          <IonImg className=\"path_icon\" src=\"assets/icon/dst-pointer.svg\" />\n        )}\n      </IonCol>\n      <IonCol class=\"stop-details-col\">\n        <p className=\"origin_city\">\n          {stopDetail.city}, {stopDetail.state}\n        </p>\n        <p className=\"origin_dateTime load_header_elements\">{props.appointment}</p>\n      </IonCol>\n    </IonRow>\n  );\n};\n\nexport const CarrierAssignedModalBase: React.FC<any> = (props: any) => {\n  const {\n    isOpen,\n    onDismiss,\n    loadDetails,\n    driverDetails,\n    showDriverDialog,\n    assignShipmentDriverResponse,\n    clearAssignShipmentDriverResponse,\n    userDetails,\n    loadData,\n    loadCarrierData,\n    loadAssignedrData\n  } = props;\n  const history = useHistory();\n\n  const driverName =\n    (driverDetails && `${driverDetails.firstName || ''}`) || '';\n  const shipmentId = (loadDetails && loadDetails.shipmentId) || '';\n\n  const dispatcherDetails = IONICWrapper.details.auth.user;\n\n  const onConfirm = () => {\n    const obj: CarrierLoads = new CarrierLoads();\n\n    const _assignDriver: IAssignShipmentToDriverInputProps = {\n      carrierId: driverDetails && driverDetails.carrierId,\n      dispatcherEmail: dispatcherDetails['signInNames.emailAddress'],\n      dispatcherId: dispatcherDetails.upn,\n      dispatcherName: `${userDetails.firstName || ''} ${userDetails.lastName || ''}`,\n      dispatcherPhone: userDetails && userDetails.mobileNumber,\n      driverEmail: driverDetails && driverDetails.email,\n      driverId: driverDetails && driverDetails.userPrincipalName,\n      driverName,\n      driverPhone: driverDetails && driverDetails.mobileNumber,\n      shipmentId: loadDetails && loadDetails.shipmentId,\n      sourceSystem: loadDetails && loadDetails.sourceTMS,\n      tractorNumber: driverDetails && driverDetails.tractorNumber\n    };\n    props.assignDriverToShipment(obj.assignShipmentToDriver(_assignDriver));\n    toggleDialog(false);\n    dismissDialog();\n    if (isPlatform('desktop') && showDriverDialog) {\n      showDriverDialog(false);\n    }\n\n    // Analytics implementation\n    logEvent(EVENT.UE_ASSIGN_DRIVER_SUCCESS, {\n      screen: SCREEN.MYLOADS_DRIVER_ASSIGNMENT,\n      carrierId: driverDetails && driverDetails.carrierId\n    });\n  };\n\n  const dismissDialog = () => {\n    if (onDismiss) {\n      onDismiss();\n    }\n  };\n\n  const onCancel = () => {\n    dismissDialog();\n    if (isPlatform('desktop') && showDriverDialog) {\n      showDriverDialog(true);\n    }\n  };\n\n  let loadStops: any[] = (loadDetails && loadDetails.loadStop) || [];\n  let loadStopsOriginDestination: any[] = [];\n  loadStops = loadStops.slice().sort((load1: any, load2: any) => {\n    if (load1.sequenceNo && load2.sequenceNo) {\n      return load1.sequenceNo - load2.sequenceNo;\n    }\n    if (load1.stopSequence && load2.stopSequence) {\n      return load1.stopSequence - load2.stopSequence;\n    }\n    return 0;\n  });\n\n  if (loadStops.length > 2) {\n    const totalStops = loadStops.length;\n    loadStopsOriginDestination = [{ ...loadStops[0] }, { ...loadStops[totalStops - 1] }];\n  } else {\n    loadStopsOriginDestination = loadStops;\n  }\n\n  const [showAlert, toggleAlert] = useState<boolean>(false);\n  const [showDialog, toggleDialog] = useState<boolean>(false);\n  const [showError, toggleErrorToast] = useState<boolean>(false);\n\n  useEffect(() => {\n    toggleDialog(isOpen);\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (assignShipmentDriverResponse && assignShipmentDriverResponse.assignDriverToShipment) {\n      toggleAlert(true);\n      let driverLoad: any[] = [];\n      const { shipment } = assignShipmentDriverResponse.assignDriverToShipment;\n      if (shipment) {\n        driverLoad = loadData.driverLoad.concat({ ...shipment });\n        loadAssignedrData(driverLoad);\n      }\n      if (clearAssignShipmentDriverResponse) {\n        clearAssignShipmentDriverResponse();\n      }\n    } else if (assignShipmentDriverResponse && assignShipmentDriverResponse.errors) {\n      toggleErrorToast(true);\n    }\n  }, [assignShipmentDriverResponse]);\n\n  const handleAlert = () => {\n    toggleAlert(false);\n    dismissDialog();\n    if (loadData && loadData.carrierLoad) {\n      const carrierLoad = loadData.carrierLoad.filter(\n        (item: any) => item.shipmentId !== loadDetails.shipmentId\n      );\n      loadCarrierData(carrierLoad);\n    }\n\n    history.push('/app/MyLoad/CarrierAssigned');\n  };\n\n  const handleError = () => {\n    toggleErrorToast(false);\n    if (clearAssignShipmentDriverResponse) {\n      clearAssignShipmentDriverResponse();\n    }\n  };\n  // console.log(\"CARRIER\", props)\n  return (\n    <>\n      <IonToast\n        isOpen={showError}\n        onDidDismiss={handleError}\n        color=\"danger\"\n        duration={5000}\n        data-test=\"ion-toast\"\n        message={LOAD_ASSIGN_FAIL}\n      />\n      <IonToast\n        isOpen={showAlert}\n        onDidDismiss={handleAlert}\n        color=\"dark\"\n        duration={2000}\n        data-test=\"success-ion-toast\"\n        message={ LOAD_ASSIGN_SUCCESS.replace(\"{{LOAD_ID}}\", shipmentId).replace('{{DRIVER_NAME}}', driverName)}\n      />\n      <IonModal isOpen={showDialog} cssClass=\"assignmodal\" backdropDismiss={false}>\n        <header>\n          <IonLabel color=\"dark\">\n            {ASSIGN_DRIVER_POPUP_TITLE.replace(\"{{LOAD_ID}}\", loadDetails && loadDetails.shipmentId).replace('{{DRIVER_NAME}}', driverName)}\n          </IonLabel>\n        </header>\n        <section>\n          <IonCard className=\"ion-card-updated\">\n            <IonCardContent className=\"card-content\">\n              <IonGrid class=\"load-grid\">\n                <IonRow className=\"ion-card-row\">\n                  <IonCol className=\"card-price-col\" size=\"4\">\n                    <LoadTileFooter {...loadDetails} />\n                  </IonCol>\n                  <IonCol className=\"card-city-col\">\n                    {loadStopsOriginDestination &&\n                      loadStopsOriginDestination.map((stop: any, index: any) => (\n                        <StopDetailsOnDialog\n                          key={index}\n                          stopDetails={stop}\n                          appointment={getAppointmentTime(stop)}\n                          length={loadStopsOriginDestination.length}\n                          index={index}\n                        />\n                      ))}\n                  </IonCol>\n                </IonRow>\n              </IonGrid>\n            </IonCardContent>\n          </IonCard>\n        </section>\n        <footer>\n          <IonCol>\n            <IonButton data-test=\"ion-button-cancel\" class=\"btn load-btn\" onClick={onCancel}>\n              No\n            </IonButton>\n          </IonCol>\n          <IonCol>\n            <IonButton data-test=\"ion-button-carrier\" class=\"btn load-btn\" onClick={onConfirm}>\n              Yes\n            </IonButton>\n          </IonCol>\n        </footer>\n      </IonModal>\n    </>\n  );\n};\nconst key = 'carrierAssigned';\n\nconst mapStateToProps = createStructuredSelector({\n  assignShipmentDriverResponse: getAssignShipmentDriverResponse(),\n  userDetails: getUserDetails(),\n  loadData: getLoaddata()\n});\n\nexport const mapDispatchToProps = (dispatch: Function) => ({\n  assignDriverToShipment: (data: any) => dispatch(assignDriverToShipment(data)),\n  clearAssignShipmentDriverResponse: () => dispatch(clearAssignDriverToShipmentResponse()),\n  fetchCarrierAssigned: (data: any) => dispatch(carrierAssignedLoads(data)),\n  loadAssignedrData: (data: any[]) => {\n    dispatch(loadAssignedrData(data, data.length));\n  },\n  loadCarrierData: (data: any[]) => {\n    dispatch(loadCarrierData(data, data.length));\n  }\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nconst withReducer = useInjectReducer({ key, reducer });\nconst withSaga = useInjectSaga({ key, saga });\n\nexport const CarrierAssignedModal = compose<any>(\n  withSaga,\n  withReducer,\n  withConnect\n)(CarrierAssignedModalBase);\n","import * as moment from \"moment-timezone\";\nimport { isPlatform } from \"@ionic/react\";\nimport { EquipmentFlow } from \"../../schemas/Exicution/exicution.schema\";\nimport {\n  OTMASSET,\n  ExecutionStatus,\n  TRAILER_PARTTEN,\n} from \"../../utils/constants\";\nimport { StopActivityProps } from \"../stopActivity.model\";\n\nexport class StartTripModel {\n  public getTimeWithTimezone(timeZone: string): string {\n    return this.getTimeForIOS(moment.tz(timeZone).format());\n  }\n\n  public isIOSPlatform(): boolean {\n    return isPlatform(\"ios\") || isPlatform(\"ipad\") || isPlatform(\"iphone\");\n  }\n\n  public getTimeForIOS(date: string): string {\n    const localZone = moment.tz.guess();\n    const result = moment.tz(date.substring(0, 16), localZone).format();\n    console.log(\"result=\", result);\n    return result;\n  }\n\n  /*\n   * get the current year value\n   */\n  public yearsValue(): number {\n    const _date = new Date();\n    return _date.getFullYear();\n  }\n\n  /*\n   * get the shipment status that staop has been confirmed or not\n   * @shipment - shipment for the trip\n   */\n  public isConfirmStartButtonDisabled(shipment: any): boolean {\n    const { startCity, startState, startDateTime } = shipment || {};\n    return (startCity || startState) && startDateTime;\n  }\n\n  /*\n   * get the starting location of the trip\n   * @shipment - shipment for the trip\n   */\n  public getStartingLocation(shipment: any): string {\n    const { startCity, startState } = shipment || {};\n    return `${startCity}${startState ? \", \" : \"\"}${startState}`.trim();\n  }\n\n  /*\n   * get the stating date of the shipment\n   * @shipment - shipment for the trip\n   */\n  public getStartingDateTime(shipment: any): string {\n    const { startDateTime } = shipment || {};\n    return startDateTime;\n  }\n\n  /*\n   * get the current open stop\n   * @shipment - shipment for the trip\n   */\n  public getCurrentOpenStop(shipment: any): number {\n    let openStop = -1;\n    if (this.isConfirmStartButtonDisabled(shipment)) {\n      openStop = 0;\n    }\n    const isOtmType = this.isOTMTypeShipment(shipment);\n    if (shipment && shipment.loadStop) {\n      let loadStop: any[] = shipment.loadStop || [];\n      loadStop = loadStop.slice().sort((load1: any, load2: any) => {\n        if (load1.sequenceNo && load2.sequenceNo) {\n          return load1.sequenceNo - load2.sequenceNo;\n        }\n        if (load1.stopSequence && load2.stopSequence) {\n          return load1.stopSequence - load2.stopSequence;\n        }\n        return 0;\n      });\n      loadStop.forEach((load: any, index: number) => {\n        if (isOtmType) {\n          const _trailerIn = this.getTrailerIn(load, false, false, shipment);\n          const _trailerIout = this.getTrailerOut(load, false, shipment);\n          if (\n            load.actualDepartureDateTime &&\n            _trailerIn.trailerIn && _trailerIout.trailerOut\n          ) {\n            openStop = index + 1;\n          }\n        } else if (load.actualDepartureDateTime) {\n          openStop = index + 1;\n        }\n      });\n    }\n    return openStop;\n  }\n\n  /*\n   * is all stop completed or not\n   * @shipment - shipment for the trip\n   */\n  public isAllStopCompleted(shipment: any): boolean {\n    let allStopCompleted = false;\n    if (shipment && shipment.loadStop) {\n      let loadStop: any[] = shipment.loadStop || [];\n      loadStop = loadStop.slice().sort((load1: any, load2: any) => {\n        if (load1.sequenceNo && load2.sequenceNo) {\n          return load1.sequenceNo - load2.sequenceNo;\n        }\n        if (load1.stopSequence && load2.stopSequence) {\n          return load1.stopSequence - load2.stopSequence;\n        }\n        return 0;\n      });\n      if (loadStop.length > 0) {\n        allStopCompleted = !!loadStop[loadStop.length - 1]\n          .actualDepartureDateTime;\n      } else {\n        allStopCompleted = true;\n      }\n    }\n    return allStopCompleted;\n  }\n\n  public isTripCompleted(shipment: any): boolean {\n    return (\n      (shipment && shipment.executionStatus === ExecutionStatus.COMPLETED) ||\n      false\n    );\n  }\n\n  /*\n   * get the ETA value\n   * @loadStop - loadStop of the shipment\n   */\n  public getETA(loadStop: any): string {\n    // estimatedArrivalDateTime -- planned ETA\n    const {\n      estimatedArrivalDateTime,\n      actualETADateTime,\n      appointmentEarlyDateTime,\n      plannedEtaDateTime,\n    } = loadStop;\n    let etaTime = \"\";\n    if (actualETADateTime) {\n      etaTime = actualETADateTime;\n    } else if (plannedEtaDateTime) {\n      etaTime = plannedEtaDateTime;\n    } else if (appointmentEarlyDateTime) {\n      etaTime = appointmentEarlyDateTime;\n    } else if (estimatedArrivalDateTime) {\n      etaTime = estimatedArrivalDateTime;\n    }\n    if (etaTime) {\n      etaTime = this.getTimeForIOS(etaTime);\n    }\n    return etaTime || \"\";\n  }\n\n  /*\n   * get the arrival value\n   * @loadStop - loadStop of the shipment\n   */\n  public getArrival(loadStop: any, isNextStop: boolean): string {\n    let { actualArrivalDateTime } = loadStop;\n\n    if (actualArrivalDateTime) {\n      actualArrivalDateTime = this.getTimeForIOS(actualArrivalDateTime);\n    }\n    return isNextStop ? \"\" : actualArrivalDateTime;\n  }\n\n  /*\n   * set the initital value for arrival\n   * @loadStop - loadStop of the shipment\n   */\n  public getArrivalOnClick(\n    loadStop: any,\n    isNextStop: boolean,\n    arrival_input: string\n  ): string {\n    const { appointmentEarlyDateTime, actualArrivalDateTime } = loadStop;\n    if (isNextStop) {\n      return \"\";\n    }\n    if (arrival_input) {\n      return arrival_input;\n    }\n    let arrivalTime = \"\";\n    if (actualArrivalDateTime) {\n      arrivalTime = actualArrivalDateTime;\n    } else if (appointmentEarlyDateTime) {\n      arrivalTime = appointmentEarlyDateTime; // .substring(0, 16);\n    }\n\n    return arrivalTime;\n  }\n\n  /*\n   * get the arrival lable name\n   * @loadStop - loadStop of the shipment\n   */\n  public getArrivalLabelName(loadStop: any, isNextStop: boolean): string {\n    const { actualArrivalDateTime } = loadStop;\n\n    return actualArrivalDateTime && !isNextStop ? \"Arrived\" : \"Arrival\";\n  }\n\n  /*\n   * get the departure value\n   * @loadStop - loadStop of the shipment\n   */\n  public getDeparture(loadStop: any, isNextStop: boolean): string {\n    let { actualDepartureDateTime } = loadStop;\n    if (actualDepartureDateTime) {\n      actualDepartureDateTime = this.getTimeForIOS(actualDepartureDateTime);\n    }\n    return isNextStop ? \"\" : actualDepartureDateTime;\n  }\n\n  /*\n   * set the departure value on click\n   * @loadStop - loadStop of the shipment\n   */\n  public getDepartureOnClick(\n    loadStop: any,\n    isNextStop: boolean,\n    departure_input: string\n  ): string {\n    const { appointmentLateDateTime, actualDepartureDateTime } = loadStop;\n    if (isNextStop) {\n      return \"\";\n    }\n    if (departure_input) {\n      return departure_input;\n    }\n    let deaprtureTime = \"\";\n    if (actualDepartureDateTime) {\n      deaprtureTime = actualDepartureDateTime;\n    } else if (appointmentLateDateTime) {\n      deaprtureTime = appointmentLateDateTime; // .substring(0, 16);\n    }\n\n    return deaprtureTime;\n  }\n\n  /*\n   * get the departure lable name\n   * @loadStop - loadStop of the shipment\n   */\n  public getDepartureLabelName(loadStop: any): string {\n    const { actualDepartureDateTime } = loadStop;\n\n    return actualDepartureDateTime ? \"Departed\" : \"Departure\";\n  }\n\n  public getFormattedDate(date: string): string {\n    let dateString = \"\";\n    if (date) {\n      let hr = Number(date.substring(11, 13));\n      const min = Number(date.substring(14, 16));\n      hr = hr % 12 || 12;\n      dateString = `${date.substring(0, 11)}${`0${hr}`.slice(\n        -2\n      )}:${`0${min}`.slice(-2)}`;\n    }\n    return dateString;\n  }\n\n  /*\n   * check whether ETA is readonly or not\n   * @loadStop - loadStop of the shipment\n   */\n  public isETAReadonly(loadStop: any): boolean {\n    const { actualArrivalDateTime, actualDepartureDateTime } = loadStop;\n    let readonly = false;\n    if (actualArrivalDateTime || actualDepartureDateTime) {\n      readonly = true;\n    }\n\n    return readonly;\n  }\n\n  /*\n   * check whether Arrival is readonly or not\n   * @loadStop - loadStop of the shipment\n   */\n  public isArrivalReadonly(loadStop: any): boolean {\n    const { actualDepartureDateTime, actualArrivalDateTime } = loadStop;\n    let readonly = false;\n    if (actualDepartureDateTime || actualArrivalDateTime) {\n      readonly = true;\n    }\n\n    return readonly;\n  }\n\n  /*\n   * check whether Departure is readonly or not\n   * @loadStop - loadStop of the shipment\n   */\n  public isDepartureReadonly(loadStop: any, arrivalVal: string): boolean {\n    const { actualDepartureDateTime, actualArrivalDateTime } = loadStop;\n    let readonly = false;\n    if (!!!actualArrivalDateTime) {\n      readonly = true;\n    }\n    if (arrivalVal) {\n      readonly = false;\n    }\n    if (actualDepartureDateTime) {\n      readonly = true;\n    }\n\n    return readonly;\n  }\n\n  /*\n   * get the trailer in value\n   * @loadStop - loadStop of the shipment\n   * @bobtail - bobtail status\n   * activity details\n   */\n  public getTrailerIn(\n    loadStop: any,\n    isNextStop: boolean,\n    isOTypeTrailer: boolean,\n    shipment: any,\n    updateStopInfo?: any\n  ): {\n    trailerIn: string;\n    activity: StopActivityProps | undefined;\n  } {\n    let trailerIn = \"\";\n    let activity: StopActivityProps | undefined;\n    const isOtmType = this.isOTMTypeShipment(shipment);\n    if (isNextStop && isOTypeTrailer) {\n      trailerIn = \"\";\n    } else if (\n      loadStop &&\n      loadStop.stopActivity &&\n      loadStop.stopActivity.length > 0\n    ) {\n      activity =\n        loadStop.stopActivity.find((e: StopActivityProps) => {\n          return e.equipmentFlow === EquipmentFlow.TRAILER_IN;\n        }) || {};\n\n      if (activity) {\n        trailerIn = `${activity.equipmentId || \"\"}`;\n      }\n      const updatedStopSno = updateStopInfo && updateStopInfo.sequenceNo;\n      const prevStopSno = loadStop && loadStop.sequenceNo - 1;\n      if (updatedStopSno === prevStopSno && isOtmType) {\n        const loads: any[] = (shipment && shipment.loadStop) || [];\n        const load = loads.filter(\n          (item: any) => item.sequenceNo === loadStop.sequenceNo - 1\n        );\n        if (load.length > 0) {\n          const _activity =\n            (load[0].stopActivity &&\n              load[0].stopActivity.find((e: StopActivityProps) => {\n                return e.equipmentFlow === EquipmentFlow.TRAILER_OUT;\n              })) ||\n            {};\n          trailerIn = _activity.equipmentId;\n        }\n      }\n    }\n    trailerIn = trailerIn && trailerIn.toUpperCase();\n    if (isOtmType) {\n      if (trailerIn && !TRAILER_PARTTEN.test(trailerIn)) {\n        trailerIn = \"\";\n      }\n    } else {\n      if (trailerIn && trailerIn === \"UNKNOWN\") {\n        trailerIn = \"\";\n      }\n    }\n    return { trailerIn, activity };\n  }\n\n  /*\n   * get the trailer out\n   * @loadStop - loadStop of the shipment\n   * @bobtail - bobtail status\n   * activity details\n   */\n  public getTrailerOut(\n    loadStop: any,\n    isNextStop: boolean,\n    shipment: any\n  ): {\n    trailerOut: string;\n    activity: StopActivityProps | undefined;\n  } {\n    let trailerOut = \"\";\n    let activity: StopActivityProps | undefined;\n    if (loadStop && loadStop.stopActivity && loadStop.stopActivity.length > 0) {\n      activity =\n        loadStop.stopActivity.find((e: StopActivityProps) => {\n          return e.equipmentFlow === EquipmentFlow.TRAILER_OUT;\n        }) || {};\n\n      if (activity) {\n        trailerOut = `${activity.equipmentId || \"\"}`;\n      }\n    }\n    const isOtmType = this.isOTMTypeShipment(shipment);\n    trailerOut = trailerOut && trailerOut.toUpperCase();\n    if (isOtmType) {\n      if (trailerOut && !TRAILER_PARTTEN.test(trailerOut)) {\n        trailerOut = \"\";\n      }\n    } else {\n      if (trailerOut && trailerOut === \"UNKNOWN\") {\n        trailerOut = \"\";\n      }\n    }\n\n    return { trailerOut, activity };\n  }\n\n  /*\n   * validate whether IN activity avilable or not\n   * @activity - stop activities\n   */\n  public isInActivityAvailable(activity: StopActivityProps[]): boolean {\n    return (\n      (activity &&\n        activity.filter(\n          (a: StopActivityProps) => a.equipmentFlow === EquipmentFlow.TRAILER_IN\n        ).length > 0) ||\n      false\n    );\n  }\n\n  /*\n   * validate whether OUT activity avilable or not\n   * @activity - stop activities\n   */\n  public isOutActivityAvailable(activity: StopActivityProps[]): boolean {\n    return (\n      (activity &&\n        activity.filter(\n          (a: StopActivityProps) =>\n            a.equipmentFlow === EquipmentFlow.TRAILER_OUT\n        ).length > 0) ||\n      false\n    );\n  }\n\n  /*\n   * Check whether stop activities are missing or not\n   * @activity - stop activities\n   */\n  public areStopActivitiesMissing(load: any): boolean {\n    const activity: StopActivityProps[] = (load && load.stopActivity) || [];\n    const newActivity: StopActivityProps[] = [];\n    activity.forEach((item: StopActivityProps) => {\n      if ((item.tmsActivity || \"\").toUpperCase().trim() != \"bobtail\") {\n        newActivity.push(item);\n      }\n    });\n    return newActivity.length === 0 || false;\n  }\n\n  /*\n   * check whether shipment is OTM or not\n   * @loadStop - loadStop of the shipment\n   */\n  public isOTMTypeShipment(shipment: any): boolean {\n    let isOTMType = false;\n    if (shipment && shipment.sourceTMS === OTMASSET) {\n      isOTMType = true;\n    }\n\n    return isOTMType;\n  }\n\n  public isOTypeStop(load: any): boolean {\n    let oType = false;\n    if (load && load.stopType === \"O\") {\n      oType = true;\n    }\n\n    return oType;\n  }\n\n  public isShipmentTripCompleted(shipment: any): boolean {\n    let status = false;\n    if (shipment && shipment.executionStatus === ExecutionStatus.COMPLETED) {\n      status = true;\n    }\n\n    return status;\n  }\n\n  public getCurrentLocalDateString(timeZone: string): string {\n    const date = new Date();\n    let dateString = \"\";\n    if (timeZone) {\n      dateString = date.toLocaleString(\"en-US\", {\n        timeZone: timeZone || \"utc\",\n      });\n    } else {\n      dateString = date.toISOString();\n    }\n\n    return dateString;\n  }\n\n  public showTrailerInError(\n    value: string,\n    shipment: any,\n    departure: string,\n    isNextStop: boolean,\n    loadStop: any\n  ): boolean {\n    if (\n      this.isOTMTypeShipment(shipment) &&\n      !value &&\n      !isNextStop &&\n      (!(loadStop && loadStop.actualDepartureDateTime) ? departure : false)\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  public showTrailerOutError(\n    value: string,\n    shipment: any,\n    departure: string,\n    isNextStop: boolean,\n    loadStop: any\n  ): boolean {\n    if (\n      this.isOTMTypeShipment(shipment) &&\n      !value &&\n      !isNextStop &&\n      (!(loadStop && loadStop.actualDepartureDateTime) ? departure : false)\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  public getTimeZone(loadStop: any) {\n    const { timeZone } = loadStop;\n    return timeZone;\n  }\n\n  public getCurrentTimeInISO(): string {\n    const tzoffset = new Date().getTimezoneOffset() * 60000; // offset in milliseconds\n    return new Date(Date.now() - tzoffset).toISOString().slice(0, -1);\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { IonDatetime, IonLabel, isPlatform } from \"@ionic/react\";\nimport { IEtaProps } from \"../../../schemas/StartTrip/StartTrip\";\nimport { StartTripModel } from \"../../../models/home/StartTrip.model\";\nimport * as moment from \"moment-timezone\";\nimport { getYearValues } from \"../../../utils/formatData\";\n\nconst model: StartTripModel = new StartTripModel();\nexport const ETA: React.FunctionComponent<IEtaProps> = (props: IEtaProps) => {\n\n  const eta = model.getETA(props.loadStop);\n  const yearValues = getYearValues() || new Date().getFullYear();\n\n  useEffect(() => {\n    props.onChange(eta);\n  }, [eta, props.shipmentId, props.timestamp]);\n  console.log(\"props.timeZone=\", props.timeZone);\n  return (\n    <React.Fragment>\n      <IonLabel className=\"ETA-label\">ETA</IonLabel>\n      <IonDatetime\n        displayFormat=\"MMM DD hh:mm A\"\n        pickerFormat=\"YYYY MMM DD hh:mm A\"\n        className={`ETA-picker ${\n          model.isETAReadonly(props.loadStop) ? \"hide-border\" : \"\"\n        } execution-field`}\n        value={props.value}\n        onIonChange={(e) => {\n          if (e.detail.value) {\n            props.onChange(e.detail.value);\n          }\n        }}\n        yearValues={yearValues}\n        minuteValues=\"00,05,10,15,20,25,30,35,40,45,50,55\"\n        mode=\"ios\"\n        readonly={model.isETAReadonly(props.loadStop) || props.isNextStop}\n        disabled={model.isETAReadonly(props.loadStop) || props.isNextStop}\n      ></IonDatetime>\n    </React.Fragment>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { IonDatetime, IonLabel } from \"@ionic/react\";\nimport { IArrivalProps } from \"../../../schemas/StartTrip/StartTrip\";\nimport { StartTripModel } from \"../../../models/home/StartTrip.model\";\nimport { getYearValues } from \"../../../utils/formatData\";\n\nconst model: StartTripModel = new StartTripModel();\nexport const Arrival: React.FunctionComponent<IArrivalProps> = (\n  props: IArrivalProps\n) => {\n  const arrivalDate = model.getArrival(props.loadStop, props.isNextStop);\n  const yearVales = getYearValues() || new Date().getFullYear();\n\n  useEffect(() => {\n    props.onChange(arrivalDate);\n  }, [arrivalDate, props.shipmentId, props.timestamp]);\n\n  // new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString();\n\n  return (\n    <>\n      <IonLabel className=\"arrival-label \">\n        {model.getArrivalLabelName(props.loadStop, props.isNextStop)}\n      </IonLabel>\n\n      <IonDatetime\n        readonly={model.isArrivalReadonly(props.loadStop) || props.isNextStop}\n        disabled={model.isArrivalReadonly(props.loadStop) || props.isNextStop}\n        displayFormat=\"MMM DD hh:mm A\"\n        pickerFormat=\"YYYY MMM DD hh:mm A\"\n        value={props.value}\n        minuteValues=\"00,05,10,15,20,25,30,35,40,45,50,55\"\n        onIonChange={e => {\n          if (e.detail.value) {\n            props.onChange(e.detail.value);\n          }\n        }}\n        yearValues={yearVales}\n        display-timezone={props.timeZone}\n        className={`start-trip-location4 execution-field arrival-width2 ${\n          model.isArrivalReadonly(props.loadStop) ? \"hide-border\" : \"\"\n        } ${props.isError ? \"execution-validation-error\" : \"\"}`}\n        mode=\"ios\"\n      />\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { IDepartureProps } from \"../../../schemas/StartTrip/StartTrip\";\nimport { StartTripModel } from \"../../../models/home/StartTrip.model\";\nimport { IonDatetime, IonLabel } from \"@ionic/react\";\nimport { getYearValues } from \"../../../utils/formatData\";\n\nconst model: StartTripModel = new StartTripModel();\nexport const Departure: React.FunctionComponent<IDepartureProps> = (\n  props: IDepartureProps\n) => {\n  const departureDate = model.getDeparture(props.loadStop, props.isNextStop);\n  const yearValues = getYearValues() || new Date().getFullYear();\n\n  useEffect(() => {\n    props.onChange(departureDate);\n  }, [departureDate, props.shipmentId, props.timestamp]);\n  // new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString();\n  const readyonly = model.isDepartureReadonly(props.loadStop, props.arrivalVal);\n  return (\n    <React.Fragment>\n      <IonLabel className=\"arrival-label \">\n        {model.getDepartureLabelName(props.loadStop)}\n      </IonLabel>\n\n      <IonDatetime\n        readonly={readyonly || props.isNextStop}\n        disabled={readyonly || props.isNextStop}\n        displayFormat=\"MMM DD hh:mm A\"\n        pickerFormat=\"YYYY MMM DD hh:mm A\"\n        value={props.value}\n        onIonChange={e => {\n          if (e.detail.value) {\n            props.onChange(e.detail.value);\n          }\n        }}\n        yearValues={yearValues}\n        display-timezone={props.timeZone}\n        minuteValues=\"00,05,10,15,20,25,30,35,40,45,50,55\"\n        className={`start-trip-location4 arrival-width2 execution-field ${\n          readyonly && props.value ? \"hide-border\" : \"\"\n        } ${props.isError ? \"execution-validation-error\" : \"\"}`}\n        mode=\"ios\"\n      ></IonDatetime>\n    </React.Fragment>\n  );\n};\n","import { IonGrid, IonInput, IonRow } from '@ionic/react';\nimport React, { useState, useEffect, useRef, MutableRefObject } from 'react';\nimport { BOBTAIL, dropDownOptions, RequiredField } from '../../../utils/constants';\n\nexport interface IComboxProps {\n  value: string;\n  onChange: (value: string) => void;\n  showError: boolean;\n  disabled: boolean;\n  onFocus: () => void;\n}\nexport const ComboBox: React.FunctionComponent<IComboxProps> = (props: IComboxProps) => {\n  const [showDropDown, setShowDropDown] = useState<boolean>(false);\n  const [TValue, setTValue] = useState<string>(\"\");\n  const textPattern = /^[a-zA-Z0-9, ]*$/;\n  const [dropDownValues, setDropDownValues] = useState(dropDownOptions);\n  const refVariable = useRef<HTMLIonInputElement>() as MutableRefObject<HTMLIonInputElement>;\n\n  useEffect(() => {\n    setTValue(props.value);\n  }, [props.value]);\n\n  const handleValueChange = (event: any) => {\n    const isValueExists = event && event.target && event.target.value;\n    event.target.value = (isValueExists && event.target.value.toUpperCase()) || '';\n    const preValue = (TValue && TValue.trim()) || '';\n    /* Restrict user from entering special charecter */\n    if (!textPattern.test(event.target.value)) {\n      event.target.value =\n        (isValueExists && event.target.value.replace(/[^a-zA-Z0-9 ]*/g, '')) || '';\n    }\n    const bobtailPattern = /^BOBTAIL./;\n    /* Restrict the user from entering values after BOBTAIL is entered */\n    if (\n      isValueExists &&\n      event.target.value.indexOf(BOBTAIL) !== -1 &&\n      bobtailPattern.test(event.target.value)\n    ) {\n      event.target.value = BOBTAIL;\n    } else {\n      /**\n       * User should able to enter only 6 charecter with SNLU or TA.\n       */\n      if (\n        isValueExists &&\n        event.target.value.indexOf('SNLU') !== -1 &&\n        event.target.value.length > 10\n      ) {\n        event.target.value = preValue;\n      } else if (\n        isValueExists &&\n        event.target.value.indexOf('TA') !== -1 &&\n        event.target.value.length > 8\n      ) {\n        event.target.value = preValue;\n      } else if (isValueExists && event.target.value.length > 10) {\n        event.target.value = preValue;\n      }\n    }\n    setTValue(event.target.value);\n    if (TValue !== event.target.value) {\n      const newValue = (isValueExists && event.target.value.trim()) || '';\n      if (preValue !== newValue) {\n        const newOptions: any = dropDownOptions.filter((option: any) => {\n          return option.indexOf(event.target.value) !== -1;\n        });\n        setShowDropDown(!!newOptions.length);\n        setDropDownValues(newOptions);\n      }\n    }\n    if (TValue === BOBTAIL) {\n      setShowDropDown(false);\n    }\n    if(isValueExists && (event.target.value === \"SNLU\" || event.target.value === \"TA\")){\n      refVariable.current.setFocus();\n    }\n    props.onChange((isValueExists && event.target.value) || '');\n  };\n  return (\n    <>\n      <IonInput\n        class=\"tariler-feild\"\n        value={TValue}\n        onClick={() => {\n          if (!dropDownValues.length || TValue) {\n            setShowDropDown(false);\n          } else {\n            setShowDropDown(true);\n          }\n        }}\n        onIonChange={event => handleValueChange(event)}\n        disabled={props.disabled}\n        onIonBlur={() => setShowDropDown(false)}\n        onIonFocus={props.onFocus}\n        ref={refVariable}\n      />\n      {showDropDown && !props.disabled && (\n        <IonGrid class=\"option-grid\">\n          {dropDownValues &&\n            dropDownValues.map((value: string, index: any) => (\n              <IonRow\n                onMouseDown={() => {\n                  setTValue(value);\n                  setShowDropDown(false);\n                }}\n                key={index}>\n                {value}\n              </IonRow>\n            ))}\n        </IonGrid>\n      )}\n      {props.showError && (\n        <div className=\"pickupdate-error error-message\" style={{ textAlign: 'left' }}>\n          <p>{RequiredField}</p>\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\r\nimport { IonLabel } from \"@ionic/react\";\r\nimport { ITrailerInProps } from \"../../../schemas/StartTrip/StartTrip\";\r\nimport { StartTripModel } from \"../../../models/home/StartTrip.model\";\r\nimport { ComboBox } from \"./trailerComboBox\";\r\n\r\nexport const TrailerIn: React.FunctionComponent<ITrailerInProps> = (\r\n  props: ITrailerInProps\r\n) => {\r\n  const model: StartTripModel = new StartTripModel();\r\n  const isOtmType = model.isOTMTypeShipment(props.shipment);\r\n  const trailerIn = model.getTrailerIn(\r\n    props.loadStop,\r\n    props.isNextStop,\r\n    props.readonly,\r\n    props.shipment,\r\n    props.updateStopInfo\r\n  );\r\n  useEffect(() => {\r\n    props.onChange(trailerIn.trailerIn);\r\n    if (trailerIn && trailerIn.activity) {\r\n      props.changeActivity(trailerIn.activity);\r\n    }\r\n  }, [\r\n    trailerIn.trailerIn,\r\n    JSON.stringify(trailerIn.activity),\r\n    props.shipmentId,\r\n    props.timestamp,\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <IonLabel className=\"ETA-label \">Trailer In</IonLabel>\r\n      <ComboBox\r\n        value={props.value}\r\n        onChange={(value: string) => props.onChange(value)}\r\n        showError={props.showError}\r\n        disabled={props.readonly || props.isNextStop}\r\n        onFocus={() => {\r\n          props.expandCurrentStopForcefully();\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport { IonLabel } from \"@ionic/react\";\nimport { ITrailerOutProps } from \"../../../schemas/StartTrip/StartTrip\";\nimport { StartTripModel } from \"../../../models/home/StartTrip.model\";\nimport { ComboBox } from \"./trailerComboBox\";\n\nexport const TrailerOut: React.FunctionComponent<ITrailerOutProps> = (\n  props: ITrailerOutProps\n) => {\n  const model: StartTripModel = new StartTripModel();\n  const isOtmType = model.isOTMTypeShipment(props.shipment);\n  const trailerOut = model.getTrailerOut(\n    props.loadStop,\n    props.isNextStop,\n    props.shipment\n  );\n\n  useEffect(() => {\n    props.onChange(trailerOut.trailerOut);\n    if (trailerOut && trailerOut.activity) {\n      props.changeActivity(trailerOut.activity);\n    }\n  }, [JSON.stringify(trailerOut), props.shipmentId, props.timestamp]);\n  return (\n    <>\n      <IonLabel className=\"ETA-label\">Trailer Out</IonLabel>\n      <ComboBox\n        value={props.value}\n        onChange={(value: string) => props.onChange(value)}\n        showError={props.showError}\n        disabled={props.readonly || props.isNextStop}\n        onFocus={() => {\n          props.expandCurrentStopForcefully();\n        }}\n      />\n    </>\n  );\n};\n","import React, { useEffect } from 'react';\nimport {\n  IonButton,\n  IonModal,\n  IonCard,\n  IonCardHeader,\n  IonCol,\n  IonCardContent,\n  IonRow,\n  IonToast\n} from '@ionic/react';\nimport { IStopReferenceProps } from '../../../schemas/StartTrip/StartTrip';\nimport {\n  REFERENCE,\n  REFERENCE_TYPE_TEXT,\n  REFERENCE_VALUE_TEXT,\n  REFERENCE_DAILOAG_HEADING,\n  EVENT,\n  SCREEN,\n  NO_REFERENCE_MSG\n} from '../../../utils/constants';\nimport { logEvent } from '../../../utils/Analytics';\n\nexport const ReferenceDialog: React.FunctionComponent<IStopReferenceProps> = (\n  props: IStopReferenceProps\n) => {\n  const [referenceModal, setReferenceModal] = React.useState(false);\n  const [showToast, setShowToast] = React.useState(false);\n  const { stopDetail, shipment } = props;\n  const stopReference =\n    stopDetail && stopDetail.stopReference && stopDetail.stopReference.length\n      ? stopDetail.stopReference\n      : [];\n  const shipmentReference =\n    shipment && shipment.shipmentReferences && shipment.shipmentReferences.length\n      ? shipment.shipmentReferences\n      : [];\n  const references = [...stopReference, ...shipmentReference];\n  const referenceClick = (): void => {\n    if (references && references.length) {\n      setReferenceModal(true);\n    } else {\n      setShowToast(true);\n    }\n  };\n  const closeReferenceModal = (): void => {\n    setReferenceModal(false);\n  };\n  // Analytics implementation\n  useEffect(() => {\n    logEvent(EVENT.SV_VIEW_REFERENCE, {\n      screen: SCREEN.MYLOADS_NEEDS_PPWK,\n      carrierId: props.carrierId,\n      shipmentId: props.stopDetail.shipmentId,\n      stopId: props.stopDetail.stopId\n    });\n  }, []);\n\n  return (\n    <>\n      {referenceModal && (\n        <>\n          <IonModal\n            isOpen={referenceModal}\n            cssClass=\"dropdown-modal\"\n            backdropDismiss={false}\n            onDidDismiss={() => closeReferenceModal()}>\n            <div className=\"modal-div\" onClick={() => closeReferenceModal()} data-test=\"modal-div\">\n              <IonCard className=\"referencemodal-card\">\n                <IonCardHeader className=\"start-trip-cardContent\" onClick={closeReferenceModal}>\n                  {REFERENCE_DAILOAG_HEADING}\n                </IonCardHeader>\n                <IonCardContent className=\"reference-card-content\">\n                  <IonRow className=\"reference-header\">\n                    <IonCol className=\"reference-type-header\" size=\"6\">\n                      {REFERENCE_TYPE_TEXT}\n                    </IonCol>\n                    <IonCol className=\"reference-type-header\" size=\"6\">\n                      {REFERENCE_VALUE_TEXT}\n                    </IonCol>\n                  </IonRow>\n\n                  {references &&\n                    references.map((reference: any, index: number) => (\n                      <IonRow key={index} className=\"Reference-table-row\">\n                        <IonCol className=\"reference-val\" size=\"6\">\n                          {reference.type}\n                        </IonCol>\n                        <IonCol className=\"reference-val\" size=\"6\">\n                          {reference.value}\n                        </IonCol>\n                      </IonRow>\n                    ))}\n                </IonCardContent>\n              </IonCard>\n            </div>\n          </IonModal>\n        </>\n      )}\n      <IonToast\n        isOpen={showToast}\n        message={NO_REFERENCE_MSG}\n        duration={5000}\n        color=\"dark\"\n        onDidDismiss={() => {\n          setShowToast(false);\n        }}\n        mode=\"md\"\n      />\n      <IonButton className=\"load-btn reference-btn\" onClick={referenceClick}>\n        {REFERENCE}\n      </IonButton>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport {\n  IonGrid,\n  IonImg,\n  IonRow,\n  IonCol,\n  IonIcon,\n  IonButton,\n  isPlatform,\n  IonModal,\n} from \"@ionic/react\";\nimport { IShipmentStopDetailsProps } from \"../../../schemas/StartTrip/StartTrip\";\nimport { ETA } from \"./eta\";\nimport { Arrival } from \"./arrival\";\nimport { Departure } from \"./departure\";\nimport { TrailerIn } from \"./trailerIn\";\nimport { TrailerOut } from \"./trailerOut\";\nimport { ReferenceDialog } from \"./referenceDialog\";\nimport { StartTripModel } from \"../../../models/home/StartTrip.model\";\nimport {\n  UPDATE_STOP_CTA_TEXT,\n  STOP_OFF_TEXT,\n  EXECUTION_ERRORS,\n  EVENT,\n  SCREEN,\n  TRAILER_PARTTEN,\n  OTMASSET,\n  CALL_US_NUMBER,\n} from \"../../../utils/constants\";\nimport {\n  StopInformation,\n  EquipmentFlow,\n} from \"../../../schemas/Exicution/exicution.schema\";\nimport { logEvent } from \"../../../utils/Analytics\";\nimport { getAppointmentTime } from \"../../../utils/formatData\";\nimport { CallNumber } from \"@ionic-native/call-number\";\nimport {\n  StopActivityProps,\n  defaultStopActivity,\n  getStopActivity,\n} from \"../../../models/stopActivity.model\";\n\nexport const ShipmentStopDetails: React.FunctionComponent<IShipmentStopDetailsProps> = (\n  props: IShipmentStopDetailsProps\n) => {\n  const stopDetail = props.stopDetails;\n  const exicutionProgress = props.exicutionProgress;\n  const startTripModel = new StartTripModel();\n  const [isExpanded, toggleLoadDetails] = useState(false);\n  const [isEndExecution, setendExecution] = useState(false);\n  const [ETA_VALUE, setETA] = useState<string>(\"\");\n  const [ARRIVAL_VALUE, setARRIVAL] = useState<string>(\"\");\n  const [DEPARTURE_VALUE, setDEPARTURE] = useState<string>(\"\");\n  const [TRAILER_IN, setTRAILERIN] = React.useState(\"\");\n  const [TRAILER_OUT, setTRAILEROUT] = React.useState(\"\");\n  const [\n    TRAILER_IN_ACTIVITY,\n    setTRAILERINACTIVITY,\n  ] = React.useState<StopActivityProps | null>(null);\n  const [\n    TRAILER_OUT_ACTIVITY,\n    setTRAILEROUTACTIVITY,\n  ] = React.useState<StopActivityProps | null>(null);\n  const [showProgressBar, setShowProgressBar] = useState(false);\n  const [showDotteedLine, setShowDottedLine] = useState(false);\n  const [progressBarHeight, setProgressBarHeight] = useState(\"0px\");\n  const [isErrorOnArrival, onArrivalErrorChange] = useState<boolean>(false);\n  const [isErrorOnDeparture, onDepartureErrorChange] = useState<boolean>(false);\n  const [isOpen, openDialog] = useState<boolean>(false);\n  const [dialogMessage, onChangeDialogMessage] = useState<string>(\"\");\n  const [showTrailerFeild, setShowTrailerFeild] = useState<boolean>(true);\n\n  useEffect(() => {\n    toggleLoadDetails(props.index === props.expandedStop);\n    if (\n      stopDetail &&\n      stopDetail.stopActivity &&\n      stopDetail.stopActivity.length > 0\n    ) {\n      setShowTrailerFeild(true);\n    } else {\n      setShowTrailerFeild(false);\n    }\n  }, [props.index, props.expandedStop, JSON.stringify(stopDetail)]);\n\n  useEffect(() => {\n    const step =\n      exicutionProgress &&\n      exicutionProgress[props.index] &&\n      exicutionProgress[props.index].progress;\n    const totalStep = 3;\n    if (step) {\n      if (step === totalStep) {\n        setShowDottedLine(true);\n        setShowProgressBar(false);\n      } else if (step === 0) {\n        setShowDottedLine(false);\n        setShowProgressBar(false);\n      } else {\n        setShowDottedLine(false);\n        setShowProgressBar(true);\n        setTimeout(() => calculateHeight(props.index, step), 0);\n      }\n    }\n  }, [\n    props.index,\n    props.expandedStop,\n    isExpanded,\n    JSON.stringify(stopDetail),\n    ARRIVAL_VALUE,\n    exicutionProgress,\n  ]);\n\n  useEffect(() => {\n    const currentDate = new Date(\n      startTripModel.getTimeWithTimezone(stopDetail.timeZone)\n    );\n    currentDate.setMinutes(currentDate.getMinutes() + 60);\n\n    if (ARRIVAL_VALUE && new Date(ARRIVAL_VALUE) > currentDate) {\n      onArrivalErrorChange(true);\n    } else {\n      onArrivalErrorChange(false);\n    }\n  }, [ARRIVAL_VALUE]);\n\n  useEffect(() => {\n    const currentDate = new Date(\n      startTripModel.getTimeWithTimezone(stopDetail.timeZone)\n    );\n    currentDate.setMinutes(currentDate.getMinutes() + 60);\n\n    if (DEPARTURE_VALUE) {\n      const _arrival = ARRIVAL_VALUE ? new Date(ARRIVAL_VALUE) : currentDate;\n      const _departure = new Date(DEPARTURE_VALUE);\n      let isError = false;\n      if (_departure > currentDate) {\n        isError = true;\n      }\n      _arrival.setMinutes(_arrival.getMinutes() + 1);\n      if (!isError && _arrival > _departure) {\n        isError = true;\n      }\n      if (isError) {\n        onDepartureErrorChange(true);\n      } else {\n        onDepartureErrorChange(false);\n      }\n    } else {\n      onDepartureErrorChange(false);\n    }\n  }, [DEPARTURE_VALUE]);\n\n  const calculateHeight = (index: number, step: number) => {\n    const totalStep = 3;\n    const grid = document.getElementById(`\"${index}\"`);\n    const gridHeight = grid && grid.offsetHeight;\n    if (step) {\n      const barHeight = gridHeight && gridHeight * (step / totalStep);\n      setProgressBarHeight(barHeight + \"px\");\n    }\n  };\n\n  const getTrailerInValue = (): StopActivityProps => {\n    if (!!!TRAILER_IN_ACTIVITY) {\n      return { ...defaultStopActivity, stopId: stopDetail.stopId };\n    }\n\n    return {\n      equipmentFlow: EquipmentFlow.TRAILER_IN,\n      equipmentId: TRAILER_IN,\n      equipmentOwner: TRAILER_IN_ACTIVITY.equipmentOwner,\n      equipmentType: TRAILER_IN_ACTIVITY.equipmentType,\n      id: TRAILER_IN_ACTIVITY.id,\n      name: TRAILER_IN_ACTIVITY.name,\n      stopId: TRAILER_IN_ACTIVITY.stopId,\n      execActivity: TRAILER_IN_ACTIVITY.execActivity,\n      seqNo: TRAILER_IN_ACTIVITY.seqNo,\n      tmsActivity: TRAILER_IN_ACTIVITY.tmsActivity,\n    };\n  };\n\n  const getTrailerOutValue = (): StopActivityProps => {\n    if (!!!TRAILER_OUT_ACTIVITY) {\n      return { ...defaultStopActivity, stopId: stopDetail.stopId };\n    }\n\n    return {\n      equipmentFlow: EquipmentFlow.TRAILER_OUT,\n      equipmentId: TRAILER_OUT,\n      equipmentOwner: TRAILER_OUT_ACTIVITY.equipmentType,\n      id: TRAILER_OUT_ACTIVITY.id,\n      name: TRAILER_OUT_ACTIVITY.name,\n      stopId: TRAILER_OUT_ACTIVITY.stopId,\n      equipmentType: TRAILER_OUT_ACTIVITY.equipmentType,\n      execActivity: TRAILER_OUT_ACTIVITY.execActivity,\n      seqNo: TRAILER_OUT_ACTIVITY.seqNo,\n      tmsActivity: TRAILER_OUT_ACTIVITY.tmsActivity,\n    };\n  };\n\n  const updateStopInformation = () => {\n    const currentDate = new Date(\n      startTripModel.getTimeWithTimezone(stopDetail.timeZone)\n    );\n    currentDate.setMinutes(currentDate.getMinutes() + 60);\n\n    if (ARRIVAL_VALUE && new Date(ARRIVAL_VALUE) > currentDate) {\n      props.onShowError(EXECUTION_ERRORS.ARRIVAL_ERROR);\n      onArrivalErrorChange(true);\n      // Analytics implementation\n      logEvent(EVENT.UE_STOP_UPDATE_FAILURE, {\n        carrierId: props.carrierId,\n        shipmentId: stopDetail.shipmentId,\n        stopID: stopDetail.stopId,\n      });\n      return;\n    }\n\n    if (DEPARTURE_VALUE) {\n      const _arrival = ARRIVAL_VALUE ? new Date(ARRIVAL_VALUE) : currentDate;\n      const _departure = new Date(DEPARTURE_VALUE);\n      if (_departure > currentDate) {\n        props.onShowError(EXECUTION_ERRORS.DEPARTURE_ERROR);\n        onDepartureErrorChange(true);\n        return;\n      }\n      _arrival.setMinutes(_arrival.getMinutes() + 1);\n      if (_arrival >= _departure) {\n        props.onShowError(EXECUTION_ERRORS.DEPARTURE_ARRIVAL_ERROR);\n        onDepartureErrorChange(true);\n        return;\n      }\n      if (\n        startTripModel.isOTMTypeShipment(props.loadDetails) &&\n        !startTripModel.isOTypeStop(props.stopDetails) &&\n        !TRAILER_IN\n      ) {\n        props.onShowError(EXECUTION_ERRORS.TRAILER_IN_ERROR);\n        return;\n      }\n      if (\n        startTripModel.isOTMTypeShipment(props.loadDetails) &&\n        !startTripModel.isOTypeStop(props.stopDetails) &&\n        !TRAILER_OUT\n      ) {\n        props.onShowError(EXECUTION_ERRORS.TRAILER_OUT_ERROR);\n        return;\n      }\n    }\n\n    if (\n      startTripModel.isOTMTypeShipment(props.loadDetails) &&\n      TRAILER_OUT &&\n      !TRAILER_PARTTEN.test(TRAILER_OUT)\n    ) {\n      props.onShowError(EXECUTION_ERRORS.VALID_TRAILER_OUT);\n      return;\n    }\n    if (\n      startTripModel.isOTMTypeShipment(props.loadDetails) &&\n      TRAILER_IN &&\n      !TRAILER_PARTTEN.test(TRAILER_IN)\n    ) {\n      props.onShowError(EXECUTION_ERRORS.VALID_TRAILER_IN);\n      return;\n    }\n\n    let trailerIn: StopActivityProps;\n    let trailerOut: StopActivityProps;\n    const activity: StopActivityProps[] = [];\n    trailerIn = getTrailerInValue();\n    trailerOut = getTrailerOutValue();\n    if (trailerIn.equipmentFlow === EquipmentFlow.TRAILER_IN) {\n      activity.push(trailerIn);\n    }\n\n    if (trailerOut.equipmentFlow === EquipmentFlow.TRAILER_OUT) {\n      activity.push(trailerOut);\n    }\n\n    const stopInfo: StopInformation = {\n      carrierPro: \"\",\n      carrierScac: \"\",\n      stopId: stopDetail.stopId,\n      sequenceNo: stopDetail.sequenceNo,\n      stopNumber: stopDetail.sequenceNo,\n      locationId: stopDetail.locationId,\n      city: stopDetail.city,\n      state: stopDetail.state,\n      country: stopDetail.country,\n      latitude: stopDetail.latitude && parseFloat(stopDetail.latitude),\n      longitude: stopDetail.longitude && parseFloat(stopDetail.longitude),\n      timeZone: stopDetail.timeZone,\n      positionDateTime: new Date().toISOString(),\n      actualArrivalDateTime: ARRIVAL_VALUE,\n      actualETADateTime: ETA_VALUE,\n      actualDepartureDateTime: DEPARTURE_VALUE,\n      stopTrailerActivity: activity,\n      carrierId: \"\",\n      shipmentId: stopDetail.shipmentId,\n      sourceSystem: stopDetail.sourceSystem,\n      userId: \"\",\n    };\n    props.changeExpandStop(stopInfo);\n    // Enable GPS tracking\n    props.GPSEnabledEvent();\n    // Analytics implementation\n    logEvent(EVENT.UE_STOP_UPDATE_SUCCESS, {\n      carrierId: props.carrierId,\n      shipmentId: stopDetail.shipmentId,\n      stopID: stopDetail.stopId,\n    });\n  };\n  const expandLoadDetails = () => {\n    toggleLoadDetails(false);\n  };\n  const collapseLoadDetails = () => {\n    toggleLoadDetails(true);\n  };\n\n  const calculateTime = (stop: any) => {\n    return getAppointmentTime(stop);\n  };\n\n  const expandLoadForcely = () => {\n    toggleLoadDetails(true);\n  };\n\n  const onYesClick = () => {\n    props.clearWarningDialogMessage();\n  };\n\n  const onNoClick = () => {\n    props.clearWarningDialogMessage();\n  };\n\n  return (\n    <>\n      <IonModal\n        isOpen={!!props.warningDialogMessage}\n        cssClass=\"shipment-dialog\"\n        backdropDismiss={false}\n      >\n        <section>{props.warningDialogMessage}</section>\n        <footer>\n          <IonCol>\n            <IonButton class=\"btn btn-Yes\" onClick={onYesClick}>\n              Yes\n            </IonButton>\n          </IonCol>\n          <IonCol>\n            <IonButton class=\"btn btn-No\" onClick={onNoClick}>\n              No\n            </IonButton>\n          </IonCol>\n        </footer>\n      </IonModal>\n      <IonGrid\n        className={`stop-data-grid ${showDotteedLine ? \"dotted-border\" : \"\"}`}\n        id={`\"${props.index}\"`}\n      >\n        {props.index < props.totalStops - 1 ? (\n          <>\n            {props.index === 0 ? (\n              <IonImg\n                className={`stop-icon ${\n                  showDotteedLine ? \"change_origin_icon\" : \"\"\n                }`}\n                src=\"assets/icon/origin-pointer.svg\"\n              />\n            ) : (\n              <IonImg\n                className=\"stop-icon\"\n                src=\"assets/icon/stop-pointer.svg\"\n              />\n            )}\n          </>\n        ) : (\n          <IonImg\n            className={`path_icon ${\n              startTripModel.isAllStopCompleted(props.loadDetails)\n                ? \"change_dst_icon\"\n                : \"\"\n            }`}\n            src=\"assets/icon/dst-pointer.svg\"\n          />\n        )}\n        <IonGrid className=\"stop-address-grid\">\n          {showProgressBar && props.index < props.totalStops - 1 ? (\n            <IonGrid\n              className={` ${showProgressBar ? \"progressDiv\" : \"hide-line\"}`}\n              style={{ height: `${progressBarHeight}` }}\n            ></IonGrid>\n          ) : null}\n          <IonRow className=\"stop-address-gridspace\">\n            <IonCol\n              size={isPlatform(\"mobile\") ? \"7\" : \"2.5\"}\n              className=\"address-details2\"\n            >\n              <IonGrid className=\"origin_city_shipment_p\">\n                <p className=\"origin_city_shipment\">\n                  {stopDetail.city}, {stopDetail.state}\n                </p>\n                {isExpanded ? (\n                  <IonIcon\n                    src=\"assets/icon/minus-icon.svg\"\n                    class=\"plus-icon\"\n                    onClick={expandLoadDetails}\n                  />\n                ) : (\n                  <IonIcon\n                    src=\"assets/icon/plus.svg\"\n                    class=\"plus-icon\"\n                    onClick={collapseLoadDetails}\n                  />\n                )}\n              </IonGrid>\n              {isExpanded ? (\n                <IonGrid\n                  class={`complete-address2  ${\n                    isExpanded ? \"fadein\" : \"fadeout\"\n                  }`}\n                >\n                  <IonRow>\n                    <IonCol>\n                      {stopDetail.locationName && (\n                        <p>{stopDetail.locationName}</p>\n                      )}\n                      {stopDetail.addressLine1 && (\n                        <p> {stopDetail.addressLine1}</p>\n                      )}\n                      {stopDetail.addressLine2 && (\n                        <p> {stopDetail.addressLine2}</p>\n                      )}\n                    </IonCol>\n                    <IonCol size=\"4\">\n                      <span\n                        onClick={() => {\n                          props.openSatelliteMap(stopDetail.locationName, {\n                            lat: stopDetail.latitude,\n                            lng: stopDetail.longitude,\n                          });\n                        }}\n                      >\n                        <IonImg\n                          src=\"/assets/icon/shipment-map-icon.svg\"\n                          className=\"shipment-map-icon\"\n                        />\n                      </span>\n                    </IonCol>\n                  </IonRow>\n                </IonGrid>\n              ) : null}\n              {isPlatform(\"desktop\") ? (\n                <>\n                  {props.index === 0 ? (\n                    <p className=\"origin_milehead load_header_elements\">\n                      {getStopActivity(\n                        (stopDetail && stopDetail.stopActivity) || []\n                      )}\n                    </p>\n                  ) : (\n                    <>\n                      {\" \"}\n                      {props.index === props.totalStops - 1 ? (\n                        <p className=\"origin_milehead load_header_elements\">\n                          {getStopActivity(\n                            (stopDetail && stopDetail.stopActivity) || []\n                          )}\n                        </p>\n                      ) : (\n                        <p className=\"origin_milehead load_header_elements\">\n                          {STOP_OFF_TEXT} {props.index} :{\" \"}\n                          {getStopActivity(\n                            (stopDetail && stopDetail.stopActivity) || []\n                          )}{\" \"}\n                        </p>\n                      )}\n                    </>\n                  )}\n                  <p\n                    className={`origin_dateTime origin-deadheadShipment2 ${\n                      props.expandedStop ? \"\" : \"origin-deadheadShipment2 \"\n                    }`}\n                  >\n                    {stopDetail && calculateTime(stopDetail)}\n                  </p>\n                </>\n              ) : null}\n            </IonCol>\n            {((isExpanded && props.index > props.expandedStop) ||\n              props.index <= props.expandedStop) &&\n            isPlatform(\"desktop\") ? (\n              <IonCol size=\"9.5\">\n                <IonRow>\n                  <IonCol class=\"exe-col\">\n                    <ETA\n                      timestamp={props.timestamp}\n                      shipmentId={props.shipmentId}\n                      loadStop={props.stopDetails}\n                      onChange={(value: string) => {\n                        setETA(value);\n                      }}\n                      value={ETA_VALUE}\n                      isNextStop={props.index > props.expandedStop}\n                      isExpanded={isExpanded}\n                      timeZone={props.stopDetails.timeZone}\n                    />\n                  </IonCol>\n                  <IonCol class=\"exe-col\">\n                    <Arrival\n                      timestamp={props.timestamp}\n                      isError={isErrorOnArrival}\n                      loadStop={props.stopDetails}\n                      etaValue={ETA_VALUE}\n                      onChange={(value: string) => {\n                        setARRIVAL(value);\n                      }}\n                      value={ARRIVAL_VALUE}\n                      isNextStop={props.index > props.expandedStop}\n                      valueEntered={() => {\n                        props.arivalEntered(props.index);\n                      }}\n                      isExpanded={isExpanded}\n                      timeZone={props.stopDetails.timeZone}\n                      shipmentId={props.shipmentId}\n                    />\n                  </IonCol>\n                  <IonCol class=\"trailer-col exe-col\">\n                    <TrailerIn\n                      timestamp={props.timestamp}\n                      shipment={props.loadDetails}\n                      expandCurrentStopForcefully={expandLoadForcely}\n                      loadStop={props.stopDetails}\n                      onChange={(value: string) => {\n                        setTRAILERIN(value);\n                      }}\n                      value={TRAILER_IN}\n                      isNextStop={props.index > props.expandedStop}\n                      isFirstStop={props.index === 0}\n                      isExpanded={isExpanded}\n                      shipmentId={props.shipmentId}\n                      readonly={\n                        startTripModel.isOTypeStop(props.stopDetails) ||\n                        startTripModel.isShipmentTripCompleted(\n                          props.loadDetails\n                        ) ||\n                        startTripModel.areStopActivitiesMissing(\n                          props.stopDetails\n                        )\n                      }\n                      changeActivity={(activity: StopActivityProps) => {\n                        setTRAILERINACTIVITY(activity);\n                      }}\n                      showError={startTripModel.showTrailerInError(\n                        TRAILER_IN,\n                        props.loadDetails,\n                        DEPARTURE_VALUE,\n                        props.index > props.expandedStop,\n                        props.stopDetails\n                      )}\n                      showTrailerFeild={showTrailerFeild}\n                      isPreviousStop={props.index < props.expandedStop}\n                      updateStopInfo={props.updateStopInfo}\n                    />\n                  </IonCol>\n                  <IonCol class=\"exe-col\">\n                    <Departure\n                      timestamp={props.timestamp}\n                      isError={isErrorOnDeparture}\n                      loadStop={props.stopDetails}\n                      onChange={(value: string) => {\n                        setDEPARTURE(value);\n                      }}\n                      value={DEPARTURE_VALUE}\n                      isNextStop={props.index > props.expandedStop}\n                      arrivalVal={ARRIVAL_VALUE}\n                      isExpanded={isExpanded}\n                      timeZone={props.stopDetails.timeZone}\n                      shipmentId={props.shipmentId}\n                    />\n                  </IonCol>\n                  <IonCol class=\"trailer-col exe-col\">\n                    <TrailerOut\n                      shipment={props.loadDetails}\n                      timestamp={props.timestamp}\n                      expandCurrentStopForcefully={expandLoadForcely}\n                      loadStop={props.stopDetails}\n                      onChange={(value: string) => {\n                        setTRAILEROUT(value);\n                      }}\n                      shipmentId={props.shipmentId}\n                      readonly={\n                        startTripModel.isShipmentTripCompleted(\n                          props.loadDetails\n                        ) ||\n                        startTripModel.isOTypeStop(props.stopDetails) ||\n                        startTripModel.areStopActivitiesMissing(\n                          props.stopDetails\n                        )\n                      }\n                      value={TRAILER_OUT}\n                      isNextStop={props.index > props.expandedStop}\n                      isExpanded={isExpanded}\n                      isLastStop={props.index === props.totalStops - 1}\n                      changeActivity={(activity: StopActivityProps) => {\n                        setTRAILEROUTACTIVITY(activity);\n                      }}\n                      showError={startTripModel.showTrailerOutError(\n                        TRAILER_OUT,\n                        props.loadDetails,\n                        DEPARTURE_VALUE,\n                        props.index > props.expandedStop,\n                        props.stopDetails\n                      )}\n                      showTrailerFeild={showTrailerFeild}\n                      isPreviousStop={props.index < props.expandedStop}\n                    />\n                  </IonCol>\n                  <IonCol class=\"cta-btn-col exe-col\">\n                    {!startTripModel.isShipmentTripCompleted(\n                      props.loadDetails\n                    ) && (\n                      <IonButton\n                        class=\"load-btn desktop-cta-btn\"\n                        onClick={updateStopInformation}\n                        disabled={\n                          props.index > props.expandedStop ||\n                          !props.isNetworkAvailable\n                        }\n                      >\n                        {UPDATE_STOP_CTA_TEXT}\n                      </IonButton>\n                    )}\n                  </IonCol>\n                  <IonCol>\n                    <ReferenceDialog\n                      stopDetail={stopDetail}\n                      carrierId={props.carrierId}\n                      shipment={props.loadDetails}\n                    />\n                  </IonCol>\n                </IonRow>\n              </IonCol>\n            ) : null}\n            {isExpanded && isPlatform(\"mobile\") ? (\n              <IonCol size=\"5\" className=\"address-details\">\n                <ReferenceDialog\n                  stopDetail={stopDetail}\n                  carrierId={props.carrierId}\n                  shipment={props.loadDetails}\n                />\n              </IonCol>\n            ) : null}\n          </IonRow>\n          {isExpanded ||\n          (!isEndExecution && props.index > props.expandedStop) ||\n          (!isEndExecution && !isPlatform(\"mobile\")) ? (\n            <IonRow>\n              {isPlatform(\"mobile\") ? (\n                <IonCol size=\"7\" className=\"address-details2\">\n                  {props.index === 0 ? (\n                    <p className=\"origin_milehead load_header_elements\">\n                      {getStopActivity(\n                        (stopDetail && stopDetail.stopActivity) || []\n                      )}\n                    </p>\n                  ) : (\n                    <>\n                      {props.index === props.totalStops - 1 ? (\n                        <p className=\"origin_milehead load_header_elements\">\n                          {getStopActivity(\n                            (stopDetail && stopDetail.stopActivity) || []\n                          )}\n                        </p>\n                      ) : (\n                        <p className=\"origin_milehead load_header_elements\">\n                          {STOP_OFF_TEXT} {props.index} :{\" \"}\n                          {getStopActivity(\n                            (stopDetail && stopDetail.stopActivity) || []\n                          )}\n                        </p>\n                      )}\n                    </>\n                  )}\n                  <p\n                    className={`origin_dateTime origin-deadheadShipment2 ${\n                      props.expandedStop ? \"\" : \"origin-deadheadShipment2 \"\n                    }`}\n                  >\n                    {stopDetail && calculateTime(stopDetail)}\n                  </p>\n                </IonCol>\n              ) : null}\n              {isExpanded && isPlatform(\"mobile\") ? (\n                <IonCol size=\"5\" className=\"address-details\">\n                  <ETA\n                    timestamp={props.timestamp}\n                    loadStop={props.stopDetails}\n                    onChange={(value: string) => {\n                      setETA(value);\n                    }}\n                    value={ETA_VALUE}\n                    isNextStop={props.index > props.expandedStop}\n                    isExpanded={isExpanded}\n                    timeZone={props.stopDetails.timeZone}\n                    shipmentId={props.shipmentId}\n                  />\n                </IonCol>\n              ) : null}\n            </IonRow>\n          ) : null}\n\n          {isPlatform(\"mobile\") &&\n          ((isExpanded && props.index > props.expandedStop) ||\n            props.index <= props.expandedStop) ? (\n            <IonGrid className=\"address-details2\">\n              <IonRow class={`${isEndExecution ? \"\" : \"arrival-row\"}`}>\n                <IonCol size=\"7\" className=\"address-details\">\n                  <Arrival\n                    timestamp={props.timestamp}\n                    isError={isErrorOnArrival}\n                    loadStop={props.stopDetails}\n                    etaValue={ETA_VALUE}\n                    onChange={(value: string) => {\n                      setARRIVAL(value);\n                    }}\n                    value={ARRIVAL_VALUE}\n                    isNextStop={props.index > props.expandedStop}\n                    valueEntered={() => {\n                      props.arivalEntered(props.index);\n                    }}\n                    isExpanded={isExpanded}\n                    timeZone={props.stopDetails.timeZone}\n                    shipmentId={props.shipmentId}\n                  />\n                </IonCol>\n\n                <IonCol size=\"5\" className=\"address-details\">\n                  <TrailerIn\n                    shipment={props.loadDetails}\n                    timestamp={props.timestamp}\n                    expandCurrentStopForcefully={expandLoadForcely}\n                    loadStop={props.stopDetails}\n                    onChange={(value: string) => {\n                      setTRAILERIN(value);\n                    }}\n                    value={TRAILER_IN}\n                    isNextStop={props.index > props.expandedStop}\n                    isFirstStop={props.index === 0}\n                    isExpanded={isExpanded}\n                    shipmentId={props.shipmentId}\n                    readonly={\n                      startTripModel.isOTypeStop(props.stopDetails) ||\n                      startTripModel.isShipmentTripCompleted(\n                        props.loadDetails\n                      ) ||\n                      startTripModel.areStopActivitiesMissing(props.stopDetails)\n                    }\n                    changeActivity={(activity: StopActivityProps) => {\n                      setTRAILERINACTIVITY(activity);\n                    }}\n                    showError={startTripModel.showTrailerInError(\n                      TRAILER_IN,\n                      props.loadDetails,\n                      DEPARTURE_VALUE,\n                      props.index > props.expandedStop,\n                      props.stopDetails\n                    )}\n                    showTrailerFeild={showTrailerFeild}\n                    isPreviousStop={props.index < props.expandedStop}\n                    updateStopInfo={props.updateStopInfo}\n                  />\n                </IonCol>\n              </IonRow>\n              <IonRow class={`${isEndExecution ? \"\" : \"arrival-row\"}`}>\n                <IonCol size=\"7\" className=\"address-details\">\n                  <Departure\n                    timestamp={props.timestamp}\n                    isError={isErrorOnDeparture}\n                    loadStop={props.stopDetails}\n                    onChange={(value: string) => {\n                      setDEPARTURE(value);\n                    }}\n                    value={DEPARTURE_VALUE}\n                    isNextStop={props.index > props.expandedStop}\n                    arrivalVal={ARRIVAL_VALUE}\n                    isExpanded={isExpanded}\n                    shipmentId={props.shipmentId}\n                    timeZone={props.stopDetails.timeZone}\n                  />\n                </IonCol>\n\n                <IonCol size=\"5\" className=\"address-details\">\n                  <TrailerOut\n                    shipment={props.loadDetails}\n                    timestamp={props.timestamp}\n                    expandCurrentStopForcefully={expandLoadForcely}\n                    loadStop={props.stopDetails}\n                    onChange={(value: string) => {\n                      setTRAILEROUT(value);\n                    }}\n                    value={TRAILER_OUT}\n                    isNextStop={props.index > props.expandedStop}\n                    isExpanded={isExpanded}\n                    isLastStop={props.index === props.totalStops - 1}\n                    readonly={\n                      startTripModel.isShipmentTripCompleted(\n                        props.loadDetails\n                      ) ||\n                      startTripModel.isOTypeStop(props.stopDetails) ||\n                      startTripModel.areStopActivitiesMissing(props.stopDetails)\n                    }\n                    shipmentId={props.shipmentId}\n                    changeActivity={(activity: StopActivityProps) => {\n                      setTRAILEROUTACTIVITY(activity);\n                    }}\n                    showError={startTripModel.showTrailerOutError(\n                      TRAILER_OUT,\n                      props.loadDetails,\n                      DEPARTURE_VALUE,\n                      props.index > props.expandedStop,\n                      props.stopDetails\n                    )}\n                    showTrailerFeild={showTrailerFeild}\n                    isPreviousStop={props.index < props.expandedStop}\n                  />\n                </IonCol>\n              </IonRow>\n              {isExpanded &&\n              !startTripModel.isShipmentTripCompleted(props.loadDetails) ? (\n                <IonRow>\n                  <IonButton\n                    class=\"load-btn load-btn3\"\n                    id=\"btn-update\"\n                    onClick={updateStopInformation}\n                    disabled={\n                      props.index > props.expandedStop ||\n                      !props.isNetworkAvailable\n                    }\n                  >\n                    {UPDATE_STOP_CTA_TEXT}\n                  </IonButton>\n                </IonRow>\n              ) : null}\n            </IonGrid>\n          ) : null}\n        </IonGrid>\n      </IonGrid>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport {\n  IonDatetime,\n  IonLabel,\n  IonRow,\n  IonCol,\n  IonButton,\n  isPlatform,\n  IonInput,\n} from \"@ionic/react\";\nimport { NewInput } from \"../../../components/shared/NewUIComponents/OriginInput\";\nimport {\n  CityError,\n  CONFRIM_START_CTA_TEXT,\n  START_LOCATION_LABEL_TEXT,\n  ACTUAL_START_LABEL_TEXT,\n} from \"../../../utils/constants\";\nimport { StartTripModel } from \"../../../models/home/StartTrip.model\";\nimport { getYearValues } from \"../../../utils/formatData\";\n\nexport const StartTrip: React.FunctionComponent<any> = (props: any) => {\n  const [isConfirmStartButton, setisConfirmStartButton] = useState(\n    props.isConfirmStartButton\n  );\n\n  const startTripModel: StartTripModel = new StartTripModel();\n  const [locationName, setLocationName] = useState(\"\");\n  const [timezone, settimezone] = useState(\"\");\n  const [originError, setoriginError] = useState(\"\");\n  const [lat, setlat] = useState(\"\");\n  const [lng, setlng] = useState(\"\");\n\n  const [currentLocationName, setcurrentLocationName] = useState<string>(\"\");\n  const [currentLocationCountry, setcurrentLocationCountryName] = useState<\n    string\n  >(\"\");\n  const [currentLocationLat, setcurrentLocationLat] = useState<string>(\"\");\n  const [currentLocationLng, setcurrentLocationLng] = useState<string>(\"\");\n  const [currentLocationTimezone, setCurrentLocationTimezone] = useState<\n    string\n  >(\"\");\n  const [\n    currentLocationTimezoneStatus,\n    setCurrentLocationTimezoneStatus,\n  ] = useState<boolean>(false);\n\n  const [ActualStart, setActualStart] = useState<string>(\n    startTripModel.getCurrentTimeInISO()\n  );\n  const [isLoadRefreshed, setIsLoadRefreshed] = useState(false);\n  const [isError, setisError] = useState(false);\n  const [country, setCountry] = useState(\"\");\n  const [isCurrentLocationAvailable, setCurrentLocationStatus] = useState<\n    boolean\n  >(false);\n  const cityError = CityError;\n  const yearValues = getYearValues() || new Date().getFullYear();\n\n  const setErrorValue = (value: boolean, name: string) => {\n    setisError(value);\n    if (name === \"locationName\" && value === true) {\n      setoriginError(cityError);\n    } else if (name === \"locationName\" && value === false) {\n      setoriginError(\"\");\n    }\n  };\n  const confirmationStart = () => {\n    props.confirmStartInformation(\n      locationName,\n      ActualStart,\n      lat,\n      lng,\n      country || \"US\",\n      timezone\n    );\n    setIsLoadRefreshed(true);\n    setisConfirmStartButton(false);\n    // Enable GPS tracking\n    if (isPlatform(\"mobile\")) {\n      props.GPSEnabledEvent(locationName);\n    }\n  };\n  const handleChangeEvent = (event: any) => {\n    {\n      if (\n        event.target.name === \"locationName\" &&\n        event.target.value.length > 0\n      ) {\n        setoriginError(\"\");\n      }\n      if (isCurrentLocationAvailable) {\n        setLocationName(event.target.value);\n        setlat(event.target.lat);\n        setlng(event.target.lng);\n        setCountry(event.target.country);\n      } else {\n        setcurrentLocationName(event.target.value);\n        setcurrentLocationCountryName(event.target.country);\n        setcurrentLocationLat(event.target.lat);\n        setcurrentLocationLng(event.target.lng);\n\n        setLocationName(event.target.value);\n        setlat(event.target.lat);\n        setlng(event.target.lng);\n        setCountry(event.target.country);\n        setCurrentLocationStatus(true);\n      }\n    }\n  };\n\n  useEffect(() => {\n    setActualStart(startTripModel.getCurrentTimeInISO());\n    setLocationName(\"\");\n    setlat(\"\");\n    setlng(\"\");\n    setCountry(\"\");\n    settimezone(\"\");\n  }, [props.shipmentId]);\n\n  const { hideConfirmStart } = props;\n  let _startDate: string = hideConfirmStart ? props.ActualStart : ActualStart;\n  _startDate = startTripModel.getTimeForIOS(_startDate);\n\n  return (\n    <React.Fragment>\n      {isPlatform(\"mobile\") ? (\n        <>\n          <IonRow>\n            <IonCol className=\"origin-input\">\n              {(hideConfirmStart && (\n                <IonInput\n                  value={props.locationOriginValue}\n                  className=\"start-trip-date readonly-origin execution-field\"\n                  readonly={true}\n                  disabled={true}\n                />\n              )) || (\n                <NewInput\n                  onTimeZoneChange={(timezone: string) => {\n                    if (!currentLocationTimezoneStatus) {\n                      setCurrentLocationTimezone(timezone);\n                      setCurrentLocationTimezoneStatus(true);\n                    }\n                    settimezone(timezone);\n                  }}\n                  Error={false}\n                  labelValue=\"\"\n                  InputValue={locationName}\n                  InputName=\"locationName\"\n                  handleChange={handleChangeEvent}\n                  isDestination={false}\n                  deFaultValue={locationName}\n                  useHandler={false}\n                  setErrorValue={setErrorValue}\n                  locationValue={props.locationValue}\n                />\n              )}\n            </IonCol>\n          </IonRow>\n          <IonRow>\n            <IonCol>\n              <IonLabel className=\"actual-start\">\n                {ACTUAL_START_LABEL_TEXT}\n              </IonLabel>\n              <IonDatetime\n                displayFormat=\"MMM DD hh:mm A\"\n                pickerFormat=\"YYYY MMM DD hh:mm A\"\n                className=\"actual-start-time start-trip-date execution-field\"\n                minuteValues=\"00,05,10,15,20,25,30,35,40,45,50,55\"\n                value={_startDate}\n                onIonChange={(e) => {\n                  setActualStart(e.detail.value!);\n                }}\n                yearValues={yearValues}\n                readonly={hideConfirmStart}\n                disabled={hideConfirmStart}\n                mode=\"ios\"\n              ></IonDatetime>\n            </IonCol>\n          </IonRow>\n          {!hideConfirmStart ? (\n            <IonRow>\n              <IonButton\n                class=\"load-btn load-btn2\"\n                onClick={confirmationStart}\n                disabled={\n                  locationName === \"\" ||\n                  (locationName !== \"\" && isError) ||\n                  ActualStart === \"\" ||\n                  !props.networkStatus\n                }\n              >\n                {CONFRIM_START_CTA_TEXT}\n              </IonButton>\n            </IonRow>\n          ) : null}\n        </>\n      ) : (\n        <>\n          <IonRow class=\"start-trip-row\">\n            <IonCol className=\"start-col\" size=\"3\">\n              <IonLabel className=\"location-label\">\n                {START_LOCATION_LABEL_TEXT}\n              </IonLabel>\n              {(hideConfirmStart && (\n                <IonInput\n                  value={props.locationOriginValue}\n                  className=\"start-trip-date readonly-origin execution-field\"\n                  readonly={true}\n                  disabled={true}\n                />\n              )) || (\n                <NewInput\n                  onTimeZoneChange={(timezone: string) => {\n                    if (!currentLocationTimezoneStatus) {\n                      setCurrentLocationTimezone(timezone);\n                      setCurrentLocationTimezoneStatus(true);\n                    }\n                    settimezone(timezone);\n                  }}\n                  Error={false}\n                  labelValue=\"\"\n                  InputValue={locationName}\n                  InputName=\"locationName\"\n                  handleChange={handleChangeEvent}\n                  isDestination={false}\n                  deFaultValue={locationName}\n                  useHandler={false}\n                  setErrorValue={setErrorValue}\n                  locationValue={props.locationValue}\n                />\n              )}\n            </IonCol>\n            <IonCol size=\"3\" className=\"start-col\">\n              <IonLabel className=\"actual-start\">\n                {ACTUAL_START_LABEL_TEXT}\n              </IonLabel>\n              <IonDatetime\n                displayFormat=\"MMM DD hh:mm A\"\n                pickerFormat=\"YYYY MMM DD hh:mm A\"\n                minuteValues=\"00,05,10,15,20,25,30,35,40,45,50,55\"\n                className={`actual-start-time execution-field ${\n                  isConfirmStartButton ? \"StartTrip-location2\" : \"location-inp\"\n                }`}\n                value={_startDate}\n                onIonChange={(e) => {\n                  setActualStart(e.detail.value!);\n                }}\n                readonly={hideConfirmStart}\n                disabled={hideConfirmStart}\n                mode=\"ios\"\n              ></IonDatetime>\n            </IonCol>\n            <IonCol size=\"6\" className=\"start-btn-col\">\n              {!hideConfirmStart ? (\n                <IonButton\n                  class=\"load-btn load-btn2\"\n                  onClick={confirmationStart}\n                  disabled={\n                    locationName === \"\" ||\n                    (locationName !== \"\" && isError) ||\n                    ActualStart === \"\" ||\n                    !props.networkStatus\n                  }\n                >\n                  {CONFRIM_START_CTA_TEXT}\n                </IonButton>\n              ) : null}\n            </IonCol>\n          </IonRow>\n        </>\n      )}\n    </React.Fragment>\n  );\n};\n","import { StopInformation } from \"../../schemas/Exicution/exicution.schema\";\nimport { stopActivityProps } from \"../stopActivity.model\";\n\nexport class UpdateStopModel {\n  updateStop(input: StopInformation) {\n    return {\n      mutation: {\n        updateStop: {\n          __args: {\n            input\n          },\n          status: true,\n          message: true,\n          shipment: {\n            shipmentId: true,\n            lineOfBusiness: true,\n            transportMode: true,\n            totalWeight: true,\n            weightUOM: true,\n            totalDistance: true,\n            distanceUOM: true,\n            numberOfStops: true,\n            sourceTMS: true,\n            driverAssignmentStatus: true,\n            assignedCarrierId: true,\n            assignedTMSCarrierId: true,\n            isAppointmentConfirmed: true,\n            isHazardous: true,\n            isHighValue: true,\n            isTemperatureControlled: true,\n            isFreezeProtected: true,\n            readyDateTime: true,\n            readyDateTimeZone: true,\n            equipmentType: true,\n            predecessorShipmentId: true,\n            successorShipmentId: true,\n            assignmentStatus: true,\n            executionStatus: true,\n            masterBillOfLoading: true,\n            shipmentServices: {\n              serviceDescription: true\n            },\n            startCity: true,\n            startCountry: true,\n            startState: true,\n            startDateTime: true,\n            loadStop: {\n              stopId: true,\n              locationId: true,\n              stopType: true,\n              sequenceNo: true,\n              locationName: true,\n              addressLine1: true,\n              addressLine2: true,\n              city: true,\n              state: true,\n              country: true,\n              postalCode: true,\n              timeZone: true,\n              longitude: true,\n              latitude: true,\n              plannedArrivalDateTime: true,\n              actualETADateTime: true,\n              actualArrivalDateTime: true,\n              estimatedStopDuration: true,\n              plannedDepartureDateTime: true,\n              actualDepartureDateTime: true,\n              appointmentEarlyDateTime: true,\n              appointmentLateDateTime: true,\n              estimatedStopDurationUom: true,\n              plannedEtaDateTime: true,\n              stopReference: {\n                id: true,\n                type: true,\n                value: true\n              },\n              locationNotes: {\n                id: true,\n                type: true,\n                value: true\n              },\n              stopActivity: stopActivityProps,\n            },\n            shipmentInvolvedParties: {\n              id: true,\n              partyId: true,\n              partyType: true,\n              partyName: true,\n              partyEmail: true,\n              partyPhone: true\n            },\n            shipmentReferences: {\n              id: true,\n              type: true,\n              value: true,\n              stopId: true,\n              shipmentId: true,\n              display: true\n            },\n            assignmentTransaction: {\n              transactionId: true,\n              driverId: true,\n              driverName: true\n            }\n          }\n        }\n      }\n    };\n  }\n}\n","import { StartLocation } from '../../schemas/Exicution/exicution.schema';\nimport { stopActivityProps } from '../stopActivity.model';\n\nexport class InTransitModel {\n  confirmStart(input: StartLocation) {\n    return {\n      mutation: {\n        confirmStart: {\n          __args: {\n            input\n          },\n          status: true,\n          message: true,\n          shipment: {\n            shipmentId: true,\n            lineOfBusiness: true,\n            transportMode: true,\n            totalWeight: true,\n            weightUOM: true,\n            totalDistance: true,\n            distanceUOM: true,\n            numberOfStops: true,\n            sourceTMS: true,\n            assignedCarrierId: true,\n            assignedTMSCarrierId: true,\n            isAppointmentConfirmed: true,\n            isHazardous: true,\n            isHighValue: true,\n            isTemperatureControlled: true,\n            isFreezeProtected: true,\n            readyDateTime: true,\n            readyDateTimeZone: true,\n            equipmentType: true,\n            predecessorShipmentId: true,\n            successorShipmentId: true,\n            assignmentStatus: true,\n            executionStatus: true,\n            masterBillOfLoading: true,\n            driverAssignmentStatus: true,\n            shipmentServices: {\n              serviceDescription: true\n            },\n            startCity: true,\n            startCountry: true,\n            startState: true,\n            startDateTime: true,\n            loadStop: {\n              stopId: true,\n              locationId: true,\n              stopType: true,\n              sequenceNo: true,\n              locationName: true,\n              addressLine1: true,\n              addressLine2: true,\n              city: true,\n              state: true,\n              country: true,\n              postalCode: true,\n              timeZone: true,\n              longitude: true,\n              latitude: true,\n              estimatedArrivalDateTime: true,\n              plannedArrivalDateTime: true,\n              actualArrivalDateTime: true,\n              estimatedStopDuration: true,\n              plannedDepartureDateTime: true,\n              actualDepartureDateTime: true,\n              appointmentEarlyDateTime: true,\n              appointmentLateDateTime: true,\n              estimatedStopDurationUom: true,\n              plannedEtaDateTime: true,\n              stopReference: {\n                id: true,\n                type: true,\n                value: true\n              },\n              locationNotes: {\n                id: true,\n                type: true,\n                value: true\n              },\n              stopActivity: stopActivityProps\n            },\n            shipmentInvolvedParties: {\n              id: true,\n              partyId: true,\n              partyType: true,\n              partyName: true,\n              partyEmail: true,\n              partyPhone: true\n            },\n            shipmentReferences: {\n              id: true,\n              type: true,\n              value: true,\n              stopId: true,\n              shipmentId: true,\n              display: true\n            },\n            assignmentTransaction: {\n              transactionId: true,\n              driverId: true,\n              driverName: true\n            }\n          }\n        }\n      }\n    };\n  }\n}\n","import React, { Component } from \"react\";\n\nimport { IonCard, IonImg, IonGrid, IonButton, isPlatform } from \"@ionic/react\";\nimport \"./ShipmentUpdateScreen.scss\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport * as moment from \"moment-timezone\";\nimport {\n  IShipmentUpdateCardProps,\n  IShipmentUpdateCardState,\n  ICardProps,\n} from \"../../../schemas/StartTrip/StartTrip\";\nimport { ShipmentStopDetails } from \"./ShipmentStopDetails\";\nimport { StartTripModel } from \"../../../models/home/StartTrip.model\";\nimport { StartTrip } from \"./startTrip\";\nimport useInjectSaga from \"../../../utils/injectSaga\";\nimport { getUserDetails, getNetworkStatus } from \"../../../selectors/selector\";\nimport useInjectReducer from \"../../../utils/injectReducer\";\nimport saga from \"../../../saga/MyLoad/saga\";\nimport reducer from \"../../../reducers/carrierAssign/reducer\";\n\nimport {\n  updateStopInformation,\n  confirmStartInformation,\n  confirmStartInformationStatusMessage,\n  clearWarningDialog,\n  updateStopInformationResponse,\n  clearUpdateStopInformationResponse,\n} from \"../../../actions/myload/action\";\nimport { StopInformation } from \"../../../schemas/Exicution/exicution.schema\";\nimport { UpdateStopModel } from \"../../../models/home/updateStop.model\";\nimport { InTransitModel } from \"../../../models/home/InTransit.model\";\nimport {\n  COMPLETE_TRIP_CTA_TEXT,\n  PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n  NO_NEWORK,\n} from \"../../../utils/constants\";\nimport { showAlert } from \"../../../actions/App/action\";\nimport { getWarningDialogMessage, updateStopInfo } from \"app/selectors/Myload/selector\";\n\nconst cityError = \"please provide correct CityName\";\n\nclass ShipmentUpdateCard extends Component<\n  ICardProps,\n  IShipmentUpdateCardState\n> {\n  private readonly startTripModel: StartTripModel;\n\n  private startTrip: any;\n\n  constructor(props: ICardProps) {\n    super(props);\n    this.startTripModel = new StartTripModel();\n    this.startTrip = null;\n    this.state = {\n      showExpandView: false,\n      isConfirmStartButton: true,\n      expandedStop: this.startTripModel.getCurrentOpenStop(props.loadDetails),\n      locationName: \"\",\n      originError: \"\",\n      isLocationExpand: props.locationValue,\n      ActualStart: new Date().toISOString(),\n      isLoadRefreshed: false,\n      actualStartDateTime: new Date(),\n      currentLocationName: \"\",\n      lat: \"\",\n      lng: \"\",\n      timezone: \"\",\n      progressBarHeight: \"20px\",\n      exicutionProgress: [],\n      showDottedBorder: false,\n    };\n  }\n\n  confirmStartInformation = (\n    locationName: string,\n    startDate: string,\n    lat: string,\n    lng: string,\n    country: string,\n    timezone: string\n  ) => {\n    const { userDetails = {} } = this.props;\n    const { loadDetails = {} } = this.props;\n    const _model: InTransitModel = new InTransitModel();\n    const location = locationName ? locationName.split(\",\") : [];\n    if (location.length === 1) {\n      location.push(\"\");\n    }\n    const callBack = (shipment: any) => {\n      this.props.refreshShipmentInDriverLoads(shipment);\n    };\n    const _startDate: string = startDate\n      ? moment.tz(startDate.substring(0, 19), timezone).format()\n      : startDate;\n\n    this.props.confirmStartLoadInformation(\n      _model.confirmStart({\n        carrierId: userDetails.carrierId,\n        carrierPro: \"\",\n        carrierScac: \"\",\n        city: location[0],\n        country,\n        latitude: lat ? lat.toString() : \"\",\n        longitude: lng ? lng.toString() : \"\",\n        positionDateTime: _startDate,\n        shipmentId: loadDetails.shipmentId,\n        sourceSystem: loadDetails.sourceTMS,\n        startDateTime: _startDate,\n        state: location[1],\n        timeZone: timezone,\n        userId: userDetails.userPrincipalName,\n      }),\n      callBack\n    );\n    this.setState({\n      showExpandView: true,\n      expandedStop: this.startTripModel.getCurrentOpenStop(\n        this.props.loadDetails\n      ),\n      isConfirmStartButton: false,\n      isLoadRefreshed: true,\n      progressBarHeight: \"70px\",\n    });\n  };\n\n  private readonly getActualStartTime = (startingDate: string): string => {\n    const actualStartDateTime =\n      (startingDate && new Date(startingDate)) ||\n      this.state.actualStartDateTime;\n    const monthName: string = actualStartDateTime.toLocaleString(\"default\", {\n      month: \"short\",\n    });\n    const _date: number = actualStartDateTime.getDate();\n    const time: string = actualStartDateTime.toLocaleString(\"default\", {\n      hour: \"numeric\",\n      minute: \"numeric\",\n      hour12: true,\n    });\n\n    return `${monthName} ${_date} ${time}`;\n  };\n\n  componentDidMount() {\n    this.setState({\n      isLoadRefreshed: false,\n      showExpandView: false,\n      isConfirmStartButton: true,\n      expandedStop: this.startTripModel.getCurrentOpenStop(\n        this.props.loadDetails\n      ),\n      locationName: this.state.currentLocationName,\n      originError: \"\",\n      isLocationExpand: this.props.locationValue,\n      progressBarHeight: \"0px\",\n      exicutionProgress: [],\n    });\n    setTimeout(() => this.updateExicutionProgress(), 0);\n  }\n\n  updateExicutionProgress = (stopIndex?: number) => {\n    const exicutionProgress: any = {};\n    const tripCompleted = this.startTripModel.isAllStopCompleted(\n      this.props.loadDetails\n    );\n    const shipmentloadStop = this.sortShipmentsStop();\n\n    const startLocation = this.startTripModel.getStartingLocation(\n      this.props.loadDetails\n    );\n    this.getActualStartTime(\n      this.startTripModel.getStartingDateTime(this.props.loadDetails)\n    );\n    let confrimStartProgres = 0;\n    const hideConfirmStart: boolean = this.startTripModel.isConfirmStartButtonDisabled(\n      this.props.loadDetails\n    );\n    if (\n      tripCompleted ||\n      stopIndex === 0 ||\n      (shipmentloadStop[0] && shipmentloadStop[0].actualArrivalDateTime) ||\n      this.state.expandedStop > 0\n    ) {\n      confrimStartProgres = 3;\n    } else {\n      if (startLocation) {\n        confrimStartProgres = 1;\n      }\n      if (hideConfirmStart) {\n        confrimStartProgres = 2;\n      }\n    }\n    exicutionProgress.startTrip = { progress: confrimStartProgres };\n    shipmentloadStop &&\n      shipmentloadStop.map((stop: any, index: number) => {\n        let stopProgress = 0;\n        if (tripCompleted || index < this.state.expandedStop - 1) {\n          stopProgress = 3;\n        } else if (\n          (index === this.state.expandedStop ||\n            index === this.state.expandedStop - 1) &&\n          index !== shipmentloadStop.length - 1\n        ) {\n          if (stopIndex === index) {\n            stopProgress = 0.5;\n          }\n          if (stop.actualArrivalDateTime) {\n            stopProgress += 1;\n          }\n          if (stop.actualArrivalDateTime && stop.actualDepartureDateTime) {\n            stopProgress += 1;\n          }\n          if (\n            (stopIndex && stopIndex - 1 === index) ||\n            (shipmentloadStop[index + 1] &&\n              shipmentloadStop[index + 1].actualArrivalDateTime)\n          ) {\n            stopProgress = 3;\n          }\n        }\n        exicutionProgress[index] = { progress: stopProgress };\n      });\n    this.setState({ exicutionProgress }, () => {\n      setTimeout(() => this.getProgress(), 0);\n    });\n  };\n\n  componentDidUpdate(prevProps: IShipmentUpdateCardProps) {\n    if (\n      JSON.stringify(prevProps.loadDetails) !==\n      JSON.stringify(this.props.loadDetails)\n    ) {\n      this.setState({\n        isLoadRefreshed: false,\n        showExpandView: false,\n        isConfirmStartButton: true,\n        expandedStop: this.startTripModel.getCurrentOpenStop(\n          this.props.loadDetails\n        ),\n        locationName: this.state.currentLocationName,\n        originError: \"\",\n        isLocationExpand: this.props.locationValue,\n        exicutionProgress: [],\n      });\n      setTimeout(() => this.updateExicutionProgress(), 0);\n    }\n  }\n\n  getTime = (time: string, timeZone: string): string => {\n    return time ? moment.tz(time.substring(0, 19), timeZone).format() : time;\n  };\n\n  updateShipmentStopInformation = (stopInfo: StopInformation) => {\n    stopInfo.shipmentId = this.props.shipmentId;\n    stopInfo.sourceSystem = this.props.loadDetails.sourceTMS;\n    const _model: UpdateStopModel = new UpdateStopModel();\n    const { userDetails = {} } = this.props;\n    const callBack = (shipment: any) => {\n      this.props.refreshShipmentsLoads(shipment);\n    };\n    const currentOpenStopSNo = this.state.expandedStop + 1;\n    if (currentOpenStopSNo === stopInfo.sequenceNo) {\n      this.props.updateStopInformationResponse({\n        shipmentId: stopInfo.shipmentId,\n        sequenceNo: stopInfo.sequenceNo,\n      });\n    } else {\n      this.props.clearUpdateStopInformationResponse();\n    }\n\n    this.props.updateStopInformation(\n      _model.updateStop({\n        sourceSystem: stopInfo.sourceSystem,\n        carrierPro: stopInfo.carrierPro,\n        carrierScac: stopInfo.carrierScac,\n        shipmentId: stopInfo.shipmentId,\n        stopId: stopInfo.stopId,\n        sequenceNo: stopInfo.sequenceNo,\n        stopNumber: stopInfo.stopNumber,\n        locationId: stopInfo.locationId,\n        carrierId: userDetails.carrierId,\n        userId: userDetails.userPrincipalName,\n        city: stopInfo.city,\n        state: stopInfo.state,\n        country: stopInfo.country,\n        latitude: stopInfo.latitude,\n        longitude: stopInfo.longitude,\n        timeZone: stopInfo.timeZone,\n        positionDateTime: stopInfo.positionDateTime,\n        actualArrivalDateTime: this.getTime(\n          stopInfo.actualArrivalDateTime,\n          stopInfo.timeZone\n        ),\n        actualETADateTime: this.getTime(\n          stopInfo.actualETADateTime,\n          stopInfo.timeZone\n        ),\n        actualDepartureDateTime: this.getTime(\n          stopInfo.actualDepartureDateTime,\n          stopInfo.timeZone\n        ),\n        stopTrailerActivity: stopInfo.stopTrailerActivity,\n      }),\n      callBack\n    );\n  };\n\n  sortShipmentsStop = () => {\n    let { shipmentloadStop = [] } = this.props;\n\n    shipmentloadStop = shipmentloadStop\n      .slice()\n      .sort((load1: any, load2: any) => {\n        if (load1.sequenceNo && load2.sequenceNo) {\n          return load1.sequenceNo - load2.sequenceNo;\n        }\n        if (load1.stopSequence && load2.stopSequence) {\n          return load1.stopSequence - load2.stopSequence;\n        }\n        return 0;\n      });\n    return shipmentloadStop;\n  };\n\n  getProgress = () => {\n    const totalStep = 3;\n    if (\n      this.state.exicutionProgress &&\n      this.state.exicutionProgress.startTrip &&\n      this.state.exicutionProgress.startTrip.progress\n    ) {\n      const { progress } = this.state.exicutionProgress.startTrip;\n      if (progress === totalStep) {\n        this.setState({ showDottedBorder: true });\n      } else {\n        this.setState({ showDottedBorder: false });\n        const grid = this.startTrip;\n        const gridHeight = grid && grid.offsetHeight;\n        const barHeight = gridHeight && gridHeight * (progress / totalStep);\n        this.setState({ progressBarHeight: `${barHeight}px` });\n      }\n    }\n  };\n\n  render() {\n    const shipmentloadStop = this.sortShipmentsStop();\n    const hideConfirmStart: boolean = this.startTripModel.isConfirmStartButtonDisabled(\n      this.props.loadDetails\n    );\n    return (\n      <>\n        <IonCard className=\"shipment-card\">\n          <IonGrid\n            className={`stop-grid  ${\n              this.state.showDottedBorder ? \"dotted-border\" : \"\"\n            }`}\n            style={{ paddingBottom: \"0px\" }}\n            ref={(ref) => {\n              this.startTrip = ref;\n              return true;\n            }}\n            id=\"start-trip\"\n          >\n            <IonGrid\n              className={`${\n                this.state.showDottedBorder ? \"hide-line\" : \"progressDiv\"\n              }`}\n              style={{ height: `${this.state.progressBarHeight}` }}\n            />\n            <IonImg\n              src=\"assets/icon/start-trip-location.svg\"\n              className={`stop-icon location-start ${\n                hideConfirmStart ? \"change_icon\" : \"\"\n              }`}\n            />\n            <StartTrip\n              confirmStartInformation={this.confirmStartInformation}\n              locationValue={this.props.locationValue}\n              networkStatus={this.props.networkStatus}\n              isConfirmStartButton={this.state.isConfirmStartButton}\n              ActualStart={this.startTripModel.getStartingDateTime(\n                this.props.loadDetails\n              )}\n              shipmentId={this.props.shipmentId}\n              hideConfirmStart={hideConfirmStart}\n              locationOriginValue={this.startTripModel.getStartingLocation(\n                this.props.loadDetails\n              )}\n              isNetworkAvailable={this.props.isNetworkAvailable}\n              GPSEnabledEvent={this.props.GPSEnabledEvent}\n            />\n          </IonGrid>\n          <IonGrid className=\"stop-details-grid\">\n            {shipmentloadStop\n              ? shipmentloadStop.map((stop: any, index: any) => (\n                  <ShipmentStopDetails\n                    clearWarningDialogMessage={\n                      this.props.clearWarningDialogMessage\n                    }\n                    warningDialogMessage={this.props.warningDialogMessage}\n                    timestamp={this.props.timestamp}\n                    key={index}\n                    stopDetails={stop}\n                    totalStops={shipmentloadStop.length}\n                    index={index}\n                    showExpandView={this.state.showExpandView}\n                    expandedStop={this.state.expandedStop}\n                    changeExpandStop={this.updateShipmentStopInformation}\n                    shipmentId={this.props.shipmentId}\n                    carrierId={this.props.userDetails.carrierId}\n                    isConfirmStartButton={this.state.isConfirmStartButton}\n                    loadDetails={this.props.loadDetails}\n                    isNetworkAvailable={this.props.isNetworkAvailable}\n                    exicutionProgress={this.state.exicutionProgress}\n                    arivalEntered={(stopIndex: number) => {\n                      this.updateExicutionProgress(stopIndex);\n                    }}\n                    onShowError={(message: string) => {\n                      this.props.showErrorMessage(message);\n                    }}\n                    GPSEnabledEvent={this.props.GPSEnabledEvent}\n                    openSatelliteMap={this.props.openSatelliteMap}\n                    updateStopInfo={this.props.updateStopInfo}\n                  />\n                ))\n              : null}\n          </IonGrid>\n        </IonCard>\n        {(this.startTripModel.isAllStopCompleted(this.props.loadDetails) &&\n          !this.startTripModel.isTripCompleted(this.props.loadDetails) &&\n          isPlatform(\"desktop\") && (\n            <IonButton\n              expand=\"full\"\n              class=\"complete-load-btn\"\n              onClick={() => {\n                const {\n                  loadDetails = {},\n                  isNetworkAvailable,\n                  showAlert,\n                } = this.props;\n                if (!isNetworkAvailable) {\n                  showAlert({\n                    isShowAlert: true,\n                    alertMessage: PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n                    alertTitle: NO_NEWORK,\n                  });\n                  return;\n                }\n                this.props.completeTripRequest(\n                  loadDetails.sourceTMS,\n                  loadDetails.shipmentId\n                );\n              }}\n            >\n              <img\n                src=\"/assets/icon/complete-trip.svg\"\n                className=\"complete-icon\"\n              />\n              {COMPLETE_TRIP_CTA_TEXT}\n            </IonButton>\n          )) ||\n          null}\n      </>\n    );\n  }\n}\nconst mapStateToProps = createStructuredSelector({\n  userDetails: getUserDetails(),\n  isNetworkAvailable: getNetworkStatus(),\n  warningDialogMessage: getWarningDialogMessage(),\n  updateStopInfo: updateStopInfo(),\n});\n\nexport const mapDispatchToProps = (dispatch: Function) => ({\n  updateStopInformation: (data: any, callBack: Function) => {\n    dispatch(updateStopInformation(data, callBack));\n  },\n  confirmStartLoadInformation: (\n    data: any,\n    callback: (shipment: any) => void\n  ) => {\n    dispatch(confirmStartInformation(data, callback));\n  },\n  clearWarningDialogMessage: () => dispatch(clearWarningDialog()),\n  showAlert: (data: any) => dispatch(showAlert(data)),\n  showErrorMessage: (message: string) => {\n    dispatch(\n      confirmStartInformationStatusMessage({\n        status: false,\n        message,\n      })\n    );\n  },\n  updateStopInformationResponse: (data: any) => {\n    dispatch(\n      updateStopInformationResponse({\n        data,\n      })\n    );\n  },\n  clearUpdateStopInformationResponse: () =>\n    dispatch(clearUpdateStopInformationResponse()),\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nconst withReducer = useInjectReducer({ key: \"carrierAssigned\", reducer });\nconst withSaga = useInjectSaga({ key: \"myload\", saga });\n\nexport default compose<any>(\n  withSaga,\n  withReducer,\n  withConnect\n)(ShipmentUpdateCard);\nexport { ShipmentUpdateCard };\n","import { IStartTripInfo } from \"../../schemas/Exicution/exicution.schema\";\nimport { stopActivityProps } from \"../stopActivity.model\";\n\nexport class StartTripExicution {\n  private shipment_details: IStartTripInfo = { userId: \"\", shipmentId: \"\" };\n\n  get userId() {\n    return this.shipment_details.userId;\n  }\n\n  set userId(value) {\n    if (value) {\n      this.shipment_details.userId = value;\n    }\n  }\n  get shipmentId() {\n    return this.shipment_details.shipmentId;\n  }\n\n  set shipmentId(value) {\n    if (value) {\n      this.shipment_details.shipmentId = value;\n    }\n  }\n  startTrip() {\n    return {\n      mutation: {\n        startTrip: {\n          __args: {\n            userId: this.shipment_details.userId,\n            shipmentId: this.shipment_details.shipmentId,\n          },\n          status: true,\n          message: true,\n          shipment: {\n            shipmentId: true,\n            lineOfBusiness: true,\n            transportMode: true,\n            totalWeight: true,\n            weightUOM: true,\n            totalDistance: true,\n            distanceUOM: true,\n            numberOfStops: true,\n            sourceTMS: true,\n            assignedCarrierId: true,\n            assignedTMSCarrierId: true,\n            isAppointmentConfirmed: true,\n            isHazardous: true,\n            isHighValue: true,\n            isTemperatureControlled: true,\n            isFreezeProtected: true,\n            readyDateTime: true,\n            readyDateTimeZone: true,\n            equipmentType: true,\n            predecessorShipmentId: true,\n            successorShipmentId: true,\n            assignmentStatus: true,\n            executionStatus: true,\n            masterBillOfLoading: true,\n            shipmentServices: {\n              serviceDescription: true,\n            },\n            startCity: true,\n            startCountry: true,\n            startState: true,\n            startDateTime: true,\n            loadStop: {\n              stopId: true,\n              locationId: true,\n              stopType: true,\n              sequenceNo: true,\n              locationName: true,\n              addressLine1: true,\n              addressLine2: true,\n              city: true,\n              state: true,\n              country: true,\n              postalCode: true,\n              timeZone: true,\n              longitude: true,\n              latitude: true,\n              estimatedArrivalDateTime: true,\n              actualETADateTime: true,\n              plannedArrivalDateTime: true,\n              actualArrivalDateTime: true,\n              estimatedStopDuration: true,\n              plannedDepartureDateTime: true,\n              actualDepartureDateTime: true,\n              appointmentEarlyDateTime: true,\n              appointmentLateDateTime: true,\n              estimatedStopDurationUom: true,\n              plannedEtaDateTime: true,\n              shipmentId: true,\n              stopReference: {\n                id: true,\n                type: true,\n                value: true,\n                stopId: true,\n                shipmentId: true,\n              },\n              locationNotes: {\n                id: true,\n                type: true,\n                value: true,\n                shipmentId: true,\n                stopId: true,\n              },\n              stopActivity: stopActivityProps,\n            },\n            shipmentReferences: {\n              id: true,\n              type: true,\n              value: true,\n              stopId: true,\n              shipmentId: true,\n            },\n            shipmentNotes: {\n              id: true,\n              type: true,\n              value: true,\n              shipmentId: true,\n              stopId: true,\n            },\n            shipmentInvolvedParties: {\n              id: true,\n              partyId: true,\n              partyType: true,\n              partyName: true,\n              partyEmail: true,\n              partyPhone: true,\n            },\n            driverAssignmentStatus: true,\n            assignmentTransaction: {\n              transactionId: true,\n              driverId: true,\n              driverName: true\n            }\n          },\n        },\n      },\n    };\n  }\n}\n","import React from 'react';\nimport {\n  IonCard,\n  IonCardContent,\n  IonCol,\n  IonRow,\n  IonButton,\n  IonImg,\n  isPlatform\n} from '@ionic/react';\n\nexport const DriverCard = (props: any) => {\n  const { DriverList, showAssignDriverDialog } = props;\n\n  return (\n    <div>\n      {DriverList &&\n        DriverList.map((driver: any, index: any) => (\n          <IonCard\n            className=\"driver-card\"\n            key={index}\n            onClick={() => {\n              if (showAssignDriverDialog && !isPlatform('desktop')) {\n                showAssignDriverDialog(true, driver);\n              }\n            }}>\n            <IonCardContent className=\"driver-card-content\">\n              <IonRow>\n                <IonCol\n                  className=\"card-price-col DriverImageCol driverCol\"\n                  size={isPlatform('desktop') ? '1.5' : '4'}>\n                  {driver.DriverImg ? (\n                    <img src={driver.DriverImg} alt=\"\" className=\"DriverImage\" />\n                  ) : (\n                    <div className=\"driver-img-div\">\n                      <span className=\"child-img\">{`${\n                        !!driver.firstName ? driver.firstName[0].toUpperCase() : ''\n                      }`}</span>\n                      <span className=\"child-img\">{`${\n                        !!driver.lastName ? driver.lastName[0].toUpperCase() : ''\n                      }`}</span>\n                    </div>\n                  )}\n                </IonCol>\n                <IonCol className=\"card-city-col\" size={isPlatform('desktop') ? '7' : '8'}>\n                  {driver.firstName &&\n                  driver.firstName.length &&\n                  driver.lastName &&\n                  driver.lastName.length > 0 ? (\n                      <p className=\"driver-name\">{`${driver.firstName}  ${driver.lastName}`}</p>\n                    ) : (\n                      <p>&nbsp;</p>\n                    )}\n                  <IonRow>\n                    <IonCol className=\"tractorno\" size={isPlatform('desktop') ? '2' : '5'}>\n                      Tractor No\n                    </IonCol>\n                    <IonCol className=\"tractor-number\" size={isPlatform('desktop') ? '2' : '7'}>\n                      {driver && driver.tractorNumber}\n                    </IonCol>\n                  </IonRow>\n                  <IonRow>\n                    <IonCol className=\"tractorno2\" size={isPlatform('desktop') ? '2' : '5'}>\n                      Mobile No\n                    </IonCol>\n\n                    <IonCol className=\"tractor-number\" size={isPlatform('desktop') ? '3' : '7'}>\n                      {driver && driver.mobileNumber}\n                    </IonCol>\n                  </IonRow>\n                </IonCol>\n                <IonCol size={isPlatform('desktop') ? '1' : '0'} />\n\n                <IonCol size=\"2.5\" className=\"Assign-btn-view\">\n                  <IonButton\n                    class=\"load-btn assign-btn\"\n                    onClick={() => {\n                      if (showAssignDriverDialog) {\n                        showAssignDriverDialog(true, driver);\n                      }\n                    }}>\n                    <IonImg className=\"addUser_img\" src=\"assets/icon/Assign Driver.svg\" />\n                    Assign\n                  </IonButton>\n                </IonCol>\n              </IonRow>\n            </IonCardContent>\n          </IonCard>\n        ))}\n      <p className=\"end_of_list\">End of list</p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { IonContent, IonRow, IonCol, IonLabel, IonImg } from \"@ionic/react\";\nimport { DriverCard } from \"../../../pages/Execute/AssignDriverList/DriverCard\";\n\nexport const DriverModal = (props: any) => {\n  const addDriver = () => {\n    props.closeModal();\n    props.history.push(\"/app/MyLoad/addDriver\");\n  };\n  return (\n    <IonContent className=\"driverModal-content\">\n      <div className=\"Background-popup\">\n        {props.popupHeader ? (\n          <IonRow className=\"popup_row\">\n            <IonCol size=\"11.5\" className=\"select-driver-main-Col\">\n              <IonRow>\n                <IonCol size=\"8\">\n                  <IonLabel className=\"select-driver-header\">\n                    Select A Driver\n                  </IonLabel>\n                </IonCol>\n                <IonCol size=\"4\" className=\"add-right\" onClick={addDriver}>\n                  <IonImg className=\"add_img\" src=\"assets/icon/Add.svg\" />\n                  <IonLabel className=\"popup-add-driver\">Add Driver</IonLabel>\n                </IonCol>\n              </IonRow>\n            </IonCol>\n            <IonCol size=\"0.5\" className=\"cancel_col\">\n              <div\n                className=\"cancel_text\"\n                onClick={() => {\n                  props.closeModal();\n                }}\n              >\n                x\n              </div>\n            </IonCol>\n          </IonRow>\n        ) : null}\n        <DriverCard\n          DriverList={props.DesktopDriverList}\n          loadDetails={props.loadDetails}\n          showAssignDriverDialog={(isShow: boolean, driverDetails: any) => {\n            props.showAssignDriverDialog(isShow, driverDetails);\n          }}\n        />\n      </div>\n    </IonContent>\n  );\n};\n","import React, { Component } from \"react\";\nimport {\n  IonContent,\n  IonPage,\n  IonGrid,\n  IonButton,\n  IonRow,\n  IonCol,\n  IonIcon,\n  IonModal,\n  IonCard,\n  isPlatform,\n  IonToast, IonAlert\n} from \"@ionic/react\";\nimport \"./LoadDetails.scss\";\nimport { FilesystemDirectory } from \"@capacitor/core\";\nimport { MobilePDFReader, PDFReader } from \"reactjs-pdf-reader\";\nimport { CallNumber } from \"@ionic-native/call-number\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport AppHeader from \"../../components/app/Bars/Bar-header\";\nimport {\n  PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n  NO_NEWORK,\n  DB_GPS_ACTIVATED_SHIPMENT,\n  MODULES,\n  KEYS,\n  GPS_TRACKING_ERROR_MESSAGE,\n  SOUND_SRC,\n  OTMASSET,\n  CALL_US_NUMBER,\n  START_TRIP_TEXT,\n  CALL_US_TEXT,\n  EVENT,\n  SCREEN,\n  HOMEMODULES,\n  TAB,\n  ENV,\n  USER_TYPE\n} from \"../../utils/constants\";\nimport { FileSaver } from \"../../utils/FilesSaver\";\nimport TermsAndCondition from \"../../components/app/StopDetails/TermsAndCondition\";\nimport { LoadTileHeader } from \"../../components/app/home/Load-Tile-Header\";\nimport { LoadTile } from \"../../components/app/home/Load-Tile\";\nimport { LoadMap } from \"../../components/app/LoadMap/LoadMap\";\nimport { BookLoadModal } from \"../../components/app/BookLoadModal/BookLoadModal\";\nimport {\n  BookLoadConfirmModal,\n  GetShipmentModal\n} from \"../../components/app/BookLoadModal/BookLoadConfirmModal\";\nimport { Currency } from \"../../schemas/BookLoad/BookLoad.schema\";\nimport { BookLoad } from \"../../models/home/BookLoad.model\";\nimport { GetShipment } from \"../../models/home/GetShipment.model\";\nimport { removeSearchResults, showBuyLoadError } from \"../../actions/Search/action\";\nimport {\n  removeRecommendedResults,\n  removeWatchLoadSuccess\n} from \"../../actions/Home/action\";\nimport { successclearBuyLoadResponse } from \"../../actions/BookLoad/action\";\nimport { LoadMapSatellite } from \"../../components/app/LoadMap/LoadMapSatellite\";\nimport DataTableComponent from \"../../components/shared/dataTableComponent/data-tabel.page\";\nimport { formatedData } from \"../../utils/formatData\";\nimport { DriverList } from \"../../models/home/CarrierAssign.model\";\nimport { CarrierAssignedModal } from \"../../containers/ExecuteContainer/CarrierAssignedModal/CarrierAssignedModal\";\nimport { GPSWrapper, setItem, getItem, IONICWrapper } from \"../../utils/common\";\n\nimport { ToastMessage } from \"../../utils/ToastMessage\";\nimport useInjectSaga from \"../../utils/injectSaga\";\nimport useInjectReducer from \"../../utils/injectReducer\";\nimport saga from \"../../saga/CarrierAssign/saga\";\nimport reducer from \"../../reducers/carrierAssign/reducer\";\nimport {\n  shipmentForStartTrip,\n  startTrip,\n  loadCarrierData,\n  shipmentForStartTripTimestamp,\n  fetchShipments\n} from \"../../actions/carrierAssign/action\";\nimport { clearConfirmStartInformationStatusMessage } from \"../../actions/myload/action\";\nimport { getUserDetails, getNetworkStatus } from \"../../selectors/selector\";\nimport ShipmentUpdateCard from \"../../components/app/ShipmentUpdateScreen/ShipmentCard\";\n\nimport { showAlert } from \"../../actions/App/action\";\nimport { logEvent, setScreenName } from \"../../utils/Analytics\";\nimport {\n  getStartTripShipmentStatusMessage,\n  getConfirmStartInformation,\n  buyloadShipmentStatus,\n  getCarrierAssignedLoads\n} from \"../../selectors/Myload/selector\";\nimport { IStartTripInfo } from \"../../schemas/Exicution/exicution.schema\";\nimport { StartTripExicution } from \"../../models/home/StartTripExicution.model\";\nimport { getStartTripShipment } from \"../../selectors/carrierAssign/selector\";\nimport * as Constants from \"../../utils/constants\";\n\nimport { ExicutionLoads } from \"../../models/ExicutionLoads.model\";\nimport { DriverModal } from \"../Execute/CarrierAssigned/DriverModalDesktop\";\nimport { getBuyLoadApiError } from \"app/selectors/Search/selector\";\n\nclass LoadDetailsPage extends Component<any, any> {\n  pdfbase64 = \"\";\n\n  binaryData = \"\";\n\n  gpsActivatedShipmentID = \"\";\n\n  __model: DriverList;\n\n  isUpdated: boolean;\n\n  lead = \"\";\n\n  // binaryData: string;\n  constructor(props: any) {\n    super(props);\n    this.__model = new DriverList();\n    this.state = {\n      isGetShipmentErr: false,\n      tab: false,\n      toggleBtn: false,\n      show: false,\n      showTerms: true,\n      showDocument: true,\n      showStops: true,\n      showModal: false,\n      url: \"\",\n      isDriverModal: false,\n      isPopupHeader: false,\n      isTripStarted: false,\n      isStartTripDesktop: false,\n      openAssignDriverDialog: false,\n      driverDetails: {},\n      isStartTrip: false,\n      isLocation: false,\n      showSatelliteMap: false,\n      satelliteLocation: \"\",\n      isCompleteTrip: false,\n      shipmetCardLoaddetails: this.props.loadDetails,\n      showMessageForPendingLoad: false,\n      isBookLoadModal: false,\n      shipmentID: null,\n      showCTAButton: false,\n      isBookloadConfirm: false,\n      isTermsAndConditionExpanded: false,\n      showCallNow: false\n    };\n\n    this.loadTerms = this.loadTerms.bind(this);\n    this.loadDocuments = this.loadDocuments.bind(this);\n    this.loadStops = this.loadStops.bind(this);\n    this.isUpdated = false;\n  }\n\n  componentDidMount() {\n    setScreenName(\"screen_load_details\");\n    if (!this.props.isCarrierLoad) {\n      logEvent(\"ue_load_view\", { page: \"Load Details\" }); // Firebase Event\n    }\n\n    // Analytics implementation\n    if (this.props.loadDetails && this.props.loadDetails.rate) {\n      logEvent(EVENT.SV_LOAD_DETAILS_RATE, {\n        screen: SCREEN.LOAD_DETAILS_RATE,\n        lead: this.lead\n      });\n    }\n\n    let { isStartTrip } = this.state;\n    let { isStartTripDesktop } = this.state;\n    let { showCTAButton } = this.state;\n    if (\n      this.props.loadDetails &&\n      this.props.loadDetails.executionStatus ===\n        Constants.ExecutionStatus.STARTED &&\n      this.props.module === MODULES.DRIVER_ASSIGNED_MODULE\n    ) {\n      isStartTrip = false;\n      isStartTripDesktop = true;\n      showCTAButton = false;\n    } else if (\n      this.props.module === Constants.MODULES.INTRANSIT_MODULE ||\n      this.props.module === Constants.MODULES.RECENTLY_DELIVERED_MODULE\n    ) {\n      showCTAButton = false;\n    } else {\n      showCTAButton = true;\n    }\n    this.setState(\n      {\n        isStartTrip,\n        isStartTripDesktop,\n        shipmetCardLoaddetails: this.props.loadDetails,\n        showCTAButton\n      },\n      () => {\n        this.setTripDetails();\n      }\n    );\n  }\n\n  /**\n   * Send Analytics Event base on screen\n   * * @param {*} pageName, carrierId\n   * @returns null.\n   */\n  sendAnalyticsEvent = (pageName: string, loadId: string, carrierId: any) => {\n    let event: string;\n    let event1 = \"\";\n    let screen: string;\n    let screen1 = \"\";\n\n    logEvent(EVENT.SV_VIEW_SHIPMENT, {\n      screen: SCREEN.SHIPMENT_DETAILS,\n      shipmentId: this.props.loadId\n    });\n    switch (pageName) {\n      case HOMEMODULES.RECOMMENDED_MODULE: // On view of ad-posting load rate details screen (every time)\n        event = EVENT.SV_LOAD_DETAILS; // On view of ad-posting load details screen (every time)\n        screen = SCREEN.LOAD_DETAILS;\n        this.lead = TAB.RECOMMENDED;\n        break;\n      case HOMEMODULES.WATCHED_MODULE:\n        event = EVENT.SV_LOAD_DETAILS;\n        screen = SCREEN.LOAD_DETAILS;\n        this.lead = TAB.WATCHED;\n        break;\n      case MODULES.SEARCH_RESULTS: // On every time accept is tapped\n        event = EVENT.UE_LOAD_RATE_ACCEPT;\n        event1 = EVENT.SV_LOAD_DETAILS;\n        screen = SCREEN.LOAD_DETAILS_RATE;\n        screen1 = SCREEN.LOAD_DETAILS;\n        this.lead = TAB.SEARCHED;\n        break;\n      case MODULES.CARRIER_ASSIGNED_MODULE:\n        event = EVENT.SV_VIEW_CARRIER_ASSIGNED;\n        screen = SCREEN.LOAD_DETAILS;\n        this.lead = TAB.CARRIER_ASSIGNED;\n        break;\n      case MODULES.DRIVER_ASSIGNED_MODULE:\n        event = EVENT.SV_ASSIGN_DRIVER;\n        screen = SCREEN.LOAD_DETAILS;\n        this.lead = TAB.DRIVER_ASSIGNED;\n        break;\n      default:\n        // On watching a load every time (should not track when it is unwatched)\n        event = EVENT.UE_WATCH_LOAD; // On view of any load bought a.k.a Shipment (under any of the categories under myloads)\n        screen = SCREEN.LOAD_DETAILS;\n        this.lead = TAB.WATCHED;\n    }\n\n    logEvent(event, {\n      screen,\n      shipmentId: loadId,\n      loadId,\n      lead: this.lead,\n      carrierId\n    });\n\n    if (event1 !== \"\") {\n      logEvent(event1, {\n        screen: screen1,\n        shipmentId: loadId,\n        loadId,\n        lead: this.lead,\n        carrierId\n      });\n    }\n\n    if (this.state.isTermsAndConditionExpanded) {\n      event = EVENT.UE_VIEW_LOAD_TERMS;\n      screen = SCREEN.LOAD_DETAILS;\n      this.lead = TAB.RECOMMENDED;\n      logEvent(event, {\n        screen,\n        shipmentId: loadId,\n        loadId,\n        lead: this.lead,\n        carrierId,\n      });\n    }\n  };\n\n  componentDidUpdate(prevProps: any, prevState: any) {\n    if (!(IONICWrapper.details.getValue.shipmentId === this.props.loadId)) {\n      // Analytics implementation\n      this.sendAnalyticsEvent(\n        this.props.module,\n        this.props.loadId,\n        this.props.userDetails.carrierId\n      );\n\n      logEvent(EVENT.SV_VIEW_LOAD, {\n        screen: SCREEN.LOAD_DETAILS,\n        shipmentId: this.props.loadId,\n        loadId: this.props.loadId,\n        lead: this.lead,\n        carrierId: this.props.userDetails.carrierId,\n      });\n\n      let leadName;\n      if (this.props.module == HOMEMODULES.RECOMMENDED_MODULE) {\n        leadName = TAB.RECOMMENDED;\n      } else if (this.props.module == HOMEMODULES.WATCHED_MODULE) {\n        leadName = TAB.WATCHED;\n      } else if (this.props.module == MODULES.SEARCH_RESULTS) {\n        leadName = TAB.SEARCHED;\n      }\n      if (leadName) {\n        logEvent(EVENT.UE_VIEW_LOAD, {\n          screen: SCREEN.LOAD_DETAILS,\n          loadId: this.props.loadId,\n          lead: leadName,\n          carrierId: this.props.userDetails.carrierId,\n        });\n      }\n\n      const shipmentID = GPSWrapper.details.getGPStrackingShipmentID();\n      if (prevState.shipmentID != shipmentID) {\n        if (shipmentID) {\n          this.setState({ isTripStarted: true, shipmentID });\n        } else {\n          this.setState({ isTripStarted: false, shipmentID: null });\n        }\n      }\n\n      let { isStartTripDesktop } = this.state;\n\n      let loadDetails = this.getLoadDetails();\n      let isForceUpdate = false;\n\n      if (\n        JSON.stringify(prevProps.confirmStartInfo) !==\n        JSON.stringify(this.props.confirmStartInfo)\n      ) {\n        loadDetails = this.props.confirmStartInfo;\n        isForceUpdate = true;\n      }\n\n      if (\n        JSON.stringify(prevProps.loadDetails) !==\n        JSON.stringify(this.props.loadDetails)\n      ) {\n        if (\n          this.props.module === MODULES.INTRANSIT_MODULE ||\n          this.props.module === MODULES.RECENTLY_DELIVERED_MODULE\n        ) {\n          this.setState({ showCTAButton: false });\n        } else if (\n          this.props.loadDetails &&\n          this.props.loadDetails.executionStatus ===\n            Constants.ExecutionStatus.STARTED &&\n          this.props.module === MODULES.DRIVER_ASSIGNED_MODULE\n        ) {\n          this.setState({ showCTAButton: false });\n        } else {\n          this.setState({ showCTAButton: true });\n        }\n\n        isStartTripDesktop = false;\n      }\n      let { isStartTrip } = this.state;\n      if (\n        this.props.loadDetails &&\n        this.props.loadDetails.executionStatus ===\n          Constants.ExecutionStatus.STARTED &&\n        this.props.module === MODULES.DRIVER_ASSIGNED_MODULE\n      ) {\n        isStartTrip = false;\n        isStartTripDesktop = true;\n      }\n\n      if (\n        JSON.stringify(loadDetails) !==\n          JSON.stringify(prevState.shipmetCardLoaddetails) ||\n        isForceUpdate\n      ) {\n        this.setState({\n          shipmetCardLoaddetails: loadDetails,\n          isStartTripDesktop,\n          isStartTrip,\n        });\n      } else if (isStartTripDesktop !== this.state.isStartTripDesktop) {\n        this.setState({ isStartTripDesktop, isStartTrip });\n      }\n    }\n  }\n\n  getShipmentBookLoad = async (shipmentId: any) => {\n    const __getShipmentmodel: GetShipment = new GetShipment();\n    __getShipmentmodel.shipmentIds = shipmentId;\n    this.props.buyLoadShipmentRequest(\n      {\n        query: __getShipmentmodel.getRequestShipmentPayload(),\n        shipmentId,\n        module: \"\",\n        isPullToRefresh: false,\n      },\n      () => {\n        const bookedLoad = this.props.getShipmentDetails;\n        if (\n          bookedLoad &&\n          bookedLoad.shipments &&\n          bookedLoad.shipments.length > 0\n        ) {\n          /**\n           * storing the current path and module before navigation to carrier assigned load details page.\n           */\n          const module = this.props.module;\n          const path = this.props.history.location.pathname;\n\n          IONICWrapper.details.setValue = { shipmentId: shipmentId };\n          this.props.history.push(`/app/MyLoad/CarrierAssigned/${shipmentId}`, {\n            isBookLoad: true,\n            shipments: bookedLoad.shipments,\n            module: this.props.module,\n          });\n          const carrierId =\n            (this.props &&\n              this.props.userDetails &&\n              this.props.userDetails.carrierId) ||\n            \"\";\n          const __model: ExicutionLoads = new ExicutionLoads();\n          __model.carrierId = carrierId;\n          __model.filter = {\n            carrierAssigned: true,\n            driverAssigned: true,\n            inTransit: true,\n            driverAssignmentPending: true,\n            delivered: true,\n          };\n          this.props.fetchShipments(__model.getRequestPayload(), () => {\n            let shipment = bookedLoad.shipments[0];\n            let carrierLoads = this.props.carrierLoads.concat({ ...shipment });\n            this.props.loadCarrierData(carrierLoads, carrierLoads.length);\n            this.removeLoadsFromStore(\n              this.props.loadDetails.loadId\n                ? this.props.loadDetails.loadId\n                : null\n            );\n          });\n        } else {\n          this.setState({ isGetShipmentErr: true });\n        }\n      }\n    );\n  };\n\n  async setTripDetails() {\n    if (isPlatform(\"capacitor\")) {\n      let shipmentID = null;\n      const _shipment = (await getItem(DB_GPS_ACTIVATED_SHIPMENT)).value;\n      if (_shipment) {\n        shipmentID = JSON.parse(_shipment).shipmentID;\n      }\n\n      if (shipmentID && shipmentID === this.props.loadId) {\n        this.gpsActivatedShipmentID = shipmentID;\n        this.setState({ isTripStarted: true });\n      }\n    }\n  }\n\n  columns = [\n    {\n      name: \"Origin\",\n      selector: \"origin_city\",\n\n      style: {\n        fontWeight: 900,\n        fontSize: 14,\n        colorName: \"#000000\"\n      },\n    },\n    {\n      name: \"Origin Date\",\n      selector: \"origin_from_date\",\n\n      minWidth: \"123px\"\n    },\n    {\n      name: \"DH-O\",\n      selector: \"origin_deadhead\"\n    },\n    {\n      name: \"Origin Load Type\",\n      selector: \"origin_load_type\"\n    },\n    {\n      name: \"Destination\",\n      selector: \"destination_city\",\n\n      style: {\n        fontWeight: 900,\n        fontSize: 14,\n        colorName: \"#000000\"\n      },\n    },\n    {\n      name: \"Destination Date\",\n      selector: \"destination_from_date\",\n      minWidth: \"123px\"\n    },\n    {\n      name: \"DH-D\",\n      selector: \"destination_deadhead\"\n    },\n    {\n      name: \"Destination Load Type\",\n      selector: \"destination_load_type\"\n    },\n    {\n      name: \"Trailer Type\",\n      selector: \"trailer\"\n    },\n    {\n      name: \"Rate ($)\",\n      selector: \"price\",\n\n      style: {\n        fontWeight: 900,\n        fontSize: 14,\n        colorName: \"#000000\"\n      }\n    }\n  ];\n\n  loadTerms() {\n    this.setState({ showTerms: !this.state.showTerms });\n  }\n\n  loadDocuments() {\n    this.setState({ showDocument: !this.state.showDocument });\n  }\n\n  loadStops() {\n    this.setState({ showStops: !this.state.showStops });\n  }\n\n  showPdf = async (name: any) => {\n    ///  TODO - check pdf or image from data and append to fileName.\n    try {\n      const { writeFile_Mobile, writeFile_Web } = await FileSaver(\n        this.pdfbase64,\n        FilesystemDirectory.Documents,\n        \"CachePDF.pdf\"\n      );\n      let url: any;\n      if (this.props.getPlatform === \"web\") {\n        url = await writeFile_Web();\n      } else {\n        url = await writeFile_Mobile();\n      }\n      this.setState({ url, showModal: true });\n    } catch (e) {}\n  };\n\n  onPDFLoadComplete = () => {};\n\n  getloadData = (loadDetails: any) => {\n    const data = [loadDetails];\n    if (\n      this.props.module === MODULES.CARRIER_ASSIGNED_MODULE ||\n      this.props.module === MODULES.DRIVER_ASSIGNED_MODULE\n    ) {\n      return formatedData(\n        data,\n        \"appointmentEarlyDateTime\",\n        \"appointmentLateDateTime\",\n        \"shipmentId\",\n        \"equipmentType\"\n      );\n    }\n    return formatedData(\n      data,\n      \"appointmentFrom\",\n      \"appointmentTo\",\n      \"loadId\",\n      \"transportMode\"\n    );\n  };\n\n  onButtonClick = async () => {\n    if (this.props.isNetworkAvailable) {\n      if (this.props.module === MODULES.CARRIER_ASSIGNED_MODULE) {\n        this.props.assignDriverBtn(this.__model.getRequestPayload());\n      } else if (this.props.module === MODULES.DRIVER_ASSIGNED_MODULE) {\n        if (isPlatform(\"capacitor\")) {\n          const activatedShipment = (await getItem(DB_GPS_ACTIVATED_SHIPMENT))\n            .value;\n          if (!activatedShipment) {\n            this.navigateToShipmentUpdateScreen();\n          } else {\n            const { shipmentID } = JSON.parse(activatedShipment);\n            alert(\n              GPS_TRACKING_ERROR_MESSAGE.ERROR_MESSAGE_1 +\n                shipmentID +\n                GPS_TRACKING_ERROR_MESSAGE.ERROR_MESSAGE_2\n            );\n          }\n        } else {\n          this.navigateToShipmentUpdateScreen();\n        }\n      } else {\n        logEvent(\"ue_load_buy_request\", { page: \"Load Details\" });\n        if (\n          this.props.loadDetails.rate === null ||\n          (this.props.loadDetails.rate &&\n            this.props.loadDetails.rate.totalCharge === 0)\n        ) {\n          this.callusClick();\n          // Analytics implementation\n          logEvent(EVENT.UE_CONTACT_FOR_PRICE, {\n            screen: SCREEN.LOAD_DETAILS,\n            loadId: this.props.loadId,\n            carrierId: this.props.userDetails.carrierId,\n            lead: this.lead\n          });\n        } else {\n          this.setState({ isBookLoadModal: true });\n          // Analytics implementation\n          logEvent(EVENT.UE_BOOK_LOAD_NOW, {\n            screen: SCREEN.LOAD_DETAILS,\n            loadId: this.props.loadId,\n            carrierId: this.props.userDetails.carrierId,\n            lead: this.lead\n          });\n        }\n      }\n    } else {\n      this.props.showAlert({\n        isShowAlert: true,\n        alertMessage: PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n        alertTitle: NO_NEWORK\n      });\n    }\n  };\n\n  navigateToShipmentUpdateScreen = (isGPStrackingDisabled?: boolean) => {\n    if (\n      this.props.loadDetails &&\n      !this.props.loadDetails.driverAssignmentStatus\n    ) {\n      this.setState({ showMessageForPendingLoad: true });\n      return;\n    }\n\n    this.startTrip();\n    const DriverAssignedStartTrip = this.props.match.params[0];\n    this.props.setShipmentForStartTrip(this.props.loadDetails);\n    this.setState({ isStartTrip: false, isLocation: true }, () =>\n      this.props.history.push({\n        pathname: `/app/MyLoad/shipmentUpdateScreen/${this.props.loadId}`,\n        state: {\n          isCurrentLocationOn: isGPStrackingDisabled || true,\n          isLocation: true,\n          module: DriverAssignedStartTrip,\n          withGPS: false,\n          startTripShipment: this.props.loadDetails,\n          moduleName: \"DRIVERLIST\",\n          soure: SCREEN.LOAD_DETAILS\n        },\n      })\n    );\n\n    // Start GPS tracking only for Driver, and user id should be same as login userId\n    if (isPlatform(\"capacitor\")) {\n      this.props.loadDetails &&\n        this.props.loadDetails.shipmentInvolvedParties &&\n        this.props.loadDetails.shipmentInvolvedParties.map(\n          (party: any, index: any) => {\n            if (\n              party.partyId &&\n              party.partyId.toUpperCase() ===\n                this.props.userDetails.email.toUpperCase() && // Checked Assigned load for same user or not\n              party.partyType.toUpperCase() === USER_TYPE.PRIMARY_DRIVER // Checked user type is PRIMARY_DRIVER or not\n            ) {\n              this.startTracking(\n                this.props.loadDetails,\n                this.props.userDetails\n              );\n            }\n          }\n        );\n    }\n  };\n\n  /**\n   *  This will start the GPS tracking as well as geofence tracking.\n   * * @param loadDetails, userDetails to strat the GPS tracking as well as geofence\n   *  i.g. activity,shipmentId, carrierScac, userId, sourceSystem\n   * @returns null.\n   */\n  startTracking = async (loadDetails: any, userDetails: any) => {\n    const shipment = {\n      activity: \"\",\n      shipmentID: loadDetails.shipmentId,\n      carrierScac: \"\",\n      userId: userDetails.email,\n      sourceTMS: loadDetails.sourceTMS,\n      carrierId: userDetails.carrierId,\n      loadStops: loadDetails.loadStop\n    };\n    GPSWrapper.details.startGPStracking(shipment);\n    await setItem(DB_GPS_ACTIVATED_SHIPMENT, JSON.stringify(shipment));\n\n    if (KEYS.RELEASE === ENV.UNT) {\n      const sound = new Audio();\n      sound.src = SOUND_SRC.START_TRIP;\n      sound.play();\n    }\n  };\n\n  closeDriverModal = () => {\n    this.setState({ isDriverModal: false });\n  };\n\n  callusClick = () => {\n    if (this.props.isNetworkAvailable || Constants.OFFLINE_MODE_STATE) {\n      if (!this.props.isCarrierLoad) {\n        logEvent(\"ue_load_view_call\", { page: \"Load Details\" }); // Firebase Event\n      }\n      const configs =\n        IONICWrapper.details.keys && IONICWrapper.details.keys.configuration;\n      const callNumber =\n        (configs &&\n          configs[\n            this.props.loadDetails.sourceSystem === OTMASSET\n              ? \"loadContactOTM\"\n              : \"loadContactMG\"\n          ]) ||\n        (this.props.loadDetails.sourceSystem === OTMASSET\n          ? CALL_US_NUMBER.OTM\n          : CALL_US_NUMBER.MG);\n      CallNumber.callNumber(callNumber, true)\n        .then((res) => {\n          logEvent(EVENT.UE_VIEW_LOAD_CALL_US, {\n            screen: SCREEN.LOAD_DETAILS,\n            loadId: this.props.loadId,\n            carrierId: this.props.userDetails.carrierId,\n            lead: this.lead,\n          });\n        })\n        .catch((err) => {});\n    } else {\n      this.props.showAlert({\n        isShowAlert: true,\n        alertMessage: PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n        alertTitle: NO_NEWORK,\n      });\n    }\n  };\n\n  chatusClick = () => {\n    if (!this.props.isCarrierLoad) {\n      logEvent(\"ue_load_view_chat\", { page: \"Load Details\" }); // Firebase Event\n    }\n    ToastMessage.show();\n  };\n\n  onClick = () => {\n    if (this.props.isNetworkAvailable) {\n      let showToast = true;\n      if (this.props.module === MODULES.CARRIER_ASSIGNED_MODULE) {\n        this.props.assignDriverBtn(this.__model.getRequestPayload());\n        this.setState({ isDriverModal: true, isPopupHeader: true });\n        showToast = false;\n      }\n      if (this.props.module === MODULES.DRIVER_ASSIGNED_MODULE) {\n        if (!isPlatform(\"desktop\") && this.props.networkStatus) {\n          this.setState({ isStartTrip: true });\n        }\n        if (isPlatform(\"desktop\") && this.props.networkStatus) {\n          this.setState({ isStartTrip: false, isStartTripDesktop: true });\n          this.startTrip();\n        }\n      } else if (showToast) {\n        if (\n          this.props.loadDetails.rate === null ||\n          (this.props.loadDetails.rate &&\n            this.props.loadDetails.rate.totalCharge === 0)\n        ) {\n          this.callusClick();\n        } else {\n          this.setState({ isBookLoadModal: true });\n        }\n      }\n    } else {\n      this.props.showAlert({\n        isShowAlert: true,\n        alertMessage: PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n        alertTitle: NO_NEWORK\n      });\n    }\n  };\n\n  private isInTransit = (): boolean => {\n    return (\n      this.props.module === MODULES.INTRANSIT_MODULE ||\n      this.state.isStartTripDesktop ||\n      this.props.module === MODULES.RECENTLY_DELIVERED_MODULE\n    );\n  };\n\n  completeTripClick = () => {\n    this.setState({ isCompleteTrip: true });\n  };\n\n  private getConfirmStartStatus = () => {\n    const response = this.props.startTripShipmentStatusMessage || {};\n    return response.status === false;\n  };\n\n  private getConfirmStartMessage = () => {\n    const response = this.props.startTripShipmentStatusMessage || {};\n    return response.message;\n  };\n\n  startTrip = () => {\n    const modelExicution: StartTripExicution = new StartTripExicution();\n    modelExicution.userId = this.props.userDetails.userPrincipalName;\n    modelExicution.shipmentId = this.props.loadId;\n    this.props.startTrip(modelExicution.startTrip());\n  };\n\n  private getLoadDetails = (): any => {\n    return this.props.shipmentToStartTrip || {};\n  };\n\n  closeBookloadconfirm = () => {\n    this.setState({ isBookloadConfirm: false });\n  };\n\n  closeBookLoadModal = () => {\n    this.setState({ isBookLoadModal: false });\n    // Analytics implementation\n    logEvent(EVENT.UE_LOAD_RATE_DENY, {\n      screen: SCREEN.LOAD_DETAILS_RATE,\n      carrierId: this.props.userDetails.carrierId,\n      lead: this.lead\n    });\n  };\n\n  buyLoad = () => {\n    const modelLoad: BookLoad = new BookLoad();\n    if (this.props.isNetworkAvailable) {\n      const data = {\n        lhlCharges:\n          (this.props.loadDetails &&\n            this.props.loadDetails.rate &&\n            this.props.loadDetails.rate.lineHaulCharge.charge) ||\n          0,\n        fsrCharges:\n          (this.props.loadDetails &&\n            this.props.loadDetails.rate &&\n            this.props.loadDetails.rate.fuelCharge.charge) ||\n          0,\n        carrierId:\n          (this.props.userDetails && this.props.userDetails.carrierId) || \"\",\n        userId:\n          (this.props.userDetails &&\n            this.props.userDetails.userPrincipalName) ||\n          \"\",\n        sourceSystem:\n          (this.props.loadDetails && this.props.loadDetails.sourceSystem) || \"\",\n        loadId: this.props.loadId,\n        amount:\n          (this.props.loadDetails &&\n            this.props.loadDetails.rate &&\n            this.props.loadDetails.rate.totalCharge) ||\n          0,\n        binRateId:\n          (this.props.loadDetails &&\n            this.props.loadDetails.rate &&\n            this.props.loadDetails.rate.binRateIdentifier &&\n            this.props.loadDetails.rate.binRateIdentifier) ||\n          \"\",\n        currency: Currency.USD || Currency.CAD\n      };\n\n      this.props.buyLoadRequest({\n        query: modelLoad.getRequestPayload(),\n        data\n      });\n    } else {\n      this.props.showAlert({\n        isShowAlert: true,\n        alertMessage: PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n        alertTitle: NO_NEWORK\n      });\n    }\n\n    // Analytics implementation\n    logEvent(EVENT.UE_LOAD_RATE_ACCEPT, {\n      screen: SCREEN.LOAD_DETAILS_RATE,\n      carrierId: this.props.userDetails.carrierId,\n      lead: this.lead\n    });\n  };\n\n  declineBookLoad = () => {\n    if (isPlatform(\"mobile\")) {\n      this.props.history.push(`/app/${this.props.module}`);\n    } else {\n      this.props.history.push(\"/app/search\");\n    }\n    this.removeLoadsFromStore(\n      this.props.loadDetails.loadId ? this.props.loadDetails.loadId : null\n    );\n    this.setState({ isGetShipmentErr: false });\n    // Analytics implementation\n    logEvent(EVENT.UE_BOOK_FAILED, {\n      screen: SCREEN.LOAD_DETAILS_RATE,\n      loadId: this.props.loadId,\n      carrierId: this.props.userDetails.carrierId,\n      lead: this.lead\n    });\n  };\n\n  removeLoadsFromStore = (loadId: string) => {\n    this.props.removeSearchResults(loadId);\n    this.props.removeRecommendedResults({ loadId });\n    this.props.removewatchedResults({ loadId });\n  };\n\n  confirmBookLoad = () => {\n    if (this.props.isNetworkAvailable || Constants.OFFLINE_MODE_STATE) {\n      if (this.props.bookLoadStatus.status === Constants.BOOKLOAD_STATUS_OK) {\n        const shipmentId = this.props.loadDetails.loadId;\n        const shipmentIds: any = [];\n        shipmentIds.push(shipmentId);\n        const getShipmentmodel: GetShipment = new GetShipment();\n        getShipmentmodel.shipmentIds = shipmentIds;\n        this.getShipmentBookLoad(shipmentId);\n      }\n      if (\n        this.props.bookLoadStatus.status === Constants.BOOKLOAD_ONHOLD ||\n        Constants.BOOKLOAD_STATUS_REJECTED\n      ) {\n        this.closeBookloadconfirm();\n      }\n      if (\n        this.props.bookLoadStatus.status === Constants.BOOKLOAD_CANCELLED &&\n        isPlatform(\"mobile\")\n      ) {\n        this.removeLoadsFromStore(\n          this.props.loadDetails.loadId ? this.props.loadDetails.loadId : null\n        );\n        this.props.history.push(`/app/${this.props.module}`);\n      }\n      this.props.buyLoadStatusRemove();\n    } else {\n      this.props.showAlert({\n        isShowAlert: true,\n        alertMessage: PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n        alertTitle: NO_NEWORK,\n      });\n    }\n    // Analytics implementation\n    logEvent(EVENT.UE_BOOK_SUCCESS, {\n      screen: SCREEN.LOAD_DETAILS_RATE,\n      loadId: this.props.loadId,\n      carrierId: this.props.userDetails.carrierId,\n      lead: this.lead,\n    });\n  };\n\n  setTermsAndConState = () => {\n    this.setState({\n      isTermsAndConditionExpanded: !this.state.isTermsAndConditionExpanded,\n    });\n  };\n\n  render() {\n    const { loadDetails, bookloadStatus, prevModule } = this.props;\n    let PDFRender: any;\n    const startStopBtnTxt: any = START_TRIP_TEXT;\n\n    if (this.props.getPlatform === \"web\") {\n      // For Web\n\n      PDFRender =\n        this.state.url.length != \"\" ? (\n          <PDFReader\n            url={this.state.url}\n            showAllPage\n            isShowHeader={false}\n            isShowFooter\n            scale={1}\n            onDocumentComplete={this.onPDFLoadComplete}\n          />\n        ) : (\n          \"\"\n        );\n    } else {\n      // For Mobile\n\n      PDFRender =\n        this.state.url.length != \"\" ? (\n          <MobilePDFReader\n            url={this.state.url}\n            showAllPage\n            isShowHeader={false}\n            isShowFooter\n            onDocumentComplete={this.onPDFLoadComplete}\n          />\n        ) : (\n          \"\"\n        );\n      // startStopBtnTxt =\n      //   this.gpsActivatedShipmentID === this.props.loadId &&\n      //     this.state.isTripStarted\n      //     ? BUTTON.STOP_TRACKING\n      //     : BUTTON.START_TRIP\n    }\n    const { loadId } = this.props;\n    return (\n      <>\n        <IonToast\n          isOpen={this.state.showMessageForPendingLoad}\n          message={Constants.START_TRIP_MESSAGE_FOR_PENDING_LOADS}\n          duration={5000}\n          color=\"dark\"\n          onDidDismiss={() => {\n            this.setState({ showMessageForPendingLoad: false });\n          }}\n        />\n        <IonToast\n          isOpen={this.getConfirmStartStatus()}\n          message={this.getConfirmStartMessage()}\n          duration={5000}\n          color=\"dark\"\n          onDidDismiss={() => {\n            this.props.clearConfirmReasponse();\n          }}\n        />\n        <IonAlert\n        isOpen={this.props.buyLoadApiError}\n        message={Constants.BUYLOAD_API_ERROR_MESSAGE}\n        backdropDismiss\n        mode=\"ios\"\n        header={Constants.BOOKLOAD_THANKYOU_HEADER}\n        cssClass=\"register-alert\"\n        buttons={[\n          {\n            text: 'ok',\n            role: 'ok',\n            handler: () => {\n              this.props.setBuyLoadError();\n              this.props.history.push(`/app/${this.props.module}`);\n            }\n          }\n        ]}\n      />\n        {isPlatform(\"desktop\") ? (\n          <CarrierAssignedModal\n            isOpen={this.state.openAssignDriverDialog}\n            onDismiss={() => {\n              this.setState({\n                openAssignDriverDialog: false\n              });\n            }}\n            loadDetails={this.props.loadDetails}\n            driverDetails={this.state.driverDetails}\n            showDriverDialog={(isOpen: boolean) => {\n              this.setState({ isDriverModal: isOpen });\n            }}\n          />\n        ) : null}\n        {loadDetails ? (\n          <IonPage className=\"desktop-page loadDetails-page\">\n            <AppHeader\n              title={loadId}\n              backUrl={\n                bookloadStatus\n                  ? `/app/${prevModule}`\n                  : `/app/${this.props.module}`\n              }\n              tab={this.props.module}\n              History={this.props.history}\n              isLoadDetails\n              isStar={!this.props.isCarrierLoad}\n              isWatched={this.props.isWatched}\n              toggleWatchLoad={this.props.toggleWatchLoad}\n            />\n            <IonModal\n              isOpen={this.state.isDriverModal}\n              cssClass=\"Driver-list-modal\"\n              onDidDismiss={() => {\n                this.setState({ isDriverModal: false });\n              }}\n            >\n              <DriverModal\n                popupHeader={this.state.isPopupHeader}\n                closeModal={() => this.closeDriverModal()}\n                DesktopDriverList={this.props.driverList}\n                loadDetails={this.props.loadDetails}\n                showAssignDriverDialog={(\n                  isShow: boolean,\n                  driverDetails: any\n                ) => {\n                  this.setState({\n                    openAssignDriverDialog: isShow,\n                    driverDetails,\n                    isDriverModal: isShow ? false : this.state.isDriverModal\n                  });\n                }}\n              />\n            </IonModal>\n            {this.state.isBookLoadModal ? (\n              <BookLoadModal\n                isBookLoadModal={this.state.isBookLoadModal}\n                closeBookLoadModal={this.closeBookLoadModal}\n                bookedDetails={loadDetails.rate}\n                buyLoad={this.buyLoad}\n                declineBookLoad={this.closeBookLoadModal}\n                carrierId={this.props.userDetails.carrierId}\n                lead={this.lead}\n              />\n            ) : null}\n            {this.props.bookLoadStatus &&\n            this.props.bookLoadStatus.status &&\n            this.props.bookLoadStatus.message ? (\n              <BookLoadConfirmModal\n                confirmModal={!!this.props.bookLoadStatus.status}\n                bookLoadResponse={this.props.bookLoadStatus}\n                confirmBookLoad={this.confirmBookLoad}\n                loadId={this.props.loadDetails.loadId}\n              />\n            ) : null}\n            <GetShipmentModal\n              isGetShipmentModal={this.state.isGetShipmentErr}\n              declineBookLoad={this.declineBookLoad}\n              closeBookLoadModal={this.closeBookLoadModal}\n            />\n            <IonContent className=\"load-details-content\">\n              <IonContent class=\"load-page-content\">\n                <div className=\"desktop-view\">\n                  <DataTableComponent\n                    data-test=\"DataTableComponent-getloadData\"\n                    columns={this.columns}\n                    data={this.getloadData(loadDetails)}\n                    showEndofList\n                    showHeader={false}\n                    titleText=\" \"\n                    pagination={false}\n                  />\n                  <IonGrid class=\"btn-row-grid\">\n                    <IonRow\n                      className={` ${\n                        this.state.isStartTripDesktop\n                          ? \"startTripRow\"\n                          : \"btn-row\"\n                      }`}\n                    >\n                      <IonCol>\n                        <IonButton class=\"load-btn\" onClick={this.callusClick}>\n                          <IonIcon src=\"assets/icon/Phone.svg\" /> {CALL_US_TEXT}\n                        </IonButton>\n                      </IonCol>\n                      {/* <IonCol size={this.isInTransit() ? \"6\" : \"4\"}>\n                        <IonButton\n                          data-test=\"ToastMessage-IonButton\"\n                          class=\"load-btn\"\n                          onClick={() => {\n                            ToastMessage.show();\n                          }}\n                        >\n                          <IonIcon src=\"assets/icon/chat.svg\" /> {CHAT_TEXT}\n                        </IonButton>\n                      </IonCol> */}\n\n                      {this.state.showCTAButton && (\n                        <IonCol\n                          data-test=\"onClick-IonCol\"\n                          onClick={this.onClick}\n                          className={` ${\n                            this.state.isStartTripDesktop\n                              ? \"startTripDesktop\"\n                              : \"\"\n                          }`}\n                        >\n                          <IonButton class=\"book-load-btn\">\n                            {this.props.module ===\n                            `${Constants.MODULES.CARRIER_ASSIGNED_MODULE}` ? (\n                              <>\n                                <IonIcon\n                                  src=\"assets/icon/add-user-icon.svg\"\n                                  class=\"user-icon\"\n                                />\n                                {Constants.ASSIGN_DRIVER_CTA_TEXT}\n                              </>\n                            ) : (\n                              <>\n                                {this.props.module ===\n                                `${Constants.MODULES.DRIVER_ASSIGNED_MODULE}` ? (\n                                  <>\n                                    <IonIcon\n                                      src=\"assets/icon/start-trip.svg\"\n                                      class=\"trip-icon\"\n                                    />\n                                    {startStopBtnTxt}\n                                  </>\n                                ) : (\n                                  <>\n                                    {this.props.loadDetails.rate &&\n                                    this.props.loadDetails.rate.totalCharge ? (\n                                      <>{Constants.BOOK_LOAD_CTA_TEXT}</>\n                                    ) : (\n                                      <>\n                                        {Constants.CONTACT_FOR_PRICE_CTA_TEXT}\n                                      </>\n                                    )}\n                                  </>\n                                )}\n                              </>\n                            )}\n                          </IonButton>\n                        </IonCol>\n                      )}\n                    </IonRow>\n                  </IonGrid>\n                </div>\n                {this.props.isNetworkAvailable ? (\n                  <IonGrid class=\"map-grid\">\n                    <LoadMap\n                      loadStop={(loadDetails && loadDetails.loadStop) || []}\n                      // isNetworkAvailable={this.props.isNetworkAvailable}\n                    />\n                    <LoadMapSatellite\n                      showSatelliteMap={this.state.showSatelliteMap}\n                      locationName={this.state.satelliteLocation}\n                      onDismissSatelliteMap={() => {\n                        this.setState({ showSatelliteMap: false });\n                      }}\n                      shipmentId=\"\"\n                    />\n                  </IonGrid>\n                ) : (\n                  <IonGrid class=\"map-grid\">\n                    <img\n                      src={\"assets/images/default_map.png\"}\n                      style={{ height: \"250px\" }}\n                      alt=\"You are offline, facing issue in loading image\"\n                    />\n                  </IonGrid>\n                )}\n                <div className=\"desktop-view\">\n                  <IonCard\n                    class={`stop-details-card ${\n                      this.isInTransit() ? \"start_trip_card\" : \"\"\n                    }`}\n                  >\n                    {this.isInTransit() && isPlatform(\"desktop\") ? (\n                      <ShipmentUpdateCard\n                        locationValue={this.state.withGPS}\n                        completeTripClick={this.completeTripClick}\n                        shipmentloadStop={\n                          (this.state.shipmetCardLoaddetails &&\n                            this.state.shipmetCardLoaddetails.loadStop) ||\n                          []\n                        }\n                        withGPS={this.state.withGPS}\n                        networkStatus={this.props.networkStatus}\n                        shipmentId={\n                          (this.state.shipmetCardLoaddetails &&\n                            this.state.shipmetCardLoaddetails.shipmentId) ||\n                          \"\"\n                        }\n                        moduleName={this.props.moduleName}\n                        loadDetails={this.state.shipmetCardLoaddetails}\n                      />\n                    ) : (\n                      <LoadTileHeader\n                        {...loadDetails}\n                        module={this.props.module}\n                        isLoadDetails\n                        isCarrierLoad={this.props.isCarrierLoad}\n                        showExpandView={this.props.showExpandView}\n                      />\n                    )}\n                  </IonCard>\n                </div>\n                <div className=\"mobile-view\">\n                  <LoadTile\n                    {...loadDetails}\n                    {...this.props}\n                    isLoadDetails\n                    showExpandView={this.props.showExpandView}\n                    isCarrierLoad={this.props.isCarrierLoad}\n                    showLoadNo={false}\n                  />\n                  <IonRow class=\"btn-row\">\n                    <IonCol>\n                      <IonButton\n                        data-test=\"callusClick-IonButton\"\n                        class=\"load-btn\"\n                        onClick={this.callusClick}\n                      >\n                        <IonIcon src=\"assets/icon/Phone.svg\" /> {CALL_US_TEXT}\n                      </IonButton>\n                    </IonCol>\n                    {/* <IonCol>\n                      <IonButton\n                        data-test=\"ToastMessage-IonButton1\"\n                        class=\"load-btn\"\n                        onClick={() => {\n                          this.chatusClick();\n                        }}\n                      >\n                        <IonIcon src=\"assets/icon/chat.svg\" /> {CHAT_TEXT}\n                      </IonButton>\n                    </IonCol> */}\n                  </IonRow>\n                </div>\n                {this.props.isCarrierLoad ? (\n                  <>\n                    {\n                      // Commented  as per defect : DE3741\n                      /* <IonGrid class=\"document-grid\">\n                      <IonButton\n                        data-test=\"ToastMessage-IonButton2\"\n                        class=\"add-documnet-btn-mobile\"\n                        onClick={() => {\n                          ToastMessage.show();\n                        }}\n                      >\n                        <IonIcon src=\"assets/icon/plus.svg\" /> Add Document\n                      </IonButton>{\" \"}\n                    </IonGrid>\n                    <DocumentCard /> */\n                    }\n                  </>\n                ) : (\n                  <TermsAndCondition\n                    setTermsAndConState={this.setTermsAndConState}\n                  />\n                )}\n                {/* pdf modal */}\n                {/* <IonButton onClick={this.showPdf} >Show PDF</IonButton>\n\t\t\t\t\t\t\t\t<IonModal isOpen={this.state.showModal} backdropDismiss={false}>\n\t\t\t\t\t\t\t\t\t<IonContent className=\"ion-padding custom-padding load-page-content\">\n\t\t\t\t\t\t\t\t\t\t{PDFRender}\n\t\t\t\t\t\t\t\t\t\t<IonButton onClick={() => this.setState({ url: \"\", showModal: false })}>Close Modal</IonButton>\n\t\t\t\t\t\t\t\t\t</IonContent>\n\t\t\t\t\t\t\t\t</IonModal> */}\n              </IonContent>\n              <IonGrid class=\"loadPageFooter\">\n                <IonButton\n                  data-test=\"StartTripButton\"\n                  expand=\"full\"\n                  onClick={this.onButtonClick}\n                >\n                  {this.props.module ===\n                  `${Constants.MODULES.CARRIER_ASSIGNED_MODULE}` ? (\n                    <>\n                      <IonIcon\n                        src=\"assets/icon/add-user-icon.svg\"\n                        class=\"user-icon\"\n                      />\n                      {Constants.ASSIGN_DRIVER_CTA_TEXT}\n                    </>\n                  ) : (\n                    <>\n                      {this.props.module ===\n                      `${Constants.MODULES.DRIVER_ASSIGNED_MODULE}` ? (\n                        <>\n                          <IonIcon\n                            src=\"assets/icon/start-trip.svg\"\n                            class=\"trip-icon\"\n                          />\n                          {startStopBtnTxt}\n                        </>\n                      ) : (\n                        <>\n                          {this.props.loadDetails.rate &&\n                          this.props.loadDetails.rate.totalCharge ? (\n                            <>{Constants.BOOK_LOAD_CTA_TEXT}</>\n                          ) : (\n                            <>{Constants.CONTACT_FOR_PRICE_CTA_TEXT}</>\n                          )}\n                        </>\n                      )}\n                    </>\n                  )}\n                </IonButton>\n              </IonGrid>\n            </IonContent>\n          </IonPage>\n        ) : (\n          \"\"\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isNetworkAvailable: getNetworkStatus(),\n  userDetails: getUserDetails(),\n  startTripShipmentStatusMessage: getStartTripShipmentStatusMessage(),\n  shipmentToStartTrip: getStartTripShipment(),\n  confirmStartInfo: getConfirmStartInformation(),\n  carrierLoads: getCarrierAssignedLoads(),\n  buyloadShipmentStatus: buyloadShipmentStatus(),\n  buyLoadApiError: getBuyLoadApiError()\n});\n\nexport const mapDispatchToProps = (dispatch: Function) => ({\n  setShipmentForStartTrip: (data: any) => {\n    dispatch(shipmentForStartTrip(data));\n    dispatch(shipmentForStartTripTimestamp(new Date().getTime().toString()));\n  },\n  showAlert: (data: any) => dispatch(showAlert(data)),\n  // showNetworkAlert: () => dispatch(showNetworkAlert()),\n  clearConfirmReasponse: () => {\n    dispatch(clearConfirmStartInformationStatusMessage());\n  },\n  startTrip: (tripInfo: IStartTripInfo) => dispatch(startTrip(tripInfo)),\n  loadCarrierData: (data: any[]) => {\n    dispatch(loadCarrierData(data, data.length));\n  },\n  removeSearchResults: (data: any) => dispatch(removeSearchResults(data)),\n  removeRecommendedResults: (data: any) =>\n    dispatch(removeRecommendedResults(data)),\n  removewatchedResults: (payload: any) =>\n    dispatch(removeWatchLoadSuccess(payload)),\n  clearBuyLoadShipmentStatus: () => dispatch(successclearBuyLoadResponse(\"\")),\n  fetchShipments: (details: any, callBack: any) =>\n    dispatch(fetchShipments(details, false, callBack)),\n  setBuyLoadError:()=> dispatch(showBuyLoadError(false))\n});\n\nconst key = \"carrierAssigned\";\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nconst withReducer = useInjectReducer({ key, reducer });\nconst withSaga = useInjectSaga({ key, saga });\n\nexport { LoadDetailsPage };\nexport default compose<any>(\n  withSaga,\n  withReducer,\n  withConnect\n)(LoadDetailsPage);\n","import { IWatchLoadRequest, IAddWatchLoad, IRemoveWatchLoad } from \"../../schemas/Home/Home.schema\";\nimport { setObject, getObject } from \"../../utils/common\";\nexport class WatchedLoadModel {\n  constructor() {}\n\n  private __watch_state: IWatchLoadRequest = {\n    userId: \"\",\n    carrierId: \"\",\n\n    page: 0,\n    size: 10,\n    sortColumn: \"pickupDate\",\n    sortDirection: \"asc\",\n  };\n  get sortColumn() {\n    return this.__watch_state.sortColumn;\n  }\n  set sortColumn(value) {\n    if (value) {\n      this.__watch_state.sortColumn = value;\n    }\n  }\n  get userId() {\n    return this.__watch_state.userId;\n  }\n  set userId(value) {\n    if (value) {\n      this.__watch_state.userId = value;\n    }\n  }\n  get carrierId() {\n    return this.__watch_state.carrierId;\n  }\n  set carrierId(value) {\n    if (value) {\n      this.__watch_state.carrierId = value;\n    }\n  }\n  get sortDirection() {\n    return this.__watch_state.sortDirection;\n  }\n\n  set sortDirection(value) {\n    if (value) {\n      this.__watch_state.sortDirection = value;\n    }\n  }\n\n  get page() {\n    return this.__watch_state.page;\n  }\n  set page(value) {\n    if (value) {\n      this.__watch_state.page = value;\n    }\n  }\n\n  get size() {\n    return this.__watch_state.size;\n  }\n  set size(value) {\n    if (value) {\n      this.__watch_state.size = value;\n    }\n  }\n\n  setofflineWatchedLoads(_loads: []) {\n    return setObject(\"Carrier-offline-Watched-Loads\", _loads);\n  }\n\n  getofflineWatchedLoads() {\n    return getObject(\"Carrier-offline-Watched-Loads\");\n  }\n  setWeight() {\n    this.validLoad();\n  }\n\n  private validLoad() {}\n\n  addWatchLoad(data: IAddWatchLoad) {\n      return {\n        mutation: {\n          newUserWatchedLoads: {\n            __args: {\n              input: data\n            },\n            id: true\n          }\n        }\n      };\n  }\n\n  removeWatchLoad(data: IRemoveWatchLoad) {\n    return {\n      mutation: {\n        deleteUserWatchedLoads: {\n          __args: {\n            input: data\n          }\n        }\n      }\n    };\n  }\n\n  getRequestPayload() {\n    return {\n      query: {\n        getUserWatchedLoads: {\n          __args: {\n            input: this.__watch_state,\n          },\n          totalRecords: true,\n          loadPostings: {\n            loadId: true,\n            transportMode: true,\n            termsAndConditions: true,\n            loadPostingStatus: true,\n            sourceSystem: true,\n            hasAppointments: true,\n            isHazardous: true,\n            isHighValue: true,\n            isTemperatureControlled: true,\n            totalDistance: true,\n            distanceUOM: true,\n            totalWeight: true,\n            weightUOM: true,\n            numberOfStops: true,\n            rate: {\n              binRateIdentifier: true,\n              binSource: true,\n              totalCharge: true,\n              lineHaulCharge: {\n                charge: true,\n                unitCharge: true,\n                quantity: true,\n                chargeDescription:true,\n                rateQualifier: true\n              },\n              fuelCharge: {\n                charge: true,\n                unitCharge: true,\n                quantity: true,\n                chargeDescription:true,  \n                rateQualifier: true\n              },\n              accessorials:  {\n                accessorialCode: true,\n              accessorialDescription: true,\n              accessorialType: true,\n              accessorialCharge: {\n                charge: true,\n                unitCharge: true,\n                quantity: true,\n                rateQualifier: true\n              }\n              }\n            },\n            loadStop: {\n              stopId: true,\n              stopType: true,\n              city: true,\n              state: true,\n              postalCode: true,\n              country: true,\n              appointmentFrom: true,\n              appointmentTo: true,\n              timeZone: true,\n              deadHead: true,\n              stopSequence: true,\n              specialServices: {\n                serviceDesc: true,\n                specialServiceDesc: true,\n              },\n            },\n          },\n        },\n      },\n    };\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router';\nimport { createStructuredSelector } from 'reselect';\nimport { getLoad, makeSelectWatched, makeSelectRecommended } from '../../selectors/Home/selector';\nimport { withIonLifeCycle } from '@ionic/react';\nimport { getPlatform, getNetworkStatus, getUserDetails } from '../../selectors/selector';\nimport LoadDetailsPage from '../../pages/LoadDetails/LoadDetails.page';\nimport { addWatchLoad, removeWatchLoad } from '../../actions/Home/action';\nimport {\n  buyLoadRequest,\n  buyLoadShipmentRequest,\n  buyLoadStatusRemove\n} from '../../actions/BookLoad/action';\nimport {\n  PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n  NO_NEWORK,\n  watchedErrorText,\n  WATCHED_LOAD_REMOVE\n} from '../../utils/constants';\nimport { showAlert } from '../../actions/App/action';\nimport useInjectSaga from '../../utils/injectSaga';\nimport useInjectReducer from '../../utils/injectReducer';\nimport reducer from '../../reducers/myload/reducer';\nimport { getBookLoadStatus, getShipmentDetails } from '../../selectors/Myload/selector';\nimport saga from '../../saga/MyLoad/saga';\nimport { WatchedLoadModel } from '../../models/home/WatchedLoads.model';\nimport { ToastMessage } from '../../utils/ToastMessage';\nimport { IONICWrapper } from \"../../utils/common\";\n\nconst key = 'myload';\nexport class LoadDetailsContainer extends Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {};\n  }\n\n  ionViewWillEnter() {\n    if(IONICWrapper.details.getValue.shipmentId){\n        this.props.history.push(`/app/${ this.props.match.params[0]}`);\n        IONICWrapper.details.setValue = {shipmentId: '' };\n      }\n  }\n \n  toggleWatchLoad = (status: boolean) => {\n    const {\n      loadDetails,\n      history: {\n        push,\n        location: { pathname },\n      },\n      isNetworkAvailable,\n      showAlert,\n    } = this.props;\n    const { carrierId, userPrincipalName: userId } = this.props.userDetails;\n    const { loadId } = loadDetails;\n\n    if (!isNetworkAvailable) {\n      showAlert({\n        isShowAlert: true,\n        alertMessage: PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n        alertTitle: NO_NEWORK,\n      });\n      return true;\n    }\n\n    const watchDate = new Date().toISOString();\n    const payload = {\n      carrierId,\n      userId,\n      origin: '',\n      loadId,\n      watchDate,\n    };\n\n    const watchLoadModel = new WatchedLoadModel();\n    const watchLoadCallback = (): void =>\n      this.props.addWatchLoad({\n        query: watchLoadModel.addWatchLoad(payload),\n        loadDetails,\n      });\n\n    const callback = (error = false) => {\n      if (error) {\n        ToastMessage.show(watchedErrorText);\n        return true;\n      }\n      ToastMessage.open({\n        message: WATCHED_LOAD_REMOVE,\n        showUndo: true,\n        callback: watchLoadCallback,\n      });\n      if (pathname && pathname.includes('watched')) {\n        push('/app/home/watched');\n      }\n      if (pathname && pathname.includes('recommended')) {\n        this.props.recommendedeLoad(this.props.params.id);\n        push('/app/home/recommended');\n      }\n    };\n    if (status) {\n      this.props.addWatchLoad({\n        query: watchLoadModel.addWatchLoad(payload),\n        loadDetails,\n      });\n    } else {\n      this.props.removeWatchLoad({\n        query: watchLoadModel.removeWatchLoad(payload),\n        loadId,\n        callback,\n      });\n    }\n  };\n\n  render() {\n    const { loadDetails } = this.props;\n    let isWatched;\n    if (this.props.watchedLoadList.length > 0) {\n      isWatched =\n        !!this.props.watchedLoadList &&\n        this.props.watchedLoadList.find((details: any) => details.loadId === loadDetails.loadId);\n    } else {\n      isWatched = false;\n    }\n    return (\n      <LoadDetailsPage\n        {...this.props}\n        loadDetails={loadDetails}\n        module={this.props.match.params[0]}\n        loadId={this.props.match.params.id}\n        networkStatus={this.props.networkStatus}\n        showAlert={this.props.showAlert}\n        isNetworkAvailable={this.props.isNetworkAvailable}\n        isWatched={isWatched}\n        toggleWatchLoad={this.toggleWatchLoad}\n        buyLoadRequest={this.props.buyLoadRequest}\n      />\n    );\n  }\n}\nconst mapStateToProps = createStructuredSelector({\n  loadDetails: getLoad(),\n  userDetails: getUserDetails(),\n  getPlatform: getPlatform(),\n  networkStatus: getNetworkStatus(),\n  isNetworkAvailable: getNetworkStatus(),\n  watchedLoadList: makeSelectWatched(),\n  recommendedLoadList: makeSelectRecommended(),\n  bookLoadStatus: getBookLoadStatus(),\n  getShipmentDetails: getShipmentDetails()\n});\nexport const mapDispatchToProps = (dispatch: Function) => ({\n  showAlert: (data: any) => dispatch(showAlert(data)),\n  addWatchLoad: (payload: any) => dispatch(addWatchLoad(payload)),\n  removeWatchLoad: (payload: any) => dispatch(removeWatchLoad(payload)),\n  buyLoadRequest: (payload: any) => dispatch(buyLoadRequest(payload)),\n  buyLoadShipmentRequest: (payload: any, renderCallback: Function) =>\n    dispatch(buyLoadShipmentRequest(payload, renderCallback)),\n  buyLoadStatusRemove: () => dispatch(buyLoadStatusRemove()),\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nconst withReducer = useInjectReducer({ key, reducer });\nconst withSaga = useInjectSaga({ key, saga });\nexport default compose<any>(withSaga, withReducer, withConnect)(withRouter(withIonLifeCycle(LoadDetailsContainer)));\n","import React, { useState, useEffect } from 'react';\nimport { IonButton, IonModal, IonGrid } from '@ionic/react';\nimport './LogoutPopup.scss';\nimport { LOGOUTPOPUP } from '../../../utils/constants';\n\nexport const LogoutPopUp: React.FC<any> = (props) => {\n  const [showModal, setShowModal] = useState(props.showLogoutModal);\n  useEffect(() => {\n    setShowModal(props.showLogoutModal);\n  }, [props.showLogoutModal]);\n  return (\n    <IonModal isOpen={showModal} cssClass=\"dropdown-modal\">\n      <div className=\"logout_modalPopUp\">\n        <IonGrid class=\"popup-header\"> {LOGOUTPOPUP.Logout_TEXT} </IonGrid>\n        <IonGrid class=\"popup-body\">\n          <p className=\"modalPopUp_text\">\n            {props.isRegistrationPage\n              ? LOGOUTPOPUP.REGISTRATION_ALERT_MESSAGE\n              : LOGOUTPOPUP.ALERT_MESSAGE}\n          </p>\n          <div className=\"button-div\">\n            <IonButton\n              className=\"logoutModalButtons\"\n              onClick={props.closeShowModal}\n              data-test=\"logout-close\"\n            >\n              {LOGOUTPOPUP.Cancel_TEXT}\n            </IonButton>\n            <IonButton\n              className=\"logoutModalButtons\"\n              data-test=\"logout-click\"\n              onClick={props.logOut}\n            >\n              {LOGOUTPOPUP.Logout_TEXT}\n            </IonButton>\n          </div>\n        </IonGrid>\n      </div>\n    </IonModal>\n  );\n};\n","import React, { useState } from 'react';\nimport { IonCard, IonItem, isPlatform, IonIcon, IonButton } from '@ionic/react';\nimport { useAuthService } from '../../services/Auth';\nimport './Logout.scss';\nimport { clear, GPSWrapper } from '../../utils/common';\nimport { LogoutPopUp } from '../../components/app/LogoutPopup/LogoutPopup';\nimport {\n  PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n  NO_NEWORK,\n} from '../../utils/constants';\n\nconst LogOutPage: React.FC<any> = (props) => {\n  const authService = useAuthService();\n  const [showLogoutModal, setShowLogoutModal] = useState(false);\n\n  async function azureLogout() {\n    if (isPlatform(\"capacitor\")) {\n      GPSWrapper.details.stopGPS();\n    }\n    setShowLogoutModal(false);\n    await clear();\n    await authService.logout();\n    await props.logout();\n  }\n  const showLgoutPopUp = () => {\n    //Cannot log out without data connection. Alert message will be shown to check network connectivity.\n    if (!props.isNetworkAvailable) {\n      props.showAlert({\n        isShowAlert: true,\n        alertMessage: PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n        alertTitle: NO_NEWORK,\n      });\n    } else {\n      setShowLogoutModal(true);\n    }\n  };\n\n  return (\n    <>\n      {props.isRegistrationPage ? (\n        isPlatform(\"mobile\") ? (\n          <IonIcon\n            className=\"page-close\"\n            icon=\"close\"\n            onClick={() => showLgoutPopUp()}\n          />\n        ) : (\n          <IonButton\n            expand=\"full\"\n            className=\"cancel-button\"\n            onClick={() => showLgoutPopUp()}\n          >\n            Cancel\n          </IonButton>\n        )\n      ) : (\n        <IonCard onClick={() => showLgoutPopUp()} class=\"menu_list_card_logout\">\n          <IonItem lines=\"none\" class=\"Logout_item\">\n            Log Out\n            <img\n              slot=\"end\"\n              alt=\"logo\"\n              src=\"/assets/icon/Logout-Icon.svg\"\n              className=\"logoutImg\"\n            />\n          </IonItem>\n        </IonCard>\n      )}\n      <LogoutPopUp\n        showLogoutModal={showLogoutModal}\n        closeShowModal={() => {\n          setShowLogoutModal(false);\n        }}\n        logOut={async () => azureLogout()}\n        isRegistrationPage={props.isRegistrationPage}\n      />\n    </>\n  );\n};\nexport default LogOutPage;\n","import { setObject, getObject,clear } from \"../../utils/common\";\n\nexport class LogIn {\n    setAccessToken(accessToken: any) {\n        return setObject('Access_Token', accessToken);\n    }\n\n    getAccessToken() {\n        return getObject('Access_Token');\n    }\n    clearToken(){\n        return clear()\n    }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { logout } from '../../actions/Login/action';\nimport LogOutPage from '../../pages/Logout/Logout.page';\nimport { LogIn } from '../../models/home/login.model';\n\nclass LogOutContainer extends Component<any, any> {\n  _clear = new LogIn();\n\n  logout = () => {\n    this._clear.clearToken();\n  };\n\n  render() {\n    return <LogOutPage logout={this.logout} {...this.props} />;\n  }\n}\n\nconst mapStateToProps = (state: any) => ({});\n\nconst mapDispatchToProps = (dispatch: Function) => ({\n  logout: () => dispatch(logout())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogOutContainer);\n","import React, { Component } from \"react\";\nimport {\n  IonContent,\n  IonPage,\n  IonCard,\n  IonList,\n  IonLabel,\n  IonItem\n} from \"@ionic/react\";\nimport \"./Menu.page.scss\";\nimport { Device } from \"@capacitor/core\";\nimport { AppVersion } from \"@ionic-enterprise/app-version\";\nimport { isEntitled } from \"app/utils/common\";\nimport AppHeader from \"../../components/app/Bars/Bar-header\";\nimport { LogOutContainer } from \"../../containers/LogOutContainer\";\nimport {\n  PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n  NO_NEWORK,\n  EVENT,\n  SCREEN,\n  NO_ACCESS_MSG,\n  OFFLINE_MODE_STATE\n} from \"../../utils/constants\";\nimport { logEvent } from \"../../utils/Analytics\";\nimport { ToastMessage } from \"../../utils/ToastMessage\";\n\nexport const ListItem = (props: any) => {\n  const ionItemClick = (event: any, name: string, uid: any): void => {\n    event.preventDefault();\n    const urlName = name.replace(/ /g, \"\");\n    // ToastMessage.show();\n    /* NETWORK CHECK CONDITION */\n    if (isEntitled(\"more\", \"moreContent\")) {\n      if (props.isNetworkAvailable || OFFLINE_MODE_STATE) {\n        Object.values(\n          props.menuData.data.getUserHelpContent.menuEntries\n        ).forEach((data: any) => {\n          if (data.uid === uid) {\n            props.history.push(`/app/more/${urlName}`, {\n              heading: name,\n              contextData: data\n            });\n          }\n        });\n      } else {\n        props.showAlert({\n          isShowAlert: true,\n          alertMessage: PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n          alertTitle: NO_NEWORK\n        });\n      }\n    } else {\n      ToastMessage.show(NO_ACCESS_MSG);\n    }\n  };\n  const heading = props && props.headings && props.headings.title;\n  const subHeading = props && props.headings && props.headings.group;\n  return (\n    <>\n      <IonLabel class=\"menu_list_heading\">{heading}</IonLabel>\n      <IonCard mode=\"md\" class=\"menu_list_card2\" data-test=\"ion-card\">\n        <IonList mode=\"ios\">\n          {subHeading &&\n            subHeading.map((lable: any, index: number) => (\n              <IonItem\n                data-test=\"ion-item\"\n                class=\"menu_list_item\"\n                key={index}\n                onClick={(event: any) =>\n                  ionItemClick(event, lable.menuItem, lable.uid)\n                }\n                lines={index === subHeading.length - 1 ? \"none\" : \"inset\"}\n              >\n                {lable.menuItem}\n                <img\n                  slot=\"end\"\n                  alt=\"logo\"\n                  src=\"/assets/icon/more-arrow.svg\"\n                  className=\"rightArrow\"\n                />\n              </IonItem>\n            ))}\n        </IonList>\n      </IonCard>\n    </>\n  );\n};\n\nexport interface IMenuListState {\n  tab: boolean;\n  toggleBtn: boolean;\n}\n\nexport class MenuPage extends Component<any, IMenuListState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      tab: false,\n      toggleBtn: false\n    };\n  }\n\n  componentDidMount(): void {\n    // Analytics implementation\n    logEvent(EVENT.SV_MORE_MENU, {\n      screen: SCREEN.MORE_MENU,\n      carrierId:\n        this.props && this.props.userDetails && this.props.userDetails.carrierId\n    });\n  }\n\n  render() {\n    const menuHeadingList =\n      this.props &&\n      this.props.menuData &&\n      this.props.menuData.data &&\n      this.props.menuData.data.getUserHelpContent &&\n      this.props.menuData.data.getUserHelpContent.menuItems;\n    // console.log(\"Menu page\",this.props)\n    return (\n      <IonPage className=\" menu_page\">\n        <AppHeader\n          title=\"Menu\"\n          isDeviceInfo\n          viewDeviceInfo={async () => {\n            const deviceInfo = await Device.getInfo();\n            const appVersion = await AppVersion.getVersionNumber();\n            this.props.history.push(\"/app/more/deviceInfo\", {\n              deviceInfo,\n              appVersion\n            });\n          }}\n        />\n        <IonContent class=\"menu_page_content\" data-test=\"IonPage-menu-page\">\n          <div className=\"menu_page_div\">\n            <LogOutContainer {...this.props} isRegistrationPage={false}/>\n            {menuHeadingList &&\n              menuHeadingList.map((headings: any, index: number) => (\n                <ListItem\n                  key={index}\n                  headings={headings}\n                  {...this.props}\n                  submitFeedback={this.props.submitFeedback}\n                />\n              ))}\n          </div>\n        </IonContent>\n      </IonPage>\n    );\n  }\n}\nexport default MenuPage;\n","import {\n    ActionType,\n    MenuState\n  } from \"../../schemas/Menu/Menu.Schema\";\n  import * as Constants from \"../../utils/constants\";\n  import produce from \"immer\";\n  \n  export const initialMenuState: MenuState = {\n    submitFeedback: []\n  };\n  \n  export default (state = initialMenuState, action: ActionType) =>\n    produce(state, draft => {\n      switch (action.type) {\n        case Constants.GET_SUBMIT_FEEDBACK:\n          draft.submitFeedback = action.payload;\n          break;\n      }\n    });","import { all, put, takeLatest, call } from 'redux-saga/effects';\nimport { showLoading, hideLoading } from '../../actions/Login/action';\nimport { getSubmitFeedback } from '../../actions/Menu/action'\nimport * as constants from '../../utils/constants';\nimport request from '../../utils/request';\nimport { DomainConverter } from '../../utils/common';\n\nexport function* submitFeedback(action: any) {\n  const { data, callback } = action.payload as any;\n  try {\n    yield put(showLoading());\n    let submitFeedbackQuery = DomainConverter.domainToData(action.payload.data);\n    const fetchFeedback = yield call(request, [\"SUBMITFEEDBACK\", \"SUBMITFEEDBACK\", null, \"\", submitFeedbackQuery, \"application/json\"]);\n    yield put(getSubmitFeedback(fetchFeedback));\n    yield put(hideLoading());\n    if(fetchFeedback && fetchFeedback.data && fetchFeedback.data.feedback === true){\n      callback()\n    }\n  } catch (e) {\n    yield put(hideLoading());\n  }\n\n}\n\nexport default function* rootSaga() {\n  yield all([\n    takeLatest(constants.SUBMIT_FEEDBACK, submitFeedback)\n  ]);\n}\n\n","import * as Constants from '../../utils/constants';\n\nexport const submitFeedback = (payload: any, callback?: Function) => ({\n    type: Constants.SUBMIT_FEEDBACK,\n    payload: {\n        data: payload,\n        callback\n    }\n})\n\nexport const getSubmitFeedback = (payload: any) => ({\n    type: Constants.GET_SUBMIT_FEEDBACK,\n    payload\n})\n","import React, { Component } from 'react';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport MenuPage from '../../pages/Menu/Menu.page';\nimport { getNetworkStatus, getUserDetails } from '../../selectors/selector';\nimport { showAlert } from '../../actions/App/action';\nimport useInjectSaga from '../../utils/injectSaga';\nimport useInjectReducer from '../../utils/injectReducer';\nimport reducer from '../../reducers/Menu/reducer';\nimport saga from '../../saga/Menu/saga';\nimport { getMoreContent } from '../../../app/selectors/selector';\n\nconst key = 'Menu';\n\nexport class MenuContainer extends Component<any, any> {\n  render() {\n    return <MenuPage {...this.props} />;\n  }\n}\nconst mapStateToProps = createStructuredSelector({\n  isNetworkAvailable: getNetworkStatus(),\n  userDetails: getUserDetails(),\n  menuData: getMoreContent()\n});\n\nexport const mapDispatchToProps = (dispatch: Function) => ({\n  showAlert: (data: any) => dispatch(showAlert(data))\n});\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nconst withReducer = useInjectReducer({ key, reducer });\nconst withSaga = useInjectSaga({ key, saga });\n\nexport default compose(withReducer, withSaga, withConnect)(React.memo(MenuContainer));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { getLoading, getUserDetails, getNetworkStatus } from '../../../selectors/selector';\nimport { ManageUserProfileFormPage } from '../../../pages/Manage/ManageUser';\nimport { showNetworkAlert } from '../../../actions/App/action';\nimport { editUserDetails, removeUserDetails } from '../../../actions/manage/action';\nimport { handleDelink, handleUpdateSubmit } from '../ManageUserContainer/ManageUserUtil';\nimport { useAuthService } from '../../../services/Auth';\n\nexport const ProfileEditContainer: React.FC<any> = (props: any) => {\n  const roles =\n    props.userDetails &&\n    props.userDetails.userApplicationDetails &&\n    props.userDetails.userApplicationDetails\n      .reduce((current: any, item: any) => {\n        return [...current, ...item.roles];\n      }, [])\n      .map((role: any) => role.roleName);\n  const userProfile = { ...props.userDetails, roles };\n\n  const {\n    history: { push }\n  } = props;\n\n  const selectedUser = {\n    ...userProfile,\n    defaultMobileNumber: !userProfile.defaultMobileNumber\n      ? userProfile.mobileNumber\n      : userProfile.defaultMobileNumber\n  };\n\n  const authService = useAuthService();\n\n  return (\n    <ManageUserProfileFormPage\n      {...props}\n      selectedUser={selectedUser}\n      isEditable={false}\n      module=\"manage/ProfileDetails\"\n      handleSubmit={handleUpdateSubmit(props)}\n      handleDelink={handleDelink({...props, authService }, true)}\n      isSelf={true}\n    />\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  loading: getLoading(),\n  userDetails: getUserDetails(),\n  isNetworkAvailable: getNetworkStatus()\n});\n\nexport const mapDispatchToProps = (dispatch: Function) => ({\n  showNetworkAlert: () => dispatch(showNetworkAlert()),\n  updateUserAction: (payload: any) => dispatch(editUserDetails(payload)),\n  delinkUserAction: (payload: any) => dispatch(removeUserDetails(payload))\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps)(ProfileEditContainer);\n\nexport default withConnect;\n","import React from 'react';\nimport ReactHtmlParser from 'react-html-parser';\n\nexport class HtmlParseComponent extends React.Component<any, any> {\n    render() {\n        const richText = this.props.richText;\n        return <div className= {this.props.isRichText ? \"htmlParseDiv\" : \"parsingDiv\"}>{ReactHtmlParser(richText)}</div>;\n    }\n}\nexport default HtmlParseComponent;","import React from \"react\";\nimport HtmlParseComponent from \"../htmlParsingComponent\";\n\ninterface FormatTextProps {\n    text: any;\n    dataType: any;\n}\nexport const FormatText: React.FC<FormatTextProps> = ({ text, dataType }) => {\n\n    const renderText = (dataType: string)=>{\n        switch (dataType){\n            case 'text':\n                return text;\n            case 'richText':\n                return <HtmlParseComponent richText={text} />; \n            default:\n                return text;\n\n        }\n    }\n\n    return (<> {renderText(dataType)} </>);\n    \n\n}","export default function getType(\n    dataType:any,\n    fieldName: string\n  ) {\n    let valueDataType =\"text\";\n    if(dataType && fieldName) {\n        dataType.forEach((data:any)=>{\n            if(data.fieldName === fieldName){\n                valueDataType = data.schema || data.fieldType;\n            }\n        })\n    }\n    return valueDataType;\n  }","import React, { useState } from \"react\";\nimport { IonRow, IonCol, IonCard } from \"@ionic/react\";\nimport ReactPlayer from \"react-player\";\nimport { FormatText } from \"../FormatTextComponent/formatText\";\nimport getType from \"../../../pages/Menu/GetDataType\";\nimport { getNetworkStatus } from \"app/selectors/selector\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\n\ninterface IAccordion {\n  groupData: any;\n  dataType: any;\n  isNetworkAvailable: boolean;\n}\nconst CardContent: React.FC<IAccordion> = ({\n  groupData,\n  dataType,\n  isNetworkAvailable\n}) => {\n  const [youtubePlay, setYoutubePlay] = useState(false);\n  const videoPlay = () => {\n    setYoutubePlay(!youtubePlay);\n  };\n  let valueDataType = \"text\";\n  const getDataType = (fieldName: string) => {\n    if (dataType && dataType.length) {\n      valueDataType = getType(dataType, fieldName);\n    } else {\n      valueDataType = \"text\";\n    }\n\n    return valueDataType;\n  };\n\n  return (\n    <>\n      <IonRow data-test=\"IonRow-Menu\" class=\"list_row\">\n        <IonCol size=\"12\" class=\"list_column\">\n          <IonRow>\n            <IonCol class=\"list_row_heading\">\n              <FormatText\n                text={groupData.title}\n                dataType={getDataType(\"title\")}\n              />\n            </IonCol>\n          </IonRow>\n          <IonRow>\n            <IonCol class=\"list_row_description\">\n              {groupData.richTextDescription ? (\n                <FormatText\n                  text={groupData.richTextDescription}\n                  dataType={getDataType(\"richTextDescription\")}\n                />\n              ) : (\n                <FormatText\n                  text={groupData.description}\n                  dataType={getDataType(\"description\")}\n                />\n              )}\n            </IonCol>\n          </IonRow>\n        </IonCol>\n        {groupData.video ? (\n          <IonCol>\n            {groupData.video.href && isNetworkAvailable ? (\n              <IonCard className=\"react-player-card\" onClick={videoPlay}>\n                <ReactPlayer\n                  width=\"100%\"\n                  height=\"300px\"\n                  className=\"react-player\"\n                  url={groupData.video.href}\n                  playing={youtubePlay}\n                  controls={true}\n                  volume={0.5}\n                />\n              </IonCard>\n            ) : groupData.video.href && !isNetworkAvailable ? (\n              <a href={groupData.video.href}>{groupData.video.href}</a>\n            ) : null}\n          </IonCol>\n        ) : null}\n      </IonRow>\n    </>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isNetworkAvailable: getNetworkStatus()\n});\n\nconst withConnect = connect(mapStateToProps);\n\nexport default compose(withConnect)(CardContent);\nexport { CardContent };\n","import { createSelector } from \"reselect\";\nimport { initialMenuState } from \"./../../reducers/Menu/reducer\";\n\nconst selectData = (state: any) => state.Menu || initialMenuState;\n\nexport const makeSubmitFeedback = () =>\n  createSelector(\n    [selectData],\n    Menu => Menu.submitFeedback || initialMenuState.submitFeedback\n  );\n","import { IsubmitFeedback } from \"../../schemas/Menu/Menu.Schema\";\n\nexport class Feedback {\n\n    constructor() {\n    }\n\n        private __submit_feedback: IsubmitFeedback = {\n            upn: \"\",\n            rating: 0\n        };\n\n    get upn() {\n        return this.__submit_feedback.upn;\n    }\n    set upn(value) {\n        if (value) {\n            this.__submit_feedback.upn = value;\n        }\n    }\n    get carrierId() {\n        return this.__submit_feedback.carrierId;\n    }\n    set carrierId(value) {\n        if (value) {\n            this.__submit_feedback.carrierId = value;\n        }\n    }\n    get carrierName() {\n        return this.__submit_feedback.carrierName;\n    }\n    set carrierName(value) {\n        if (value) {\n            this.__submit_feedback.carrierName = value;\n        }\n    }\n    get rating() {\n        return this.__submit_feedback.rating;\n    }\n    set rating(value) {\n        if (value) {\n            this.__submit_feedback.rating = value;\n        }\n    }\n    get feedback() {\n        return this.__submit_feedback.feedback;\n    }\n    set feedback(value) {\n        if (value) {\n            this.__submit_feedback.feedback = value;\n        }\n    }\n    get firstName() {\n        return this.__submit_feedback.firstName;\n    }\n    set firstName(value) {\n        if (value) {\n            this.__submit_feedback.firstName = value;\n        }\n    }\n    get lastName() {\n        return this.__submit_feedback.lastName;\n    }\n    set lastName(value) {\n        if (value) {\n            this.__submit_feedback.lastName = value;\n        }\n    }\n    get appVersion() {\n        return this.__submit_feedback.appVersion;\n    }\n    set appVersion(value) {\n        if (value) {\n            this.__submit_feedback.appVersion = value;\n        }\n    }\n    get devicePlatform() {\n        return this.__submit_feedback.devicePlatform;\n    }\n    set devicePlatform(value) {\n        if (value) {\n            this.__submit_feedback.devicePlatform = value;\n        }\n    }\n    get deviceOSVersion() {\n        return this.__submit_feedback.deviceOSVersion;\n    }\n    set deviceOSVersion(value) {\n        if (value) {\n            this.__submit_feedback.deviceOSVersion = value;\n        }\n    }\n    get deviceManufacturer() {\n        return this.__submit_feedback.deviceManufacturer;\n    }\n    set deviceManufacturer(value) {\n        if (value) {\n            this.__submit_feedback.deviceManufacturer = value;\n        }\n    }\n    get deviceModel() {\n        return this.__submit_feedback.deviceModel;\n    }\n    set deviceModel(value) {\n        if (value) {\n            this.__submit_feedback.deviceModel = value;\n        }\n    }\n    get deviceUUID() {\n        return this.__submit_feedback.deviceUUID;\n    }\n    set deviceUUID(value) {\n        if (value) {\n            this.__submit_feedback.deviceUUID = value;\n        }\n    }\n\n    getRequestPayload() {\n        return {\n           mutation: {\n                feedback: {\n                    __args: {\n                        input: this.__submit_feedback\n                    }\n                }\n            }\n        }\n    }\n}","import React, { PureComponent } from \"react\";\nimport {\n  IonImg,\n  IonRow,\n  IonCol,\n  IonButton,\n  IonGrid,\n  isPlatform,\n  IonTextarea,\n  IonAlert,\n} from \"@ionic/react\";\nimport StarRatingComponent from \"react-star-rating-component\";\nimport \"./Feedback.scss\";\nimport { Market } from \"@ionic-native/market\";\nimport { Plugins } from '@capacitor/core';\nimport * as Constants from \"../../../utils/constants\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { submitFeedback } from \"../../../actions/Menu/action\";\nimport { makeSubmitFeedback } from \"../../../selectors/Menu/selector\";\nimport { Device } from \"@capacitor/core\";\nimport { AppVersion } from \"@ionic-enterprise/app-version\";\nimport {\n  getUserDetails,\n  getLoading,\n  getNetworkStatus,\n} from \"../../../selectors/selector\";\n\nimport { compose } from \"redux\";\nimport useInjectSaga from \"../../../utils/injectSaga\";\nimport useInjectReducer from \"../../../utils/injectReducer\";\nimport reducer from \"../../../reducers/Menu/reducer\";\nimport saga from \"../../../saga/Menu/saga\";\nimport { Feedback } from \"../../../models/home/Menu.model\";\nimport { ToastMessage } from \"../../../utils/ToastMessage\";\nimport { showAlert } from \"app/actions/App/action\";\nimport {\n  deviceModel,\n  manufacturer,\n  operationSystem,\n  osVersion,\n} from \"app/utils/helper\";\n\nconst key = \"Menu\";\nconst { Browser } = Plugins;\n\nexport class FeedbackComponent extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      rating: 0,\n      feedback: \"\",\n      isShowModal: false,\n      isShowPopup: false,\n    };\n    this.onStarClick = this.onStarClick.bind(this);\n  }\n  onStarClick(nextValue: any, prevValue: any, name: string) {\n    this.setState({ rating: nextValue });\n  }\n\n  onSubmitFeedbackClick = async () => {\n    const deviceInfo = isPlatform(\"capacitor\") ? await Device.getInfo() : \"\";\n    const appVersionNumber = isPlatform(\"capacitor\")\n      ? await AppVersion.getVersionNumber()\n      : \"\";\n    let __model: Feedback = new Feedback();\n    __model.appVersion = isPlatform(\"capacitor\") ? appVersionNumber : \"\";\n    __model.upn = this.props.userDetails.userPrincipalName;\n    __model.deviceUUID = isPlatform(\"capacitor\")\n      ? deviceInfo && deviceInfo.uuid\n      : \"\";\n    __model.carrierId = this.props.userDetails.carrierId;\n    __model.carrierName = this.props.userDetails.companyName;\n    __model.rating = this.state.rating;\n    __model.feedback = this.state.feedback;\n    __model.firstName = this.props.userDetails.firstName;\n    __model.lastName = this.props.userDetails.lastName;\n    __model.devicePlatform = isPlatform(\"capacitor\") ? operationSystem() : \"\";\n    __model.deviceManufacturer = isPlatform(\"capacitor\") ? manufacturer() : \"\";\n    __model.deviceOSVersion = isPlatform(\"capacitor\")\n      ? `${operationSystem()} ${osVersion()}`\n      : \"\";\n    __model.deviceModel = isPlatform(\"capacitor\") ? deviceModel() : \"\";\n    this.props.submitFeedback(\n      __model.getRequestPayload(),\n      this.feedBackCallback\n    );\n  };\n  feedBackCallback = () => {\n    if (\n      this.props &&\n      this.props.submitFeedbackCall &&\n      this.props.submitFeedbackCall.data &&\n      this.props.submitFeedbackCall.data.feedback === true &&\n      this.state.isShowPopup\n    ) {\n      this.setState({ isShowModal: false, rating: 0 });\n    } else {\n      this.setState({ isShowModal: true });\n    }\n  };\n\n  feedbackHandler = (event: any) => {\n    this.setState({ [event.target.name]: event.target.value });\n    if (event.target.name === \"feedback\") {\n      this.setState({ feedback: event.target.value });\n    }\n  };\n\n  notNowButtonClick = () => {\n    this.props.notNowClick();\n    this.setState({ isShowPopup: true });\n    this.onSubmitFeedbackClick();\n  };\n\n  onSureClick = async () => {\n    if (!this.props.isNetworkAvailable) {\n      this.props.showAlert({\n        isShowAlert: true,\n        alertMessage: Constants.PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n        alertTitle: Constants.NO_NEWORK,\n      });\n      return;\n    }\n    \n    if (isPlatform(\"ios\")) {\n      await Browser.open({ url: 'itms-apps://itunes.apple.com/app/id1250562051' });\n    } else if (isPlatform(\"android\")) {\n      await Browser.open({ url: 'market://details?id=com.schneider.compass' });\n      // Market.open(\"com.schneider.compass\").then((response:any) => {\n      //   console.log(response);\n      // }).catch((error:any) => {\n      //   ToastMessage.show(error);\n      // });\n    }\n  };\n  render() {\n    const { rating } = this.state;\n\n    return (\n      <div className=\"feedbackDiv\" data-test=\"Feedback-div\">\n        <IonAlert\n          isOpen={this.state.isShowModal}\n          message={`We value your feedback and strive to improve your FrieghtPower experience.`}\n          backdropDismiss\n          mode=\"ios\"\n          header=\"Thank you for your feedback!\"\n          onDidPresent={() =>\n            setTimeout(\n              () => (\n                this.setState({ rating: 0, isShowModal: false, feedback: \"\" }),\n                this.props.notNowClick()\n              ),\n              2000\n            )\n          }\n        />\n        <IonGrid className=\"feedback-grid\">\n          <p className=\"feedback-p notLikely\">{Constants.NOT_LIKELY}</p>\n          <p className=\"feedback-p likely\">{Constants.VERY_LIKELY}</p>\n          <IonRow className=\"feedback-row\">\n            <IonCol className=\"feedback-column\">\n              <StarRatingComponent\n                name=\"rate1\"\n                starCount={5}\n                value={rating}\n                onStarClick={this.onStarClick}\n                starColor={\"#FF6114\"}\n                className=\"starRating\"\n                renderStarIcon={(index: any, value: any) => (\n                  <IonImg\n                    className={\n                      index == 5 ? \"starRatingIcon4\" : \"starRatingIcon\"\n                    }\n                    alt=\"Star\"\n                    src={\n                      index <= value\n                        ? \"assets/icon/star-color.svg \"\n                        : \"assets/icon/load-star.svg\"\n                    }\n                  ></IonImg>\n                )}\n              />\n            </IonCol>\n          </IonRow>\n        </IonGrid>\n        {rating == 0 ? null : (\n          <>\n            {isPlatform(\"mobile\") ? (\n              rating <= 3 && rating >= 1 ? (\n                <IonGrid className=\"starRating-grid\">\n                  <p className=\"feedbackImprove\">\n                    {Constants.IMPROVING_SERVICE}\n                  </p>\n                  <IonGrid className=\"text-div\">\n                    <IonTextarea\n                      maxlength={2000}\n                      placeholder=\"Start typing here\"\n                      onIonChange={(e) => this.feedbackHandler(e)}\n                      name=\"feedback\"\n                      value={this.state.feedback}\n                    ></IonTextarea>\n                  </IonGrid>\n                  <IonRow className=\"submitBtn-row\">\n                    <IonCol className=\"feedback-cancel\">\n                      <IonButton\n                        data-test=\"cancel-button-mobile\"\n                        data-kind=\"primary\"\n                        expand=\"block\"\n                        type=\"submit\"\n                        class=\"submit_btn\"\n                        onClick={() => {\n                          this.setState({ rating: 0 });\n                        }}\n                      >\n                        Cancel\n                      </IonButton>\n                    </IonCol>\n                    <IonCol>\n                      <IonButton\n                        data-test=\"submit-button-mobile\"\n                        data-kind=\"primary\"\n                        expand=\"block\"\n                        type=\"submit\"\n                        class=\"submit_btn\"\n                        onClick={() => {\n                          this.setState({ isShowPopup: false });\n                          this.onSubmitFeedbackClick();\n                        }}\n                      >\n                        Submit\n                      </IonButton>\n                    </IonCol>\n                  </IonRow>\n                </IonGrid>\n              ) : (\n                <IonGrid className=\"review-grid\">\n                  <p className=\"starRating-p review-p\">\n                    {Constants.GOOD_RATING}\n                  </p>\n                  <p className=\"starRating-p appStore-p\">\n                    {Constants.APPSTORE_REVIEW}\n                  </p>\n                  <IonRow className=\"starRating-row\">\n                    <IonCol className=\"starRating-col\">\n                      <IonButton\n                        data-kind=\"primary\"\n                        data-test=\"notNow-button\"\n                        onClick={() => this.notNowButtonClick()}\n                        type=\"submit\"\n                        class=\"call_btn\"\n                      >\n                        Not now\n                      </IonButton>\n                    </IonCol>\n                    <IonCol>\n                      <IonButton\n                        data-test=\"sureOnClick\"\n                        data-kind=\"primary\"\n                        type=\"submit\"\n                        class=\"call_btn\"\n                        onClick={() => this.onSureClick()}\n                      >\n                        Sure\n                      </IonButton>\n                    </IonCol>\n                  </IonRow>\n                </IonGrid>\n              )\n            ) : (\n              <IonGrid className=\"starRating-grid\">\n                {rating <= 3 && rating >= 1 ? (\n                  <p className=\"feedbackImprove\">\n                    {Constants.IMPROVING_SERVICE}\n                  </p>\n                ) : (\n                  <p className=\"feedbackImprove\">{Constants.MORE_FEEDBACK}</p>\n                )}\n                <IonGrid className=\"text-div\">\n                  <IonTextarea\n                    maxlength={2000}\n                    placeholder=\"Start typing here\"\n                    onIonChange={(e) => this.feedbackHandler(e)}\n                    name=\"feedback\"\n                    value={this.state.feedback}\n                  ></IonTextarea>\n                </IonGrid>\n                <IonRow className=\"submitBtn-row\">\n                  <IonCol className=\"feedback-cancel\">\n                    <IonButton\n                      data-test=\"cancel-button\"\n                      data-kind=\"primary\"\n                      expand=\"block\"\n                      type=\"submit\"\n                      class=\"submit_btn\"\n                      onClick={() => {\n                        this.setState({ rating: 0 });\n                      }}\n                    >\n                      Cancel\n                    </IonButton>\n                  </IonCol>\n                  <IonCol>\n                    <IonButton\n                      data-test=\"submit-button\"\n                      data-kind=\"primary\"\n                      expand=\"block\"\n                      type=\"submit\"\n                      class=\"submit_btn\"\n                      onClick={() => this.onSubmitFeedbackClick()}\n                    >\n                      Submit\n                    </IonButton>\n                  </IonCol>\n                </IonRow>\n              </IonGrid>\n            )}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  submitFeedbackCall: makeSubmitFeedback(),\n  userDetails: getUserDetails(),\n  isLoading: getLoading(),\n  isNetworkAvailable: getNetworkStatus(),\n});\n\nexport const mapDispatchToProps = (dispatch: Function) => ({\n  submitFeedback: (data: any, callback: Function) =>\n    dispatch(submitFeedback(data, callback)),\n  showAlert: (data: any) => dispatch(showAlert(data)),\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nconst withReducer = useInjectReducer({ key, reducer });\nconst withSaga = useInjectSaga({ key, saga });\n\nexport default compose<any>(\n  withConnect,\n  withReducer,\n  withSaga\n)(React.memo(FeedbackComponent));\n","import React, { useState } from \"react\";\nimport {\n  IonCardHeader,\n  IonImg,\n  IonCardContent,\n  IonRow,\n  IonCol\n} from \"@ionic/react\";\nimport CardContent from \"./cardContent\";\nimport { FormatText } from \"../FormatTextComponent/formatText\";\nimport getType from \"../GetDataType\";\nimport FeedbackComponent from \"../SubmitFeedback/Feedback\";\n\ninterface FAQAccordionProps {\n  contextData: any;\n  dataType: any;\n}\nexport const Accordion: React.FC<FAQAccordionProps> = ({\n  contextData,\n  dataType\n}) => {\n  const [isShowContent, setIsShowContent] = useState<Boolean>(true);\n  let valueDataType: string = \"text\";\n  const onCardHeaderClick = () => {\n    setIsShowContent(!isShowContent);\n  };\n  const getDataType = (fieldName: string) => {\n    if (dataType && dataType.length) {\n      valueDataType = getType(dataType, fieldName);\n    } else {\n      valueDataType = \"text\";\n    }\n    return valueDataType;\n  };\n  return (\n    <>\n      <IonCardHeader\n        data-test=\"IonCardHeader-Menu\"\n        class=\"accordion_header\"\n        onClick={onCardHeaderClick}\n      >\n        <IonRow>\n          <IonCol className=\"title-col\" size=\"10\">\n            <FormatText\n              text={contextData.title}\n              dataType={getDataType(\"title\")}\n            />\n          </IonCol>\n          <IonCol size=\"2\">\n            {\" \"}\n            {isShowContent ? (\n              <IonImg src=\"assets/icon/plus.svg\" className=\"plus-icon\"></IonImg>\n            ) : (\n              <IonImg\n                src=\"assets/icon/minus-icon.svg\"\n                className=\"plus-icon\"\n              ></IonImg>\n            )}\n          </IonCol>\n        </IonRow>\n      </IonCardHeader>\n      <IonCardContent class={isShowContent ? \"fadeout\" : \"fadein\"}>\n        {contextData && contextData.richTextDescription ? (\n          <div className=\"description-div\">\n            <FormatText\n              text={contextData.richTextDescription}\n              dataType={getDataType(\"richTextDescription\")}\n            />\n            {contextData.title.includes(\"Feedback for the App\") ? (\n              <FeedbackComponent notNowClick={onCardHeaderClick} />\n            ) : null}{\" \"}\n          </div>\n        ) : (\n          contextData &&\n          contextData.group &&\n          contextData.group.map((groupData: any, index: number) => (\n            <CardContent\n              data-test=\"card-content\"\n              key={index}\n              groupData={groupData}\n              dataType={getDataType(\"group\")}\n            />\n          ))\n        )}\n      </IonCardContent>\n    </>\n  );\n};\n","\n\nimport React, { Component, useState } from 'react';\nimport AppHeader from '../../../components/app/Bars/Bar-header';\nimport { IonContent, IonPage, IonCard } from '@ionic/react';\nimport '../Menu.page.scss';\nimport { Accordion } from './Accordion';\nimport { HtmlParseComponent } from '../htmlParsingComponent';\nimport getType from '../GetDataType';\n\nexport class CommonMenuPage extends Component<any, any> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            isRichText: true\n        }\n      }\n    \n    render() {\n        let contextData;\n        let type:any;\n        const entries = this.props &&\n            this.props.history &&\n            this.props.history.location &&\n            this.props.history.location.state &&\n            this.props.history.location.state.contextData &&\n            this.props.history.location.state.contextData;\n        if (entries && entries.sections) {\n            contextData = entries && entries.sections;\n            type = getType(entries.dataTypes, \"sections\");\n        } else if (entries && entries.group) {\n            contextData = entries && entries.group;\n            type = getType(entries.dataTypes, \"group\");\n        }\n        const url = this.props.match.url;\n        const module = this.props.match.params[0];\n        const menuHeading = this.props && this.props.history && this.props.history.location && this.props.history.location.state && this.props.history.location.state.heading;\n        return (\n            <IonPage data-test=\"IonPage-Menu\" className={url === \"/app/more/FrequentlyAskedQuestions\" ? 'desktop-page-faq' : 'desktop-page-menu'}>\n                <AppHeader title={menuHeading} backUrl={\"/app/\" + module} isSearch={true} tab={module} History={this.props.history} />\n                <IonContent class=\"ion-padding menu_list_page_content\">\n                    {entries && entries.richText ? <HtmlParseComponent richText={entries.richText} isRichText={this.state.isRichText}/> : contextData && contextData.map((detailList: any, index: number) =>\n                        <IonCard key={index} class=\"ion-card\" >\n                            <Accordion contextData={detailList} dataType={type}/>\n                        </IonCard>\n                    )}\n                </IonContent>\n            </IonPage>\n        );\n    }\n}\nexport default CommonMenuPage;","import React from 'react';\nimport AppHeader from '../../../components/app/Bars/Bar-header';\nimport './DeviceInfo.scss';\nimport { IonPage, IonContent, IonItem, IonList, IonRow, IonCol, isPlatform } from '@ionic/react';\nimport { DeviceInfo } from '@capacitor/core';\nimport { Device } from '@ionic-enterprise/device';\nimport { APPLE_DEVICES } from '../../../utils/constants';\nimport { deviceModel, manufacturerForAndroid, operationSystem, osVersion } from 'app/utils/helper';\n\nexport interface IDeviceInfo {\n    deviceInfo: {\n        name: string;\n        versionNumber: string;\n    }[];\n    history: any;\n    match: any;\n}\n\ninterface IDeviceModel {\n    identifier: string;\n    generation: string;\n}\n\nexport const DeviceInfoPage: React.FunctionComponent<IDeviceInfo> = (props: IDeviceInfo) => {\n\n    const module = props.match.params[0];\n    // const deviceInfo: DeviceInfo = props && props.history && props.history.location && props.history.location.state && props.history.location.state.deviceInfo;\n    const appVersion: String = props && props.history && props.history.location && props.history.location.state && props.history.location.state.appVersion;\n\n    // const deviceModel: IDeviceModel | undefined = APPLE_DEVICES.find((device) => device.identifier === Device.model);\n    // const manufacturer: string = isPlatform('android') ? Device.manufacturer : \"\";\n\n\n    return (\n        <>\n            <IonPage data-test=\"IonPage-deviceInfo\" className=\"desktop-page-faq\">\n                <AppHeader title=\"Device Info\" backUrl={\"/app/\" + module} History={props.history} />\n                <IonContent class=\"ion-padding menu_page_content\">\n                    <IonList>\n                        <IonItem className=\"deviceInfo-item\" >\n                            <IonRow className=\"deviceInfo-row\">\n                                <IonCol size=\"8\" className=\"deviceInfo-col\">\n                                    <p className=\"deviceInfo-p\">Application Version Number</p>\n                                </IonCol>\n                                <IonCol size=\"4\" className=\"deviceInfo-col\"><p className=\"deviceInfo-p deviceInfo-version\">{appVersion}</p></IonCol>\n                            </IonRow>\n\n                        </IonItem>\n                        <IonItem className=\"deviceInfo-item\" >\n                            <IonRow className=\"deviceInfo-row\">\n                                <IonCol size=\"8\" className=\"deviceInfo-col\">\n                                    <p className=\"deviceInfo-p\">Device Version</p>\n                                </IonCol>\n                                <IonCol size=\"4\" className=\"deviceInfo-col\"><p className=\"deviceInfo-p deviceInfo-version\">{operationSystem()} {osVersion()}</p></IonCol>\n                            </IonRow>\n\n                        </IonItem>\n                        <IonItem className=\"deviceInfo-item\" >\n                            <IonRow className=\"deviceInfo-row\">\n                                <IonCol size=\"8\" className=\"deviceInfo-col\">\n                                    <p className=\"deviceInfo-p\">Model Number</p>\n                                </IonCol>\n                                <IonCol size=\"4\" className=\"deviceInfo-col\"><p className=\"deviceInfo-p deviceInfo-version\">{manufacturerForAndroid()} {deviceModel()}</p></IonCol>\n                            </IonRow>\n\n                        </IonItem>\n                    </IonList>\n                </IonContent>\n            </IonPage>\n        </>\n    );\n}\nexport default DeviceInfoPage;","\nimport React, { useEffect } from 'react';\nimport { IonContent, IonList, IonRow, IonCol, IonLabel, IonInput, IonImg, IonGrid, IonItem, IonText, IonPage, IonButton } from '@ionic/react';\nimport { IonImage } from '../../../components/app/Manage';\nimport AppHeader from '../../../components/app/Bars/Bar-header'\nimport { getApplicationInfo, logEvent } from '../../../utils/Analytics';\nimport { EVENT, SCREEN } from '../../../utils/constants';\nimport { rolesList } from './ManageUserUtil';\n\nconst ManageUserProfileDesktopPage = (props:any) => {\n    const { selectedUser, history, isNetworkAvailable, showNetworkAlert, isEditable = true, isSelf = false } = props;\n\n\tuseEffect(() => {\n\t\t// Analytics implementation\n        logEvent(EVENT.SV_VIEW_MY_PROFILE,\n        {\n            screen: SCREEN.MY_PROFILE,\n            carrierId: selectedUser.carrierId\n        });\n\t}, []);\n\n\tconst roles = selectedUser && selectedUser.roles && selectedUser.roles.map((role: any) => {\n\t\tconst selectedOption = rolesList.find((option: any) => option.value === role);\n\t\treturn selectedOption ? selectedOption.name : '';\n\t}).join(' and ') || '';\n\tconst userProfile: Array<any> = selectedUser ? [\n\t\t{\n\t\t\tlabel: \"First Name\",\n\t\t\tvalue: selectedUser.firstName\n\t\t},\n\t\t{\n\t\t\tlabel: \"Last Name\",\n\t\t\tvalue: selectedUser.lastName\n\t\t},\n\t\t{\n\t\t\tlabel: \"Email Address\",\n\t\t\tvalue: selectedUser.email\n\t\t},\n\t\t{\n\t\t\tlabel: \"Mobile Number\",\n\t\t\tvalue: selectedUser.mobileNumber\n\t\t},\n\t\t{\n\t\t\tlabel: \"Role(s)\",\n\t\t\tvalue: roles\n\t\t},\n\t\t{\n\t\t\tlabel: \"Carrier ID\",\n\t\t\tvalue: selectedUser.carrierId\n\t\t},\n\t] : [];\n\n    return (\n        <IonPage className=\"desktop-page my-load-desktop-page manage-card-content manage-user-profile-desktop\">\n            <AppHeader\n                title=\"Manage\"\n            />\n            <IonContent class=\"custom-padding\">\n                <h1>User Details</h1>\n                {\n                    !isSelf && selectedUser ? (\n                        <IonGrid>\n                            <IonRow>\n                                <IonCol size=\"12\">\n                                    <div className=\"manage-user-profile-header\">\n                                        <IonImage firstName={selectedUser.firstName} lastName={selectedUser.lastName} big />\n                                        <h4>{selectedUser.firstName} {selectedUser.lastName}</h4>\n                                    </div>\n                                </IonCol>\n                            </IonRow>\n                        </IonGrid>\n                    ) : null\n                }\n                <div className=\"manage-users-wrapper\">\n                    <IonList>\n                        {\n                            userProfile.map((profile:any) => (\n                                <IonItem className=\"profile-item\" key={profile.label}>\n                                    <IonLabel className=\"profile-label\" position=\"floating\" mode=\"ios\">{profile.label}</IonLabel>\n                                    <IonInput\n                                        value={profile.value}\n                                        readonly\n                                        type=\"text\"\n                                        class=\"profile-input\"\n                                    ></IonInput>\n                                </IonItem>\n                            ))\n                        }\n                    </IonList>\n                </div>\n                <div className=\"manage-user-buttons\">\n                    <IonGrid class=\"btn-row-grid\">\n                        <IonRow\n                            className='btn-row'\n                        >\n                            <IonCol>\n                                <IonButton class=\"load-btn\" data-test=\"back-btn\" onClick={() => history.push('/app/manage')}>\n                                    Back\n                                </IonButton>\n                            </IonCol>\n                            <IonCol>\n                                <IonButton class=\"load-btn\" data-test=\"edit-btn\" onClick={() => history.push('/app/manage/ManageUser/Profile/edit')}>\n                                    Edit\n                                </IonButton>\n                            </IonCol>\n                        </IonRow>\n                    </IonGrid>\n                </div>\n            </IonContent>\n        </IonPage>\n    );\n} \nexport default ManageUserProfileDesktopPage;","import React from 'react';\nimport {ManageUserProfilePage} from '../../../pages/Manage/ManageUser';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { getUserDetails, getNetworkStatus } from '../../../selectors/selector';\nimport { getSelectedManageUser } from '../../../selectors/Manage/selector';\nimport { showNetworkAlert } from '../../../actions/App/action';\nimport { isPlatform } from '@ionic/react';\nimport ManageUserProfileDesktopPage from '../../../pages/Manage/ManageUser/ManageUserProfileDesktop.page';\n\n\nexport const ManageUserProfileContainer: React.FC<any> = (props: any) => {\n    return isPlatform('desktop') ? <ManageUserProfileDesktopPage {...props} module=\"manage/ManageUser\" /> :(<ManageUserProfilePage {...props} module=\"manage/ManageUser\" />);\n}\n\nconst mapStateToProps = createStructuredSelector({\n    userDetails: getUserDetails(),\n    selectedUser: getSelectedManageUser(),\n    isNetworkAvailable: getNetworkStatus()\n});\n\nexport const mapDispatchToProps = (dispatch: Function) => ({\n    showNetworkAlert: () => dispatch(showNetworkAlert()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageUserProfileContainer);\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { isPlatform } from '@ionic/react';\nimport { ManageUserProfileFormPage } from '../../../pages/Manage/ManageUser';\nimport { getUserDetails, getNetworkStatus } from '../../../selectors/selector';\nimport { isUserValidated, getValidateUserDetails } from '../../../selectors/Manage/selector';\nimport { showNetworkAlert } from '../../../actions/App/action';\nimport {\n  addUserDetails,\n  validateUser,\n  validateUserReset,\n  transferUser\n} from '../../../actions/manage/action';\nimport { UserDetails } from '../../../models/userPforile/userProfile.modal';\nimport { ToastMessage } from '../../../utils/ToastMessage';\nimport {\n  OOPS_MESSAGE,\n  MANAGE_USER_SUCCESS_MESSAGE,\n} from '../../../utils/constants';\nimport { backToPage, handleTransfer, PATH, userProfileModel } from './ManageUserUtil';\n\nexport const ManageUserProfileAddContainer: React.FC<any> = (props: any) => {\n  const {\n    history: { push }\n  } = props;\n\n  const handleSubmit = (payload: any, restData: Function) => {\n    const query = userProfileModel.addUser(payload);\n    const callback = (success = false) => {\n      if (success) {\n        restData();\n        ToastMessage.show(MANAGE_USER_SUCCESS_MESSAGE);\n        backToPage(props);\n        return true;\n      }\n      ToastMessage.show(OOPS_MESSAGE);\n    };\n    props.addUserAction({ query, callback });\n  };\n\n  \n\n  return (\n    <ManageUserProfileFormPage\n      {...props}\n      selectedUser={null}\n      module={PATH}\n      handleSubmit={handleSubmit}\n      handleTransfer={handleTransfer(props)}\n    />\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  userDetails: getUserDetails(),\n  isNetworkAvailable: getNetworkStatus(),\n  isUserValid: isUserValidated(),\n  validateUserDetails: getValidateUserDetails()\n});\n\nexport const mapDispatchToProps = (dispatch: Function) => ({\n  showNetworkAlert: () => dispatch(showNetworkAlert()),\n  validateUserAction: (payload: any) => dispatch(validateUser(payload)),\n  addUserAction: (payload: any) => dispatch(addUserDetails(payload)),\n  resetValidateUser: () => dispatch(validateUserReset()),\n  transferUserAction: (payload: any) => dispatch(transferUser(payload))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageUserProfileAddContainer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { ManageUserProfileFormPage } from '../../../pages/Manage/ManageUser';\nimport { getUserDetails, getNetworkStatus } from '../../../selectors/selector';\nimport { getSelectedManageUser } from '../../../selectors/Manage/selector';\nimport { showNetworkAlert } from '../../../actions/App/action';\nimport { editUserDetails, removeUserDetails } from '../../../actions/manage/action';\nimport { handleDelink, handleUpdateSubmit } from './ManageUserUtil';\n\nexport const ManageUserProfileEditContainer: React.FC<any> = (props: any) => {\n  return (\n    <ManageUserProfileFormPage\n      {...props}\n      handleSubmit={handleUpdateSubmit(props, true)}\n      handleDelink={handleDelink({...props})}\n      module=\"manage/ManageUser/Profile\"\n    />\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  userDetails: getUserDetails(),\n  selectedUser: getSelectedManageUser(),\n  isNetworkAvailable: getNetworkStatus()\n});\n\nexport const mapDispatchToProps = (dispatch: Function) => ({\n  showNetworkAlert: () => dispatch(showNetworkAlert()),\n  updateUserAction: (payload: any) => dispatch(editUserDetails(payload)),\n  delinkUserAction: (payload: any) => dispatch(removeUserDetails(payload))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageUserProfileEditContainer);\n","import React, { Component } from 'react';\nimport './carrierAssignedDropDown.scss';\nimport { IonRow, IonCol, IonModal } from '@ionic/react';\n\nimport { ToastMessage } from '../../../utils/ToastMessage';\n\nclass CarrierAssignedDropdown extends Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      isDropdown: false,\n      asc: true,\n      slectedValue: this.props.options.filter((opt: any) => {\n        return opt.myLoadRouting.indexOf(this.props.page) > 0;\n      })[0]\n    };\n  }\n\n  onConfrim = (option: any): void => {\n    const { redirect } = this.props;\n    this.setState({ isDropdown: false }, () => {\n      if (option.myLoadRouting === '' || option.myLoadRouting === '/app/MyLoad/LocationTracker') {\n        // Functionality coming soon\n        ToastMessage.show();\n      } else {\n        redirect(option.myLoadRouting);\n      }\n    });\n  };\n\n  dropdownClick = (): void => {\n    this.setState({ isDropdown: true });\n  };\n\n  render() {\n    const { options, loadsCount } = this.props;\n    const { slectedValue, isDropdown } = this.state;\n    return (\n      <>\n        <div>\n          <div className=\"carrier_select\">\n            <div onClick={this.dropdownClick} className=\"search_sort_button\" data-test=\"dropdown\">\n              <p className=\"page-title-p\">{slectedValue.title}</p>\n            </div>\n            <i onClick={this.dropdownClick} className=\"down\"></i>\n          </div>\n\n          <IonModal\n            isOpen={isDropdown}\n            cssClass=\"dropdown-modal\"\n            backdropDismiss={false}\n            onDidDismiss={() => {\n              this.setState({\n                isDropdown: false\n              });\n            }}>\n            <div className=\"modal-div\" onClick={() => this.setState({ isDropdown: false })}>\n              <div className=\"search_options_carrier\">\n                {options.map((option: any, key: any) => (\n                  <IonRow\n                    className=\"carrier-dropdown\"\n                    key={key}\n                    onClick={() => {\n                      this.onConfrim(option);\n                    }}>\n                    <IonCol size=\"10\">{option.title}</IonCol>\n                    <IonCol size=\"2\">\n                      {option.title === 'Manage Financial' ? (\n                        ' '\n                      ) : (\n                        <div className={loadsCount[option.count] ? 'count-div circle-div2' : ''}>\n                          {loadsCount[option.count] && loadsCount[option.count] > 99\n                            ? 99\n                            : loadsCount[option.count] || ''}\n                        </div>\n                      )}\n                    </IonCol>\n                  </IonRow>\n                ))}\n              </div>\n            </div>\n          </IonModal>\n        </div>\n      </>\n    );\n  }\n}\nexport default CarrierAssignedDropdown;\n","import React, { useState, useEffect } from 'react';\nimport { IonGrid, IonModal, IonIcon, IonRow, IonCol, isPlatform } from '@ionic/react';\nimport './carrierAssignFilter.scss';\nimport { MODULES } from '../../../utils/constants';\n\nexport const DriverNameFilter = (props: any) => {\n  const allDriver = 'All Driver';\n  const allDrivers = 'All Drivers';\n  const [showList, setShowList] = useState(false);\n  const [dispalyText, setDisplayText] = useState(allDrivers);\n  const [selected, setSelected] = useState(allDriver);\n  const [chosed, setChosed] = useState(allDriver);\n  const [count, setCount] = useState(props.data ? props.data.length : 0);\n  const [filterCriteria, setFilterCriteria] = useState([\n    { moduleName: MODULES.DRIVER_ASSIGNED_MODULE, option: allDriver },\n    { moduleName: MODULES.INTRANSIT_MODULE, option: allDriver },\n    { moduleName: MODULES.RECENTLY_DELIVERED_MODULE, option: allDriver }\n  ]);\n  let filteredByDriver = props.data;\n  // to display the selected driver name and filter data accordingly\n  const onNameselect = (driver: any): void => {\n    let displayName = '';\n    setShowList(false);\n    if (driver === allDriver) {\n      displayName = allDrivers;\n      setDisplayText(allDrivers);\n    } else if (driver === 'Unknown') {\n      displayName = 'Unknown';\n      if (isPlatform('mobile')) {\n        setDisplayText('Assigned to Unknown');\n      } else {\n        setDisplayText('Unknown');\n      }\n      filteredByDriver = props.data.filter((record: any) => {\n        if (\n          props.module !== MODULES.DRIVER_ASSIGNED_MODULE ||\n          (props.module === MODULES.DRIVER_ASSIGNED_MODULE &&\n            record.driverAssignmentStatus === true)\n        ) {\n          if (record.shipmentInvolvedParties.length > 0) {\n            const involvedParties = record.shipmentInvolvedParties.find((party: any) => {\n              return party.partyType === 'PRIMARY DRIVER';\n            });\n            if (involvedParties) {\n              if (involvedParties.partyName === null) {\n                return true;\n              }\n            } else {\n              return true;\n            }\n          } else {\n            return true;\n          }\n        }\n        if (\n          props.module === MODULES.DRIVER_ASSIGNED_MODULE &&\n          record.driverAssignmentStatus === false\n        ) {\n          const driverName =\n            record.assignmentTransaction &&\n            record.assignmentTransaction[0] &&\n            record.assignmentTransaction[0].driverName;\n\n          return driverName === null;\n        }\n      });\n    } else {\n      displayName = driver.slice(0, driver.indexOf(' '));\n\n      if (isPlatform('mobile')) {\n        setDisplayText(`Assigned to ${displayName}`);\n      } else {\n        setDisplayText(displayName);\n      }\n      filteredByDriver = props.data.filter((record: any) => {\n        if (\n          props.module !== MODULES.DRIVER_ASSIGNED_MODULE ||\n          (props.module === MODULES.DRIVER_ASSIGNED_MODULE &&\n            record.driverAssignmentStatus === true)\n        ) {\n          return record.shipmentInvolvedParties.find((party: any) => {\n            return party.partyName === driver && party.partyType === 'PRIMARY DRIVER';\n          });\n        }\n        if (\n          props.module === MODULES.DRIVER_ASSIGNED_MODULE &&\n          record.driverAssignmentStatus === false\n        ) {\n          const driverName =\n            record.assignmentTransaction &&\n            record.assignmentTransaction[0] &&\n            record.assignmentTransaction[0].driverName;\n\n          return driverName === driver;\n        }\n      });\n    }\n    props.onSelect(filteredByDriver, displayName);\n    setCount(filteredByDriver.length);\n  };\n  useEffect(() => {\n    if (props.data) {\n      const curentModule = filterCriteria.find((obj: any) => {\n        return obj.moduleName === props.module;\n      });\n      const option = curentModule ? curentModule.option : allDriver;\n      onNameselect(option);\n    }\n    // setCount(props.data ? props.data.length : 0)\n  }, [JSON.stringify(props.data), props.module]);\n  useEffect(() => {\n    if (isPlatform('desktop')) {\n      if (props.segmentName === 'Driver Assigned' || props.segmentName === 'Loads Assigned') {\n        setDisplayText(props.filteredDriverNameD);\n      }\n      if (props.segmentName === 'In-Transit') {\n        setDisplayText(props.filteredDriverNameI);\n      }\n    }\n  }, [props.segmentName]);\n\n  const func = (): void => {\n    setSelected(chosed);\n    onNameselect(chosed);\n    const newFilterCriteria = [...filterCriteria];\n    newFilterCriteria.forEach((obj: any) => {\n      if (obj.moduleName === props.module) obj.option = chosed;\n    });\n    setFilterCriteria(newFilterCriteria);\n  };\n  return (\n    <>\n      {isPlatform('mobile') ? (\n        <IonGrid class=\"display-text-grid\">\n          {dispalyText} ({count})\n          <IonIcon src=\"assets/icon/filter.svg\" onClick={() => setShowList(true)} />\n        </IonGrid>\n      ) : (\n        <IonRow class=\"display-text-grid-desktop\">\n          <IonCol class=\"count-col\" size=\"6\">\n            {props.countText}\n          </IonCol>\n          <IonCol class=\"filter-col\" size=\"6\">\n            {dispalyText}\n            <IonIcon src=\"assets/icon/filter.svg\" onClick={() => setShowList(true)} />\n          </IonCol>\n        </IonRow>\n      )}\n      <IonModal isOpen={showList} cssClass=\"dropdown-modal\" onDidDismiss={() => setShowList(false)}>\n        {/* <div  className=\"modal-div\" onClick={() => (setShowList(false))}> */}\n        <div className=\"search_options\">\n          <IonRow class=\"dropdown-heading\">\n            <IonCol>\n              <p className=\"sortBy_text\">Filter by</p>\n            </IonCol>\n          </IonRow>\n          {props.driverNameList.map((option: any, k: any) => (\n            <IonRow className=\"dropdown-row\" key={k} onClick={() => setChosed(option)}>\n              <IonCol class={option === chosed ? 'checked' : ''}>\n                {option} <i className=\"check\"></i>\n              </IonCol>\n            </IonRow>\n          ))}\n          <IonRow class=\"dropdown-handler\">\n            <IonCol size=\"1\" />\n            <IonCol\n              size=\"5\"\n              className=\"dropdown_cancel\"\n              onClick={() => {\n                setShowList(false);\n                setChosed(selected);\n              }}>\n              <span>Cancel</span>\n            </IonCol>\n            <IonCol size=\"5\" className=\"dropdown_cancel\" onClick={func}>\n              <span>OK</span>\n            </IonCol>\n            <IonCol size=\"1\" />\n          </IonRow>\n        </div>\n        {/* </div> */}\n      </IonModal>\n    </>\n  );\n};\nexport default DriverNameFilter;\n","export default function sortLoads(data: any[]) {\n  data = data.slice();\n  const noLoadStopArray: any[] = data.filter((record: any)=>{\n    return record.loadStop && record.loadStop.length === 0;\n  });\n  let loadStopArray: any[] = data.filter((record: any)=>{\n    return record.loadStop && record.loadStop.length > 0;\n  });\n  loadStopArray.sort((load1: any, load2: any) => {\n    const loadA = sortedLoadStops(load1.loadStop || []);\n    const loadB = sortedLoadStops(load2.loadStop || []);\n    const loadAFromTime = getAppointmentTime(loadA[0]);\n    const loadBFromTime = getAppointmentTime(loadB[0]);\n\n    if (loadA.length > 0 && loadB.length > 0) {\n      const shipmentId1: string = load1.shipmentId;\n      const shipmentId2: string = load2.shipmentId;\n      let shipmentSortValue: number = 0;\n      if (shipmentId1 < shipmentId2) {\n        shipmentSortValue = -1;\n      }\n      if (shipmentId1 > shipmentId2) {\n        shipmentSortValue = 1;\n      }\n\n      if (\n        loadAFromTime &&\n        loadBFromTime\n      ) {\n        const dateLoadA = loadAFromTime;\n        const dateLoadB = loadBFromTime;\n        return dateLoadA > dateLoadB\n          ? 1\n          : dateLoadA < dateLoadB\n          ? -1\n          : shipmentSortValue;\n      } else if (\n        loadAFromTime &&\n        !!!loadBFromTime\n      ) {\n        return -1;\n      } else if (\n        !!!loadAFromTime &&\n        loadBFromTime\n      ) {\n        return 1;\n      } else {\n        return 1;\n      }\n    } else if (loadA.length > 0 && loadB.length === 0) {\n      return 1;\n    } else if (loadA.length === 0 && loadB.length > 0) {\n      return -1;\n    } else {\n      noLoadStopArray.push(load1);\n      return -1;\n    }\n  });\n  if (noLoadStopArray.length > 0) {\n    loadStopArray = loadStopArray.concat(noLoadStopArray);\n  }\n  return loadStopArray;\n}\n\nconst sortedLoadStops = (sortedLoadStops: any[]) =>\n  sortedLoadStops.slice().sort((load1: any, load2: any) => {\n    if (load1.sequenceNo && load2.sequenceNo) {\n      return load1.sequenceNo - load2.sequenceNo;\n    } else if (load1.stopSequence && load2.stopSequence) {\n      return load1.stopSequence - load2.stopSequence;\n    } else {\n      return 0;\n    }\n  });\n\nconst getAppointmentTime = (stop: any) =>{\n    let fromTime = \"\";\n    if(stop.appointmentEarlyDateTime){\n      fromTime = stop.appointmentEarlyDateTime;\n    } else if(stop.actualETADateTime){\n      fromTime = stop.actualETADateTime;\n    } else if(stop.plannedEtaDateTime){\n      fromTime = stop.plannedEtaDateTime;\n    }\n    return fromTime;\n}","import {\n  IonContent,\n  IonPage,\n  IonList,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonLoading\n} from \"@ionic/react\";\nimport { toastController } from \"@ionic/core\";\nimport React, { Component } from \"react\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport AppHeader from \"../../../components/app/Bars/Bar-header\";\nimport { Loads } from \"../../../components/app/home/Loads\";\nimport { LoadTile } from \"../../../components/app/home/Load-Tile\";\nimport \"./CarrierAssigned.scss\";\nimport CarrierAssignedDropdown from \"../../../components/shared/carrierAssignedDropDown/carrierAssignedDropDown\";\nimport DriverNameFilter from \"../../../components/shared/CarrierAssignFilter/DriverNameFilter\";\nimport {\n  makeMyLoadCardData,\n  getCount\n} from \"../../../selectors/Myload/selector\";\nimport { IONICWrapper, isEntitled } from \"../../../utils/common\";\nimport {\n  getRefreshStatus,\n  getNetworkStatus\n} from \"../../../selectors/selector\";\nimport PullToRefresh from \"../../../components/PullToRefresh/PullToRefresh\";\nimport {\n  shipmentForStartTrip,\n  shipmentForStartTripTimestamp\n} from \"../../../actions/carrierAssign/action\";\nimport sortLoads from \"../../../utils/getSortedLoads\";\nimport { GetShipment } from \"../../../models/home/GetShipment.model\";\nimport { buyLoadShipmentRequest } from \"../../../actions/BookLoad/action\";\nimport {\n  ExecutionStatus,\n  MODULES,\n  EVENT,\n  SCREEN\n} from \"../../../utils/constants\";\nimport { getApplicationInfo, logEvent } from \"../../../utils/Analytics\";\nimport { clearUpdateStopInformationResponse } from \"app/actions/myload/action\";\n\nexport class CarrierAssignedPage extends Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      isMyLoad: true,\n      actualData: [],\n      filteredData: [],\n      selectedLoad: null\n    };\n  }\n\n  componentDidMount() {\n    const loads = sortLoads(this.props.loads);\n    this.setState({\n      filteredData: loads,\n      actualData: loads\n    });\n    // Analytics implementation\n    this.sendAnalyticsEvent(\n      this.props.subModule,\n      this.props.userDetails.carrierId\n    );\n  }\n\n  componentDidUpdate(prevProps: any, prevState: any) {\n    if (\n      JSON.stringify(this.props.loads) !== JSON.stringify(prevProps.loads) ||\n      JSON.stringify(prevState.filteredData) !==\n        JSON.stringify(this.state.filteredData)\n    ) {\n      let { filteredData } = this.state;\n      if (\n        this.props.subModule === MODULES.CARRIER_ASSIGNED_MODULE ||\n        !isEntitled(\"myLoad\", \"carrierAssigned\")\n      ) {\n        filteredData = this.props.loads;\n      } else {\n        filteredData = this.state.filteredData;\n      }\n      const loads = sortLoads(filteredData);\n      this.setState({\n        filteredData: loads,\n        actualData: this.props.loads\n      });\n    }\n  }\n\n  /**\n   * Send Analytics Event base on screen\n   * * @param {*} pageName, carrierId\n   * @returns null.\n   */\n  sendAnalyticsEvent = (pageName: string, carrierId: any) => {\n    let event: string;\n    let screen: string;\n    let event1 = \"\";\n    let screen1 = \"\";\n    switch (pageName) {\n      case MODULES.CARRIER_ASSIGNED_MODULE:\n        event = EVENT.SV_VIEW_CARRIER_ASSIGNED;\n        screen = SCREEN.MYLOADS_CARRIER_ASSIGNED;\n        break;\n      case MODULES.DRIVER_ASSIGNED_MODULE:\n        event = EVENT.SV_ASSIGN_DRIVER;\n        screen = SCREEN.MYLOADS_DRIVER_ASSIGNMENT;\n        event1 = EVENT.SV_VIEW_DRIVER_ASSIGNED;\n        screen1 = SCREEN.MYLOADS_DRIVER_ASSIGNED;\n        break;\n      case MODULES.INTRANSIT_MODULE:\n        event = EVENT.SV_VIEW_IN_TRANSIT;\n        screen = SCREEN.MYLOADS_IN_TRANSIT;\n        break;\n      case MODULES.RECENTLY_DELIVERED_MODULE:\n        event = EVENT.SV_VIEW_RECENTLY_DEL;\n        screen = SCREEN.MYLOADS_RECENTLY_DEL;\n        break;\n      default:\n        return;\n    }\n    logEvent(event, {\n      screen,\n      carrierId\n    });\n\n    if (event1 !== \"\") {\n      logEvent(event1, {\n        screen: screen1,\n        carrierId\n      });\n    }\n  };\n\n  showToaster = async () => {\n    const toast = await toastController.create({\n      color: \"dark\",\n      duration: 300,\n      message: \"Driver Assigned.\",\n      mode: \"md\",\n      cssClass: \"driver-assign-confrim\"\n    });\n    await toast.present();\n    await toast.dismiss(this.props.chnageValue());\n  };\n\n  selectDriver = (e: any, loadDetails: any) => {\n    e.preventDefault();\n    if (this.props.isInPullToRefresh) return 0; // Pull to Refresh in Process prevent Assign driver Functionality.\n    if (this.props.buttonName === \"Assign Driver\") {\n      this.props.AssignDriverbtn(loadDetails);\n    }\n  };\n\n  filterByDriver = (filteredData: any) => {\n    if (isEntitled(\"myLoad\", \"carrierAssigned\")) {\n      this.setState({ filteredData });\n    }\n  };\n\n  // redirect to selected page\n  redirect = (url: string) => {\n    if (url) {\n      this.props.history.push(url);\n    }\n  };\n\n  startTripOk = async () => {\n    const DriverAssignedStartTrip = this.props.subModule;\n    const { selectedLoad } = this.state;\n    let isUserCarrierDriver = false;\n    let isGPStrackingDisabled = false;\n    await IONICWrapper.details.auth.user.roles.forEach(\n      async (role: any, count: any) => {\n        if (role === \"carrierDriver\") {\n          isUserCarrierDriver = true;\n        }\n      }\n    );\n    if (!isUserCarrierDriver) {\n      isGPStrackingDisabled = true;\n    }\n    this.props.setShipmentForStartTrip(selectedLoad);\n    this.setState({ isStartTrip: false, selectedLoad: null }, () =>\n      this.props.history.push({\n        pathname: `/app/MyLoad/shipmentUpdateScreen/${selectedLoad.shipmentId}`,\n        state: {\n          isCurrentLocationOn: isGPStrackingDisabled,\n          isLocation: false,\n          module: DriverAssignedStartTrip,\n          withGPS: true,\n          startTripShipment: selectedLoad,\n          moduleName: \"INTRANSIT\"\n        }\n      })\n    );\n  };\n\n  dismissSortingLoader = () => {\n    this.setState({ isSorting: false });\n  };\n\n  /*\n   * fetch the all shipment details while hitting the load for load details or execution page\n   * @data - existing shipment details\n   */\n  getShipmentDetails = (data: any): any => {\n    const shipmentId = (data && data.shipmentId) || \"\";\n    const getShipmentmodel: GetShipment = new GetShipment();\n    const module = this.props.subModule;\n    getShipmentmodel.shipmentIds = shipmentId;\n    this.props.buyLoadShipmentRequest({\n      query: getShipmentmodel.getRequestShipmentPayload(),\n      shipmentId,\n      module,\n      isPullToRefresh: false\n    });\n    if (\n      this.props.subModule === MODULES.INTRANSIT_MODULE ||\n      (data &&\n        data.executionStatus === ExecutionStatus.STARTED &&\n        this.props.subModule === MODULES.DRIVER_ASSIGNED_MODULE) ||\n      this.props.subModule === MODULES.RECENTLY_DELIVERED_MODULE\n    ) {\n      this.setState({ isStartTrip: true, selectedLoad: data }, () => {\n        this.startTripOk();\n      });\n    } else {\n      this.props.history.push(`/app/${this.props.subModule}/${shipmentId}`);\n    }\n    this.props.clearUpdateStopInfo();\n  };\n\n  render() {\n    if (this.props.getToasterValue) {\n      this.showToaster();\n    }\n    // conditionally pass value to dropdown\n    const [...myLoadCard] = this.props.myLoadCard;\n\n    return (\n      <>\n        <IonLoading\n          isOpen={this.state.isSorting}\n          onDidDismiss={this.dismissSortingLoader}\n        />\n        <IonPage className=\"desktop-page carrier-assign-page\">\n          <AppHeader\n            title=\"My Loads\"\n            isMyLoad={this.state.isMyLoad}\n            backUrl={`/app/${this.props.module}`}\n            History={this.props.history}\n          />\n          <IonContent className=\"carrierAssignedContent\">\n            <PullToRefresh\n              onPullToRefresh={this.props.getLoads}\n              status={this.props.isInPullToRefresh}\n            />\n\n            <IonGrid class=\"sub-header-grid\">\n              <IonRow class=\"sub-header-row\">\n                <IonCol class=\"count-col\">\n                  {this.props.showFilter ? (\n                    <DriverNameFilter\n                      data={this.state.actualData}\n                      driverNameList={this.props.driverNameList}\n                      onSelect={this.filterByDriver}\n                      module={this.props.subModule}\n                    />\n                  ) : (\n                    <>\n                      {this.state.actualData && this.state.actualData.length}\n                      {isEntitled(\"myLoad\", \"driverLoads\") ? (\n                        <>\n                          {this.props.subModule === \"MyLoad/DriverAssigned\" ? (\n                            <> Assigned</>\n                          ) : (\n                            <>\n                              {this.props.subModule === \"MyLoad/InTransit\" ? (\n                                <> In-Transit</>\n                              ) : (\n                                <>\n                                  {\" \"}\n                                  {this.state.actualData &&\n                                  this.state.actualData.length <= 1\n                                    ? \"Load\"\n                                    : \"Loads\"}\n                                </>\n                              )}\n                            </>\n                          )}\n                        </>\n                      ) : (\n                        <> Assigned</>\n                      )}\n                    </>\n                  )}\n                </IonCol>\n                <IonCol class=\"dropdown-col\">\n                  <CarrierAssignedDropdown\n                    options={myLoadCard}\n                    page={this.props.subModule}\n                    redirect={this.redirect}\n                    loadsCount={this.props.myLoadCount}\n                  />\n                </IonCol>\n              </IonRow>\n            </IonGrid>\n            <Loads segmentName=\"\" loads={this.state.filteredData}>\n              {({ loads }: { loads?: any }) => {\n                return (\n                  <IonList className=\"loadTilePad\">\n                    {loads &&\n                      loads.map((load: any, index: number) => (\n                        <LoadTile\n                          key={index}\n                          {...load}\n                          module={this.props.subModule}\n                          onButtonClick={(e: any) => this.selectDriver(e, load)}\n                          isCarrier\n                          isButtonHidden={this.props.isButtonHidden}\n                          buttonName={this.props.buttonName}\n                          showInitial={this.props.showInitial}\n                          isCarrierLoad\n                          shipmentLoad={load}\n                          showAlert={this.props.showAlert}\n                          isNetworkAvailable={this.props.isNetworkAvailable}\n                          onRowCallback={(selectedLoad: any) => {\n                            this.getShipmentDetails(selectedLoad);\n                          }}\n                          showLoadNo={true}\n                          data-test=\"LoadTile\"\n                        />\n                      ))}\n                  </IonList>\n                );\n              }}\n            </Loads>\n            <div className=\"end-of-list\">End of list</div>\n          </IonContent>\n        </IonPage>\n      </>\n    );\n  }\n}\nconst mapStateToProps = createStructuredSelector({\n  myLoadCard: makeMyLoadCardData(),\n  myLoadCount: getCount(),\n  isInPullToRefresh: getRefreshStatus(),\n  isNetworkAvailable: getNetworkStatus()\n});\n\nexport const mapDispatchToProps = (dispatch: Function) => ({\n  setShipmentForStartTrip: (data: any) => {\n    dispatch(shipmentForStartTrip(data));\n    dispatch(shipmentForStartTripTimestamp(new Date().getTime().toString()));\n  },\n  buyLoadShipmentRequest: (payload: any) =>\n    dispatch(buyLoadShipmentRequest(payload)),\n  clearUpdateStopInfo: () => dispatch(clearUpdateStopInformationResponse())\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nexport default compose(withConnect)(CarrierAssignedPage);\n","import { MODULES } from \"./constants\";\n\nexport default function driverNames(data: any, module: string) {\n  let driverNameList =\n    (data &&\n      data.map((record: any) => {\n        let name = [];\n        if (\n          module !== MODULES.DRIVER_ASSIGNED_MODULE ||\n          (module === MODULES.DRIVER_ASSIGNED_MODULE &&\n            record.driverAssignmentStatus === true)\n        ) {\n          name =\n            record.shipmentInvolvedParties &&\n            record.shipmentInvolvedParties.find((data: any) => {\n              return data.partyType === \"PRIMARY DRIVER\";\n            });\n        }\n        if (\n          module === MODULES.DRIVER_ASSIGNED_MODULE &&\n          record.driverAssignmentStatus === false\n        ) {\n          name =\n          record.assignmentTransaction &&\n          record.assignmentTransaction[0];\n        }\n        return (name && name.partyName !== null && name.partyName) || (name && name.driverName !== null && name.driverName) || null;\n      })) ||\n    [];\n\n  return [\n    ...driverNameList.filter((item: any, pos: any) => {\n      return driverNameList.indexOf(item) === pos && item != null;\n    }),\n    \"All Driver\",\n    \"Unknown\"\n  ];\n}\n","import { IonContent, IonPage, IonGrid, IonImg, IonModal } from \"@ionic/react\";\nimport React, { Component } from \"react\";\nimport AppHeader from \"../../components/app/Bars/Bar-header\";\nimport \"./MyloadCommonPage.page.scss\";\nimport { DriverModal } from \"../../pages/Execute/CarrierAssigned/DriverModalDesktop\";\nimport DataTableComponent from \"../../components/shared/dataTableComponent/data-tabel.page\";\nimport { formatedData } from \"../../utils/formatData\";\nimport DriverNameFilter from \"../../components/shared/CarrierAssignFilter/DriverNameFilter\";\nimport { DriverList } from \"../../models/home/CarrierAssign.model\";\nimport {\n  PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n  NO_NEWORK,\n  MODULES,\n  EVENT,\n  SCREEN,\n  OFFLINE_MODE_STATE\n} from \"../../utils/constants\";\nimport { CarrierAssignedModal } from \"../../containers/ExecuteContainer/CarrierAssignedModal/CarrierAssignedModal\";\nimport driverNames from \"../../utils/getDriverNameList\";\nimport sortLoads from \"../../utils/getSortedLoads\";\nimport { getApplicationInfo, logEvent } from \"../../utils/Analytics\";\nimport { GetShipment } from \"../../models/home/GetShipment.model\";\n\nclass MyloadPage extends Component<any, any> {\n  segmentName: any;\n\n  _model = new DriverList();\n\n  segments = this.props.segment;\n\n  titleText: any;\n\n  loads: any;\n\n  actualLoad: any;\n\n  state = {\n    segment: { name: this.props.currentSegment },\n    isDriverModal: false,\n    popupHeader: false,\n    data: [],\n    openAssignDriverDialog: false,\n    driverDetails: {},\n    loadDetails: {},\n    driverAFilterData: [],\n    isDriverFiltered: false,\n    inTranistFilterData: [],\n    isTranistFiltered: false,\n    deliveredFilterData: [],\n    deliveredFiltered: false,\n    filteredDriverNameD: \"All Driver\",\n    filteredDriverNameI: \"All Driver\",\n    filteredDriverName: \"All Driver\",\n    module: \"\"\n  };\n\n  columns = [\n    {\n      name: \"Origin\",\n      selector: \"origin_city\",\n      sortable: false,\n      style: {\n        fontWeight: 600,\n        fontSize: 14,\n        colorName: \"#000000\"\n      }\n    },\n    {\n      name: \"Origin Date\",\n      selector: \"origin_from_date\",\n      sortable: false,\n      minWidth: \"123px\"\n    },\n    {\n      name: \"DH-O\",\n      selector: \"origin_deadhead\",\n      sortable: false\n    },\n    {\n      name: \"Origin Load Type\",\n      selector: \"origin_load_type\",\n      sortable: false\n    },\n    {\n      name: \"Destination\",\n      selector: \"destination_city\",\n      sortable: false,\n      style: {\n        fontWeight: 600,\n        fontSize: 14,\n        colorName: \"#000000\"\n      }\n    },\n    {\n      name: \"Destination Date\",\n      selector: \"destination_from_date\",\n      minWidth: \"123px\",\n      sortable: false\n    },\n    {\n      name: \"DH-D\",\n      selector: \"destination_deadhead\",\n      sortable: false\n    },\n    {\n      name: \"Destination Load Type\",\n      selector: \"destination_load_type\",\n      sortable: false\n    },\n    {\n      name: \"Trailer Type\",\n      selector: \"trailer\",\n      sortable: false\n    },\n    {\n      name: \"\",\n      selector: \"\",\n      sortable: false,\n      width: \"50px\",\n      cell: (row: any) =>\n        this.state.segment.name ===\n        \"Carrier Assigned\" ? null : row.driverName ? (\n          <IonGrid className=\"driver-name-grid\">{row.driverName}</IonGrid>\n          ) : null\n    },\n    {\n      name: \"\",\n      selector: \"\",\n      sortable: false,\n      width: \"50px\",\n      cell: (row: any) =>\n        this.state.segment.name === \"Carrier Assigned\" ? (\n          <IonImg\n            onClick={() => this.selectDriver(row)}\n            src=\"assets/icon/add-user-icon-desktop.svg\"\n            class=\"assign-icon\"\n          />\n        ) : (\n          <IonImg src=\"assets/icon/re-assign-desktop.svg\" class=\"assign-icon\" />\n        )\n    },\n    {\n      name: \"\",\n      selector: \"\",\n      sortable: false,\n      width: \"50px\",\n      cell: (row: any) =>\n        this.props.pageName === \"loadDetails\" ? (\n          \"\"\n        ) : (\n          <IonGrid class=\"datatable-badge\">\n            <i></i>\n          </IonGrid>\n        )\n    }\n  ];\n\n  selectDriver = (row: any) => {\n    this.props.AssignDriver(this._model.getRequestPayload());\n    this.setState({ isDriverModal: true, popupHeader: true });\n    const loadDetails = this.loads.filter((load: any) => {\n      return load.shipmentId === row.loadId;\n    });\n    this.setState({ loadDetails: loadDetails && loadDetails[0] });\n  };\n\n  closeDriverModal = () => {\n    this.setState({ isDriverModal: false });\n  };\n\n  redirect = (load: any) => {\n    if (this.props.isNetworkAvailable || OFFLINE_MODE_STATE) {\n      let pageName = this.state.segment.name.replace(/\\s/g, \"\");\n      if (pageName === \"LoadsAssigned\") {\n        pageName = \"DriverAssigned\";\n      }\n      if (pageName === \"In-Transit\") {\n        pageName = \"InTransit\";\n      }\n      if (pageName === \"RecentlyDeliveredLoads\") {\n        pageName = \"Delivered\";\n      }\n      this.props.history.push(`${pageName}/${load.loadId}`);\n      if (this.props.buyLoadShipmentRequest) {\n        const __getShipmentmodel: GetShipment = new GetShipment();\n        const { module } = this.state;\n        __getShipmentmodel.shipmentIds = load.loadId;\n        this.props.buyLoadShipmentRequest({\n          query: __getShipmentmodel.getRequestShipmentPayload(),\n          shipmentId: load.loadId,\n          module,\n          isPullToRefresh: false\n        });\n      }\n    } else {\n      this.props.showAlert({\n        isShowAlert: true,\n        alertMessage: PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n        alertTitle: NO_NEWORK\n      });\n    }\n  };\n\n  filterByDriver = (filteredData: any, dispalyText: string) => {\n    if (\n      this.state.segment.name === \"Driver Assigned\" ||\n      this.state.segment.name === \"Loads Assigned\"\n    ) {\n      this.setState(\n        {\n          driverAFilterData: filteredData,\n          isDriverFiltered: true,\n          filteredDriverNameD: dispalyText\n        },\n        this.getRelatedLoads\n      );\n    }\n    if (this.state.segment.name === \"In-Transit\") {\n      this.setState(\n        {\n          inTranistFilterData: filteredData,\n          isTranistFiltered: true,\n          filteredDriverNameI: dispalyText\n        },\n        this.getRelatedLoads\n      );\n    }\n    if (this.state.segment.name === \"Recently Delivered Loads\") {\n      this.setState(\n        {\n          deliveredFilterData: filteredData,\n          deliveredFiltered: true,\n          filteredDriverName: dispalyText\n        },\n        this.getRelatedLoads\n      );\n    }\n  };\n\n  componentDidMount = () => {\n    this.getRelatedLoads();\n    this.getModuleName();\n  };\n\n  componentDidUpdate = (prevProps: any, prevState: any) => {\n    if (prevProps.currentSegment !== this.props.currentSegment) {\n      this.setState({ segment: { name: this.props.currentSegment } });\n    }\n    if (\n      JSON.stringify(prevState.segment) !== JSON.stringify(this.state.segment)\n    ) {\n      this.getModuleName();\n    }\n  };\n\n  getModuleName = () => {\n    const pageName = this.state.segment.name.replace(/\\s/g, \"\");\n    let module = \"\";\n    if (pageName === \"LoadsAssigned\" || pageName === \"DriverAssigned\") {\n      module = MODULES.DRIVER_ASSIGNED_MODULE;\n    }\n    if (pageName === \"In-Transit\") {\n      module = MODULES.INTRANSIT_MODULE;\n    }\n    if (pageName === \"RecentlyDeliveredLoads\") {\n      module = MODULES.RECENTLY_DELIVERED_MODULE;\n    }\n    this.setState({ module });\n  };\n\n  getRelatedLoads = () => {\n    if (this.state.segment.name === \"Carrier Assigned\") {\n      this.loads = this.props.loads;\n      this.titleText = (\n        <>\n          {this.loads && this.loads.length > 99 ? 99 : this.loads.length} Loads\n          Assigned\n        </>\n      );\n    } else if (\n      this.state.segment.name === \"Driver Assigned\" ||\n      this.state.segment.name === \"Loads Assigned\"\n    ) {\n      this.loads = this.state.isDriverFiltered\n        ? this.state.driverAFilterData\n        : this.props.driverAssigned;\n      this.actualLoad = this.props.driverAssigned;\n      this.getSubHeader(\"Loads Assigned\", this.state.segment.name);\n      // Analytics implementation\n      logEvent(EVENT.UE_BOOK_SUCCESS, {\n        screen: SCREEN.LOAD_DETAILS_RATE,\n        loadId: this.props.loadId,\n        carrierId: this.props.userDetails.carrierId,\n        lead: \"searched\" // TODO \"<\"recommended\" or \"watched\" or \"searched\">\"\n      });\n    } else if (this.state.segment.name === \"In-Transit\") {\n      this.loads = this.state.isTranistFiltered\n        ? this.state.inTranistFilterData\n        : this.props.inTransitLoads;\n      this.actualLoad = this.props.inTransitLoads;\n      this.getSubHeader(\"Loads In-Transit\", this.state.segment.name);\n    } else if (this.state.segment.name === \"Recently Delivered Loads\") {\n      this.loads = this.state.deliveredFiltered\n        ? this.state.deliveredFilterData\n        : this.props.deliveredLoads;\n      this.actualLoad = this.props.deliveredLoads;\n      this.getSubHeader(\"Loads Delivered\", this.state.segment.name);\n    } else {\n      this.loads = [];\n      this.titleText = \"\";\n    }\n    this.getFormatedLoads(this.loads);\n  };\n\n  getSubHeader = (countText: string, segmentName: string) => {\n    const driverNameList: any = driverNames(this.actualLoad, this.state.module);\n    this.titleText = (\n      <DriverNameFilter\n        data={this.actualLoad}\n        driverNameList={driverNameList}\n        onSelect={this.filterByDriver}\n        countText={\n          this.loads && this.loads.length > 99\n            ? 99\n            : `${this.loads.length} ${countText}`\n        }\n        segmentName={segmentName}\n        filteredDriverNameI={this.state.filteredDriverNameI}\n        filteredDriverNameD={this.state.filteredDriverNameD}\n        filteredDriverName={this.state.filteredDriverName}\n        module={this.state.module}\n      />\n    );\n  };\n\n  getFormatedLoads = (load: any) => {\n    load = sortLoads(load);\n    load = load && load.length > 99 ? load.slice(0, 99) : load;\n    const data = load\n      ? formatedData(\n        load,\n        \"appointmentEarlyDateTime\",\n        \"appointmentLateDateTime\",\n        \"shipmentId\",\n        \"equipmentType\",\n        true\n      )\n      : [];\n    this.setState({ data });\n  };\n\n  render() {\n    return (\n      <IonPage className=\"desktop-page my-load-desktop-page\">\n        <AppHeader\n          title=\"My Loads\"\n          segments={this.segments}\n          getSegment={(e: any) =>\n            this.setState(\n              { segment: { name: e.detail.value as any } },\n              this.getRelatedLoads\n            )\n          }\n          activeSegment={this.state.segment && this.state.segment.name}\n          isMyLoad\n        />\n        <IonContent className=\"my-load-desktop-content\">\n          <DataTableComponent\n            columns={this.columns}\n            data={this.state.data}\n            showEndofList\n            showHeader={false}\n            titleText={this.titleText}\n            pagination\n            redirect={this.redirect}\n          />\n          <IonModal\n            isOpen={this.state.isDriverModal}\n            cssClass=\"Driver-list-modal\"\n          >\n            <DriverModal\n              popupHeader={this.state.popupHeader}\n              closeModal={() => this.closeDriverModal()}\n              DesktopDriverList={this.props.driverList}\n              {...this.props}\n              showAssignDriverDialog={(isShow: boolean, driverDetails: any) => {\n                this.setState({\n                  openAssignDriverDialog: isShow,\n                  driverDetails,\n                  isDriverModal: isShow ? false : this.state.isDriverModal\n                });\n              }}\n            />\n          </IonModal>\n          <CarrierAssignedModal\n            isOpen={this.state.openAssignDriverDialog}\n            onDismiss={() => {\n              this.setState({\n                openAssignDriverDialog: false\n              });\n            }}\n            loadDetails={this.state.loadDetails}\n            driverDetails={this.state.driverDetails}\n            showDriverDialog={(isOpen: boolean) => {\n              this.setState({ isDriverModal: isOpen });\n            }}\n          />\n        </IonContent>\n      </IonPage>\n    );\n  }\n}\nexport default MyloadPage;\n","import React, { Component } from 'react';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport MyloadPage from '../../../pages/Execute/MyloadCommonPage.page';\nimport {\n  getCarrierLoads,\n  getAssignedLoads,\n  getInTransitLoad,\n  getDeliveredLoad,\n  getDriverList\n} from '../../../selectors/carrierAssign/selector';\nimport useInjectSaga from '../../../utils/injectSaga';\nimport useInjectReducer from '../../../utils/injectReducer';\nimport { AssignDriver } from '../../../actions/carrierAssign/action';\n\nimport saga from '../../../saga/CarrierAssign/saga';\nimport reducer from '../../../reducers/carrierAssign/reducer';\nimport { DriverList } from '../../../models/home/CarrierAssign.model';\nimport { isEntitled } from '../../../utils/common';\n\nimport { makeMyLoadCardData, getCarrierLoad } from '../../../selectors/Myload/selector';\nimport { getUserDetails } from '../../../selectors/selector';\nimport { buyLoadShipmentRequest } from '../../../actions/BookLoad/action';\n\nconst key = 'carrierAssigned';\nclass MyloadSectionContainer extends Component<any, any> {\n  state = {\n    shipmentId: '',\n    pageName: ''\n  };\n\n  segment: string[] = [];\n\n  AssignDriverBtn = () => {\n    if (this.props.userDetails && this.props.userDetails.carrierId) {\n      const modelList: DriverList = new DriverList();\n      modelList.carrierId = this.props.userDetails.carrierId;\n      modelList.role = 'carrierDriver';\n      this.props.AssignDriver(modelList.getRequestPayload());\n    }\n  };\n\n  componentDidMount = () => {\n    this.props.myLoadCard.forEach((element: any) => {\n      this.segment.push(element.title);\n    });\n  };\n\n  componentDidUpdate = (prevProps: any) => {\n    if (\n      JSON.stringify(prevProps.loadDetails) !== JSON.stringify(this.props.loadDetails) &&\n      this.props.loadDetails.length > 0\n    ) {\n      this.props.history.push(`${this.state.pageName}/${this.state.shipmentId}`);\n    }\n  };\n\n  render() {\n    const pathName = this.props.history.location.pathname;\n    const currentSegment = pathName.slice(pathName.lastIndexOf('/') + 1);\n    let segmentName = '';\n    switch (currentSegment) {\n      case 'CarrierAssigned':\n        segmentName = 'Carrier Assigned';\n        break;\n      case 'DriverAssigned':\n        if (isEntitled('myLoad', 'driverLoads')) {\n          segmentName = 'Loads Assigned';\n        } else {\n          segmentName = 'Driver Assigned';\n        }\n        break;\n      case 'InTransit':\n        segmentName = 'In-Transit';\n        break;\n      case 'Delivered':\n        segmentName = 'Recently Delivered Loads';\n        break;\n      default:\n        segmentName = 'Carrier Assigned';\n    }\n    return (\n      <MyloadPage\n        {...this.props}\n        AssignDriver={this.AssignDriverBtn}\n        driverList={\n          this.props.desktopDriverList &&\n          this.props.desktopDriverList.data &&\n          this.props.desktopDriverList.data.getMembers\n        }\n        segment={this.segment}\n        currentSegment={segmentName}\n      />\n    );\n  }\n}\nconst mapStateToProps = createStructuredSelector({\n  loads: getCarrierLoads(),\n  desktopDriverList: getDriverList(),\n  driverAssigned: getAssignedLoads(),\n  myLoadCard: makeMyLoadCardData(),\n  userDetails: getUserDetails(),\n  inTransitLoads: getInTransitLoad(),\n  deliveredLoads: getDeliveredLoad(),\n  loadDetails: getCarrierLoad()\n});\n\nexport const mapDispatchToProps = (dispatch: Function) => ({\n  buyLoadShipmentRequest: (payload: any) => dispatch(buyLoadShipmentRequest(payload)),\n  AssignDriver: (data: any) => dispatch(AssignDriver(data))\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nconst withReducer = useInjectReducer({ key, reducer });\nconst withSaga = useInjectSaga({ key, saga });\n\nexport default compose(withSaga, withReducer, withConnect)(MyloadSectionContainer);\nexport { MyloadSectionContainer };\n","import React, { PureComponent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { isPlatform } from \"@ionic/react\";\nimport useInjectSaga from \"../../../utils/injectSaga\";\nimport useInjectReducer from \"../../../utils/injectReducer\";\nimport saga from \"../../../saga/CarrierAssign/saga\";\nimport {\n  getLoading,\n  getUserDetails,\n  getNetworkStatus\n} from \"../../../selectors/selector\";\nimport CarrierAssignedPage from \"../../../pages/Execute/CarrierAssigned/CarrierAssignedPage.page\";\nimport {\n  getShowToasterValue,\n  getCarrierLoads\n} from \"../../../selectors/carrierAssign/selector\";\nimport reducer from \"../../../reducers/carrierAssign/reducer\";\nimport {\n  upadateShowToaster,\n  AssignDriver,\n  fetchShipments\n} from \"../../../actions/carrierAssign/action\";\nimport { DriverList } from \"../../../models/home/CarrierAssign.model\";\nimport { MyloadSectionContainer } from \"../sectionContainer\";\nimport { ExicutionLoads } from \"../../../models/ExicutionLoads.model\";\nimport { showAlert } from \"../../../actions/App/action\";\n\nconst key = \"carrierAssigned\";\n\nclass CarrierAssignedContainer extends PureComponent<any, any> {\n  componentDidMount() {\n    if (\n      this.props.data &&\n      this.props.data.length === 0 &&\n      !this.props.loading\n    ) {\n      this.props.updateData();\n    }\n  }\n\n  chnageValue = () => {\n    this.props.changeToasterValue();\n  };\n\n  assignDriverButton = (loadDetails: any) => {\n    const loadId = loadDetails.shipmentId;\n\n    if (this.props.userDetails && this.props.userDetails.carrierId) {\n      const modelList: DriverList = new DriverList();\n      modelList.carrierId = this.props.userDetails.carrierId;\n      modelList.role = 'carrierDriver';\n      this.props.AssignDriver(modelList.getRequestPayload());\n      this.props.history.push(`/app/MyLoad/driverAssign/${loadId}`, {\n        loadDetails: JSON.stringify(loadDetails),\n        pathname: this.props.location.pathname\n      });\n    }\n  };\n\n  getCarrierAssignLoads = (isHideLoader = true) => {\n    try {\n      const carrierId =\n        (this.props && this.props.userDetails && this.props.userDetails.carrierId) || '';\n      const carrierModel: ExicutionLoads = new ExicutionLoads();\n      carrierModel.carrierId = carrierId;\n      carrierModel.filter = { carrierAssigned: true };\n      this.props.fetchShipments(carrierModel.getRequestPayload(), isHideLoader);\n    } catch (error) {\n      console.log(\"ERROR:\", error);\n    }\n  };\n\n  render() {\n    const data =\n      this.props.loads && this.props.loads.length > 99\n        ? this.props.loads.slice(0, 99)\n        : this.props.loads;\n    return (\n      <>\n        {isPlatform(\"mobile\") ? (\n          <CarrierAssignedPage\n            {...this.props}\n            getLoads={this.getCarrierAssignLoads}\n            chnageValue={this.chnageValue}\n            AssignDriverbtn={(loadDetails: any) =>\n              this.assignDriverButton(loadDetails)\n            }\n            module=\"MyLoad\"\n            loads={data}\n            showFilter={false}\n            isButtonHidden={false}\n            buttonName=\"Assign Driver\"\n            showInitial={false}\n            subModule={this.props.match.params[0]}\n          />\n        ) : (\n          <MyloadSectionContainer {...this.props} />\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  loading: getLoading(),\n  getToasterValue: getShowToasterValue(),\n  loads: getCarrierLoads(),\n  userDetails: getUserDetails(),\n  isNetworkAvailable: getNetworkStatus()\n});\n\nexport const mapDispatchToProps = (dispatch: Function) => ({\n  changeToasterValue: () => dispatch(upadateShowToaster()),\n  AssignDriver: (data: any) => dispatch(AssignDriver(data)),\n  fetchShipments: (details: any, hideLoader: boolean) =>\n    dispatch(fetchShipments(details, hideLoader)),\n  showAlert: (data: any) => dispatch(showAlert(data))\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nconst withReducer = useInjectReducer({ key, reducer });\nconst withSaga = useInjectSaga({ key, saga });\n\nexport default compose(\n  withSaga,\n  withReducer,\n  withConnect\n)(CarrierAssignedContainer);\nexport { CarrierAssignedContainer };\n","import React, { useState, memo, useEffect, useCallback } from 'react';\nimport { IonPage, IonContent, IonList, IonInput, IonItem, IonLabel, IonFooter, IonButton, IonIcon, IonText, IonImg, IonGrid, IonCol, IonRow } from '@ionic/react';\nimport \"../../Manage/ManageUser/ManageUser.page.scss\";\nimport AppHeader from '../../../components/app/Bars/Bar-header';\nimport { UserDetails } from '../../../models/userPforile/userProfile.modal';\nimport { ToastMessage } from '../../../utils/ToastMessage';\nimport { OOPS_MESSAGE, USER_EXIST_TITLE, USER_EXIST_MESSAGE, USER_BACK_TITLE, USER_BACK_MESSAGE, Roles, EMAIL_ERROR, USER_FORM_ERRORS } from '../../../utils/constants';\nimport { CustomModal } from '../../../components/CustomModal';\nimport { EnumType } from 'json-to-graphql-query';\nimport { IRole, IProfile, IAddress, ITransferRequest } from '../../../schemas/manage/manage.Schema';\nimport { fetchAddressList, handlePhoneNumber, formatPhoneNumber, removeSpecial, roles, defaultForm, getSelectedRoles, userProfileFields, driverFields, getAddressValue, carrierField, isValidString } from '../../Manage/ManageUser/ManageUserUtil';\nimport _ from \"lodash\";\n\nconst AddDriverPage: React.FC<any> = (props) => {\n\tconst { userDetails: { carrierId,userPrincipalName }, isUserValid, validateUserDetails, resetValidateUser, module, history, isNetworkAvailable, showNetworkAlert } = props;\n\tconst [emailAddressError, setEmailAddressError] = useState(false);\n\tconst [roleSelection, setRoleSelection] = useState(roles);\n\tconst [showRoleOptions, setShowRoleOptions] = useState(false);\n\tconst [isUserNotExist, setUserNotExist] = useState(false);\n\tconst [isDriverSelected, setDriverSelected] = useState(true);\n\tconst [alertProps, setAlertProps] = useState<any>(null);\n\tconst useProfileModel = new UserDetails();\n\tconst roleTitle = roleSelection.filter(role => role.selected).map(role => role.label).join(', ');\n\tconst roleDesc = roleSelection.filter(role => role.selected).length === 1? (roleSelection.find(role => role.selected) as IRole).desc: roleSelection[1].desc;\n\tconst [formFields, setFormFields] = useState<any>({...defaultForm, roles: getSelectedRoles(roles), carrierId});\n\tconst [addressList, setAddressList] = useState<Array<IAddress>>([]);\n\tconst [showAddressList, setShowAddressList] = useState(false);\n\tconst [isAddressEdit, setAddressEdit] = useState(true);\n\tconst [address, setAddress] = useState('');\n\t\n\tconst [isFormValid, setFormValid] = useState(false);\n\tconst [formErrors, setFormErrors] = useState<any>({\n\t\tfirstName: '',\n\t\tlastName: '',\n\t\tmobileNumber: '',\n\t\ttractorNumber: false,\n\t});\n\t\n\tconst handleRoleSelection = (item: IRole) => {\n\t\tconst roleSelectionList = roleSelection.map(role => ({...role,selected: role.label === item.label? !role.selected: role.selected}))\n\t\tif(roleSelectionList.filter(role => role.selected).length > 0) {\n\t\t\tconst isDriver = roleSelectionList.find(role => role.selected && role.label === 'Driver');\n\t\t\tsetDriverSelected(!!isDriver);\n\t\t\tsetRoleSelection(roleSelectionList);\n\t\t\tsetFormFields({...formFields, roles:  getSelectedRoles(roleSelectionList),});\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tif(isUserValid !== null) {\n\t\t\tsetUserNotExist(!isUserValid);\n\t\t\thandleUserExistModal(isUserValid);\n\t\t}\n\t}, [isUserValid]);\n\n\tconst transferMember = () => {\n\t\tif(!isNetworkAvailable) {\n\t\t\tshowNetworkAlert();\n\t\t\treturn true;\n\t\t}\n\t\tconst params: ITransferRequest= {\n\t\t\trequester: {\n\t\t\t\tuserId: userPrincipalName,\n\t\t\t\tcarrierId,\n\t\t\t\tisAdmin: true\n\t\t\t},\n\t\t\tuserId: validateUserDetails.userPrincipalName,\n\t\t\tcurrentCarrierId:  validateUserDetails.carrierId,\n\t\t\trequestedCarrierId: carrierId,\n\t\t\troles: formFields.roles\n\t\t}\n\t\tconst payload =  { name: validateUserDetails && validateUserDetails.firstName, params }\n\t\tprops.handleTransfer(payload, resetData, carrierId === validateUserDetails.carrierId); \n\t}\n\n\tconst handleUserExistModal = (showUserModal: boolean) => {\n\t\tsetAlertProps({\n\t\t\tisOpen: showUserModal,\n\t\t\ttitle: USER_EXIST_TITLE,\n\t\t\tmessage: USER_EXIST_MESSAGE.replace('{{NAME}}', validateUserDetails && validateUserDetails.firstName),\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Cancel',\n\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\tsetFormFields({...formFields, email: ''});\n\t\t\t\t\t\tsetAlertProps(null);\n\t\t\t\t\t\tprops.resetValidateUser();\n\t\t\t\t\t\thistory.push(`/app/${module}`);\n\t\t\t\t\t} \n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Ok',\n\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\ttransferMember();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\t\n\tconst resetData = () => {\n\t\tsetRoleSelection(roles);\n\t\tsetUserNotExist(false);\n\t\tsetAlertProps(null);\n\t\tsetShowRoleOptions(false);\n\t\tresetValidateUser();\n\t\tsetFormFields({...defaultForm, roles: getSelectedRoles(roles), carrierId});\n\t\tsetFormValid(false);\n\t\tsetAddress('');\n\t\tsetFormErrors({\n\t\t\tfirstName: '',\n\t\t\tlastName: '',\n\t\t\tmobileNumber: ''\n\t\t});\n\t}\n\n\tconst handleBackButton = (path = '') => {\n\t\tif(!formFields.email) {\n\t\t\thistory.push(path? path : `/app/${module}`);\n\t\t\treturn true;\n\t\t}\n\t\tsetAlertProps({\n\t\t\tisOpen: true,\n\t\t\ttitle: USER_BACK_TITLE,\n\t\t\tmessage: USER_BACK_MESSAGE,\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Cancel',\n\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\tsetAlertProps(null);\n\t\t\t\t\t} \n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Ok',\n\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\tresetData();\n\t\t\t\t\t\thistory.push(path? path : `/app/${module}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\n\tconst handleErrors = (name: string, value: string) => {\n\t\tlet errorsText:any = {...formErrors};\n\t\tswitch(name) {\n\t\t\tcase \"firstName\":\n\t\t\tcase \"lastName\":\n\t\t\t\tconst isValid = value !== '' && isValidString(value);\n\t\t\t\terrorsText = ({...formErrors, [name]: !isValid? USER_FORM_ERRORS[name]: false })\n\t\t\t\tbreak;\n\t\t\tcase \"tractorNumber\":\n\t\t\t\tconst isTractorValid = value === '' || (value !== '' && isValidString(value));\n\t\t\t\terrorsText = ({...formErrors, [name]: !isTractorValid? USER_FORM_ERRORS[name]: false })\n\t\t\t\tbreak;\n\t\t\tcase \"mobileNumber\":\n\t\t\t\tconst isMobValid = handlePhoneNumber(value);\n\t\t\t\terrorsText = ({...formErrors, [name]: !isMobValid? USER_FORM_ERRORS[name]: false })\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\tconst errors = Object.keys(errorsText).filter(key => errorsText[key] !== false);\n\t\tsetFormValid(errors.length === 0);\n\t\tsetFormErrors(errorsText);\n\t}\n\n\tconst  handleAddress = (list: Array<IAddress>) => {\n\t\tsetAddressList(list);\n\t\tsetShowAddressList(true);\n\t}\n\n\tconst callAPI = useCallback(_.debounce((value: string) => fetchAddressList(value, handleAddress), 500), []);\n\t\n\tconst handleChange = (event:any) => {\n\t\tconst { target: { name, value } } = event;\n\t\thandleErrors(name, value);\n\t\tswitch(name) {\n\t\t\tcase \"emailAddress\": \n\t\t\t\tsetEmailAddressError(false);\n\t\t\t\tsetFormFields({...formFields, email: value});\n\t\t\t\tbreak;\n\t\t\tcase \"mobileNumber\": \n\t\t\t\tsetFormFields({...formFields, mobileNumber: handlePhoneNumber(value)?formatPhoneNumber(value, true): value});\n\t\t\t\tbreak;\n\t\t\tcase \"addressDTOs\": \n\t\t\t\tif(isAddressEdit)  {\n\t\t\t\t\tcallAPI(value);\n\t\t\t\t\tsetAddress(value);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsetFormFields({...formFields, [name]: value});\n\t\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tconst handleAddressSelection = (addressDTOs:IAddress) => {\n\t\tsetAddressEdit(false);\n\t\tsetFormFields({...formFields, addressDTOs});\n\t\tsetShowAddressList(false);\n\t\tsetAddressList([]);\n\t}\n\n\tconst validateNow = () => {\n\t\tif(!isNetworkAvailable) {\n\t\t\tshowNetworkAlert();\n\t\t\treturn true;\n\t\t}\n\t\tconst { email: emailAddress } = formFields;\n\t\tconst regEx = /^[a-zA-Z0-9.]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/;\n\t\tif(showRoleOptions) {\n\t\t\tsetShowRoleOptions(false);\n\t\t}\n\t\tif (regEx.test(emailAddress)) {\n\t\t\tconst callback = () => ToastMessage.show(OOPS_MESSAGE);\n\t\t\tconst query = useProfileModel.validateUser(emailAddress);\n\t\t\tprops.validateUserAction({query, callback});\n\t\t\treturn true;\n\t\t} \n\t\tsetEmailAddressError(true);\n\t};\n\t\n\tconst handleSubmit = () => {\n\t\tif(!isNetworkAvailable) {\n\t\t\tshowNetworkAlert();\n\t\t\treturn true;\n\t\t}\n\n\t\tif(!isUserNotExist) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst errors = Object.keys(formErrors).filter(key => formErrors[key] !== false);\n\t\tif(errors.length > 0) {\n\t\t\tconst errorsText = formErrors;\n\t\t\terrors.forEach((key:string) => {\n\t\t\t\terrorsText[key] = USER_FORM_ERRORS[key];\n\t\t\t})\n\t\t\tsetFormErrors(errorsText);\n\t\t\tsetFormFields({...formFields});\n\t\t\treturn true;\n\t\t}\n\n\t\tconst isDispatcher = formFields.roles.length === 1 && formFields.roles.indexOf(new EnumType('carrierDispatcher')) !== -1;\n\t\tconst details = isDispatcher? {\n\t\t\ttractorNumber: '',\n\t\t\taddressDTOs: {\n\t\t\t\taddressLine1: \"\",\n\t\t\t\taddressLine2: \"\",\n\t\t\t\taddressType: \"\",\n\t\t\t\tcity: \"\",\n\t\t\t\tstate: \"\",\n\t\t\t\tpostalCode: \"\",\n\t\t\t},\n\t\t}: {};\n\t\tconst payload = {\n\t\t\trequester: {\n\t\t\t\tuserId: userPrincipalName,\n\t\t\t\tcarrierId,\n\t\t\t\tisAdmin: true,\n\t\t\t},\n\t\t\tuserDetails: {...formFields, ...details, mobileNumber: removeSpecial(formFields.mobileNumber)}\n\t\t}\n\n\t\tprops.handleSubmit(payload, resetData);\n\t}\n\n\t\n\treturn (\n\t\t<>\n\t\t<IonPage className=\"manage-userslist-page\">\n\t\t\t<AppHeader title={props.title} customBackUrl={handleBackButton} History={props.history} />\n\t\t\t<IonContent class=\"ion-padding  custom-padding\">\n\t\t\t\t<IonContent class=\"ion-padding  custom-padding\">\n\t\t\t\t\t<div className=\"manage-users-formWrapper\">\n\t\t\t\t\t<IonList class=\"manage-userslist-form\">\n\t\t\t\t\t\t<IonItem className=\"role-info\"  data-test=\"select-role\" onClick={() => setShowRoleOptions(!showRoleOptions)}>\n\t\t\t\t\t\t\t<IonLabel position=\"floating\" mode=\"ios\">Role</IonLabel>\n\t\t\t\t\t\t\t<IonInput\n\t\t\t\t\t\t\t\tvalue={roleTitle}\n\t\t\t\t\t\t\t\treadonly\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tclass=\"\"\n\t\t\t\t\t\t\t></IonInput>\n\t\t\t\t\t\t\t<IonIcon src=\"/assets/icon/grid-down-arrow.svg\"></IonIcon>\n\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t\t<IonText class=\"role-desc\">{roleDesc}</IonText>\n\t\t\t\t\t\t{roleSelection && showRoleOptions ? (\n\t\t\t\t\t\t\t<IonList data-test=\"roles-list\" class=\"roles-list-grid\">\n\t\t\t\t\t\t\t\t{roleSelection.map((role: IRole, index: number) => (\n\t\t\t\t\t\t\t\t<IonItem\n\t\t\t\t\t\t\t\t\tkey={`role_${index}`}\n\t\t\t\t\t\t\t\t\tdata-test=\"role-list-item\"\n\t\t\t\t\t\t\t\t\tonClick={() => handleRoleSelection(role)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<i className={`role-check-icon ${role.selected?'checked': ''}`}></i>\n\t\t\t\t\t\t\t\t\t<span className=\"role-list-label\">{role.label}</span>\n\t\t\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</IonList>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t<IonItem className={emailAddressError? 'email-field error': 'email-field '}>\n\t\t\t\t\t\t\t<IonLabel position=\"floating\" mode=\"ios\">Email Address</IonLabel>\n\t\t\t\t\t\t\t<IonInput\n\t\t\t\t\t\t\t\tvalue={formFields.email}\n\t\t\t\t\t\t\t\tplaceholder='Type Your Email Address'\n\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\treadonly={isUserNotExist}\n\t\t\t\t\t\t\t\tname=\"emailAddress\"\n\t\t\t\t\t\t\t\tonIonChange={handleChange}\n\t\t\t\t\t\t\t\tdata-test=\"email-field\"\n\t\t\t\t\t\t\t\tpattern='/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/'\n\t\t\t\t\t\t\t></IonInput>\n\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t\t{ emailAddressError? <IonText class=\"field-error\" data-test=\"email-field-error\">{EMAIL_ERROR}</IonText>: null }\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t!isUserNotExist ? (\n\t\t\t\t\t\t\t\t<IonItem className=\"validate-btn-wrapper\">\n\t\t\t\t\t\t\t\t\t<IonButton className={'validate-btn'} data-test=\"validate-btn\" onClick={validateNow}>\n\t\t\t\t\t\t\t\t\t\tValidate now\n\t\t\t\t\t\t\t\t\t</IonButton>\n\t\t\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t\t\t) : null\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t</IonList>\n\t\t\t\t\t{\n\t\t\t\t\t\tisUserNotExist ? (\n\t\t\t\t\t\t\t<IonList class=\"manage-userslist-form\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tuserProfileFields.map((profile:IProfile) => (\n\t\t\t\t\t\t\t\t\t<React.Fragment  key={`def_${profile.label}`}>\n\t\t\t\t\t\t\t\t\t\t<IonItem className={formErrors && formErrors[profile.name]? 'error': ''}>\n\t\t\t\t\t\t\t\t\t\t\t<IonLabel position=\"floating\" mode=\"ios\">{profile.label}</IonLabel>\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tprofile.name === 'mobileNumber' ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<IonInput\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={formFields[profile.name]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={profile.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={profile.placeholder}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpattern=\"[0-9a-zA-Z]\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-test={`${profile.name}-field`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={() => setFormFields({...formFields, mobileNumber: formFields.mobileNumber && removeSpecial(formFields.mobileNumber)})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonIonBlur={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`${profile.className ? profile.className : ''}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxlength={10}\n\t\t\t\t\t\t\t\t\t\t\t\t\t></IonInput>\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<IonInput\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={formFields[profile.name]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={profile.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={profile.placeholder}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpattern=\"[0-9a-zA-Z]\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-test={`${profile.name}-field`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonIonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`${profile.className ? profile.className : ''}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t></IonInput>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t\t\t\t\t\t{ formErrors && formErrors[profile.name]? <IonText class=\"field-error\">{formErrors[profile.name]}</IonText>: null }\n\t\t\t\t\t\t\t\t\t</React.Fragment >\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tisDriverSelected && driverFields.map((profile:IProfile) => (\n\t\t\t\t\t\t\t\t\t<React.Fragment key={profile.label}>\n\t\t\t\t\t\t\t\t\t\t<IonItem>\n\t\t\t\t\t\t\t\t\t\t\t<IonLabel position=\"floating\" mode=\"ios\">{profile.label}</IonLabel>\n\t\t\t\t\t\t\t\t\t\t\t<IonInput\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={ profile.name === 'addressDTOs'? isAddressEdit ? address: getAddressValue(formFields[profile.name]):formFields[profile.name]}\n\t\t\t\t\t\t\t\t\t\t\t\tname={profile.name}\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={profile.placeholder}\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tpattern=\"[0-9a-zA-Z]\"\n\t\t\t\t\t\t\t\t\t\t\t\tonIonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\tdata-test={`${profile.name}-field`}\n\t\t\t\t\t\t\t\t\t\t\t\tonIonFocus={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(profile.name === 'addressDTOs') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetAddressEdit(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={`${profile.className ? profile.className : ''}`}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{profile.name === 'addressDTOs' ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<IonImg\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tslot=\"end\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talt=\"logo\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"/assets/icon/search_icon.svg\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"search-input-icon\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t) : null }\n\t\t\t\t\t\t\t\t\t\t\t</IonInput>\n\t\t\t\t\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t\t\t\t\t\t{ formErrors && formErrors[profile.name]? <IonText class=\"field-error\">{formErrors[profile.name]}</IonText>: null }\n\t\t\t\t\t\t\t\t\t\t{profile.name === 'addressDTOs' && showAddressList ? (\n\t\t\t\t\t\t\t\t\t\t\t<IonGrid class=\"suggestions\">\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\taddressList.map((address:IAddress, index: number) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IonRow key={`address${index}`} className=\"suggestions_item\" onClick={() => handleAddressSelection(address)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IonCol class=\"suggestions_list\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{getAddressValue(address)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IonCol>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IonRow>\n\t\t\t\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</IonGrid>\n\t\t\t\t\t\t\t\t\t\t): null }\n\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t<IonItem >\n\t\t\t\t\t\t\t\t<IonLabel position=\"floating\" mode=\"ios\">{carrierField.label}</IonLabel>\n\t\t\t\t\t\t\t\t<IonInput\n\t\t\t\t\t\t\t\t\tvalue={carrierId}\n\t\t\t\t\t\t\t\t\tname={carrierField.name}\n\t\t\t\t\t\t\t\t\tplaceholder={carrierField.placeholder}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tclassName={`${carrierField.className ? carrierField.className : ''}`}\n\t\t\t\t\t\t\t\t\treadonly\n\t\t\t\t\t\t\t\t></IonInput>\n\t\t\t\t\t\t\t</IonItem>\n\t\t\t\t\t\t\t</IonList>\n\t\t\t\t\t\t): null\n\t\t\t\t\t}\n\t\t\t\t</div>\t\n\t\t\t\t</IonContent>\n\t\t\t\t<IonFooter class=\"manage-userlist-footer\">\n\t\t\t\t\t<IonButton\n\t\t\t\t\t\texpand=\"full\"\n\t\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t\t\tdata-test=\"submit-btn\"\n\t\t\t\t\t\tclassName={ !isFormValid ? 'invalid-btn' : ''}\n\t\t\t\t\t> Save\n\t\t\t\t\t</IonButton>\n\t\t\t\t</IonFooter>\n\t\t\t</IonContent>\n\t\t\t{\n\t\t\t\talertProps\t? <CustomModal {...alertProps} /> : null\n\t\t\t}\n\t\t</IonPage>\n\t\t</>\n\t);\n}\nexport default AddDriverPage;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { isPlatform } from \"@ionic/react\";\nimport { compose } from \"redux\";\nimport { getUserDetails, getNetworkStatus } from \"../../../selectors/selector\";\nimport {\n  isUserValidated,\n  getValidateUserDetails\n} from \"../../../selectors/Manage/selector\";\nimport { showNetworkAlert } from \"../../../actions/App/action\";\nimport {\n  addUserDetails,\n  validateUser,\n  validateUserReset,\n  transferUser\n} from \"../../../actions/manage/action\";\nimport { UserDetails } from \"../../../models/userPforile/userProfile.modal\";\nimport { ToastMessage } from \"../../../utils/ToastMessage\";\nimport {\n  OOPS_MESSAGE,\n  MANAGE_USER_SUCCESS_MESSAGE,\n  MANAGE_USER_TRANSFER_EXIST,\n  MANAGE_USER_TRANSFER_MESSAGE\n} from \"../../../utils/constants\";\nimport AddDriverPage from \"../../../pages/Execute/AddDriver/AddDriver\";\nimport useInjectSaga from \"../../../utils/injectSaga\";\nimport useInjectReducer from \"../../../utils/injectReducer\";\nimport reducer from \"../../../reducers/manage/reducer\";\nimport saga from \"../../../saga/Manage/saga\";\n\nconst key = \"manage\";\n\nexport const AddDriverContainer: React.FC<any> = (props: any) => {\n  const {\n    history: { push, location },\n    match\n  } = props;\n  const userProfileModel = new UserDetails();\n  const path = (location && location.state && location.state.loadModule) || \"\";\n  const title = (match && match.params && match.params.id) || \"\";\n  const backToPage = () => {\n    push(`/app/${path}`);\n  };\n\n  const handleSubmit = (payload: any, restData: Function) => {\n    const query = userProfileModel.addUser(payload);\n    const callback = (success = false) => {\n      if (success) {\n        restData();\n        ToastMessage.show(MANAGE_USER_SUCCESS_MESSAGE);\n        backToPage();\n        return true;\n      }\n      ToastMessage.show(OOPS_MESSAGE);\n    };\n    props.addUserAction({ query, callback, isCarrierAssign: true });\n  };\n\n  const handleTransfer = (\n    payload: any,\n    restData: Function,\n    isCarrierSame = false\n  ) => {\n    const { name, params } = payload;\n    props.resetValidateUser();\n    if (isCarrierSame) {\n      restData();\n      ToastMessage.show(MANAGE_USER_TRANSFER_EXIST);\n      backToPage();\n      return true;\n    }\n    const query = userProfileModel.transferMember(params);\n    const callback = (success = false) => {\n      restData();\n      if (success) {\n        ToastMessage.open({\n          message: MANAGE_USER_TRANSFER_MESSAGE.replace(\"{{NAME}}\", name),\n          btnTitle: \"Ok\",\n          showUndo: true,\n          callback: () => {}\n        });\n      } else {\n        ToastMessage.show(OOPS_MESSAGE);\n      }\n      backToPage();\n    };\n    props.transferUserAction({ query, callback });\n  };\n\n  return (\n    <AddDriverPage\n      {...props}\n      title={title}\n      module={path}\n      handleSubmit={handleSubmit}\n      handleTransfer={handleTransfer}\n    />\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  userDetails: getUserDetails(),\n  isNetworkAvailable: getNetworkStatus(),\n  isUserValid: isUserValidated(),\n  validateUserDetails: getValidateUserDetails()\n});\n\nexport const mapDispatchToProps = (dispatch: Function) => ({\n  showNetworkAlert: () => dispatch(showNetworkAlert()),\n  validateUserAction: (payload: any) => dispatch(validateUser(payload)),\n  addUserAction: (payload: any) => dispatch(addUserDetails(payload)),\n  resetValidateUser: () => dispatch(validateUserReset()),\n  transferUserAction: (payload: any) => dispatch(transferUser(payload))\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nconst withReducer = useInjectReducer({ key, reducer });\nconst withSaga = useInjectSaga({ key, saga });\n\nexport default compose(withSaga, withReducer, withConnect)(AddDriverContainer);\n","import {\n  ActionType,\n  ShowToaster,\n} from \"../../schemas/carrierAssign/CarrierAssign.schema\";\nimport * as Constants from \"../../utils/constants\";\nimport produce from \"immer\";\n\nexport const initialState: ShowToaster = {\n  showToaster: false,\n  DriverList: [],\n  shipmentForStartTrip: {},\n  timestamp: \"\",\n  loads: {},\n};\n\nexport default (state = initialState, action: ActionType) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case Constants.SHOW_TOASTER_VALUE:\n        draft.showToaster = !draft.showToaster;\n        break;\n      case Constants.LOAD_DATA:\n        draft.loads = action.payload;\n        break;\n      case Constants.ASSIGN_DRIVER_LIST:\n        draft.DriverList = action.payload;\n    }\n  });\n","import { IonContent, IonPage } from '@ionic/react';\nimport React, { Component } from 'react';\nimport { Roles, EVENT, SCREEN } from '../../../utils/constants';\nimport { CarrierAssignedModal } from '../../../containers/ExecuteContainer/CarrierAssignedModal/CarrierAssignedModal';\n\nimport AppHeader from '../../../components/app/Bars/Bar-header';\nimport './AssignDriverList.scss';\nimport { isEntitled, IONICWrapper, R2Configuration } from '../../../utils/common';\nimport { DriverCard } from './DriverCard';\nimport { logEvent } from '../../../utils/Analytics';\n\nimport { ToastMessage } from '../../../utils/ToastMessage';\n\nclass DriverAssignList extends Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      showModal: false,\n      selectedLoad: [],\n      openAssignDriverDialog: false,\n      driverDetails: {}\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ selectedLoad: this.props.location.state.response });\n    // Analytics implementation\n    logEvent(EVENT.UE_ASSIGN_DRIVER_SUCCESS, {\n      screen: SCREEN.MYLOADS_DRIVER_ASSIGNMENT,\n      carrierId: this.state.driverDetails.carrierId\n    });\n  }\n\n  render() {\n    const loadId =\n      this.props && this.props.match && this.props.match.params && this.props.match.params.id;\n    return (\n      <>\n        <CarrierAssignedModal\n          isOpen={this.state.openAssignDriverDialog}\n          onDismiss={() => {\n            this.setState({\n              openAssignDriverDialog: false\n            });\n          }}\n          loadDetails={this.props.loadDetails}\n          driverDetails={this.state.driverDetails}\n        />\n        <IonPage className=\"desktop-page driverList-page\">\n          <AppHeader\n            title={this.props.loadDetails ? loadId : ''}\n            backUrl={`/app/MyLoad/CarrierAssigned/${loadId}`}\n            isAddDriver={\n              isEntitled('myLoad', 'addUser') &&\n              IONICWrapper.details.auth.user.roles.includes(Roles.carrierDispatcher) &&\n              IONICWrapper.details.auth.user.roles.includes(Roles.carrierAdmin) &&\n              (() => {\n                R2Configuration.details.getR2FeatureEnable() // (KEYS.RELEASE === ENV.UAT || KEYS.RELEASE === ENV.PROD)\n                  ? ToastMessage.show()\n                  : this.props.history.push(`/app/MyLoad/driverAssign/addDriver/${loadId}`, {\n                      loadModule: `MyLoad/driverAssign/${loadId}`\n                    });\n              })\n            }\n            History={this.props.history}\n          />\n          <IonContent className=\"driverContent\">\n            <DriverCard\n              isPopup={this.props.popupHeader}\n              DriverList={this.props.driverList}\n              loadDetails={this.props.loadDetails}\n              module={this.props.module}\n              showAssignDriverDialog={(isShow: boolean, driverDetails: any) => {\n                this.setState({\n                  openAssignDriverDialog: isShow,\n                  driverDetails\n                });\n              }}\n            />\n          </IonContent>\n        </IonPage>\n      </>\n    );\n  }\n}\nexport default DriverAssignList;\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport useInjectReducer from '../../../utils/injectReducer';\nimport useInjectSaga from '../../../utils/injectSaga';\nimport { HideTabBar } from '../../../actions/Login/action';\nimport reducer from '../../../reducers/driverAssign/reducer';\nimport saga from '../../../saga/CarrierAssign/saga';\nimport { getLoading } from '../../../selectors/selector';\nimport DriverAssignList from '../../../pages/Execute/AssignDriverList/AssignDriverList';\nimport { upadateShowToaster } from '../../../actions/carrierAssign/action';\nimport { getDriverList } from '../../../selectors/carrierAssign/selector';\n\nconst key = 'carrierAssigned';\nexport class AssignDriverContainer extends PureComponent<any, any> {\n  componentDidMount(): void {\n    if (!this.props.makeHideTabBar) {\n      this.props.HideTabBar();\n    }\n  }\n\n  getShowToasterValue = (): void => {\n    this.props.showToasterValue();\n  };\n\n  getloadDetails = (): object => {\n    return (\n      (this.props &&\n        this.props.history &&\n        this.props.history.location &&\n        this.props.history.location.state &&\n        this.props.history.location.state.loadDetails &&\n        JSON.parse(this.props.history.location.state.loadDetails)) ||\n      {}\n    );\n  };\n\n  getPathname = (): string => {\n    return (\n      this.props.history &&\n      this.props.history.location &&\n      this.props.history.location.state &&\n      this.props.history.location.state.pathname\n    );\n  };\n\n  render() {\n    return (\n      <DriverAssignList\n        {...this.props}\n        getShowToasterValue={this.getShowToasterValue}\n        driverList={this.props.getDriverList}\n        module={this.getPathname()}\n        loadDetails={this.getloadDetails()}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  loading: getLoading(),\n  getDriverList: getDriverList()\n});\n\nexport const mapDispatchToProps = (dispatch: Function) => ({\n  showToasterValue: () => dispatch(upadateShowToaster()),\n  HideTabBar: () => dispatch(HideTabBar())\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nconst withReducer = useInjectReducer({ key, reducer });\nconst withSaga = useInjectSaga({ key, saga });\n\nexport default compose(withSaga, withReducer, withConnect)(AssignDriverContainer);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport { isPlatform } from '@ionic/react';\nimport LoadDetailsPage from '../../pages/LoadDetails/LoadDetails.page';\nimport { getPlatform, getUserDetails, getNetworkStatus } from '../../selectors/selector';\nimport { getCarrierLoad } from '../../selectors/Myload/selector';\nimport { AssignDriver } from '../../actions/carrierAssign/action';\nimport reducer from '../../reducers/carrierAssign/reducer';\nimport saga from '../../saga/CarrierAssign/saga';\nimport useInjectReducer from '../../utils/injectReducer';\nimport useInjectSaga from '../../utils/injectSaga';\nimport { DriverList } from '../../models/home/CarrierAssign.model';\nimport { getDriverList } from '../../selectors/carrierAssign/selector';\nimport { showAlert } from '../../actions/App/action';\n\nconst key = 'carrierAssigned';\nclass MyLoadDetailsContainer extends Component<any, any> {\n  __model: DriverList;\n\n  constructor(props: any) {\n    super(props);\n    this.state = {};\n    this.__model = new DriverList();\n  }\n\n  assignDriverBtn = () => {\n    const loadId = this.props.loadDetails.shipmentId;\n    if (this.props.userDetails && this.props.userDetails.carrierId) {\n      const modelList: DriverList = new DriverList();\n      modelList.carrierId = this.props.userDetails.carrierId;\n      modelList.role = 'carrierDriver';\n      this.props.AssignDriver(modelList.getRequestPayload());\n      if (isPlatform('mobile')) {\n        this.props.history.push(`/app/MyLoad/driverAssign/${loadId}`, {\n          loadDetails: JSON.stringify(this.props.loadDetails),\n          pathname: this.props.location.pathname\n        });\n      }\n    }\n  };\ngetValue = (key:any)=>{\n return this.props &&\n      this.props.history &&\n      this.props.history.location &&\n      this.props.history.location.state &&\n      this.props.history.location.state[key];\n}\n  render() {\n    const { loadDetails, match, desktopDriverList, isNetworkAvailable } = this.props;\n    const bookload = this.getValue(\"shipments\");\n    const bookloadStatus = this.getValue(\"isBookLoad\");\n    const prevModule = this.getValue(\"module\");\n    let shipmentDetails = loadDetails;\n    if(Object.keys(loadDetails).length === 0 && bookloadStatus && bookload){\n      shipmentDetails = bookload[0];\n    }\n    return (\n      <LoadDetailsPage\n        {...this.props}\n        driverList={\n          desktopDriverList && desktopDriverList.data && desktopDriverList.data.getMembers\n        }\n        assignDriverBtn={this.assignDriverBtn}\n        loadDetails={shipmentDetails}\n        module={match.params[0]}\n        loadId={match.params.id}\n        showExpandView\n        isCarrierLoad\n        networkStatus={isNetworkAvailable}\n        bookloadStatus = {bookloadStatus}\n        prevModule = {prevModule}\n      />\n    );\n  }\n}\nconst mapStateToProps = createStructuredSelector({\n  loadDetails: getCarrierLoad(),\n  getPlatform: getPlatform(),\n  desktopDriverList: getDriverList(),\n  userDetails: getUserDetails(),\n  isNetworkAvailable: getNetworkStatus()\n});\n\nconst mapDispatchToProps = (dispatch: Function) => ({\n  AssignDriver: (data: any) => dispatch(AssignDriver(data)),\n  showAlert: (data: any) => dispatch(showAlert(data))\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nconst withReducer = useInjectReducer({ key, reducer });\nconst withSaga = useInjectSaga({ key, saga });\n\nexport default compose(withSaga, withReducer, withConnect)(MyLoadDetailsContainer);\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport { isPlatform } from '@ionic/react';\nimport useInjectSaga from '../../../utils/injectSaga';\nimport useInjectReducer from '../../../utils/injectReducer';\nimport saga from '../../../saga/CarrierAssign/saga';\nimport { getLoading, getUserDetails, getNetworkStatus } from '../../../selectors/selector';\nimport CarrierAssignedPage from '../../../pages/Execute/CarrierAssigned/CarrierAssignedPage.page';\nimport { getAssignedLoads } from '../../../selectors/carrierAssign/selector';\nimport reducer from '../../../reducers/carrierAssign/reducer';\nimport { AssignDriver, fetchShipments } from '../../../actions/carrierAssign/action';\nimport { DriverList } from '../../../models/home/CarrierAssign.model';\nimport { isEntitled } from '../../../utils/common';\nimport { MyloadSectionContainer } from '../sectionContainer';\nimport { ExicutionLoads } from '../../../models/ExicutionLoads.model';\nimport { showAlert } from '../../../actions/App/action';\nimport driverNames from '../../../utils/getDriverNameList';\nimport { MODULES } from '../../../utils/constants';\n\nconst key = 'carrierAssigned';\n\nclass DriverAssignedContainer extends PureComponent<any, any> {\n  __model: DriverList;\n\n  constructor(props: any) {\n    super(props);\n    this.__model = new DriverList();\n    this.state = {\n      showFilter: isEntitled('myLoad', 'filter'),\n      buttonName: isEntitled('myLoad', 'filter') ? 'Change Driver' : '',\n      showInitial: isEntitled('myLoad', 'filter'),\n      isButtonHidden: true // change driver button visibility option.\n    };\n  }\n\n  componentDidMount(): void {\n    if (this.props.data && this.props.data.length === 0 && !this.props.loading) {\n      this.props.updateData();\n    }\n  }\n\n  chnageValue = (): void => {\n    this.props.changeToasterValue();\n  };\n\n  assignDriverButton = (): void => {\n    this.props.AssignDriver(this.__model.getRequestPayload());\n    this.props.history.push('/app/MyLoad/driverAssign');\n  };\n\n  getDriverLoads = (isHideLoader = true): void => {\n    try {\n      const carrierId =\n        (this.props && this.props.userDetails && this.props.userDetails.carrierId) || '';\n      const userPrincipalName =\n        (this.props && this.props.userDetails && this.props.userDetails.userPrincipalName) || '';\n\n      // call API based on role\n\n      const driverModel: ExicutionLoads = new ExicutionLoads();\n      driverModel.carrierId = carrierId;\n      driverModel.filter = {\n        driverAssigned: true,\n        driverAssignmentPending: true\n      };\n      if (!isEntitled('myLoad', 'carrierAssigned')) {\n        driverModel.driverId = userPrincipalName;\n      }\n      this.props.fetchShipments(driverModel.getRequestPayload(), isHideLoader); // Driver Load Assigned.\n    } catch (error) {\n      console.log('ERROR:', error);\n    }\n  };\n\n  render() {\n    const data =\n      this.props.loads && this.props.loads.length > 99\n        ? this.props.loads.slice(0, 99)\n        : this.props.loads;\n    const driverNameList: any = driverNames(data, MODULES.DRIVER_ASSIGNED_MODULE);\n    return (\n      <>\n        {isPlatform('mobile') ? (\n          <CarrierAssignedPage\n            {...this.props}\n            chnageValue={this.chnageValue}\n            getLoads={this.getDriverLoads}\n            AssignDriverbtn={() => this.assignDriverButton()}\n            module=\"MyLoad\"\n            loads={data}\n            showFilter={this.state.showFilter}\n            driverNameList={driverNameList}\n            isButtonHidden={this.state.isButtonHidden}\n            buttonName={this.state.buttonName}\n            showInitial={this.state.showInitial}\n            subModule={this.props.match.params[0]}\n            isNetworkAvailable={this.props.isNetworkAvailable}\n            showAlert={this.props.showAlert}\n          />\n        ) : (\n          <MyloadSectionContainer {...this.props} />\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  loading: getLoading(),\n  loads: getAssignedLoads(),\n  userDetails: getUserDetails(),\n  isNetworkAvailable: getNetworkStatus()\n});\n\nexport const mapDispatchToProps = (dispatch: Function) => ({\n  AssignDriver: (data: any) => dispatch(AssignDriver(data)),\n  fetchShipments: (details: any, hideLoader: boolean) =>\n    dispatch(fetchShipments(details, hideLoader)),\n  showAlert: (data: any) => dispatch(showAlert(data))\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nconst withReducer = useInjectReducer({ key, reducer });\nconst withSaga = useInjectSaga({ key, saga });\n\nexport default compose(withSaga, withReducer, withConnect)(DriverAssignedContainer);\nexport { DriverAssignedContainer };\n","import React from 'react';\nimport {\n  isPlatform,\n  IonModal,\n  IonContent,\n  IonToolbar,\n  IonButtons,\n  IonTitle,\n  IonIcon\n} from '@ionic/react';\nimport { LoadMap } from './LoadMap';\n\nimport './LoadMap.scss';\n\nexport interface ILoadMapSatelliteProps {\n  locationName: string;\n  showSatelliteMap: boolean;\n  loadStop: any;\n  onDismissSatelliteMap: () => void;\n  shipmentId: string;\n}\n\nexport const LoadMapStartTrip: React.FunctionComponent<ILoadMapSatelliteProps> = (\n  props: ILoadMapSatelliteProps\n) => {\n  const isDesktop = isPlatform('desktop');\n  const { showSatelliteMap, onDismissSatelliteMap, loadStop, shipmentId } = props;\n\n  return (\n    <>\n      <IonModal\n        isOpen={showSatelliteMap}\n        onDidDismiss={() => onDismissSatelliteMap()}\n        animated={false}\n        cssClass={`${isDesktop ? 'satellite-view-desktop' : 'satellite-view-mobile'}`}>\n\n        <IonContent fullscreen={isDesktop}>\n          <IonToolbar className=\"satellite-toolbar\">\n            <IonButtons\n              slot=\"end\"\n              onClick={() => {\n                onDismissSatelliteMap();\n              }}>\n              <IonIcon className=\"satellite-close\" icon=\"close\" />\n            </IonButtons>\n            <IonTitle className=\"satellite-title\">{`${\n              isDesktop ? 'Satellite view' : shipmentId\n            }`}</IonTitle>\n          </IonToolbar>\n          <div className=\"startTrip-map\">\n            <LoadMap loadStop={loadStop} />\n          </div>\n        </IonContent>\n      </IonModal>\n    </>\n  );\n};\nexport default LoadMapStartTrip;\n","import { CompleteTrip } from '../../schemas/Exicution/exicution.schema';\nimport { stopActivityProps } from '../stopActivity.model';\n\nexport class CompleteTripModel {\n  completeTrip(input: CompleteTrip) {\n    return {\n      mutation: {\n        completeTrip: {\n          __args: {\n            input\n          },\n          status: true,\n          message: true,\n          shipment: {\n            shipmentId: true,\n            lineOfBusiness: true,\n            transportMode: true,\n            totalWeight: true,\n            weightUOM: true,\n            driverAssignmentStatus: true,\n            totalDistance: true,\n            distanceUOM: true,\n            numberOfStops: true,\n            sourceTMS: true,\n            assignedCarrierId: true,\n            assignedTMSCarrierId: true,\n            isAppointmentConfirmed: true,\n            isHazardous: true,\n            isHighValue: true,\n            isTemperatureControlled: true,\n            isFreezeProtected: true,\n            readyDateTime: true,\n            readyDateTimeZone: true,\n            equipmentType: true,\n            predecessorShipmentId: true,\n            successorShipmentId: true,\n            assignmentStatus: true,\n            executionStatus: true,\n            masterBillOfLoading: true,\n            shipmentServices: {\n              serviceDescription: true\n            },\n            startCity: true,\n            startCountry: true,\n            startState: true,\n            startDateTime: true,\n            loadStop: {\n              stopId: true,\n              locationId: true,\n              stopType: true,\n              sequenceNo: true,\n              locationName: true,\n              addressLine1: true,\n              addressLine2: true,\n              city: true,\n              state: true,\n              country: true,\n              postalCode: true,\n              timeZone: true,\n              longitude: true,\n              latitude: true,\n              estimatedArrivalDateTime: true,\n              actualETADateTime: true,\n              plannedArrivalDateTime: true,\n              actualArrivalDateTime: true,\n              estimatedStopDuration: true,\n              plannedDepartureDateTime: true,\n              actualDepartureDateTime: true,\n              appointmentEarlyDateTime: true,\n              appointmentLateDateTime: true,\n              estimatedStopDurationUom: true,\n              plannedEtaDateTime: true,\n              stopReference: {\n                id: true,\n                type: true,\n                value: true\n              },\n              locationNotes: {\n                id: true,\n                type: true,\n                value: true\n              },\n              stopActivity: stopActivityProps\n            },\n            shipmentInvolvedParties: {\n              id: true,\n              partyId: true,\n              partyType: true,\n              partyName: true,\n              partyEmail: true,\n              partyPhone: true\n            },\n            shipmentReferences: {\n              id: true,\n              type: true,\n              value: true,\n              stopId: true,\n              shipmentId: true,\n              display: true\n            },\n            assignmentTransaction: {\n              transactionId: true,\n              driverId: true,\n              driverName: true\n            }\n          }\n        }\n      }\n    };\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  IonPage,\n  IonContent,\n  IonRow,\n  IonCol,\n  IonIcon,\n  IonButton,\n  IonToast,\n  IonFooter,\n  isPlatform\n} from \"@ionic/react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { CallNumber } from \"@ionic-native/call-number\";\nimport AppHeader from \"../../../components/app/Bars/Bar-header\";\nimport ShipmentUpdateCard from \"./ShipmentCard\";\nimport useInjectSaga from \"../../../utils/injectSaga\";\nimport useInjectReducer from \"../../../utils/injectReducer\";\nimport { LoadMapStartTrip } from \"../../../components/app/LoadMap/LoadMapStartTrip\";\nimport \"./ShipmentUpdateScreen.scss\";\nimport {\n  loadAssignedrData,\n  inTransitData,\n  completeTripApiRequest,\n  deliveredData\n} from \"../../../actions/carrierAssign/action\";\nimport {\n  getInTransitLoads,\n  getDriverAssignedLoads,\n  getConfirmStartInformation,\n  getStartTripShipmentStatusMessage,\n  getRecentDeliveredLoads,\n} from \"../../../selectors/Myload/selector\";\nimport saga from \"../../../saga/CarrierAssign/saga\";\nimport reducer from \"../../../reducers/carrierAssign/reducer\";\nimport {\n  getUserDetails,\n  getNetworkStatus,\n  getRefreshStatus\n} from \"../../../selectors/selector\";\nimport { clearConfirmStartInformationStatusMessage, clearUpdateStopInformationResponse } from \"../../../actions/myload/action\";\nimport {\n  getStartTripShipment,\n  getStartTripShipmentTimeStamp\n} from \"../../../selectors/carrierAssign/selector\";\nimport { IShipmentUpdateScreenState } from \"../../../schemas/StartTrip/StartTrip\";\nimport { StartTripModel } from \"../../../models/home/StartTrip.model\";\nimport {\n  COMPLETE_TRIP_CTA_TEXT,\n  CALL_US_TEXT,\n  CALL_US_NUMBER,\n  ExecutionStatus,\n  DB_GPS_ACTIVATED_SHIPMENT,\n  SOUND_SRC,\n  EVENT,\n  SCREEN,\n  KEYS,\n  ENV,\n  USER_TYPE,\n  PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n  NO_NEWORK\n} from \"../../../utils/constants\";\nimport { CompleteTripModel } from \"../../../models/home/CompleteTrip.model\";\nimport {\n  getItem,\n  GPSWrapper,\n  setItem,\n  removeItem\n} from \"../../../utils/common\";\nimport { logEvent } from \"../../../utils/Analytics\";\nimport { LoadMapSatellite } from \"../LoadMap/LoadMapSatellite\";\nimport PullToRefresh from \"../../../components/PullToRefresh/PullToRefresh\";\nimport { buyLoadShipmentRequest } from \"../../../actions/BookLoad/action\";\nimport { GetShipment } from \"../../../models/home/GetShipment.model\";\nimport { showAlert } from \"../../../actions/App/action\";\n\nclass ShipmentUpdateScreen extends Component<any, IShipmentUpdateScreenState> {\n  currentHistory: any;\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      isCompleteTrip: false,\n      loadDetails: {},\n      showSatelliteMap: false,\n      satelliteLocation: \"\",\n      showHybridSatelliteMap: false,\n      hybridSatelliteLocation: \"\",\n      satelliteLatLng: {\n        lng: \"\",\n        lat: \"\"\n      },\n      showDialog: false,\n      loadStop: [],\n      // isGPSEnabled: false,\n      isConfirmStartClicked: false\n      // isGPSstartPingSent: false,\n    };\n    this.currentHistory = this.props.history.location;\n  }\n\n\n  /**\n   * enableGPS service based on user type and Execution Status\n   * * @param {*} props data\n   * @returns null.\n   */\n  enableGPS = async (params: any, userDetails: any) => {\n    if (isPlatform(\"capacitor\")) {\n      const _shipment = (await getItem(DB_GPS_ACTIVATED_SHIPMENT)).value; // retived shipmentID from local storage\n      const gpsActivatedShipmentID =\n        _shipment && JSON.parse(_shipment).shipmentID;\n      params.shipmentInvolvedParties.map(async (party: any, index: any) => {\n        if (\n          !gpsActivatedShipmentID &&\n          params.executionStatus &&\n          party.partyId &&\n          party.partyId.toUpperCase() === userDetails.email.toUpperCase() && // Checked Assigned load for same user or not\n          party.partyType.toUpperCase() === USER_TYPE.PRIMARY_DRIVER && // Checked user type is PRIMARY_DRIVER or not\n          (params.executionStatus.toUpperCase() === ExecutionStatus.STARTED ||\n            params.executionStatus === ExecutionStatus.IN_TRANSIT) // GPS only started for Execution Status as STARTED or IN_TRANSIT\n        ) {\n          const shipment = {\n            userId: userDetails.email,\n            carrierId: userDetails.carrierId,\n            activity: \"\",\n            carrierScac: \"\",\n            shipmentID: params.shipmentId,\n            sourceTMS: params.sourceTMS,\n            loadStops: params.loadStop\n          };\n          // Start the GPS service\n          GPSWrapper.details.startGPStracking(shipment);\n          await setItem(DB_GPS_ACTIVATED_SHIPMENT, JSON.stringify(shipment)); // Store the shipmentID in local storage to check this shipment is started or not\n\n          // Analytics implementation\n          this.sendAnalyticsEvent(\n            EVENT.UE_START_TRIP,\n            SCREEN.SHIPMENT_DETAILS,\n            userDetails.carrierId,\n            params.shipmentId\n          );\n\n          // Eneble Audio notification for UNT env for start GPS\n          if (KEYS.RELEASE === ENV.UNT) {\n            const sound = new Audio();\n            sound.src = SOUND_SRC.START_TRIP;\n            sound.play();\n          }\n        }\n      });\n    }\n  };\n\n  /**\n   * Stop the GPS based on Execution Status\n   * * @param {*} props data\n   * @returns null.\n   */\n  disableGPS = async (params: any) => {\n    if (isPlatform(\"capacitor\")) {\n      const _shipment = (await getItem(DB_GPS_ACTIVATED_SHIPMENT)).value; // retived shipmentID from local storage\n      const gpsActivatedShipmentID =\n        _shipment && JSON.parse(_shipment).shipmentID;\n\n      if (\n        gpsActivatedShipmentID &&\n        params.executionStatus &&\n        gpsActivatedShipmentID === params.shipmentId && // Checked same shipmentID or not to Stop GPS\n        (params.executionStatus.toUpperCase() === ExecutionStatus.DELIVERED ||\n          params.executionStatus.toUpperCase() === ExecutionStatus.COMPLETED)\n      ) {\n        // GPS only Stop for Execution Status as DELIVERED or COMPLETED\n\n        await removeItem(DB_GPS_ACTIVATED_SHIPMENT);\n        GPSWrapper.details.stopGPS();\n        this.setState({\n          // isGPSEnabled: false,\n          isConfirmStartClicked: false\n          // isGPSstartPingSent: false,\n        });\n\n        if (KEYS.RELEASE === ENV.UNT) {\n          // Eneble Audio notification for UNT env for Stop GPS\n          const sound = new Audio();\n          sound.src = SOUND_SRC.STOP_TRIP;\n          sound.play();\n        }\n      }\n    }\n  };\n\n  // Analytics implementation\n  sendAnalyticsEvent = (\n    event: any,\n    screen: any,\n    carrierId: string,\n    shipmentId: string\n  ) => {\n    logEvent(event, {\n      screen,\n      carrierId,\n      shipmentId\n    });\n  };\n\n  /**\n   * GPS tracking wii start, if driver confirms any CTA\n   * * @param location\n   * @returns null.\n   */\n  GPSEnabledEvent = async (location?: any) => {\n    await this.enableGPS(this.state.loadDetails, this.props.userDetails);\n    // Confirm Start Clicked event for GPS\n    if (location) {\n      await this.sendGPSstartPing(\n        this.state.loadDetails,\n        this.props.userDetails\n      );\n    }\n  };\n\n  completeTripClick = () => {\n    if (!this.props.networkStatus) {\n      this.props.showAlert({\n        isShowAlert: true,\n        alertMessage: PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n        alertTitle: NO_NEWORK\n      });\n      return;\n    }\n    const { loadDetails = {} } = this.state;\n    this.completeTripRequest(loadDetails.sourceTMS, loadDetails.shipmentId);\n  };\n\n  completeTripRequest(sourceSystem: string, shipmentId: string) {\n    const { userDetails = {} } = this.props;\n\n    const objModel: CompleteTripModel = new CompleteTripModel();\n    this.props.shipmentCompleteTrip(\n      objModel.completeTrip({\n        carrierId: userDetails.carrierId,\n        shipmentId,\n        sourceSystem,\n        userId: userDetails.userPrincipalName\n      }),\n      shipmentId\n    );\n\n    // Analytics implementation\n    logEvent(EVENT.UE_COMPLETE_TRIP, {\n      screen: SCREEN.SHIPMENT_DETAILS,\n      carrierId: userDetails.carrierId,\n      shipmentId\n    });\n  }\n\n  callusClick = () => {\n    const callNumber = CALL_US_NUMBER.OTM;\n    CallNumber.callNumber(callNumber, true)\n      .then(res => {})\n      .catch(err => {});\n  };\n\n  private readonly getLoadStops = (): any[] => {\n    let loadStop: any[] =\n      (this.state.loadDetails && this.state.loadDetails.loadStop) || [];\n    loadStop = loadStop.slice().sort((load1: any, load2: any) => {\n      if (load1.sequenceNo && load2.sequenceNo) {\n        return load1.sequenceNo - load2.sequenceNo;\n      }\n      if (load1.stopSequence && load2.stopSequence) {\n        return load1.stopSequence - load2.stopSequence;\n      }\n      return 0;\n      \n    });\n\n    return loadStop;\n  };\n\n  getValueFromHistoryState = (key: string) => {\n    if (key) {\n      return (\n        this.props &&\n        this.props.history &&\n        this.props.history.location.state &&\n        this.props.history.location.state[key]\n      );\n    }\n    return null;\n  };\n\n  // send Geo Start Trip Location Notification to backend\n  sendGPSstartPing = async (params: any, userDetails: any) => {\n    if (isPlatform(\"capacitor\")) {\n      const _shipment = (await getItem(DB_GPS_ACTIVATED_SHIPMENT)).value; // retived shipmentID from local storage\n      const gpsActivatedShipmentID =\n        _shipment && JSON.parse(_shipment).shipmentID;\n      params.shipmentInvolvedParties.map(async (party: any, index: any) => {\n        if (\n          gpsActivatedShipmentID &&\n          gpsActivatedShipmentID === params.shipmentId && // if the GPS already started (gpsActivated ShipmentID already present in local DB)\n          party.partyId &&\n          party.partyId.ignoreCase === userDetails.email.ignoreCase && // Checked Assigned load for same user or not\n          party.partyType.toUpperCase() === USER_TYPE.PRIMARY_DRIVER && // Checked user type is PRIMARY_DRIVER or not\n          // && !this.state.isGPSstartPingSent\n          // && this.state.isConfirmStartClicked\n          userDetails &&\n          this.props\n        ) {\n          const shipment = {\n            userId: userDetails.email,\n            carrierId: userDetails.carrierId,\n            activity: \"\",\n            carrierScac: \"\",\n            shipmentID: params.shipmentId,\n            sourceTMS: params.sourceTMS,\n            loadStops: params.loadStop\n          };\n          GPSWrapper.details.sendGeoStartTripLocation(shipment);\n        }\n      });\n    }\n  };\n\n  getUpdatedShipment = () => {\n    const shipmentId =\n      (this.state.loadDetails && this.state.loadDetails.shipmentId) || \"\";\n    const getShipmentmodel: GetShipment = new GetShipment();\n    getShipmentmodel.shipmentIds = shipmentId;\n    this.props.buyLoadShipmentRequest({\n      query: getShipmentmodel.getRequestShipmentPayload(),\n      shipmentId,\n      module: this.getValueFromHistoryState(\"module\"),\n      isPullToRefresh: true\n    });\n    this.props.clearUpdateStopInfo();\n  };\n\n  render() {\n    const currentLocation = this.getValueFromHistoryState(\n      \"isCurrentLocationOn\"\n    );\n    const module = this.getValueFromHistoryState(\"module\");\n    const starTripModel = new StartTripModel();\n\n    return (\n      <IonPage>\n        <LoadMapSatellite\n          locationName={this.state.hybridSatelliteLocation}\n          position={{\n            lat: this.state.satelliteLatLng.lat\n              ? parseFloat(this.state.satelliteLatLng.lat)\n              : \"\",\n            lng: this.state.satelliteLatLng.lng\n              ? parseFloat(this.state.satelliteLatLng.lng)\n              : \"\"\n          }}\n          shipmentId={\n            this.state.loadDetails && this.state.loadDetails.shipmentId\n          }\n          showSatelliteMap={this.state.showHybridSatelliteMap}\n          onDismissSatelliteMap={() => {\n            this.setState({ showHybridSatelliteMap: false });\n          }}\n        />\n        <IonToast\n          isOpen={this.getConfirmStartStatus()}\n          message={this.getConfirmStartMessage()}\n          duration={5000}\n          color=\"dark\"\n          onDidDismiss={() => {\n            this.props.clearConfirmReasponse();\n          }}\n        />\n        <LoadMapStartTrip\n          showSatelliteMap={this.state.showSatelliteMap}\n          locationName={this.state.satelliteLocation}\n          loadStop={\n            (this.state.loadDetails && this.state.loadDetails.loadStop) || []\n          }\n          onDismissSatelliteMap={() => {\n            this.setState({ showSatelliteMap: false });\n          }}\n          shipmentId={\n            (this.state.loadDetails && this.state.loadDetails.shipmentId) || \"\"\n          }\n        />\n\n        <AppHeader\n          title={\n            (this.state.loadDetails && this.state.loadDetails.shipmentId) || \"\"\n          }\n          backUrl={`/app/${module}`}\n          isMap\n          History={this.props.history}\n          viewMap={() => {\n            this.setState({ showSatelliteMap: true });\n          }}\n        />\n        <IonContent className=\"shipment-content\">\n          <IonContent class=\"shipment-page-content\">\n            <PullToRefresh\n              onPullToRefresh={this.getUpdatedShipment}\n              status={this.props.isInPullToRefresh}\n            />\n            <ShipmentUpdateCard\n              timestamp={this.props.timestamp}\n              currentLocation={currentLocation}\n              locationValue\n              completeTripClick={this.completeTripClick}\n              GPSEnabledEvent={this.GPSEnabledEvent}\n              completeTripRequest={this.completeTripRequest}\n              shipmentloadStop={this.getLoadStops()}\n              networkStatus={this.props.networkStatus}\n              shipmentId={\n                (this.state.loadDetails && this.state.loadDetails.shipmentId) ||\n                \"\"\n              }\n              carrierId={this.props.userDetails.carrierId}\n              loadDetails={this.state.loadDetails}\n              moduleName={this.props.moduleName}\n              refreshShipmentsLoads={this.refreshShipmentsLoads}\n              refreshShipmentInDriverLoads={this.refreshDriverList}\n              openSatelliteMap={(\n                locationName: string,\n                latLng: {\n                  lng: string;\n                  lat: string;\n                }\n              ) => {\n                this.setState({\n                  hybridSatelliteLocation: locationName,\n                  showHybridSatelliteMap: true,\n                  satelliteLatLng: {\n                    lng: latLng.lng,\n                    lat: latLng.lat\n                  }\n                });\n              }}\n            />\n            <IonRow class=\"btn-call-chat\">\n              <IonCol>\n                <IonButton class=\"load-btn\" onClick={this.callusClick}>\n                  <IonIcon src=\"assets/icon/Phone.svg\" /> {CALL_US_TEXT}\n                </IonButton>\n              </IonCol>\n              {/* <IonCol>\n                <IonButton class=\"load-btn\">\n                  <IonIcon src=\"assets/icon/chat.svg\" /> {CHAT_TEXT}\n                </IonButton>\n              </IonCol> */}\n            </IonRow>\n\n            {/* <IonGrid class=\"document-grid\">\n            <IonButton class=\"add-documnet-btn-mobile\">\n              <IonIcon src=\"assets/icon/plus.svg\" /> Add Document\n            </IonButton>{\" \"}\n          </IonGrid>\n          <div className=\"document-shipment\">\n            <DocumentCard />\n          </div> */}\n          </IonContent>\n          <IonFooter class=\"loadPageFooter\">\n            {(starTripModel.isAllStopCompleted(this.getLoadDetails()) &&\n              !starTripModel.isTripCompleted(this.getLoadDetails()) && (\n              <IonButton\n                expand=\"full\"\n                class=\"complete-load-btn\"\n                onClick={this.completeTripClick}\n              >\n                <img\n                  src=\"/assets/icon/complete-trip.svg\"\n                  className=\"complete-icon\"\n                  alt=\"\"\n                />\n                {COMPLETE_TRIP_CTA_TEXT}\n              </IonButton>\n            )) ||\n              null}\n          </IonFooter>\n        </IonContent>\n      </IonPage>\n    );\n  }\n\n  async componentDidMount() {\n    this.getValueFromHistoryState(\"withGPS\");\n    const loadDetails = this.getLoadDetails();\n    this.setState({ loadDetails });\n  }\n\n  async componentDidUpdate(\n    prevProps: any,\n    prevState: IShipmentUpdateScreenState\n  ) {\n    let loadDetails = this.getLoadDetails();\n    let isForceUpdate = false;\n    if (\n      JSON.stringify(prevProps.confirmStartInfo) !==\n      JSON.stringify(this.props.confirmStartInfo)\n    ) {\n      loadDetails = this.props.confirmStartInfo;\n      isForceUpdate = true;\n    }\n    if (\n      JSON.stringify(loadDetails) !== JSON.stringify(this.state.loadDetails) ||\n      isForceUpdate\n    ) {\n      this.setState({ loadDetails });\n    }\n\n    if (isPlatform(\"capacitor\")) {\n      const _shipment = (await getItem(DB_GPS_ACTIVATED_SHIPMENT)).value; // retived shipmentID from local storage\n      const gpsActivatedShipmentID = _shipment && JSON.parse(_shipment).shipmentID;\n      if (!gpsActivatedShipmentID || (gpsActivatedShipmentID && gpsActivatedShipmentID === this.state.loadDetails.shipmentId)) {\n        // If no GPS tracking or same shipment which is already started\n        // Sending the refreshed loadDetails\n        GPSWrapper.details.setLoadDetailsTrackedShipment(\n          this.state.loadDetails.loadStop\n        );\n      }\n      // GPS tracking will be stop, once  ExecutionStatus is DELIVERED\n      await this.disableGPS(loadDetails);\n    }\n  }\n\n  /*\n   * refreshing the driver list\n   * @shipment -vload details.\n   * @returns - void.\n   */\n  private readonly refreshDriverList = (shipment: any) => {\n    const shipmentId: string = shipment && shipment.shipmentId;\n    if (!shipmentId) {\n      return;\n    }\n\n    let driverLoad: any[] = this.props.driverLoads.filter(\n      (item: any) => item.shipmentId !== shipmentId\n    );\n\n    driverLoad = driverLoad.concat({ ...shipment });\n    this.props.refreshDriverLoads(driverLoad);\n  };\n\n  private readonly getLoadDetails = (): any => {\n    return this.props.shipmentToStartTrip || {};\n  };\n\n  private readonly getConfirmStartStatus = () => {\n    const response = this.props.startTripShipmentStatusMessage || {};\n    return response.status === false;\n  };\n\n  private readonly getConfirmStartMessage = () => {\n    const response = this.props.startTripShipmentStatusMessage || {};\n    return response.message;\n  };\n\n  private readonly refreshShipmentsLoads = (shipment: any) => {\n    if (shipment.executionStatus === ExecutionStatus.IN_TRANSIT) {\n      this.removeLoadsFromDriverToIntransit(shipment);\n    } else if (shipment.executionStatus === ExecutionStatus.DELIVERED) {\n      this.removeLoadsFromIntransitToDelivered(shipment);\n    }\n  };\n\n  private readonly removeLoadsFromDriverToIntransit = (shipment: any) => {\n    const shipmentId: string = shipment && shipment.shipmentId;\n    if (!shipmentId) {\n      return;\n    }\n\n    const driverLoad: any[] = this.props.driverLoads.filter(\n      (item: any) => item.shipmentId !== shipmentId\n    );\n\n    const isExists =\n      this.props.driverLoads.filter(\n        (item: any) => item.shipmentId === shipmentId\n      ).length > 0;\n\n    if (isExists) {\n      let inTransitLoads: any[] = this.props.inTransitLoads || [];\n      if (shipment) {\n        inTransitLoads = inTransitLoads.concat({ ...shipment });\n      }\n\n      this.props.refreshDriverLoads(driverLoad);\n      this.props.refreshInTransitLoad(inTransitLoads);\n    }\n  };\n\n  private readonly removeLoadsFromIntransitToDelivered = (shipment: any) => {\n    const shipmentId: string = shipment && shipment.shipmentId;\n    if (!shipmentId) {\n      return;\n    }\n\n    const inTransitLoads: any[] = this.props.inTransitLoads.filter(\n      (item: any) => item.shipmentId !== shipmentId\n    );\n\n    const isExists =\n      this.props.inTransitLoads.filter(\n        (item: any) => item.shipmentId === shipmentId\n      ).length > 0;\n\n    if (isExists) {\n      let recentDelivered: any[] = this.props.recentDelivered || [];\n      if (shipment) {\n        recentDelivered = recentDelivered.concat({ ...shipment });\n      }\n\n      this.props.refereshRecentDelivered(recentDelivered);\n      this.props.refreshInTransitLoad(inTransitLoads);\n    }\n  };\n}\n\nconst mapStateToProps = createStructuredSelector({\n  driverLoads: getDriverAssignedLoads(),\n  inTransitLoads: getInTransitLoads(),\n  recentDelivered: getRecentDeliveredLoads(),\n  userDetails: getUserDetails(),\n  confirmStartInfo: getConfirmStartInformation(),\n  networkStatus: getNetworkStatus(),\n  shipmentToStartTrip: getStartTripShipment(),\n  timestamp: getStartTripShipmentTimeStamp(),\n  startTripShipmentStatusMessage: getStartTripShipmentStatusMessage(),\n  isInPullToRefresh: getRefreshStatus()\n});\n\nexport const mapDispatchToProps = (dispatch: Function) => ({\n  refreshDriverLoads: (data: any[]) => {\n    dispatch(loadAssignedrData(data, data.length));\n  },\n  refreshInTransitLoad: (data: any[]) => {\n    dispatch(inTransitData(data, data.length));\n  },\n  refereshRecentDelivered: (data: any[]) => {\n    dispatch(deliveredData(data, data.length));\n  },\n  clearConfirmReasponse: () => {\n    dispatch(clearConfirmStartInformationStatusMessage());\n  },\n  shipmentCompleteTrip: (data: any, shipmentId: string) => {\n    dispatch(completeTripApiRequest(data, shipmentId));\n  },\n  showAlert: (data: any) => dispatch(showAlert(data)),\n  buyLoadShipmentRequest: (payload: any) =>\n    dispatch(buyLoadShipmentRequest(payload)),\n  clearUpdateStopInfo: () => dispatch(clearUpdateStopInformationResponse())\n});\n\nconst key = \"carrierAssigned\";\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nconst withReducer = useInjectReducer({ key, reducer });\nconst withSaga = useInjectSaga({ key, saga });\n\nexport default compose<any>(\n  withSaga,\n  withReducer,\n  withConnect\n)(ShipmentUpdateScreen);\nexport { ShipmentUpdateScreen };\n","import React, { PureComponent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { isPlatform } from \"@ionic/react\";\nimport useInjectSaga from \"../../../utils/injectSaga\";\nimport useInjectReducer from \"../../../utils/injectReducer\";\nimport saga from \"../../../saga/CarrierAssign/saga\";\nimport { getLoading, getUserDetails, getNetworkStatus } from \"../../../selectors/selector\";\nimport CarrierAssignedPage from \"../../../pages/Execute/CarrierAssigned/CarrierAssignedPage.page\";\nimport { getInTransitLoad } from \"../../../selectors/carrierAssign/selector\";\nimport reducer from \"../../../reducers/carrierAssign/reducer\";\nimport { fetchShipments } from \"../../../actions/carrierAssign/action\";\nimport { DriverList } from \"../../../models/home/CarrierAssign.model\";\nimport { isEntitled } from \"../../../utils/common\";\nimport { MyloadSectionContainer } from \"../sectionContainer\";\nimport { ExicutionLoads } from \"../../../models/ExicutionLoads.model\";\nimport { showAlert } from \"../../../actions/App/action\";\nimport driverNames from \"../../../utils/getDriverNameList\";\nimport { MODULES } from \"../../../utils/constants\";\n\nconst key = \"carrierAssigned\";\n\nclass InTransitContainer extends PureComponent<any, any> {\n  __Model: DriverList;\n\n  // Completion Handler for  Pull to Refresh.\n  private readonly complete: () => void = () => { };\n\n  constructor(props: any) {\n    super(props);\n    this.__Model = new DriverList();\n    this.state = {\n      showFilter: isEntitled(\"myLoad\", \"filter\"),\n      buttonName: isEntitled(\"myLoad\", \"filter\") ? \"Change Driver\" : \"\",\n      showInitial: isEntitled(\"myLoad\", \"filter\")\n    };\n  }\n\n  componentDidMount() {\n    if (\n      this.props.data &&\n      this.props.data.length === 0 &&\n      !this.props.loading\n    ) {\n      this.props.updateData();\n    }\n  }\n\n  chnageValue = () => {\n    this.props.changeToasterValue();\n  };\n\n  assignDriverButton = () => {\n    this.props.AssignDriver(this.__Model.getRequestPayload());\n    this.props.history.push(\"/app/MyLoad/driverAssign\");\n  };\n\n  getDriverLoads = (isHideLoader = true) => {\n    try {\n      const carrierId =\n        (this.props &&\n          this.props.userDetails &&\n          this.props.userDetails.carrierId) ||\n        \"\";\n      const userPrincipalName =\n        (this.props &&\n          this.props.userDetails &&\n          this.props.userDetails.userPrincipalName) ||\n        \"\";\n      const driverModel: ExicutionLoads = new ExicutionLoads();\n      driverModel.carrierId = carrierId;\n      driverModel.filter = { inTransit: true };\n      if (!isEntitled(\"myLoad\", \"carrierAssigned\")) {\n        driverModel.driverId = userPrincipalName;\n      }\n      this.props.fetchShipments(driverModel.getRequestPayload(), isHideLoader); // Driver Load Assigned.\n    } catch (error) {\n      console.log(\"ERROR:\", error);\n    }\n  };\n\n  render() {\n    const data = this.props.loads && this.props.loads.length > 99 ? this.props.loads.slice(0,99) : this.props.loads;\n    const driverNameList: any = driverNames(data, MODULES.INTRANSIT_MODULE);\n    return (\n      <>\n        {isPlatform(\"mobile\") ? (\n          <CarrierAssignedPage\n            data-test= 'CarrierAssignedPage'\n            {...this.props}\n            chnageValue={this.chnageValue}\n            getLoads={this.getDriverLoads}\n            AssignDriverbtn={() => this.assignDriverButton()}\n            module=\"MyLoad\"\n            loads={data}\n            showFilter={this.state.showFilter}\n            driverNameList={driverNameList}\n            isButtonHidden\n            buttonName={this.state.buttonName}\n            showInitial={this.state.showInitial}\n            subModule={this.props.match.params[0]}\n            isNetworkAvailable={this.props.isNetworkAvailable}\n            showAlert={this.props.showAlert}\n          />\n        ) : (\n          <MyloadSectionContainer {...this.props} />\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  loading: getLoading(),\n  loads: getInTransitLoad(),\n  userDetails: getUserDetails(),\n  isNetworkAvailable: getNetworkStatus()\n});\n\nconst mapDispatchToProps = (dispatch: Function) => ({\n  fetchShipments: (details: any, hideLoader: boolean) => dispatch(fetchShipments(details, hideLoader)),\n  showAlert: (data: any) => dispatch(showAlert(data)),\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nconst withReducer = useInjectReducer({ key, reducer });\nconst withSaga = useInjectSaga({ key, saga });\n\nexport {InTransitContainer};\nexport default compose(withSaga, withReducer, withConnect)(InTransitContainer);\n\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport { isPlatform } from '@ionic/react';\nimport useInjectSaga from '../../../utils/injectSaga';\nimport useInjectReducer from '../../../utils/injectReducer';\nimport saga from '../../../saga/CarrierAssign/saga';\nimport { getUserDetails, getNetworkStatus } from '../../../selectors/selector';\nimport CarrierAssignedPage from '../../../pages/Execute/CarrierAssigned/CarrierAssignedPage.page';\nimport { getDeliveredLoad } from '../../../selectors/carrierAssign/selector';\nimport reducer from '../../../reducers/carrierAssign/reducer';\nimport { fetchShipments } from '../../../actions/carrierAssign/action';\nimport { DriverList } from '../../../models/home/CarrierAssign.model';\nimport { isEntitled } from '../../../utils/common';\nimport { MyloadSectionContainer } from '../sectionContainer';\nimport { ExicutionLoads } from '../../../models/ExicutionLoads.model';\nimport { showAlert } from '../../../actions/App/action';\nimport driverNames from '../../../utils/getDriverNameList';\nimport { MODULES } from '../../../utils/constants';\n\nconst key = 'carrierAssigned';\n\nclass DeliveredContainer extends PureComponent<any, any> {\n  __model: DriverList;\n\n  constructor(props: any) {\n    super(props);\n    this.__model = new DriverList();\n    this.state = {\n      showFilter: isEntitled('myLoad', 'filter'),\n      buttonName: isEntitled('myLoad', 'filter') ? 'Change Driver' : '',\n      showInitial: isEntitled('myLoad', 'filter')\n    };\n  }\n\n  chnageValue = () => {\n    this.props.changeToasterValue();\n  };\n\n  getDriverLoads = (isHideLoader = true) => {\n    try {\n      const carrierId =\n        (this.props && this.props.userDetails && this.props.userDetails.carrierId) || '';\n      const userPrincipalName =\n        (this.props && this.props.userDetails && this.props.userDetails.userPrincipalName) || '';\n      const driverModel: ExicutionLoads = new ExicutionLoads();\n      driverModel.carrierId = carrierId;\n      driverModel.filter = { delivered: true };\n      if (!isEntitled('myLoad', 'carrierAssigned')) {\n        driverModel.driverId = userPrincipalName;\n      }\n      this.props.fetchShipments(driverModel.getRequestPayload(), isHideLoader); // Driver Load Assigned.\n    } catch (error) {\n      console.log('ERROR:', error);\n    }\n  };\n\n  render() {\n    const data =\n      this.props.loads && this.props.loads.length > 99\n        ? this.props.loads.slice(0, 99)\n        : this.props.loads;\n    const driverNameList: any = driverNames(data, MODULES.RECENTLY_DELIVERED_MODULE);\n\n    return (\n      <>\n        {isPlatform('mobile') ? (\n          <CarrierAssignedPage\n            data-test=\"CarrierAssignedPage\"\n            {...this.props}\n            chnageValue={this.chnageValue}\n            getLoads={this.getDriverLoads}\n            AssignDriverbtn={() => {}}\n            module=\"MyLoad\"\n            loads={data}\n            showFilter={this.state.showFilter}\n            driverNameList={driverNameList}\n            isButtonHidden\n            buttonName={this.state.buttonName}\n            showInitial={this.state.showInitial}\n            subModule={this.props.match.params[0]}\n            isNetworkAvailable={this.props.isNetworkAvailable}\n            showAlert={this.props.showAlert}\n          />\n        ) : (\n          <MyloadSectionContainer {...this.props} />\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  loads: getDeliveredLoad(),\n  userDetails: getUserDetails(),\n  isNetworkAvailable: getNetworkStatus()\n});\n\nconst mapDispatchToProps = (dispatch: Function) => ({\n  fetchShipments: (details: any, hideLoader: boolean) =>\n    dispatch(fetchShipments(details, hideLoader)),\n  showAlert: (data: any) => dispatch(showAlert(data))\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nconst withReducer = useInjectReducer({ key, reducer });\nconst withSaga = useInjectSaga({ key, saga });\n\nexport default compose(withSaga, withReducer, withConnect)(DeliveredContainer);\nexport { DeliveredContainer };\n","import { IRecommendedLoadRequest } from \"../../schemas/RecommendedLoads/RecommendedLoads.schema\";\nimport { setObject, getObject } from \"../../utils/common\";\n\nexport class RecommendedModel {\n  constructor() {}\n\n  private __recommended_state: IRecommendedLoadRequest = {\n    carrierId: \"\",\n    carrierScac: \"\",\n    carrierTier: \"\",\n    page: 0,\n    size: 5,\n    sortColumn:\"pickupDate\",\n    sortDirection:'asc'\n\n  };\n  get carrierId() {\n    return this.__recommended_state.carrierId;\n  }\n  set carrierId(value) {\n    if (value) {\n      this.__recommended_state.carrierId = value;\n    }\n  }\n  get carrierScac() {\n    return this.__recommended_state.carrierScac;\n  }\n\n  set carrierScac(value) {\n    if (value) {\n      this.__recommended_state.carrierScac = value;\n    }\n  }\n  get carrierTier() {\n    return this.__recommended_state.carrierTier;\n  }\n\n  set carrierTier(value) {\n    if (value) {\n      this.__recommended_state.carrierTier = value;\n    }\n  }\n\n  get page() {\n    return this.__recommended_state.page;\n  }\n  set page(value) {\n    if (value) {\n      this.__recommended_state.page = value;\n    }\n  }\n\n  get size() {\n    return this.__recommended_state.size;\n  }\n  set size(value) {\n    if (value) {\n      this.__recommended_state.size = value;\n    }\n  }\n  get sortColumn() {\n    return this.__recommended_state.sortColumn;\n  }\n  set sortColumn(value) {\n    if (value) {\n      this.__recommended_state.sortColumn = value;\n    }\n  }\n  get sortDirection() {\n    return this.__recommended_state.sortDirection;\n  }\n  set sortDirection(value) {\n    if (value) {\n      this.__recommended_state.sortDirection = value;\n    }\n  }\n\n\n  persistLoads(_loads: []) {\n    return setObject('Carrier-rcmd-Loads', _loads);\n}\n\ngetLoads() {\n    return getObject('Carrier-rcmd-Loads');\n}\ngetRequestPayload() {\n    return {\n      query: {\n        recommendedLoads: {\n          __args: {\n            input: this.__recommended_state,\n          },\n          totalRecords: true,\n          loadPostings :{\n            loadId: true,\n            loadPostingStatus: true,\n            sourceSystem : true,\n            hasAppointments: true,\n            isHazardous: true,\n            isHighValue: true,\n            isTemperatureControlled: true,\n            totalDistance: true,\n            distanceUOM: true,\n            totalWeight: true,\n            weightUOM: true,\n            numberOfStops: true,\n            transportMode: true,\n            termsAndConditions: true,\n            rate :{\n              binRateIdentifier: true,\n              binSource: true,\n              totalCharge: true,\n              lineHaulCharge :{\n                charge: true,\n                unitCharge: true,\n                quantity: true,\n                rateQualifier: true,\n            chargeDescription: true,\n              },\n              fuelCharge :{\n                charge: true,\n                unitCharge: true,\n                quantity: true,\n                rateQualifier: true,\n            chargeDescription: true,\n              },\n              accessorials :{\n                accessorialCode: true,\n                accessorialDescription: true,\n                accessorialType: true,\n                accessorialCharge :{\n                  charge: true,\n                  unitCharge: true,\n                  quantity: true,\n                  rateQualifier: true,\n            chargeDescription: true,\n                }\n              }\n            },\n            loadStop :{\n              stopSequence: true,\n              stopType: true,\n              activityType: true,\n              city: true,\n              state: true,\n              postalCode: true,\n              country: true,\n              stopId: true,\n              appointmentFrom: true,\n              appointmentTo: true,\n              timeZone: true,\n              deadHead: true,\n              specialServices:{\n\n                specialServiceDesc: true,\n              }      \n            }\n          }\n        },\n      },\n    };\n  }\n}\n","import { all, put, call, takeLatest, select } from \"redux-saga/effects\";\nimport {\n  showLoading,\n  hideLoading,\n  showPullToRefresh,\n  hidePullToRefresh\n} from \"../../actions/Login/action\";\nimport * as constants from \"../../utils/constants\";\nimport request from \"../../utils/request\";\nimport {\n  loadData,\n  addWatchLoadSuccess,\n  removeWatchLoadSuccess,\n  recommendedLoadsSuccess\n} from \"../../actions/Home/action\";\nimport { watchLoadsResponse } from \"../../actions/Home/action\";\nimport { DomainConverter } from \"../../utils/common\";\nimport { getSearchParams, getPullToRefreshState } from \"app/selectors/selector\";\nimport { checkTimeInterval } from \"../App/saga\";\nimport { updateSearchParamsInOfflineJSON } from \"app/actions/App/action\";\n\nexport function* updateData() {\n  console.log(\"watcghedDta:\");\n  try {\n    yield put(showLoading());\n    const repos = yield call(request, [\"HOME\", \"RECOMMENDED_LOADS\"]);\n    //console.log(repos);\n    //const repos = loadPostings;\n    yield put(loadData(repos));\n    yield put(hideLoading());\n  } catch (e) {\n    // yield __model.getLoads() && put(loadData(__model.getLoads()));\n    yield put(hideLoading());\n  }\n}\nexport function* watchedLoads(action: any) {\n  /* const searchParamsSelector = getSearchParams();\n  const searchParamsState = yield select(searchParamsSelector);\n  if (\n    searchParamsState &&\n    checkTimeInterval(\n      searchParamsState.WatchedLoads,\n      searchParamsState.WatchedLoadsInterval\n    ) &&\n    !action.payload.refreshStatus\n  ) {\n    return;\n  } */\n  try {\n    yield put(\n      action.payload.refreshStatus ? showPullToRefresh() : showLoading()\n    );\n    let watchedReqestQuery = DomainConverter.domainToData<any>(\n      action.payload.query\n    );\n    const watchedResults = yield call(request, [\n      \"RECENT\",\n      \"RECENT\",\n      null,\n      \"\",\n      watchedReqestQuery,\n      \"application/json\"\n    ]);\n    yield put(\n      watchLoadsResponse({\n        watchedResults,\n        refreshStatus: action.payload.refreshStatus\n      })\n    );\n    yield put(\n      action.payload.refreshStatus ? hidePullToRefresh() : hideLoading()\n    );\n    if (action.payload.callback) {\n      const results =\n        (watchedResults &&\n          watchedResults.data &&\n          watchedResults.data.getUserWatchedLoads &&\n          watchedResults.data.getUserWatchedLoads.loadPostings) ||\n        [];\n      action.payload.callback(results.length);\n    }\n    /* yield put(\n      updateSearchParamsInOfflineJSON({\n        WatchedLoads: new Date().toUTCString(),\n        WatchedLoadsInterval: \"5\"\n      })\n    ); */\n  } catch (e) {\n    yield put(\n      action.payload.refreshStatus ? hidePullToRefresh() : hideLoading()\n    );\n  }\n}\n\nexport function* recommendedLoads(action: any) {\n  /* const searchParamsSelector = getSearchParams();\n  const searchParamsState = yield select(searchParamsSelector);\n  const pullToRefreshSelector = getPullToRefreshState();\n  const pullToRefreshState = yield select(pullToRefreshSelector);\n  if (\n    searchParamsState &&\n    checkTimeInterval(\n      searchParamsState.RecommendedLoads,\n      searchParamsState.RecommendedLoadsInterval\n    ) &&\n    !pullToRefreshState\n  ) {\n    return;\n  } */\n  try {\n    yield put(\n      action.payload.refreshStatus ? showPullToRefresh() : showLoading()\n    );\n    const recommendedReqestQuery = DomainConverter.domainToData<any>(\n      action.payload.query\n    );\n    const recommendedResults = yield call(request, [\n      \"HOME\",\n      \"RECOMMENDED_LOADS\",\n      null,\n      \"\",\n      recommendedReqestQuery,\n      \"application/json\"\n    ]);\n\n    yield put(\n      recommendedLoadsSuccess({\n        recommendedResults,\n        refreshStatus: action.payload.refreshStatus || action.payload.sorRefresh\n      })\n    );\n    yield put(\n      action.payload.refreshStatus ? hidePullToRefresh() : hideLoading()\n    );\n    if (action.payload.callback) {\n      const results =\n        (recommendedResults &&\n          recommendedResults.data &&\n          recommendedResults.data &&\n          recommendedResults.data.recommendedLoads &&\n          recommendedResults.data.recommendedLoads.loadPostings &&\n          recommendedResults.data.recommendedLoads.loadPostings) ||\n        [];\n      action.payload.callback(results.length);\n    }\n    /* yield put(\n      updateSearchParamsInOfflineJSON({\n        RecommendedLoads: new Date().toUTCString(),\n        RecommendedLoadsInterval: \"5\"\n      })\n    ); */\n  } catch (e) {\n    action.payload.refreshStatus ? hidePullToRefresh() : hideLoading();\n  }\n}\n\n/**\n *  Add Watch Load\n */\nexport function* addWatchLoad(data: any) {\n  const { query, loadDetails } = data.payload;\n  try {\n    yield put(showLoading());\n    let value = DomainConverter.domainToData<any>(query);\n    const repos = yield call(request, [\n      \"RECENT\",\n      \"RECENT\",\n      null,\n      \"\",\n      value,\n      \"application/json\"\n    ]);\n    yield put(addWatchLoadSuccess(loadDetails));\n    yield put(hideLoading());\n  } catch (e) {\n    yield put(hideLoading());\n  }\n}\n\n/**\n *  Remove Watch Load\n */\nexport function* removeWatchLoad(data: any) {\n  const { query, loadId, callback } = data.payload;\n  try {\n    yield put(showLoading());\n    let value = DomainConverter.domainToData<any>(query);\n    const response = yield call(request, [\n      \"RECENT\",\n      \"RECENT\",\n      null,\n      \"\",\n      value,\n      \"application/json\"\n    ]);\n    yield put(removeWatchLoadSuccess({ loadId }));\n    yield put(hideLoading());\n    callback(response.errors ? true : false);\n  } catch (e) {\n    callback(true);\n    yield put(hideLoading());\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([\n    takeLatest(constants.UPDATE_DATA, updateData),\n    takeLatest(constants.RECOMMENDED_LOADS_REQUEST, recommendedLoads),\n    takeLatest(constants.WATCHEDLOAD_DATA_REQUEST, watchedLoads),\n    takeLatest(constants.ADD_WATCH_LOAD, addWatchLoad),\n    takeLatest(constants.REMOVE_WATCH_LOAD, removeWatchLoad)\n  ]);\n}\n","import React from \"react\";\nimport { IonList, IonImg, isPlatform } from \"@ionic/react\";\nimport { RecommendedError } from \"./RecommendedError\";\nimport { LoadTile } from \"../../components/app/home/Load-Tile\";\nimport { formatedData } from \"../../utils/formatData\";\nimport {\n  PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n  NO_NEWORK,\n  watchedEmptyText,\n  recommendedErrorText,\n  recommendedErrorButton,\n  OFFLINE_MODE_STATE\n} from \"../../utils/constants\";\nimport DataTableComponent from \"../../components/shared/dataTableComponent/data-tabel.page\";\n\nexport interface SegmentProps {\n  type: any;\n  recommendedloads: any;\n  setView: any;\n  watchedLoad: any;\n  load: any;\n  isloaded: boolean;\n  history: any;\n  isNetworkAvailable: boolean;\n  showAlert: any;\n  toggleWatchLoad: Function;\n  isWatchLoadEnd?: boolean;\n  isRecommendedLoadEnd?: boolean;\n}\n\nexport const SegmentContent: React.FC<SegmentProps> = ({\n  type,\n  recommendedloads,\n  setView,\n  watchedLoad,\n  load,\n  isloaded,\n  history,\n  isNetworkAvailable,\n  showAlert,\n  toggleWatchLoad,\n  isWatchLoadEnd = false,\n  isRecommendedLoadEnd = false\n}) => {\n  const newSearch = () => {\n    history && history.push(\"/app/search\");\n  };\n\n  const redirect = (load: any) => {\n    if (isNetworkAvailable) {\n      if (type === \"watched\") {\n        const url = `/app/home/watched/${load.loadId}`;\n        history.push(url);\n      }\n      if (type === \"recommended\") {\n        const url = `/app/home/recommended/${load.loadId}`;\n        history.push(url);\n      }\n    } else {\n      showAlert({\n        isShowAlert: true,\n        alertMessage: PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n        alertTitle: NO_NEWORK\n      });\n    }\n  };\n  const addCapacity = () => {\n    history && history.push(\"/app/manage/ManageMyCapacity\");\n  };\n  const columns = [\n    {\n      name: \"Origin\",\n      selector: \"origin_city\",\n      sortable: true,\n      style: {\n        fontWeight: 600,\n        fontSize: 14,\n        colorName: \"#000000\"\n      }\n    },\n    {\n      name: \"Origin Date\",\n      selector: \"origin_from_date\",\n      sortable: true,\n      minWidth: \"123px\"\n    },\n    {\n      name: \"DH-O\",\n      selector: \"origin_deadhead\",\n      sortable: true\n    },\n    {\n      name: \"Origin Load Type\",\n      selector: \"origin_load_type\",\n      sortable: true\n    },\n    {\n      name: \"Destination\",\n      selector: \"destination_city\",\n      sortable: true,\n      style: {\n        fontWeight: 600,\n        fontSize: 14,\n        colorName: \"#000000\"\n      }\n    },\n    {\n      name: \"Destination Date\",\n      selector: \"destination_from_date\",\n      minWidth: \"123px\",\n      sortable: true\n    },\n    {\n      name: \"DH-D\",\n      selector: \"destination_deadhead\",\n      sortable: true\n    },\n    {\n      name: \"Destination Load Type\",\n      selector: \"destination_load_type\",\n      sortable: true\n    },\n    {\n      name: \"Trailer Type\",\n      selector: \"trailer\",\n      sortable: true\n    },\n    {\n      name: \"Rate ($)\",\n      selector: \"price\",\n      sortable: true,\n      style: {\n        fontWeight: 600,\n        fontSize: 14,\n        colorName: \"#000000\"\n      }\n    },\n    {\n      name: \"\",\n      selector: \"\",\n      sortable: false,\n      width: \"50px\",\n      cell: (row: any) => (\n        <IonImg className=\"star_icon\" src=\"assets/icon/star-color.svg\" />\n      )\n    },\n    {\n      name: \"\",\n      selector: \"\",\n      sortable: false,\n      width: \"50px\",\n      cell: (row: any) => (\n        <img\n          slot=\"end\"\n          alt=\"logo\"\n          src=\"/assets/icon/more-arrow.svg\"\n          className=\"moresideimg\"\n        />\n      )\n    }\n  ];\n  const columns2 = [\n    {\n      name: \"Origin\",\n      selector: \"origin_city\",\n      sortable: true,\n      style: {\n        fontWeight: 600,\n        fontSize: 14,\n        colorName: \"#000000\"\n      }\n    },\n    {\n      name: \"Origin Date\",\n      selector: \"origin_from_date\",\n      sortable: true,\n      minWidth: \"123px\"\n    },\n    {\n      name: \"DH-O\",\n      selector: \"origin_deadhead\",\n      sortable: true\n    },\n    {\n      name: \"Origin Load Type\",\n      selector: \"origin_load_type\",\n      sortable: true\n    },\n    {\n      name: \"Destination\",\n      selector: \"destination_city\",\n      sortable: true,\n      style: {\n        fontWeight: 600,\n        fontSize: 14,\n        colorName: \"#000000\"\n      }\n    },\n    {\n      name: \"Destination Date\",\n      selector: \"destination_from_date\",\n      minWidth: \"123px\",\n      sortable: true\n    },\n    {\n      name: \"DH-D\",\n      selector: \"destination_deadhead\",\n      sortable: true\n    },\n    {\n      name: \"Destination Load Type\",\n      selector: \"destination_load_type\",\n      sortable: true\n    },\n    {\n      name: \"Trailer Type\",\n      selector: \"trailer\",\n      sortable: true\n    },\n    {\n      name: \"Rate ($)\",\n      selector: \"price\",\n      sortable: true,\n      style: {\n        fontWeight: 600,\n        fontSize: 14,\n        colorName: \"#000000\"\n      }\n    },\n\n    {\n      name: \"\",\n      selector: \"\",\n      sortable: false,\n      width: \"50px\",\n      cell: (row: any) => (\n        <img\n          slot=\"end\"\n          alt=\"logo\"\n          src=\"/assets/icon/more-arrow.svg\"\n          className=\"moresideimg\"\n        />\n      )\n    }\n  ];\n\n  return (\n    <>\n      {type === \"recommended\" && (\n        <>\n          {recommendedloads && recommendedloads.length ? (\n            <>\n              <IonList className=\"loadTilePad\" data-test=\"watched-tile\">\n                {recommendedloads &&\n                  recommendedloads.map((load: any, index: number) => (\n                    <LoadTile\n                      key={index}\n                      {...load}\n                      module=\"home/recommended\"\n                      isRecommended\n                      // toggleWatchLoad={toggleWatchLoad}\n                    />\n                  ))}\n              </IonList>\n              {\n                 (isPlatform(\"mobile\") && isRecommendedLoadEnd) ? (\n                  <div className=\"end-of-list\">End of list</div>\n                ) : null\n              }\n              {isPlatform(\"desktop\") ? (\n                <DataTableComponent\n                  columns={columns2}\n                  data={formatedData(\n                    recommendedloads,\n                    \"appointmentFrom\",\n                    \"appointmentTo\",\n                    \"loadId\",\n                    \"transportMode\",\n                    false\n                  )}\n                  showEndofList\n                  showHeader\n                  titleText={\n                    type === \"recommended\" && recommendedloads.length > 1\n                      ? `${recommendedloads.length} ` + `Recommendations`\n                      : `${recommendedloads.length} ` + `Recommendation`\n                  }\n                  pagination\n                  redirect={redirect}\n                />\n              ) : null}\n            </>\n          ) : !isloaded ? (\n            <RecommendedError\n              constantText={recommendedErrorText}\n              constantButton={recommendedErrorButton}\n              loads={newSearch}\n              addCapacity={addCapacity}\n            />\n          ) : (\n            \"\"\n          )}\n        </>\n      )}\n      {type === \"watched\" && (\n        <>\n          {watchedLoad.length ? (\n            <>\n              <IonList className=\"loadTilePad\" data-test=\"watched-tile\">\n                {watchedLoad.map((load: any, index: number) => (\n                  <LoadTile\n                    key={index}\n                    {...load}\n                    module=\"home/watched\"\n                    isWatch\n                    toggleWatchLoad={toggleWatchLoad}\n                  />\n                ))}\n              </IonList>\n              {(isPlatform(\"mobile\") && isWatchLoadEnd)? (\n                <div className=\"end-of-list\">End of list</div>\n              ) : null}\n              \n              {isPlatform(\"desktop\") ? (\n                <DataTableComponent\n                  columns={columns}\n                  data={formatedData(\n                    watchedLoad,\n                    \"appointmentFrom\",\n                    \"appointmentTo\",\n                    \"loadId\",\n                    \"transportMode\",\n                    false\n                  )}\n                  showEndofList\n                  showHeader\n                  titleText={watchedLoad && `${watchedLoad.length} ${type}`}\n                  pagination\n                  redirect={redirect}\n                />\n              ) : null}\n            </>\n          ) : !isloaded ? (\n            <RecommendedError\n              constantText={watchedEmptyText}\n              constantButton={recommendedErrorButton}\n              loads={newSearch}\n              redirectTo=\"app/search\"\n            />\n          ) : (\n            \"\"\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default React.memo(SegmentContent);\n","import React, { useState, useEffect } from 'react';\nimport { IonCol, IonModal, IonRow, IonIcon, IonText } from '@ionic/react';\nimport './SortOnly.scss';\nimport { ASC_DIRECTION, DESC_DIRECTION } from '../../../utils/constants';\n\nconst SortOnly: React.FC<any> = (props: any) => {\n  const {\n    dropdown: { options, setFilter },\n    direction = ASC_DIRECTION,\n    storeOptions = []\n  } = props;\n  const selectedOptions =\n    storeOptions.length > 0\n      ? storeOptions\n      : options.map((option: any, index: number) => ({ ...option, selected: index === 0 }));\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [selectedOption, setSelectedOptions] = useState<any>(selectedOptions);\n  const [filterOption, setFilterOptions] = useState<any>(selectedOptions);\n  const [sortOrder, setSortOrder] = useState(direction);\n  const selectItems = selectedOption.filter((option: any) => option.selected);\n  const btnTitle = selectItems.map((option: any) => option.name).join(' + ');\n  const openModel = () => {\n    setFilterOptions(selectedOption);\n    setModalOpen(true);\n  };\n\n  useEffect(() => {\n    const selectedOptions =\n      storeOptions.length > 0\n        ? storeOptions\n        : options.map((option: any, index: number) => ({ ...option, selected: index === 0 }));\n    setSelectedOptions(selectedOptions);\n    setFilterOptions(selectedOptions);\n  }, [props.dropdown, storeOptions]);\n\n  useEffect(() => {\n    setSortOrder(direction);\n  }, [direction]);\n\n  const setFilterOption = (opion: any) => {\n    const options = filterOption.map((item: any) => {\n      return {\n        ...item,\n        selected: item.name === opion.name ? !item.selected : false\n      };\n    });\n    const selected = options.find((option: any) => option.selected);\n    if (selected) {\n      setFilterOptions(options);\n    }\n  };\n\n  const sortData = (direction = sortOrder) => {\n    setFilter({\n      filter: {\n        selected: filterOption,\n        direction\n      }\n    });\n  };\n\n  const confirmSelection = () => {\n    sortData();\n    setSelectedOptions(filterOption);\n    setModalOpen(false);\n  };\n\n  const handleSorting = () => {\n    const direction = sortOrder === ASC_DIRECTION ? DESC_DIRECTION : ASC_DIRECTION;\n    setSortOrder(direction);\n    sortData(direction);\n  };\n  return (\n    <IonRow class=\"list-items-header sort-only-wrapper\">\n      <IonCol>\n        <div className=\"list-items-filter\">\n          <IonText item-left class=\"filter-dropdown\" onClick={openModel}>\n            {btnTitle}\n            <i className=\"down\"></i>\n          </IonText>\n          <IonText class=\"filter-sort\" onClick={handleSorting}>\n            <IonIcon\n              src={`assets/icon/sort icon${sortOrder !== DESC_DIRECTION ? ' downward' : ''}.svg`}\n            />\n          </IonText>\n        </div>\n        <IonModal\n          show-backdrop\n          backdrop-dismiss={false}\n          isOpen={isModalOpen}\n          cssClass=\"dropdown-modal\"\n          onDidDismiss={() => {\n            setModalOpen(false);\n          }}>\n          <div className=\"search_options\">\n            <IonRow class=\"dropdown-row dropdown-heading\">\n              <IonCol>\n                <p className=\"sortBy_text\">Sort By</p>\n              </IonCol>\n            </IonRow>\n            {filterOption.map((option: any, k: any) => (\n              <IonRow\n                className=\"dropdown-row filter-option\"\n                key={k}\n                onClick={() => setFilterOption(option)}>\n                <IonCol className={option.selected ? 'checked' : ''}>\n                  {option.name} <i className=\"check\"></i>\n                </IonCol>\n              </IonRow>\n            ))}\n            <IonRow class=\"dropdown-handler\">\n              <IonCol size=\"1\" />\n              <IonCol size=\"5\" className=\"dropdown_cancel\" onClick={() => setModalOpen(false)}>\n                <span>Cancel</span>\n              </IonCol>\n              <IonCol size=\"5\" className=\"dropdown_cancel dropdown_ok\" onClick={confirmSelection}>\n                <span>OK</span>\n              </IonCol>\n              <IonCol size=\"1\" />\n            </IonRow>\n          </div>\n        </IonModal>\n      </IonCol>\n    </IonRow>\n  );\n};\n\nexport default SortOnly;\n","import { IonRow, IonCol } from '@ionic/react';\nimport { SortOnly } from 'app/components/core/SortOnly';\nimport React from 'react';\nimport * as Constants from '../../utils/constants';\n\nexport const HomeTitle = (props:any) => {\n\n    const dropDownOptions = {\n        options: Constants.sortByOptions,\n        setFilter: props.setWatchedFilter,\n        direction: props.filter.direction,\n    };\n\n    const recommendedDropdownOptions = {\n        options: Constants.recommendedSortByOptions,\n        setFilter: props.setRecommendedFilter,\n        direction: props.recommendedfilter.direction,\n    };\n\n    const sortProps = props.segment.name === Constants.WATCHED_TAB ? {\n        dropdown: dropDownOptions,\n        direction: props.filter.direction,\n        storeOptions: props.filter.selected\n    }: { \n        dropdown: recommendedDropdownOptions,  \n        direction: props.recommendedfilter.direction, \n        storeOptions: props.recommendedfilter.selected \n    };\n \n    return ((props.watchedLoad &&\n        props.watchedLoad.length > 0 &&\n        props.segment.name === Constants.WATCHED_TAB) ||\n        (props.recommendedloadData &&\n          props.recommendedloadData.length > 0 &&\n          props.segment.name === Constants.RECOMMENDED_TAB)) ? (\n        <div className=\"short-div\">\n          {(props.segment.name === Constants.RECOMMENDED_TAB ||\n            props.segment.name === Constants.WATCHED_TAB) && (\n            <IonRow class=\"short-row\">\n              <IonCol size=\"5\" class=\"rec_text\">\n                {props.segment.name === Constants.RECOMMENDED_TAB ? (\n                  <span className=\"recommendations_num\">\n                    {props.totalRecommendedRecords}{\" \"}\n                  </span>\n                ) : (\n                  <span className=\"recommendations_num\">\n                    {props.totalWatchedRecords}{\" \"}\n                  </span>\n                )}\n                {props.segment.name === Constants.RECOMMENDED_TAB &&\n                props.recommendedloadData.length > 1\n                  ? Constants.RECOMMENDATION_COUNTS\n                  : props.segment.name === Constants.RECOMMENDED_TAB &&\n                  props.recommendedloadData.length === 1\n                  ? Constants.RECOMMENDATION_COUNT\n                  : props.segment.name === Constants.WATCHED_TAB && props.watchedLoad.length > 1\n                  ? Constants.WATCHED_COUNTS\n                  : props.segment.name === Constants.WATCHED_TAB && props.watchedLoad.length === 1\n                  ? Constants.WATCHED_COUNT\n                  : null}\n              </IonCol>\n              <IonCol size=\"7\" class=\"sort_select\">\n                <div className=\"select_div\">\n                  <SortOnly\n                    {...sortProps}\n                  />\n                </div>\n              </IonCol>\n            </IonRow>\n          )}\n        </div>\n      ) : null;\n};","import {\n  IonContent,\n  IonPage,\n  isPlatform,\n  IonToast, IonInfiniteScroll, IonInfiniteScrollContent\n} from \"@ionic/react\";\nimport React from \"react\";\nimport \"./Home.page.scss\";\nimport { SegmentContent } from \"../../pages/Home/Segment-content.page\";\nimport AppHeader from \"../../components/app/Bars/Bar-header\";\nimport { PullToRefresh } from \"../../components/PullToRefresh\";\nimport * as Constants from \"../../utils/constants\";\nimport { HomeTitle } from \"./HomeTitle\";\n\nexport const Home: React.FC<any> = (props:any) => {\n\n  const onPageScroll = async (event: any) => {\n    if (\n      props.segment.name === Constants.WATCHED_TAB &&\n      !isPlatform(\"desktop\") &&\n      !props.pullToRefreshStatus &&\n      !props.loading\n    ) {\n      const pages = Math.floor(props.totalWatchedRecords / props.pageSize);\n      const maxPages = props.totalWatchedRecords % props.pageSize === 0 ? pages - 1 : pages;\n      if (!props.isWatchLoadEnd && props.currentPage < maxPages) {\n        const page = props.currentPage + 1;\n        const callback = (itemsCount: number) => {\n          if (itemsCount === 0 || itemsCount % props.pageSize !== 0) {\n            props.setWatchedLoadEnd(true);\n          }\n        };\n        props.setCurrentPage(page);\n        props.getWatchedLoads(false, page, callback);\n\n        // Analytics implementation\n        props.onAnalyticsLoadPosting(props.segment.name);\n      } else {\n        props.setWatchedLoadEnd(true);\n      }\n    }\n    if (\n      props.segment.name === Constants.RECOMMENDED_TAB &&\n      !isPlatform(\"desktop\") &&\n      !props.pullToRefreshStatus &&\n      !props.loading\n    ) {\n      recommendedpagination();\n    }\n    (event.target as HTMLIonInfiniteScrollElement).complete();\n  };\n\n  const recommendedpagination = () => {\n    const recommenedPages = Math.floor(props.totalRecommendedRecords / props.pageSize);\n    const maxrecommendedpages =\n      props.totalRecommendedRecords % props.pageSize === 0\n        ? recommenedPages - 1\n        : recommenedPages;\n    if (!props.isRecommendedEnd && props.recommendedCurrentpage < maxrecommendedpages) {\n      const recommendedPage = props.recommendedCurrentpage + 1;\n      const callback = (itemsCount: number) => {\n        if (itemsCount === 0 || itemsCount % props.pageSize !== 0) {\n          props.setRecommendedLoadEnd(true);\n        }\n      };\n      props.setRecommendedcurrentPage(recommendedPage);\n      props.getRecommendedLoads(false, recommendedPage, callback);\n      // Analytics implementation\n      props.onAnalyticsLoadPosting(props.segment.name);\n    } else {\n      props.setRecommendedLoadEnd(true);\n    }\n  };\n\n  return (\n    <IonPage className=\"desktop-page\">\n      <IonToast data-test=\"ion-toast\"\n        isOpen={!!props.apiError}\n        message={props.apiError}\n        duration={5000}\n        color=\"dark\"\n        onDidDismiss={() => {\n          props.clearApiResponseError();\n        }}\n      />\n      <AppHeader\n        title=\"Loads\"\n        getSegment={(e: any) => {\n          props.setSegment({ name: e.detail.value as any, data: {} });\n        }}\n        segments={props.sections}\n        activeSegment={props.segment.name}\n      />\n      <IonContent\n        className=\"ion-padding custom-padding load-page-content home-page\"\n        class=\"background\"\n      >\n        <PullToRefresh data-test=\"pull-to-refresh\"\n          onPullToRefresh={\n            props.segment.name === Constants.WATCHED_TAB ? props.getWatchedLoads : props.getRecommendedLoads\n          }\n          status={props.pullToRefreshStatus}\n        />\n        <HomeTitle {...props} />\n        <SegmentContent\n          data-test=\"Segment-Content\"\n          history={props.history}\n          type={props.segment.name}\n          isloaded={props.loading}\n          recommendedloads={props.recommendedloadData}\n          watchedLoad={props.watchedLoad}\n          isWatchLoadEnd={props.isWatchLoadEnd}\n          isRecommendedLoadEnd={props.isRecommendedEnd}\n          load={props.segment.data}\n          setView={(load: any) => {\n            props.setSegment({ name: \"View\", data: load });\n          }}\n          showAlert={props.showAlert}\n          isNetworkAvailable={props.isNetworkAvailable}\n          toggleWatchLoad={props.toggleWatchLoad(props)}\n        />\n        <IonInfiniteScroll onIonInfinite={onPageScroll}>\n          <IonInfiniteScrollContent  loadingSpinner={null} loadingText={''}>\n          </IonInfiniteScrollContent>\n        </IonInfiniteScroll>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Home;\n","import { WatchedLoadModel } from 'app/models/home/WatchedLoads.model';\nimport { logEvent } from 'app/utils/Analytics';\nimport { ToastMessage } from 'app/utils/ToastMessage';\nimport * as Constants from '../../utils/constants';\n\nexport const onAnalyticsLoadPosting = (segmentName: any) => {\n    logEvent(\n      segmentName === Constants.WATCHED_TAB\n        ? Constants.EVENT.UE_VIEW_WATCHED_TAB\n        : Constants.EVENT.UE_SCROLL_RECOMMENDATIONS,\n      {\n        screen: Constants.SCREEN.HOME,\n        tab: segmentName === Constants.WATCHED_TAB ? Constants.TAB.WATCHED : Constants.TAB.RECOMMENDED,\n      }\n    );\n};\n\nexport const getRecSortingValues = (recommendedfilter: any) => {\n    const selected = recommendedfilter.selected;\n    const isAsc = recommendedfilter.direction === Constants.SORTING_ORDER_ASC;\n    let filterBy = Constants.recommendedSortByOptions[0].value;\n    if (selected.length > 0) {\n        filterBy = selected\n            .filter((item: any) => item.selected)\n            .map((item: any) => item.value)\n            .join(\"\");\n    }\n    return { filterBy, isAsc };\n};\n\nexport const doSorting = (getRecommendedLoadsData: any, isAsc: boolean, filterBy: string) => {\n    if (filterBy === Constants.ORIGIN_FROM_DATE) {\n        return (\n            getRecommendedLoadsData &&\n            [...getRecommendedLoadsData].sort((a: any, b: any) => {\n                const firstpickupLoad = a[Constants.LOAD_STOP].filter(\n                    (stop: any, index: any) => {\n                        return stop.stopType === \"P\";\n                    }\n                );\n                const secondpickupLoad = b[Constants.LOAD_STOP].filter(\n                    (stop: any, index: any) => {\n                        return stop.stopType === \"P\";\n                    }\n                );\n                if (\n                    a &&\n                    a[Constants.LOAD_STOP] &&\n                    a[Constants.LOAD_STOP].length > 0 &&\n                    firstpickupLoad &&\n                    firstpickupLoad.length > 0 &&\n                    firstpickupLoad[0][Constants.APPOINTMENT_FROM] &&\n                    b &&\n                    b[Constants.LOAD_STOP] &&\n                    b[Constants.LOAD_STOP].length > 0 &&\n                    secondpickupLoad &&\n                    secondpickupLoad.length > 0 &&\n                    secondpickupLoad[0][Constants.APPOINTMENT_FROM]\n                ) {\n                    return new Date(firstpickupLoad[0][Constants.APPOINTMENT_FROM]).getTime() >\n                        new Date(secondpickupLoad[0][Constants.APPOINTMENT_FROM]).getTime()\n                        ? isAsc\n                            ? 1\n                            : -1\n                        : isAsc\n                            ? -1\n                            : 1;\n                } else if (\n                    a[Constants.LOAD_STOP].length > 0 &&\n                    firstpickupLoad &&\n                    firstpickupLoad.length > 0 &&\n                    firstpickupLoad[0][Constants.APPOINTMENT_FROM] &&\n                    !(\n                        b &&\n                        b[Constants.LOAD_STOP] &&\n                        b[Constants.LOAD_STOP].length > 0 &&\n                        secondpickupLoad &&\n                        secondpickupLoad.length > 0 &&\n                        secondpickupLoad[0][Constants.APPOINTMENT_FROM]\n                    )\n                ) {\n                    return isAsc ? -1 : 1;\n                } else if (\n                    !(\n                        a &&\n                        a[Constants.LOAD_STOP].length > 0 &&\n                        firstpickupLoad &&\n                        firstpickupLoad.length > 0 &&\n                        firstpickupLoad[0][Constants.APPOINTMENT_FROM]\n                    ) &&\n                    b &&\n                    b[Constants.LOAD_STOP] &&\n                    b[Constants.LOAD_STOP].length > 0 &&\n                    secondpickupLoad &&\n                    secondpickupLoad.length > 0 &&\n                    secondpickupLoad[0][Constants.APPOINTMENT_FROM]\n                ) {\n                    return isAsc ? 1 : -1;\n                } else {\n                    return isAsc ? 1 : -1;\n                }\n            })\n        );\n    } else if (filterBy === Constants.TOTAL_DISTANCE) {\n        return (\n            getRecommendedLoadsData &&\n            [...getRecommendedLoadsData].sort((a: any, b: any) => {\n                if (a && a[Constants.TOTAL_DISTANCE] && b && b[Constants.TOTAL_DISTANCE]) {\n                    return a[Constants.TOTAL_DISTANCE] > b[Constants.TOTAL_DISTANCE]\n                        ? isAsc\n                            ? 1\n                            : -1\n                        : isAsc\n                            ? -1\n                            : 1;\n                // } else if (a && a[Constants.TOTAL_DISTANCE] && b && b[Constants.TOTAL_DISTANCE]) {\n                //     return isAsc ? -1 : 1;\n                } else if (!(a && a[Constants.TOTAL_DISTANCE]) && b && b[Constants.TOTAL_DISTANCE]) {\n                    return isAsc ? 1 : -1;\n                } else {\n                    return isAsc ? 1 : -1;\n                }\n            })\n        );\n    } else {\n        const priceLoads =\n            getRecommendedLoadsData &&\n            getRecommendedLoadsData.filter((loads: any, index: any) => {\n                if (\n                    loads &&\n                    loads.rate &&\n                    (loads.rate !== null) &&\n                    (loads.rate.totalCharge && loads.rate.totalCharge !== 0) &&\n                    (loads.rate.totalCharge && loads.rate.totalCharge !== null)\n                ) {\n                    return loads;\n                }\n            });\n        const noPriceLoads =\n            getRecommendedLoadsData &&\n            getRecommendedLoadsData.filter((loads: any, index: any) => {\n                if (loads && loads.rate && (loads.rate === null) ||\n                    (loads.rate && loads.rate.totalCharge === 0) ||\n                    (loads.rate.totalCharge && loads.rate.totalCharge === null)\n                ) {\n                    return loads;\n                }\n            });\n        const sortLoads =\n            priceLoads &&\n            [...priceLoads].sort((a: any, b: any) => {\n                if (\n                    a &&\n                    a[Constants.RATE] &&\n                    a[Constants.RATE][Constants.TOTAL_CHARGE] &&\n                    b &&\n                    b[Constants.RATE] &&\n                    b[Constants.RATE][Constants.TOTAL_CHARGE]\n                ) {\n                    return a[Constants.RATE][Constants.TOTAL_CHARGE] > b[Constants.RATE][Constants.TOTAL_CHARGE]\n                        ? isAsc\n                            ? 1\n                            : -1\n                        : isAsc\n                            ? -1\n                            : 1;\n                } else if (\n                    a &&\n                    a[Constants.RATE] &&\n                    a[Constants.RATE][Constants.TOTAL_CHARGE] &&\n                    !(b && b[Constants.RATE] && b[Constants.RATE][Constants.TOTAL_CHARGE])\n                ) {\n                    return isAsc ? -1 : 1;\n                } else if (\n                    !(a && a[Constants.RATE] && a[Constants.RATE][Constants.TOTAL_CHARGE]) &&\n                    b &&\n                    b[Constants.RATE] &&\n                    b[Constants.RATE][Constants.TOTAL_CHARGE]\n                ) {\n                    return isAsc ? 1 : -1;\n                } else {\n                    return isAsc ? 1 : -1;\n                }\n            });\n        return sortLoads.concat(noPriceLoads);\n    }\n}\n\nexport const toggleWatchLoad = (props:any) => (loadId: string) => {\n    const { carrierId, userPrincipalName: userId } = props.userDetails;\n\n    if (!props.isNetworkAvailable) {\n      props.showAlert({\n        isShowAlert: true,\n        alertMessage: Constants.PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n        alertTitle: Constants.NO_NEWORK,\n      });\n      return true;\n    }\n    const watchDate = new Date().toISOString();\n    const payload = {\n      carrierId,\n      userId,\n      origin: \"\",\n      loadId,\n      watchDate,\n    };\n    const loadDetails = props.watchedLoad.find(\n      (watched: any) => watched.loadId === loadId\n    );\n    const watchLoadModel = new WatchedLoadModel();\n    const watchLoadCallback = () =>\n      props.addWatchLoad({\n        query: watchLoadModel.addWatchLoad(payload),\n        loadDetails,\n      });\n    const callback = (error: boolean = false) => {\n      if (error) {\n        ToastMessage.show(Constants.watchedErrorText);\n        return true;\n      }\n      ToastMessage.open({\n        message: Constants.WATCHED_LOAD_REMOVE,\n        showUndo: true,\n        callback: watchLoadCallback,\n      });\n    };\n    props.removeWatchLoad({\n      query: watchLoadModel.removeWatchLoad(payload),\n      loadId,\n      callback,\n    });\n  };","import React, { PureComponent, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { createStructuredSelector } from \"reselect\";\n// import { HomePage } from '../../pages/Home';\nimport useInjectSaga from \"../../utils/injectSaga\";\nimport useInjectReducer from \"../../utils/injectReducer\";\nimport {\n  getApiErrorMessage,\n  getRecommendedFilter,\n  getTotalRecommendedRecords,\n  getTotalWatchedRecords,\n  getWatchedFilter,\n  makeSelectRecommended,\n  makeSelectRecommendedLoaded,\n  makeSelectWatched,\n  makeSelectWatchedLoaded,\n} from \"../../selectors/Home/selector\";\nimport { RecommendedModel } from \"../../models/home/Loads.model\";\nimport reducer from \"../../reducers/Home/reducer\";\nimport saga from \"../../saga/Home/saga\";\nimport {\n  addWatchLoad,\n  clearApiResponseError,\n  recommendedLoadsRequest,\n  removeWatchLoad,\n  setRecommendedLoadFilter,\n  setWatchedLoadFilter,\n  updateData,\n  watchedLoadsRequest,\n} from \"../../actions/Home/action\";\nimport {\n  getDeepLinkURI,\n  getNetworkStatus,\n  getRefreshStatus,\n  getUserDetails,\n} from \"../../selectors/selector\";\nimport { showAlert } from \"app/actions/App/action\";\nimport { HomePage } from \"../../pages/Home\";\nimport * as Constants from \"../../utils/constants\";\nimport {\n  doSorting,\n  getRecSortingValues,\n  onAnalyticsLoadPosting,\n  toggleWatchLoad,\n} from \"./HomeContainerUtil\";\nimport { WatchedLoadModel } from \"app/models/home/WatchedLoads.model\";\nimport { logEvent, setScreenName } from \"app/utils/Analytics\";\nimport { isEntitled } from \"app/utils/common\";\n\nconst key = \"carrier\";\nexport const HomeContainer: React.FC<any> = (props: any) => {\n  const {\n    history,\n    userDetails,\n    recommendedfilter,\n    filter,\n    getWatchedLoadsData,\n    isWatchedLoaded,\n    isRecommenedLoaded,\n    getRecommendedLoadsData,\n  } = props;\n  const recommendedSection = Constants.RECOMMENDED_TAB;\n  const watchedSection = Constants.WATCHED_TAB;\n  var sections = [];\n  const {\n    location: { pathname: path },\n  } = history;\n  isEntitled(\"home\", recommendedSection) && sections.push(recommendedSection);\n  isEntitled(\"home\", watchedSection) && sections.push(watchedSection);\n  const [segment, setSegment] = useState<any>({\n    name: path === \"/app/home/watched\" ? sections[1] : sections[0],\n    data: {},\n  });\n  const [recommendedloadData, setRecommendedLoad] = useState<any>([]);\n  const [watchedLoad, setWatchedLoad] = useState<any>([]);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [recommendedCurrentpage, setRecommendedcurrentPage] = useState(0);\n  const [isWatchLoadEnd, setWatchedLoadEnd] = useState(false);\n  const [isRecommendedEnd, setRecommendedLoadEnd] = useState(false);\n  const pageSize = 5;\n\n  const setPaginationValues = (page: number = 0, status: boolean = false) => {\n    setCurrentPage(page);\n    setWatchedLoadEnd(status);\n  };\n\n  const setRecPaginationValues = (\n    page: number = 0,\n    status: boolean = false\n  ) => {\n    setRecommendedcurrentPage(page);\n    setRecommendedLoadEnd(status);\n  };\n\n  const getRecommendedLoads = (\n    refreshStatus: boolean = false,\n    page: number = 0,\n    callback: any = false,\n    sortColumn: string = \"load_id\",\n    sortDirection: string = Constants.SORTING_ORDER_ASC,\n    sorRefresh = false\n  ) => {\n    if (refreshStatus) {\n      setRecPaginationValues();\n    }\n    const { isAsc, filterBy } = getRecSortingValues(recommendedfilter);\n    if (\n      userDetails.carrierId &&\n      userDetails.carrierId !== null &&\n      userDetails.carrierId !== \"\"\n    ) {\n      const defSortDirection = isAsc\n        ? Constants.SORTING_ORDER_ASC\n        : Constants.SORTING_ORDER_DESC;\n      const _RecommendedModel: RecommendedModel = new RecommendedModel();\n      _RecommendedModel.carrierId =\n        (userDetails && userDetails.carrierId) || \"\";\n      _RecommendedModel.carrierScac =\n        (userDetails && userDetails.carrierScac) || \"\";\n      _RecommendedModel.carrierTier =\n        (userDetails && userDetails.carrierTier) || \"\";\n      _RecommendedModel.page = page;\n      _RecommendedModel.size = pageSize;\n      _RecommendedModel.sortColumn = sortColumn || filterBy;\n      _RecommendedModel.sortDirection = sortDirection || defSortDirection;\n      return props.recommendedData({\n        query: _RecommendedModel.getRequestPayload(),\n        refreshStatus,\n        sorRefresh,\n        callback,\n      });\n    }\n  };\n\n  const getWatchedLoads = (\n    refreshStatus: boolean = false,\n    page: number = 0,\n    callback: any = false,\n    sortColumn: string = \"load_id\",\n    sortDirection: string = Constants.SORTING_ORDER_ASC\n  ) => {\n    if (refreshStatus) {\n      setPaginationValues();\n    }\n    if (\n      userDetails.carrierId &&\n      userDetails.carrierId !== null &&\n      userDetails.carrierId !== \"\"\n    ) {\n      const _WatchedLoadModel: WatchedLoadModel = new WatchedLoadModel();\n      _WatchedLoadModel.carrierId = userDetails && userDetails.carrierId;\n      _WatchedLoadModel.page = page;\n      _WatchedLoadModel.userId =\n        (userDetails && userDetails.userPrincipalName) || \"\";\n      _WatchedLoadModel.size = pageSize;\n      _WatchedLoadModel.sortDirection = sortDirection;\n      _WatchedLoadModel.sortColumn = sortColumn;\n      return props.watchedData({\n        query: _WatchedLoadModel.getRequestPayload(),\n        refreshStatus,\n        callback,\n      });\n    }\n  };\n\n  /**\n   *  Sort data according to filter if any data changes in redux\n   */\n  const sortWatchedData = () => {\n    const selected = filter.selected;\n    const isAsc = filter.direction === Constants.SORTING_ORDER_ASC;\n    let filterBy = Constants.sortByOptions[0].value;\n    if (selected.length > 0) {\n      filterBy = selected\n        .filter((item: any) => item.selected)\n        .map((item: any) => item.value)\n        .join(\"\");\n    }\n    const sortedList = doSorting(getWatchedLoadsData, isAsc, filterBy);\n    setWatchedLoad(sortedList);\n  };\n\n  const sortRecommendedData = () => {\n    const { isAsc, filterBy } = getRecSortingValues(recommendedfilter);\n    const sortedList = doSorting(\n      props.getRecommendedLoadsData,\n      isAsc,\n      filterBy\n    );\n    setRecommendedLoad(sortedList);\n  };\n\n  useEffect(() => {\n    sortWatchedData();\n    if (isWatchedLoaded && getWatchedLoadsData.length < pageSize) {\n    setPaginationValues(0, true);\n    }\n  }, [getWatchedLoadsData]);\n\n  useEffect(() => {\n    sortRecommendedData();\n    if (isRecommenedLoaded && getRecommendedLoadsData.length < pageSize) {\n     setRecPaginationValues(0, true);\n    }\n  }, [getRecommendedLoadsData]);\n\n  useEffect(() => {\n    sortWatchedData();\n  }, [filter]);\n\n  useEffect(() => {\n    sortRecommendedData();\n  }, [recommendedfilter]);\n\n  useEffect(() => {\n    //  getNetworkStatus();\n    logEvent(Constants.EVENT.SV_HOME, {\n      screen: Constants.SCREEN.HOME,\n      tab: Constants.TAB.RECOMMENDED,\n    });\n    // Analytics implementation\n    onAnalyticsLoadPosting(segment.name);\n  }, []);\n\n  useEffect(() => {\n    if (userDetails && getWatchedLoadsData.length === 0 && !isWatchedLoaded) {\n      getWatchedLoads();\n    }\n  }, [userDetails, getWatchedLoadsData]);\n\n  useEffect(() => {\n    if (userDetails &&  getRecommendedLoadsData.length === 0 && !isRecommenedLoaded) {\n      getRecommendedLoads();\n    }\n  }, [userDetails, getRecommendedLoadsData]);\n\n  useEffect(() => {\n    setScreenName(\n      segment.name === Constants.RECOMMENDED_TAB\n        ? \"screen_recommended\"\n        : \"screen_watched\"\n    );\n    logEvent(Constants.EVENT.UE_VIEW_RECOMMENDED_TAB, {\n      screen: Constants.SCREEN.HOME,\n      tab: Constants.TAB.RECOMMENDED,\n    });\n  }, []);\n\n  return (\n    <HomePage\n      {...props}\n      recommendedloadData={recommendedloadData}\n      getWatchedLoads={getWatchedLoads}\n      getRecommendedLoads={getRecommendedLoads}\n      segment={segment}\n      setSegment={setSegment}\n      sections={sections}\n      watchedLoad={watchedLoad}\n      currentPage={currentPage}\n      recommendedCurrentpage={recommendedCurrentpage}\n      isWatchLoadEnd={isWatchLoadEnd}\n      isRecommendedEnd={isRecommendedEnd}\n      doSorting={doSorting}\n      setRecommendedcurrentPage ={setRecommendedcurrentPage}\n      setCurrentPage ={setCurrentPage}\n      setRecommendedLoadEnd={setRecommendedLoadEnd}\n      setWatchedLoadEnd={setWatchedLoadEnd}\n      toggleWatchLoad={toggleWatchLoad}\n      pageSize={pageSize}\n      onAnalyticsLoadPosting={onAnalyticsLoadPosting}\n    />\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  deepLinkURI: getDeepLinkURI(),\n  userDetails: getUserDetails(),\n  getWatchedLoadsData: makeSelectWatched(),\n  pullToRefreshStatus: getRefreshStatus(),\n  filter: getWatchedFilter(),\n  recommendedfilter: getRecommendedFilter(),\n  isNetworkAvailable: getNetworkStatus(),\n  apiError: getApiErrorMessage(),\n  getRecommendedLoadsData: makeSelectRecommended(),\n  isRecommenedLoaded: makeSelectRecommendedLoaded(),\n  isWatchedLoaded: makeSelectWatchedLoaded(),\n  totalWatchedRecords: getTotalWatchedRecords(),\n  totalRecommendedRecords: getTotalRecommendedRecords(),\n});\n\nexport const mapDispatchToProps = (dispatch: Function) => ({\n  watchedData: (data: any) => dispatch(watchedLoadsRequest(data)),\n  showAlert: (data: any) => dispatch(showAlert(data)),\n  addWatchLoad: (payload: any) => dispatch(addWatchLoad(payload)),\n  removeWatchLoad: (payload: any) => dispatch(removeWatchLoad(payload)),\n  setWatchedFilter: (payload: any) => dispatch(setWatchedLoadFilter(payload)),\n  setRecommendedFilter: (payload: any) =>\n    dispatch(setRecommendedLoadFilter(payload)),\n  clearApiResponseError: () => dispatch(clearApiResponseError()),\n  recommendedData: (payload: any) => dispatch(recommendedLoadsRequest(payload)),\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nconst withReducer = useInjectReducer({ key, reducer });\nconst withSaga = useInjectSaga({ key, saga });\nexport default compose(\n  withSaga,\n  withReducer,\n  withConnect\n)(React.memo(HomeContainer));\n","import React, { useEffect, useState } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport {\n  IonRouterOutlet,\n  IonTabs,\n  IonTabBar,\n  IonTabButton,\n  IonLabel,\n  IonIcon,\n  IonImg,\n  IonRow,\n  IonCol,\n  IonFooter\n} from \"@ionic/react\";\nimport { SearchContainer } from \"../../../containers/SearchContainer\";\nimport { SearchResultContainer } from \"../../../containers/SearchContainer/SearchResultContainer\";\nimport { ManageContainer } from \"../../../containers/ManageContainer\";\nimport { ExecuteContainer } from \"../../../containers/ExecuteContainer\";\nimport { LoadDetailsContainer } from \"../../../containers/LoadDetailsContainer\";\nimport MenuContainer from \"../../../containers/MenuContainer/MenuContainer\";\nimport { ProfileContainer, ProfileEditContainer } from \"../../../containers/ManageContainer/ProfileContainer\";\nimport { CarrierProfileContainer } from \"../../../containers/ManageContainer/CarrieProfileContainer\";\nimport { CommonMenuPage } from \"../../../pages/Menu/faq_menu/menuCommonPage\";\nimport { DeviceInfoPage } from \"../../../pages/Menu/DeviceInfo/DeviceInfo\";\nimport { ManageCapacityContainer, ManageCapacityAddContainer, \n  ManageCapacityEditContainer, \n  ManageCapacityViewContainer \n} from \"../../../containers/ManageContainer/ManageCapacityContainer\";\nimport { ManageUserContainer, ManageUserProfileContainer, \n  ManageUserProfileEditContainer, \n  ManageUserProfileAddContainer \n} from \"../../../containers/ManageContainer/ManageUserContainer\";\nimport { CarrierAssignedContainer } from \"../../../containers/ExecuteContainer/CarrierAssignedContainer\";\nimport { AddDriverContainer } from \"../../../containers/ExecuteContainer/AddDriverContainer\";\nimport { AssignDriverContainer } from \"../../../containers/ExecuteContainer/AssignDriverContainer\";\nimport { isEntitled, getDashboard } from \"../../../utils/common\";\nimport { MyLoadDetailsContainer } from \"../../../containers/MyLoadDetailsContainer\";\nimport DriverAssignedContainer from \"../../../containers/ExecuteContainer/DriverAssignedContainer/DriverAssignedContainer\";\nimport ShipmentUpdateScreen from '../ShipmentUpdateScreen/ShipmentUpdateScreen';\nimport { ToastMessage } from '../../../utils/ToastMessage';\nimport InTransitContainer from \"../../../containers/ExecuteContainer/InTransitContainer/InTransitContainer\";\nimport { useAuthService } from '../../../services/Auth';\nimport DeliveredContainer from \"../../../containers/ExecuteContainer/DeliveredContainer/DeliveredContainer\";\nimport { NO_ACCESS_MSG } from '../../../utils/constants';\nimport { HomeContainer } from \"app/containers/HomeContainer\";\n\n\nconst RootLevelTabs: React.FC<any> = () => {\n  const noAccessUrl = \"/app/noAccess\";\n  return (\n    <>\n      <div className=\"tab-bar-div\">\n        <div className=\"tab-bar-logoDiv\">\n          <img src=\"assets/icon/SFP.svg\" className=\"tab-bar-logo\" alt=\"\" />\n        </div>\n        <div className=\"carrier-content\">\n          <IonTabs>\n            <IonRouterOutlet class=\"desktop-page-container\">\n              <Route path=\"/app/search\" render={(props: any) => <AuthWrapper Component={SearchContainer} props={props} />} exact />\n              <Route path=\"/app/search/results\" render={(props: any) => <SearchResultContainer {...props} />} exact />\n              {(isEntitled(\"home\", \"recommended\") || isEntitled(\"home\", \"watched\")) ? <Route path=\"/app/home\" \n              render={(props: any) => <AuthWrapper Component={HomeContainer} props={props} />} exact={true} /> : <Route />}\n              <Route path=\"/app/(home/recommended|home/watched|search/results)/:id\" render={(props: any) => <AuthWrapper Component={LoadDetailsContainer} props={props} />} />\n              <Route path=\"/app/home/watched\" render={(props: any) => <AuthWrapper Component={HomeContainer} props={props} />} exact={true} />\n              <Route path=\"/app/home/recommended\" render={(props: any) => <AuthWrapper Component={HomeContainer} props={props} />} exact={true} />\n\n              <Route path=\"/app/menu/faq\" component={MenuContainer} />\n              <Route path=\"/app/menu/contact\" component={MenuContainer} />\n              <Route path=\"/app/manage/ProfileDetails/Edit\" component={ProfileEditContainer} />\n              <Route path=\"/app/manage/ProfileDetails\" component={ProfileContainer} />\n              <Route path=\"/app/manage/CarrierProfileDetails\" component={CarrierProfileContainer}  exact={true} />\n              <Route path=\"/app/manage/ManageMyCapacity/Edit\" component={ManageCapacityEditContainer} exact={true} />\n              <Route path=\"/app/manage/ManageMyCapacity/Add\" component={ManageCapacityAddContainer} exact={true} />\n              <Route path=\"/app/manage/ManageMyCapacity/View\" component={ManageCapacityViewContainer} exact={true} />\n              <Route path=\"/app/manage/ManageMyCapacity\" component={ManageCapacityContainer} />\n              <Route path=\"/app/manage/ManageUser/Profile/Edit\" component={ManageUserProfileEditContainer} exact={true} />\n              <Route path=\"/app/manage/ManageUser/Profile\" component={ManageUserProfileContainer} exact={true} />\n              <Route path=\"/app/manage/ManageUser/Add\" component={ManageUserProfileAddContainer} exact={true} />\n              <Route path=\"/app/manage/ManageUser\" component={ManageUserContainer} />\n              <Route path=\"/app/execute\" component={ExecuteContainer} sexact={true} />\n              <Route path=\"/app/(MyLoad/CarrierAssigned)\" render={(props: any) => <CarrierAssignedContainer {...props} />} exact={true} />\n              <Route path=\"/app/(MyLoad/DriverAssigned)\" render={(props: any) => <DriverAssignedContainer {...props} />} exact={true} />\n              <Route path=\"/app/MyLoad/driverAssign/addDriver/:id\" render={(props: any) => <AddDriverContainer {...props} />} exact={true} />\n              <Route path=\"/app/MyLoad/driverAssign/:id\" render={(props: any) => <AssignDriverContainer {...props} />} exact={true} />\n              <Route path=\"/app/(MyLoad/InTransit)\" render={(props: any) => <InTransitContainer {...props} />} exact={true} />\n              <Route path=\"/app/(MyLoad/Delivered)\" render={(props: any) => <DeliveredContainer {...props} />} exact={true} />\n              <Route\n                path=\"/app/MyLoad\"\n                render={(props: any) => <ExecuteContainer {...props} /> } exact={true}\n              />\n              {(isEntitled(\"myLoad\", \"driverAssigned\")) ?\n                <Route path=\"/app/(MyLoad/shipmentUpdateScreen)/:id\" render={(props: any) => <ShipmentUpdateScreen {...props} />} exact={true} /> : <Route />}\n\n              <Route\n                path=\"/app/manage\"\n                render={(props: any) => <AuthWrapper Component={ManageContainer} props={props} />}\n                exact={true}\n              />\n              <Route path=\"/app/more\" render={(props: any) => <AuthWrapper Component={MenuContainer} props={props} />} exact={true} />\n              <Route path=\"/app/(MyLoad/CarrierAssigned|MyLoad/DriverAssigned|MyLoad/InTransit|MyLoad/Delivered)/:id\" \n              render={(props: any) => <MyLoadDetailsContainer {...props} />} />\n              <Route path=\"/\" render={() => <Redirect to={\"/app/\" + getDashboard()} />} exact={true} />\n              <Route path=\"/app/(more)/deviceInfo\" exact render={(props: any) => <DeviceInfoPage {...props} />} />\n              <Route path=\"/app/(more)/*\" render={(props: any) => <CommonMenuPage {...props} />} />\n            </IonRouterOutlet>\n            <IonTabBar slot=\"bottom\">\n            {isEntitled(\"home\") &&\n                <IonTabButton tab=\"home\" href={ isEntitled(\"home\", \"screen\")?\"/app/home\":noAccessUrl} onClick={(e:any)=>{navCheck(\"home\")}} >\n                  <IonIcon src=\"assets/icon/nav-home-icon.svg\" class=\"home_icon\"></IonIcon>\n                  <IonLabel class=\"tab_footer_label\">Home</IonLabel>\n                </IonTabButton>}\n                {isEntitled(\"search\") && <IonTabButton tab=\"search\" href={isEntitled(\"search\", \"screen\")? \"/app/search\":noAccessUrl} onClick={(e:any)=>{navCheck(\"search\")}}>\n                <IonIcon src=\"assets/icon/bottom_search_icon.svg\" class=\"search_icon\"></IonIcon>\n                <IonLabel class=\"tab_footer_label search_label\">Search</IonLabel>\n              </IonTabButton>}\n\n              {isEntitled(\"myLoad\") && <IonTabButton tab=\"execute\" href={ isEntitled(\"myLoad\", \"screen\")? \"/app/MyLoad\":noAccessUrl} onClick={(e:any)=>{navCheck(\"myLoad\")}} >\n                  <IonIcon src=\"assets/icon/My Load.svg\" class=\"my_load_icon\"></IonIcon>\n                  <IonLabel class=\"tab_footer_label execute_label\">My Loads</IonLabel>\n                </IonTabButton>}\n                {isEntitled(\"manage\") && <IonTabButton tab=\"manage\" href={ isEntitled(\"manage\", \"screen\")? \"/app/manage\":noAccessUrl} onClick={(e:any)=>{navCheck(\"manage\")}} >\n                  <IonIcon src=\"assets/icon/manag icon.svg\" class=\"manage_icon\"></IonIcon>\n                  <IonLabel class=\"tab_footer_label tab_footer_label_manage\">Manage</IonLabel>\n                </IonTabButton>}\n                {isEntitled(\"more\") && <IonTabButton tab=\"more\" href={ isEntitled(\"more\", \"screen\")? \"/app/more\":noAccessUrl} onClick={(e:any)=>{navCheck(\"more\")}} >\n                  <IonIcon src=\"assets/icon/more icon.svg\" class=\"more_icon\"></IonIcon>\n                  <IonLabel class=\"tab_footer_label tab_footer_label_more\">More</IonLabel>\n                </IonTabButton>}\n\n            </IonTabBar>\n          </IonTabs>\n        </div>\n        <div className=\"tab-bar-profile\">\n          <IonRow>\n            <IonCol>\n              <IonImg src=\"assets/icon/man.svg\"></IonImg>\n            </IonCol>\n            <IonCol class=\"name-col\">\n              <span>Welcome</span> <br /><span>Igor</span>\n            </IonCol>\n            <IonCol>\n              <i className=\"downArrow\"></i>\n            </IonCol>\n          </IonRow>\n\n\n        </div>\n      </div>\n      <IonFooter class=\"copyright-div\">\n        <span>© 2019 Schneider. All Rights Reserved.</span>\n        <span>Home | Sitemap | Privacy Policy</span>\n      </IonFooter>\n    </>\n\n  );\n}\nfunction navCheck(tab: any) {\n  if (!isEntitled(tab, \"screen\")) {\n    ToastMessage.show(NO_ACCESS_MSG);\n  }\n}\ninterface AuthProps { Component: any, props: any }\n/**\n  * method to check if session is active or not. if not user will be redirected to landing screen.\n  * @param {Component} Component routing Component.\n  * @param {Object} props routing component properties.\n  * @returns {Component} returns wrapped component.\n  */\nconst AuthWrapper: React.FC<AuthProps> = React.memo(({ Component, props }) => {\n  const [validSession, setValidSession] = useState(false);\n  useEffect(() => {\n    setValidSession(true);\n  }, []);\n  (useAuthService()).hasSession(validSession, setValidSession);\n  return <Component {...props} />\n});\nexport default React.memo(RootLevelTabs);\n","import { useState } from 'react';\r\nimport { Plugins, Device } from '@capacitor/core';\r\nimport { infinite } from 'ionicons/icons';\r\nconst { Geolocation, GeolocationOptions } = Plugins;\r\n\r\nconst ERROR_ACCESS_DENIED_IOS =\r\n  'The operation couldn’t be completed. (kCLErrorDomain error 1.)'; // iOS\r\nconst ERROR_ACCESS_DENIED_ANDROID = 'User denied location permission'; // android\r\nconst ERROR_ACCESS_LOCATION_UNAVAILABLE_ANDROID = 'location unavailable'; // android\r\nconst ERROR_ACCESS_DENIED_WEB = 'User denied Geolocation'; // web\r\n\r\nconst ERROR_VERIFY_LOCATION_PERMISSIONS =\r\n  'Please verify if your location preferences are switched ON';\r\n\r\nexport function useGeolocation() {\r\n  const [currentPosition, setCurrentPosition] = useState();\r\n  const [errorMessage, setErrorMessage] = useState<any>({});\r\n  let intervalID: any;\r\n\r\n  /* Commented Code as SetInterval is not flow is not working in iOS. */\r\n\r\n  const watchCurrentPosition = () => {\r\n    // getCurrentPosition();\r\n    // if (!intervalID) {\r\n    //   intervalID = setInterval(\r\n    //     () => {\r\n    //       getCurrentPosition();\r\n    //     },\r\n    //     60000,\r\n    //     intervalID\r\n    //   );\r\n    // }\r\n  };\r\n\r\n  //   const watchCurrentPosition = () => {\r\n  //     console.log('intervalID', intervalID);\r\n  //     try {\r\n  //       if (!intervalID) {\r\n  //         intervalID = Geolocation.watchPosition(\r\n  //           { enableHighAccuracy: false, maximumAge: Infinity, timeout: 15000 },\r\n  //           (result, error) => {\r\n  //             if (result) {\r\n  //               console.log('GPSDATA:::', result);\r\n\r\n  //               setCurrentPosition(captureGPSData(result));\r\n  //             } else {\r\n  //               console.log('GPS Error', error);\r\n  //             }\r\n  //           }\r\n  //         );\r\n  //       }\r\n  //     } catch (error) {\r\n  //       console.log('GPS catch Error:', error);\r\n  //     }\r\n  //   };\r\n\r\n  const captureGPSData = (_result: any) => {\r\n    const { timestamp } = _result;\r\n    const { latitude, longitude } = _result.coords;\r\n    const gpsData = {\r\n      timestamp: new Date(timestamp).toLocaleString('en-US').toString(),\r\n      latitude,\r\n      longitude\r\n    };\r\n    return gpsData;\r\n  };\r\n\r\n  const getCurrentPosition = () => {\r\n    // try {\r\n    //   Geolocation.getCurrentPosition({\r\n    //     maximumAge: 1000,\r\n    //     enableHighAccuracy: false,\r\n    //     timeout: 60000\r\n    //   }).then(\r\n    //     result => {\r\n    //       setCurrentPosition(captureGPSData(result));\r\n    //     },\r\n    //     error => {\r\n    //       console.log(' getCurrentPosition Error:', JSON.stringify(error));\r\n    //       let errorMsg = error.errorMessage || error.message || error;\r\n    //       if (\r\n    //         // errorMsg === ERROR_ACCESS_DENIED_ANDROID ||\r\n    //         errorMsg === ERROR_ACCESS_LOCATION_UNAVAILABLE_ANDROID ||\r\n    //         errorMsg === ERROR_ACCESS_DENIED_IOS ||\r\n    //         errorMsg === ERROR_ACCESS_DENIED_WEB\r\n    //       ) {\r\n    //         const date = new Date();\r\n    //         errorMsg = ERROR_VERIFY_LOCATION_PERMISSIONS;\r\n    //         let title = 'Location Access';\r\n    //         setErrorMessage({ date, errorMsg, title });\r\n    //       }\r\n    //     }\r\n    //   );\r\n    // } catch (error) {\r\n    //   console.log('GPS catch Error:', error);\r\n    // }\r\n  };\r\n\r\n  return {\r\n    watchCurrentPosition,\r\n    currentPosition,\r\n    errorMessage\r\n  };\r\n}\r\n","import React from 'react';\nimport { IonAlert } from '@ionic/react';\n\nexport const PermissionAlert = (props: any) => {\n    return (\n        <>\n            <IonAlert\n                isOpen={props.isOpen}\n                message={props.message}\n                backdropDismiss={false}\n                header={props.title}\n                buttons={\n                    [\n                        {\n                            text: 'Ok',\n                            role: 'Ok',\n                            cssClass: 'secondary',\n                            handler: () => { props.close() }\n                        }\n                    ]\n                } />\n\n        </>\n    )\n}\n","import { IDeviceInput } from \"../../schemas/App/App.Schema\";\n\nexport class DeviceRegister {\n\n    private __device_register_state: IDeviceInput = {\n\n        uuId: \"\",\n        upn: \"\",\n        carrierId: \"\",\n        deviceToken: \"\",\n        email: \"\",\n        phone: \"\"\n    };\n\n    constructor() {\n    }\n    get uuid() {\n        return this.__device_register_state.uuId;\n    }\n    set uuid(value) {\n        this.__device_register_state.uuId = value;\n    }\n\n    get upn() {\n        return this.__device_register_state.upn;\n    }\n    set upn(value) {\n        this.__device_register_state.upn = value;\n    }\n\n    get carrierId() {\n        return this.__device_register_state.carrierId;\n    }\n    set carrierId(value) {\n        this.__device_register_state.carrierId = value;\n    }\n    get deviceToken() {\n        return this.__device_register_state.deviceToken;\n    }\n    set deviceToken(value) {\n        this.__device_register_state.deviceToken = value;\n    }\n    get email() {\n        return this.__device_register_state.email;\n    }\n    set email(value) {\n        this.__device_register_state.email = value;\n    }\n\n    get phone() {\n        return this.__device_register_state.phone;\n    }\n    set phone(value) {\n        this.__device_register_state.phone = value;\n    }\n\n    get deviceOs() {\n        return this.__device_register_state.deviceOs;\n    }\n    set deviceOs(value) {\n        this.__device_register_state.deviceOs = value;\n    }\n    get deviceOsVersion() {\n        return this.__device_register_state.deviceOsVersion;\n    }\n    set deviceOsVersion(value) {\n        this.__device_register_state.deviceOsVersion = value;\n    }\n\n\n\n    getRequestPayload() {\n        return {\n            mutation: {\n                registerDevice: {\n                    __args: {\n                        input: this.__device_register_state\n                    }\n                }\n            }\n        };\n    }\n\n\n}","import React from 'react';\nimport { IonAlert } from '@ionic/react';\nimport \"./Alert.scss\";\n\nexport const Alert = (props: any) => {\n    return (\n        <>\n            <IonAlert\n                isOpen={props.isOpen}\n                message={props.message}\n                backdropDismiss={true}\n                header={props.title}\n                onDidDismiss={props.dismiss}\n                buttons={\n                    [\n                        {\n                            text: 'ok',\n                            role: 'ok',\n                            cssClass: 'firstBtn',\n                            handler: () => { props.close() }\n                        }\n\n                    ]\n                } />\n        </>\n    )\n}\n","import { IContentParams } from \"app/schemas/schema\";\n\nexport class ContentStack {\n  getRequestPayload(contentParams: IContentParams) {\n    return {\n      query: {\n        getUserHelpContent: {\n          menuItems: {\n            dataTypes: {\n              fieldName: true,\n              fieldType: true,\n              schema: {\n                fieldName: true,\n                fieldType: true,\n                schema: {\n                  fieldName: true,\n                  fieldType: true,\n                },\n              },\n            },\n            title: true,\n            group: {\n              menuItem: true,\n              menuSequence: true,\n              uid: true,\n            },\n          },\n          menuEntries: {\n            dataTypes: {\n              fieldName: true,\n              fieldType: true,\n              schema: {\n                fieldName: true,\n                fieldType: true,\n                schema: {\n                  fieldName: true,\n                  fieldType: true,\n                },\n              },\n            },\n            uid: true,\n            sections: {\n              title: true,\n              richTextDescription: true,\n              group: {\n                title: true,\n                description: true,\n                richTextDescription: true,\n                video: {\n                  title: true,\n                  href: true,\n                },\n              },\n            },\n            group: {\n              title: true,\n              description: true,\n              richTextDescription: true,\n              video: {\n                title: true,\n                href: true,\n              },\n            },\n            tags: true,\n            richText: true,\n          },\n        },\n      },\n    };\n  }\n}\n","import React, { PureComponent } from 'react';\nimport {\n  IonContent,\n  IonPage,\n  IonIcon,\n  IonGrid,\n  IonRow,\n  IonLabel,\n  IonInput,\n  IonRadioGroup,\n  IonRadio,\n  IonItem,\n  IonList,\n  IonButton,\n  IonCol,\n  isPlatform\n} from '@ionic/react';\nimport { RegisterFrom, EVENT, SCREEN } from '../../utils/constants';\nimport './Registration.page.scss';\nimport {\n  getSelectedRoles,\n  roles,\n  handlePhoneNumber,\n  formatPhoneNumber\n} from '../Manage/ManageUser/ManageUserUtil';\nimport NetworkErrorToaster from '../../components/NetworkErrorToaster/NetworkErrorToaster';\nimport { logEvent } from '../../utils/Analytics';\nimport { LogOutContainer } from 'app/containers/LogOutContainer';\n\nconst textpattern = /^[a-zA-Z0-9 ]*$/;\nconst numericPattern = /^[0-9]*$/;\n\nclass RegisterComponent extends PureComponent<any, any> {\n  state = {\n    showOptions: false,\n    slectedNo: 'carrierUsDotNo',\n    firstName: '',\n    lastName: '',\n    mobileNumber: '',\n    companyName: '',\n    corporateZipCode: '',\n    role: roles,\n    allowToSave: false,\n    roleError: '',\n    usDotError: '',\n    mobileNumberError: '',\n    zipcodeEror: '',\n    firstNameError: '',\n    lastNameError: '',\n    companyNameError: '',\n    USDOTNO: ''\n  };\n\n  componentDidMount() {\n    // Analytics implementation\n    logEvent(EVENT.SV_REGISTRATION, {\n      screen: SCREEN.REGISTRATION\n    });\n  }\n\n  handleValueChange = (event: any) => {\n    let { value } = event.target;\n    if (\n      !textpattern.test(event.target.value) &&\n      (event.target.name === 'firstName' || event.target.name === 'lastName')\n    ) {\n      event.target.value = event.target.value.replace(/[^a-zA-Z0-9 ]*/g, '');\n    }\n\n    this.setState({\n      [event.target.name]: value\n    });\n    if (\n      this.state.firstName.length > 0 &&\n      this.state.lastName.length > 0 &&\n      this.state.companyName.length > 0 &&\n      this.state.mobileNumber.length > 0 &&\n      this.state.corporateZipCode.length > 0 &&\n      this.state.USDOTNO.length > 0\n    ) {\n      this.setState({ allowToSave: true });\n    } else {\n      this.setState({ allowToSave: false });\n    }\n  };\n\n  submitForm = () => {\n    // Analytics implementation\n    logEvent(EVENT.UE_REGISTER_NOW, {\n      screen: SCREEN.REGISTRATION\n    });\n\n    const userInput = {\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      mobileNumber: this.state.mobileNumber,\n      companyName: this.state.companyName,\n      corporateZipCode: this.state.corporateZipCode,\n      carrierUsDotNo: this.state.slectedNo === 'carrierUsDotNo' ? this.state.USDOTNO : null,\n      carrierMcNo: this.state.slectedNo === 'carrierMcNo' ? this.state.USDOTNO : null,\n      role: getSelectedRoles(this.state.role)\n    };\n    if (\n      this.state.firstName.length > 0 &&\n      this.state.lastName.length > 0 &&\n      this.state.companyName.length > 0 &&\n      this.state.mobileNumber.length > 0 &&\n      this.state.corporateZipCode.length > 0 &&\n      this.state.USDOTNO.length > 0 &&\n      this.state.roleError === '' &&\n      this.state.mobileNumberError === '' &&\n      this.state.zipcodeEror === '' &&\n      this.state.usDotError === ''\n    ) {\n      this.props.registerUser(userInput);\n    }\n  };\n\n  optionClicked = (selectedRole: any) => {\n    const roles = this.state.role;\n    roles.forEach((role: any) => {\n      if (role.label === selectedRole.label) role.selected = !role.selected;\n    });\n\n    const selectedValues: any = [];\n    this.state.role.forEach((role: any) => {\n      if (role.selected === true) selectedValues.push(role.value);\n    });\n    const selected = getSelectedRoles(this.state.role);\n    this.setState({ showOptions: false });\n    const event = { target: { name: 'role', value: selected } };\n    this.validateFeilds(event);\n  };\n\n  validateFeilds = (event: any) => {\n    const { name, value } = event.target;\n    switch (name) {\n      case RegisterFrom.mobileNumber:\n        let enteredValue = value.replace(/\\s/g, '');\n        enteredValue = enteredValue.replace(/\\./g, '');\n        if (handlePhoneNumber(enteredValue)) {\n          const mobileNumber = handlePhoneNumber(value) ? formatPhoneNumber(value, true) : value;\n          this.setState({ mobileNumberError: '', mobileNumber });\n        } else {\n          this.setState({\n            mobileNumberError: 'Please Enter a valid cell phone number'\n          });\n        }\n        break;\n      case RegisterFrom.corporateZipCode:\n        if (textpattern.test(value) && value.length <= 10 && value.length > 0) {\n          this.setState({ zipcodeEror: '' });\n        } else {\n          this.setState({\n            zipcodeEror: 'Please Enter a valid company corporate zip code'\n          });\n        }\n        break;\n      case 'USDOTNO':\n        if (numericPattern.test(value) && value.length >= 6 && value.length <= 8) {\n          this.setState({ usDotError: '' });\n        } else {\n          this.setState({\n            usDotError: 'Please Enter a valid company USDOT or MC#'\n          });\n        }\n        break;\n      case 'role':\n        if (value.length > 0) {\n          this.setState({ roleError: '' });\n        } else {\n          this.setState({ roleError: 'Please select a role' });\n        }\n        break;\n      case RegisterFrom.firstName:\n        if (value.length > 0) {\n          this.setState({ firstNameError: '' });\n        } else {\n          this.setState({ firstNameError: 'Please Enter a valid first name' });\n        }\n        break;\n      case RegisterFrom.lastName:\n        if (value.length > 0) {\n          this.setState({ lastNameError: '' });\n        } else {\n          this.setState({ lastNameError: 'Please Enter a valid last name' });\n        }\n        break;\n      case RegisterFrom.companyName:\n        if (value.length > 0) {\n          this.setState({ companyNameError: '' });\n        } else {\n          this.setState({\n            companyNameError: 'Please Enter a valid company name'\n          });\n        }\n        break;\n    }\n  };\n\n  render() {\n    return (\n      <IonPage>\n        <NetworkErrorToaster />\n        {isPlatform('mobile') ? (\n          <>\n            <IonContent className=\"registration-page\">\n              <IonIcon src=\"assets/icon/Logo.svg\" class=\"logo\" />\n              <LogOutContainer {...this.props} isRegistrationPage={true}/>\n              <IonGrid class=\"titel-grid\"> Register Now</IonGrid>\n              <IonList class=\"registration-form\">\n                <IonGrid class=\"select-role-grid\">\n                  <IonRow class=\"select-role-label\">Type of User</IonRow>\n\n                  <IonRow\n                    onClick={() => this.setState({ showOptions: true })}\n                    data-test=\"roleDropdown\">\n                    <IonCol class=\"role-name\">\n                      {this.state.role.map((roles: any, index: any) => (\n                        <span key={index}>{roles.selected ? `${roles.label} ` : ''}</span>\n                      ))}\n                    </IonCol>\n                    <IonCol class=\"dropDown-icon\">\n                      <IonIcon src=\"/assets/icon/grid-down-arrow.svg\" />\n                    </IonCol>\n                  </IonRow>\n                  {this.state.showOptions ? (\n                    <IonGrid class=\"role-suggetion-grid\">\n                      {this.state.role.map((roles: any, index: number) => (\n                        <IonRow\n                          key={index}\n                          class={`opt-row ${this.state.role[index].selected ? 'selected' : ''}`}\n                          onClick={() => {\n                            this.optionClicked(roles);\n                          }}\n                          data-test=\"roleOption\">\n                          <IonCol size=\"1\">\n                            <i className=\"check\"></i>\n                          </IonCol>\n                          <IonCol>\n                            <IonRow> {roles.label}</IonRow>\n                            <IonRow class=\"role-desc\">{roles.desc}</IonRow>\n                          </IonCol>\n                        </IonRow>\n                      ))}\n                    </IonGrid>\n                  ) : null}\n                </IonGrid>\n                <IonGrid class={`errorGrid ${this.state.roleError ? 'showErrorGrid' : ''}`}>\n                  {this.state.roleError}\n                </IonGrid>\n                <IonItem mode=\"ios\">\n                  <IonLabel mode=\"ios\" position=\"floating\">\n                    First Name\n                  </IonLabel>\n                  <IonInput\n                    type=\"text\"\n                    name={RegisterFrom.firstName}\n                    pattern=\"[A-Za-z]\"\n                    placeholder=\"Enter Your First Name\"\n                    value={this.state.firstName}\n                    onIonChange={event => this.handleValueChange(event)}\n                    onBlur={event => this.validateFeilds(event)}\n                    data-test=\"firstName\"\n                  />\n                </IonItem>\n                <IonGrid class={`errorGrid ${this.state.firstNameError ? 'showErrorGrid' : ''}`}>\n                  {this.state.firstNameError}\n                </IonGrid>\n                <IonItem mode=\"ios\">\n                  <IonLabel mode=\"ios\" position=\"floating\">\n                    Last Name\n                  </IonLabel>\n                  <IonInput\n                    type=\"text\"\n                    name={RegisterFrom.lastName}\n                    placeholder=\"Enter Your Last Name\"\n                    onIonChange={event => this.handleValueChange(event)}\n                    pattern=\"[A-Za-z]\"\n                    value={this.state.lastName}\n                    onBlur={event => this.validateFeilds(event)}\n                    data-test=\"lastName\"\n                  />\n                </IonItem>\n                <IonGrid class={`errorGrid ${this.state.lastNameError ? 'showErrorGrid' : ''}`}>\n                  {this.state.lastNameError}\n                </IonGrid>\n                <IonItem mode=\"ios\">\n                  <IonLabel mode=\"ios\" position=\"floating\">\n                    Cell Phone Number\n                  </IonLabel>\n                  <IonInput\n                    type=\"text\"\n                    name={RegisterFrom.mobileNumber}\n                    placeholder=\"Enter Your Cell Phone Number\"\n                    onIonChange={event => this.handleValueChange(event)}\n                    value={this.state.mobileNumber}\n                    onBlur={event => this.validateFeilds(event)}\n                    data-test=\"mobileNumber\"\n                  />\n                </IonItem>\n                <IonGrid class={`errorGrid ${this.state.mobileNumberError ? 'showErrorGrid' : ''}`}>\n                  {this.state.mobileNumberError}\n                </IonGrid>\n                <IonItem mode=\"ios\">\n                  <IonLabel mode=\"ios\" position=\"floating\">\n                    Company Name\n                  </IonLabel>\n                  <IonInput\n                    type=\"text\"\n                    name={RegisterFrom.companyName}\n                    placeholder=\"Enter Your Company Name\"\n                    onIonChange={event => this.handleValueChange(event)}\n                    value={this.state.companyName}\n                    onBlur={event => this.validateFeilds(event)}\n                    data-test=\"companyName\"\n                  />\n                </IonItem>\n                <IonGrid class={`errorGrid ${this.state.companyNameError ? 'showErrorGrid' : ''}`}>\n                  {this.state.companyNameError}\n                </IonGrid>\n                <IonItem mode=\"ios\">\n                  <IonLabel mode=\"ios\" position=\"floating\">\n                    Company Corporate Zip Code\n                  </IonLabel>\n                  <IonInput\n                    type=\"text\"\n                    name={RegisterFrom.corporateZipCode}\n                    placeholder=\"Enter Your Company Corporate Zip Code\"\n                    onIonChange={event => this.handleValueChange(event)}\n                    pattern=\"[A-Za-z]\"\n                    value={this.state.corporateZipCode}\n                    onBlur={event => this.validateFeilds(event)}\n                    data-test=\"corporateZipCode\"\n                  />\n                </IonItem>\n                <IonGrid class={`errorGrid ${this.state.zipcodeEror ? 'showErrorGrid' : ''}`}>\n                  {this.state.zipcodeEror}\n                </IonGrid>\n                <IonItem mode=\"ios\">\n                  <IonLabel mode=\"ios\" position=\"floating\">\n                    Company USDOT or MC#\n                  </IonLabel>\n                  <IonRadioGroup\n                    onIonChange={event => this.handleValueChange(event)}\n                    name=\"slectedNo\"\n                    value={this.state.slectedNo}>\n                    <IonRow>\n                      <IonCol>\n                        <IonRadio value=\"carrierUsDotNo\" class=\"radiobutton\" mode=\"md\" />\n                      </IonCol>\n                      <IonCol class=\"radiobutton-label\"> USDOT </IonCol>\n                      <IonCol>\n                        <IonRadio value=\"carrierMcNo\" class=\"radiobutton\" mode=\"md\" />\n                      </IonCol>\n                      <IonCol class=\"radiobutton-label\">MC#</IonCol>\n                    </IonRow>\n                  </IonRadioGroup>\n                  <IonInput\n                    type=\"number\"\n                    name=\"USDOTNO\"\n                    placeholder=\"Enter Your Company USDOT or MC#\"\n                    onIonChange={event => this.handleValueChange(event)}\n                    maxlength={8}\n                    value={this.state.USDOTNO}\n                    onBlur={event => this.validateFeilds(event)}\n                    data-test=\"USDOTNO\"\n                  />\n                </IonItem>\n                <IonGrid class={`errorGrid ${this.state.usDotError ? 'showErrorGrid' : ''}`}>\n                  {this.state.usDotError}\n                </IonGrid>\n              </IonList>\n            </IonContent>\n            <div className=\"bottom-grid\">\n              <IonButton\n                expand=\"full\"\n                disabled={!this.state.allowToSave}\n                className={`${this.state.allowToSave ? 'active-btn' : 'register-btn'}`}\n                onClick={this.submitForm}\n                data-test=\"registerButton\">\n                Register Now\n              </IonButton>\n            </div>\n          </>\n        ) : (\n          <IonContent className=\"registration-page\">\n            <IonIcon src=\"assets/icon/Logo.svg\" class=\"logo\" />\n            <IonGrid class=\"titel-grid\"> Register Now</IonGrid>\n            <IonList class=\"registration-form\">\n              <IonRow>\n                <IonCol className=\"registration-form-col\">\n                  <IonGrid class=\"select-role-grid\">\n                    <IonRow class=\"select-role-label\">Type of User</IonRow>\n\n                    <IonRow onClick={() => this.setState({ showOptions: true })}>\n                      <IonCol class=\"role-name\">\n                        {this.state.role.map((roles: any, index: any) => (\n                          <span key={index}>{roles.selected ? `${roles.label} ` : ''}</span>\n                        ))}\n                      </IonCol>\n                      <IonCol class=\"dropDown-icon\">\n                        <IonIcon src=\"/assets/icon/grid-down-arrow.svg\" />\n                      </IonCol>\n                    </IonRow>\n\n                    {this.state.showOptions ? (\n                      <IonGrid class=\"role-suggetion-grid\" data-test=\"capacity-type-list\">\n                        {this.state.role.map((roles: any, index: number) => (\n                          <IonRow\n                            key={index}\n                            class={`opt-row ${roles.selected ? 'selected' : ''}`}\n                            onClick={() => {\n                              this.optionClicked(roles);\n                            }}>\n                            <IonCol size=\"1\" className=\"opt-col-i\">\n                              <i className=\"check\"></i>\n                            </IonCol>\n                            <IonCol>\n                              <IonRow> {roles.label}</IonRow>\n                              <IonRow class=\"role-desc\">{roles.desc}</IonRow>\n                            </IonCol>\n                          </IonRow>\n                        ))}\n                      </IonGrid>\n                    ) : null}\n                  </IonGrid>\n                  <IonGrid class=\"errorGrid\">{this.state.roleError}</IonGrid>\n                  <IonItem mode=\"ios\">\n                    <IonLabel mode=\"ios\" position=\"floating\">\n                      Last Name\n                    </IonLabel>\n                    <IonInput\n                      type=\"text\"\n                      name=\"lastName\"\n                      placeholder=\"Enter Your Last Name\"\n                      onIonChange={event => this.handleValueChange(event)}\n                      pattern=\"[A-Za-z]\"\n                      value={this.state.lastName}\n                      onBlur={event => this.validateFeilds(event)}\n                    />\n                  </IonItem>\n                  <IonGrid class=\"errorGrid\">{this.state.lastNameError}</IonGrid>\n                  <IonItem mode=\"ios\">\n                    <IonLabel mode=\"ios\" position=\"floating\">\n                      Company Name\n                    </IonLabel>\n                    <IonInput\n                      type=\"text\"\n                      name=\"companyName\"\n                      placeholder=\"Enter Your Company Name\"\n                      onIonChange={event => this.handleValueChange(event)}\n                      value={this.state.companyName}\n                      onBlur={event => this.validateFeilds(event)}\n                    />\n                  </IonItem>\n                  <IonGrid class=\"errorGrid\">{this.state.companyNameError}</IonGrid>\n                  <IonItem mode=\"ios\">\n                    <IonLabel mode=\"ios\" position=\"floating\">\n                      Company USDOT or MC#\n                    </IonLabel>\n                    <IonRadioGroup\n                      onIonChange={event => this.handleValueChange(event)}\n                      name=\"slectedNo\"\n                      value={this.state.slectedNo}>\n                      <IonRow>\n                        <IonCol>\n                          <IonRadio value=\"carrierUsDotNo\" class=\"radiobutton\" mode=\"md\" />\n                        </IonCol>\n                        <IonCol class=\"radiobutton-label\"> USDOT </IonCol>\n                        <IonCol>\n                          <IonRadio value=\"carrierMcNo\" class=\"radiobutton\" mode=\"md\" />\n                        </IonCol>\n                        <IonCol class=\"radiobutton-label\">MC#</IonCol>\n                      </IonRow>\n                    </IonRadioGroup>\n                    <IonInput\n                      type=\"number\"\n                      name=\"USDOTNO\"\n                      placeholder=\"Enter Your Company USDOT or MC#\"\n                      onIonChange={event => this.handleValueChange(event)}\n                      maxlength={8}\n                      value={this.state.USDOTNO}\n                      onBlur={event => this.validateFeilds(event)}\n                    />\n                  </IonItem>\n                  <IonGrid class=\"errorGrid\">{this.state.usDotError}</IonGrid>\n                </IonCol>\n                <IonCol className=\"registration-col\">\n                  <IonItem mode=\"ios\">\n                    <IonLabel mode=\"ios\" position=\"floating\">\n                      First Name\n                    </IonLabel>\n                    <IonInput\n                      type=\"text\"\n                      name=\"firstName\"\n                      pattern=\"[A-Za-z]\"\n                      placeholder=\"Enter Your First Name\"\n                      value={this.state.firstName}\n                      onIonChange={event => this.handleValueChange(event)}\n                      onBlur={event => this.validateFeilds(event)}\n                    />\n                  </IonItem>\n                  <IonGrid class=\"errorGrid\">{this.state.firstNameError}</IonGrid>\n                  <IonItem mode=\"ios\">\n                    <IonLabel mode=\"ios\" position=\"floating\">\n                      Cell Phone Number\n                    </IonLabel>\n                    <IonInput\n                      type=\"text\"\n                      name=\"mobileNumber\"\n                      placeholder=\"Enter Your Cell Phone Number\"\n                      onIonChange={event => this.handleValueChange(event)}\n                      value={this.state.mobileNumber}\n                      onBlur={event => this.validateFeilds(event)}\n                    />\n                  </IonItem>\n                  <IonGrid class=\"errorGrid\">{this.state.mobileNumberError}</IonGrid>\n                  <IonItem mode=\"ios\">\n                    <IonLabel mode=\"ios\" position=\"floating\">\n                      Company Corporate Zip Code\n                    </IonLabel>\n                    <IonInput\n                      type=\"text\"\n                      name=\"corporateZipCode\"\n                      placeholder=\"Enter Your Company Corporate Zip Code\"\n                      onIonChange={event => this.handleValueChange(event)}\n                      pattern=\"[A-Za-z]\"\n                      value={this.state.corporateZipCode}\n                      onBlur={event => this.validateFeilds(event)}\n                    />\n                  </IonItem>\n                  <IonGrid class=\"errorGrid\">{this.state.zipcodeEror}</IonGrid>\n                </IonCol>\n              </IonRow>\n              <div className=\"bottom-grid\">\n                <IonRow class=\"bottom-grid-row\">\n                  <IonCol>\n                  <LogOutContainer {...this.props} isRegistrationPage={true}/>\n                  </IonCol>\n                  <IonCol>\n                    <IonButton\n                      expand=\"full\"\n                      disabled={!this.state.allowToSave}\n                      className={`${this.state.allowToSave ? 'active-btn' : 'register-btn'}`}\n                      onClick={this.submitForm}>\n                      Register Now\n                    </IonButton>\n                  </IonCol>\n                </IonRow>\n              </div>\n            </IonList>\n          </IonContent>\n        )}\n      </IonPage>\n    );\n  }\n}\nexport default RegisterComponent;\n","import React, { useEffect, useState } from 'react';\nimport { IonLoading, isPlatform, IonToast, IonAlert } from '@ionic/react';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { compose } from 'redux';\nimport { Plugins, NetworkStatus, AppState } from '@capacitor/core';\nimport {\n  closePermissionAlert,\n  showPermissionAlert,\n  clearDeepLinkURI,\n  updateNetworkStatus\n} from './actions/Login/action';\nimport {\n  updateGpsCoordinates,\n  getMoreTabContent,\n  showAlert,\n  initializeOfflineModule,\n  createOfflineJSON,\n  updateOfflineContent,\n  findSearchData,\n  findShipmentInfo,\n  storeAccessToken,\n  registerUser\n} from './actions/App/action';\nimport {\n  getLoading,\n  getDeepLinkURI,\n  getUserDetails,\n  getDeviceRegistrationResult,\n  getAlertTitle,\n  getAlertMessage,\n  getShowAlert,\n  getNetworkStatus,\n  getOfflineData,\n  getConfigParams,\n  getSearchParams,\n  getRegisterUserStatusMessage,\n  getNotificationData,\n  getShipmentParams\n} from './selectors/selector';\n\nimport searchSaga from './saga/Search/Search.saga';\nimport myLoadSaga from './saga/MyLoad/saga';\nimport carrierAssigned from './saga/CarrierAssign/saga';\nimport useInjectSaga from './utils/injectSaga';\nimport useInjectReducer from './utils/injectReducer';\nimport reducer from './reducers/App/reducer';\nimport saga from './saga/App/saga';\n\nimport RootLevelTabs from '../app/components/app/Bars/Bar-bottom';\nimport { useGeolocation } from '../app/utils/useGeolocation';\nimport { PermissionAlert } from '../app/components/PermissionsAlert/PermissionAlert';\nimport {\n  getShowPermissionAlert,\n  getPermissionAlertMessage,\n  getPermissionAlertTitle,\n  makeDriverAssign\n} from '../app/selectors/selector';\n\nimport {\n  makeSelectRecommended,\n  getApiErrorMessage,\n  getMemberApiError\n} from '../app/selectors/Home/selector';\nimport { usePushNotification } from './utils/usePushNotification';\nimport { IONICWrapper, GPSWrapper, clear } from '../app/utils/common';\nimport { fetchUserDetails, hideAlert } from '../app/actions/App/action';\nimport {\n  driverAssignedLoadsFromPush,\n  shipmentForStartTrip,\n  shipmentForStartTripTimestamp\n} from './actions/carrierAssign/action';\nimport { ExicutionLoads } from './models/ExicutionLoads.model';\nimport { fetchShipments } from '../app/actions/carrierAssign/action';\nimport { Alert } from './components/Alert/Alert';\nimport {\n  getDriverAssignedLoads,\n  getCarrierAssignedLoads,\n  getInTransitLoads\n} from './selectors/Myload/selector';\nimport { ToastMessage } from './utils/ToastMessage';\nimport {\n  ISSUE_WITH_ASSIGNED_LOAD,\n  PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n  NO_NEWORK,\n  EVENT,\n  SCREEN,\n  INVITED_USER_CREDENTIALS_DOESNT_MATCH,\n  WARNING_TITLE,\n  Roles,\n  MANAGE_USER_REQUEST,\n  MEMBER_API_ERROR_MESSAGE,\n  MODULES\n} from './utils/constants';\nimport { GetrecentData } from './actions/Recent/action';\nimport { Recent } from './models/home/recent.model';\nimport { Favorite } from './models/home/favorite.model';\nimport { getFavoriteData } from './actions/Favorite/action';\nimport { makeRecent } from './selectors/RecentSearch/selector';\nimport { makeFavorite } from './selectors/FavouriteSearch/selector';\nimport favoriteReducer from './reducers/Favorite/reducer';\nimport recentReducer from './reducers/Recent/reducer';\n\nimport { ContentStack } from './models/home/contentStack.model';\nimport { MyLoadCard } from './actions/myload/action';\nimport { logEvent } from './utils/Analytics';\nimport { isEntitled } from './utils/common';\nimport RegisterComponent from './pages/Registration/Registration.page';\nimport { transferRequest, resetLoadedStatus } from './actions/manage/action';\nimport { clearApiResponseError, showMemberApiError } from './actions/Home/action';\nimport { UserDetails } from './models/userPforile/userProfile.modal';\nimport { useAuthService } from './services/Auth';\nimport { LogIn } from './models/home/login.model';\nimport { GetShipment } from './models/home/GetShipment.model';\nimport { buyLoadShipmentRequest } from './actions/BookLoad/action';\n\nconst fullDate = 'Mon, 01 Jan 2001 00:00:00 GMT';\nconst offlineJSON: any = {\n  configVer: '1.0',\n  contentParams: {\n    termsAndConditions: '0.0',\n    eula: '0.0',\n    privacy: '0.0',\n    contactOptions: '0.0',\n    videoWalkthroughs: '0.0',\n    aboutSchneider: '0.0',\n    becomingCarrier: '0.0',\n    faq: '0.0',\n    schneiderOfferings: '0.0'\n  },\n  UserId: {\n    searchParams: {\n      RecommendedLoads: fullDate,\n      RecommendedLoadsInterval: '5',\n      WatchedLoads: fullDate,\n      WatchedLoadsInterval: '10',\n      RecentSearch: fullDate,\n      RecentSearchInterval: '10',\n      FavouriteSearch: fullDate,\n      FavouriteSearchInterval: '10'\n    },\n    shipmentParams: {\n      shipment: fullDate,\n      shipmentInterval: '10'\n    }\n  }\n};\n\nconst key = 'App';\n\nexport const App: React.FC = (props: any) => {\n  const {\n    loading,\n    deepLinkURI,\n    driverAssignedLoads,\n    carrierAssignedLoads,\n    isNetworkAvailable,\n    inTransitLoads,\n    notificationData,\n    shipmentForStartTrip,\n    myLoadData,\n    favoriteLoadsData,\n    recentLoadsData,\n    fectchData,\n    userDetails,\n    getShipmentParams,\n    memberApiError,\n    setMemberApiError\n  } = props;\n\n  const { Network, App } = Plugins;\n  const favoriteSearchData =\n    favoriteLoadsData.Favorite.data &&\n    favoriteLoadsData.Favorite.data.findUserFavouriteSearchHistory;\n  const recentSearchData = recentLoadsData.data && recentLoadsData.data.findUserRecentSearchHistory;\n  const { currentPosition, errorMessage } = useGeolocation();\n  const { registerPush } = usePushNotification();\n  const { push } = useHistory();\n  const [isRegistered, setRegistered] = useState(true);\n  const [showCarrierAlert, setShowCarrierAlert] = useState(false);\n  const [apiCalled, setApiCalled] = useState(0);\n  const [message, setMessage] = useState('');\n  // Redirecting to the landing screen when session is expired.\n  // const authService = useAuthService();\n  // authService.getSession().then();\n\n  const [hasUpdateLoads, sethasUpdateLoads] = useState(false);\n  useEffect(() => {\n    try {\n      if (props && props.userDetails && Object.keys(props.userDetails).length) {\n        // Analytics implementation\n        logEvent(\n          EVENT.UE_LOGIN_SUCCESS,\n          {\n            screen: SCREEN.GET_STARTED,\n            carrierId: props.userDetails.carrierId\n          },\n          ['userId', 'roles']\n        );\n        const contentModel: ContentStack = new ContentStack();\n        if (apiCalled === 0) {\n          props.getMoreTabContent(\n            contentModel.getRequestPayload(props.getOfflineData.contentParams)\n          ); // TODO: To get More Tab Content. need to provide params.\n          setApiCalled(apiCalled + 1);\n          offlineDataPerUserStart();\n        }\n      }\n      if (isPlatform('capacitor') && props.userDetails && props.userDetails.carrierId) {\n        registerPush(props.userDetails);\n      }\n    } catch (error) {\n      console.log('ERROR:', error);\n    }\n  }, [props.userDetails]);\n\n  useEffect(() => {\n    if (currentPosition) {\n      props.updateGpsCoordinates(currentPosition);\n    }\n  }, [currentPosition]);\n\n  useEffect(() => {\n    if (deepLinkURI !== '') {\n      sethasUpdateLoads(true);\n    }\n  }, [driverAssignedLoads, carrierAssignedLoads, inTransitLoads]);\n\n  useEffect(() => {\n    if (deepLinkURI !== '' && notificationData.deepLinkURI !== '') {\n      // User ID And Carrier ID check for right user login.\n      if (notificationData.userId !== props.userDetails.userPrincipalName) {\n        // Show Error/ ReLogin Message;\n        props.showAlert({\n          isShowAlert: true,\n          alertMessage: INVITED_USER_CREDENTIALS_DOESNT_MATCH,\n          alertTitle: WARNING_TITLE\n        });\n        cleanNotification();\n        return;\n      }\n\n      if (!isNetworkAvailable) {\n        cleanNotification();\n        showNetworkError();\n        return;\n      }\n\n      const isMyloadNotification = deepLinkURI.includes('MyLoad');\n\n      if (isMyloadNotification) {\n        myLoadNotificationFlow();\n      } else {\n        manageUserNotificationFlow(notificationData);\n      }\n    }\n  }, [\n    deepLinkURI,\n    notificationData,\n    driverAssignedLoads,\n    carrierAssignedLoads,\n    isNetworkAvailable,\n    inTransitLoads\n  ]);\n\n  useEffect(() => {\n    if (!errorMessage.errorMsg) return;\n    props.showPermissionAlert({\n      isShowPermissionAlert: true,\n      permissionAlertMessage: errorMessage.errorMsg,\n      permissionAlertTitle: errorMessage.title\n    });\n  }, [errorMessage]);\n\n  useEffect(() => {\n    App.addListener('appStateChange', (state: AppState) => {\n      // state.isActive contains the active state\n      if (state.isActive) {\n        netWorkCheck();\n      }\n    });\n\n    /* handler to check network status change */\n    Network.addListener('networkStatusChange', (_netStatus: NetworkStatus) => {\n      props.updateNetworkStatus(_netStatus);\n    });\n    netWorkCheck();\n  }, []);\n\n  let buttons = [\n    {\n      text: 'No',\n      role: 'cancel',\n      handler: () => {\n        setRegistered(true);\n        setShowCarrierAlert(false);\n      }\n    },\n    {\n      text: 'Yes',\n      role: 'ok',\n      handler: () => {\n        navigate();\n      }\n    }\n  ];\n  useEffect(() => {\n    if (props && props.userDetails && Object.keys(props.userDetails).length) {\n      const role =\n        props.userDetails &&\n        props.userDetails.userApplicationDetails &&\n        props.userDetails.userApplicationDetails[0] &&\n        props.userDetails.userApplicationDetails[0].roles &&\n        props.userDetails.userApplicationDetails[0].roles[0] &&\n        props.userDetails.userApplicationDetails[0].roles[0].roleName;\n\n      if (\n        role &&\n        role === Roles.carrierGuest &&\n        !(props.userDetails && props.userDetails.mobileNumber) &&\n        !(props.userDetails && props.userDetails.firstName) &&\n        !(props.userDetails && props.userDetails.lastName)\n      ) {\n        setRegistered(false);\n      } else {\n        setRegistered(true);\n        if (\n          role &&\n          role !== Roles.carrierGuest &&\n          !(props.userDetails && props.userDetails.mobileNumber)\n        ) {\n          push('/app/manage/ProfileDetails/edit');\n        }\n      }\n      const { status, message } = props.getRegisterUserStatus;\n      const carrierId = props.userDetails && props.userDetails.carrierId;\n      if (status && !carrierId) {\n        setShowCarrierAlert(status);\n        setMessage('Do you want to register as a carrier?');\n        setRegistered(false);\n      }\n      if (!status && message) {\n        setShowCarrierAlert(!status);\n        setMessage(message);\n        buttons = [\n          {\n            text: 'Yes',\n            role: 'ok',\n            handler: () => {\n              setShowCarrierAlert(false);\n            }\n          }\n        ];\n      }\n\n      // Analytics implementation for successful/failed registration\n      if (status) {\n        logEvent(EVENT.UE_REGISTER_SUCCESS, { screen: SCREEN.REGISTRATION });\n      } else {\n        logEvent(EVENT.UE_REGISTER_FAILED, { screen: SCREEN.REGISTRATION });\n      }\n    }\n  }, [props.userDetails, props.getRegisterUserStatus]);\n\n  useEffect(() => {\n    if (isNetworkAvailable) {\n      props.storeAccessToken(IONICWrapper.details.auth.tokens);\n      console.log(props.getOfflineData);\n      if (props.getOfflineData === null) {\n        const keys = Object.keys(offlineJSON);\n        keys.forEach((key: any) => {\n          let newKey;\n          if (key === 'UserId') {\n            newKey = IONICWrapper.details.auth.user.upn;\n          } else {\n            return;\n          }\n          offlineJSON[newKey] = offlineJSON[key];\n          delete offlineJSON[key];\n        });\n        props.createOfflineJSON(offlineJSON);\n      }\n      // Check whether UserId exists once user logged out and login back (considering UserId data wipes out at logout)\n      // else if (\n      //   props.getOfflineData !== null &&\n      //   !props.getOfflineData.UserId &&\n      //   !props.getOfflineData[IONICWrapper.details.auth.user.upn]\n      // ) {\n      //   const key = IONICWrapper.details.auth.user.upn;\n      //   let newOfflineJSON = { ...props.getOfflineData };\n      //   newOfflineJSON[key] = offlineJSON.UserId;\n      //   props.createOfflineJSON(newOfflineJSON);\n      // }\n      if (props.getOfflineData && props.getOfflineData.configVer) {\n        props.initializeModule(props.getOfflineData.configVer);\n      }\n    }\n    myLoadData();\n  }, [isNetworkAvailable, props.getOfflineData]);\n\n  useEffect(() => {\n    console.log(props.getSearchParams);\n    const role =\n      props.userDetails &&\n      props.userDetails.userApplicationDetails &&\n      props.userDetails.userApplicationDetails[0] &&\n      props.userDetails.userApplicationDetails[0].roles &&\n      props.userDetails.userApplicationDetails[0].roles[0] &&\n      props.userDetails.userApplicationDetails[0].roles[0].roleName;\n    if (\n      props.getSearchParams &&\n      props.getSearchParams.RecentSearch === true &&\n      (role === Roles.carrierDispatcher || role === Roles.carrierGuest)\n    ) {\n      const modelRecent: Recent = new Recent();\n      modelRecent.userID = (props.userDetails && props.userDetails.userPrincipalName) || '';\n      modelRecent.carrierId = (props.userDetails && props.userDetails.carrierId) || '';\n      modelRecent.page = 0;\n      modelRecent.size = 10;\n      props.recentLoads(modelRecent.getRequestPayload(), false);\n    }\n  }, [props.getSearchParams && props.getSearchParams.RecentSearch]);\n\n  useEffect(() => {\n    const role =\n      props.userDetails &&\n      props.userDetails.userApplicationDetails &&\n      props.userDetails.userApplicationDetails[0] &&\n      props.userDetails.userApplicationDetails[0].roles &&\n      props.userDetails.userApplicationDetails[0].roles[0] &&\n      props.userDetails.userApplicationDetails[0].roles[0].roleName;\n    if (\n      props.getSearchParams &&\n      props.getSearchParams.FavouriteSearch === true &&\n      (role === Roles.carrierDispatcher || role === Roles.carrierGuest)\n    ) {\n      const modelFavorite: Favorite = new Favorite();\n      modelFavorite.userID = (props.userDetails && props.userDetails.userPrincipalName) || '';\n      modelFavorite.carrierId = (props.userDetails && props.userDetails.carrierId) || '';\n      modelFavorite.page = 0;\n      modelFavorite.size = 10;\n      props.favoriteLoads(modelFavorite.getFavoritePayload(), false);\n    }\n  }, [props.getSearchParams && props.getSearchParams.FavouriteSearch]);\n\n  useEffect(() => {\n    const role =\n      props.userDetails &&\n      props.userDetails.userApplicationDetails &&\n      props.userDetails.userApplicationDetails[0] &&\n      props.userDetails.userApplicationDetails[0].roles &&\n      props.userDetails.userApplicationDetails[0].roles[0] &&\n      props.userDetails.userApplicationDetails[0].roles[0].roleName;\n    if (\n      getShipmentParams &&\n      getShipmentParams.shipment === true &&\n      (role === Roles.carrierDriver || role === Roles.carrierDispatcher)\n    ) {\n      const isDriver = !isEntitled('myLoad', 'carrierAssigned');\n      const _model: ExicutionLoads = new ExicutionLoads();\n      _model.carrierId = props.userDetails.carrierId;\n      if (isDriver) {\n        _model.driverId = props.userDetails.userPrincipalName;\n      }\n      _model.filter = {\n        carrierAssigned: isEntitled('myLoad', 'carrierAssigned'),\n        driverAssigned: true,\n        driverAssignmentPending: true,\n        inTransit: true,\n        delivered: true\n      };\n      props.fetchShipments(_model.getRequestPayload());\n    }\n  }, [getShipmentParams && getShipmentParams.shipment]);\n\n  //  checks network status  and update in redux store.\n  const netWorkCheck = () => {\n    Network.getStatus().then((status: NetworkStatus) => {\n      props.updateNetworkStatus(status);\n    });\n  };\n\n  const redirectionToDriverDetailPage = (_load: any) => {\n    _load ? push(deepLinkURI) : ToastMessage.show(ISSUE_WITH_ASSIGNED_LOAD, 'bottom', 2000);\n    cleanNotification();\n  };\n\n  const cleanNotification = () => {\n    sethasUpdateLoads(false);\n    props.clearDeepLinkURI();\n  };\n\n  // DONT REMOVE BELOW COMMENTED CODE....\n\n  // const checkUserIdInOfflineData = () : boolean => {\n  //   let check = false;\n  //   const keys = Object.keys(props.getOfflineData);\n  //       keys.forEach((key: any) => {\n  //         if(key === IONICWrapper.details.auth.user.upn){\n  //           check = true;\n  //         }\n  //       })\n  //       return check;\n  // }\n\n  const offlineDataPerUserStart = () => {\n    const { searchParams, shipmentParams } = props.getOfflineData[\n      IONICWrapper.details.auth.user.upn\n    ];\n    props.findSearchData(props.userDetails.carrierId, searchParams);\n    props.findShipmentInfo(IONICWrapper.details.auth.user.upn, shipmentParams);\n  };\n\n  const showNetworkError = () => {\n    props.showAlert({\n      isShowAlert: true,\n      alertMessage: PLEASE_CHECK_NETOWRK_CONNCTIVITY_MESSAGE,\n      alertTitle: NO_NEWORK\n    });\n  };\n  console.log(props.getOfflineData, props.getConfigParams);\n\n  const registerUser = (userInput: any) => {\n    const _model: UserDetails = new UserDetails();\n    const { userDetails = {} } = props;\n    const token =\n      (IONICWrapper.details.auth && IONICWrapper.details.auth.tokens.access_token) || '';\n    const requestPayload = {\n      email: userDetails.userPrincipalName,\n      firstName: userInput.firstName,\n      lastName: userInput.lastName,\n      mobileNumber: userInput.mobileNumber,\n      companyName: userInput.companyName,\n      corporateZipCode: userInput.corporateZipCode,\n      carrierUsDotNo: userInput.carrierUsDotNo,\n      carrierMcNo: userInput.carrierMcNo,\n      roles: userInput.role\n    };\n    props.registerUser(token, _model.registerMember(requestPayload));\n  };\n  const myLoadNotificationFlow = () => {\n    const isDriverAssignedLoad = deepLinkURI.includes('DriverAssigned');\n    const isCarrierAssignedLoad = deepLinkURI.includes('CarrierAssigned');\n    const isIntransitLoad = deepLinkURI.includes('shipmentUpdateScreen');\n\n    const currentShipmentID = deepLinkURI.substring(\n      deepLinkURI.lastIndexOf('/') + 1,\n      deepLinkURI.length\n    );\n\n    const load: any = isDriverAssignedLoad\n      ? driverAssignedLoads.find((load: any) => load.shipmentId === currentShipmentID)\n      : isCarrierAssignedLoad\n      ? carrierAssignedLoads.find((load: any) => load.shipmentId === currentShipmentID)\n      : isIntransitLoad\n      ? inTransitLoads.find((load: any) => load.shipmentId === currentShipmentID)\n      : null;\n\n    if (load || hasUpdateLoads) {\n      if (isIntransitLoad) shipmentForStartTrip(load);\n      redirectionToDriverDetailPage(load);\n    } else if (props.userDetails && props.userDetails.carrierId && isNetworkAvailable && !load) {\n      const _model: ExicutionLoads = new ExicutionLoads();\n      const isDriver = !isEntitled('myLoad', 'carrierAssigned');\n\n      _model.carrierId = props.userDetails.carrierId;\n      _model.filter = {\n        carrierAssigned: isCarrierAssignedLoad,\n        driverAssigned: isDriverAssignedLoad,\n        inTransit: isIntransitLoad\n      };\n\n      if (isDriver) {\n        _model.driverId = props.userDetails.userPrincipalName || '';\n      }\n\n      props.fetchDriverShipments(_model.getRequestPayload(), false, () => {\n        let module = '';\n        if (isCarrierAssignedLoad) {\n          module = MODULES.CARRIER_ASSIGNED_MODULE;\n        } else if (isDriverAssignedLoad) {\n          module = MODULES.DRIVER_ASSIGNED_MODULE;\n        } else if (isIntransitLoad) {\n          module = MODULES.INTRANSIT_MODULE;\n        }\n        const getShipmentmodel: GetShipment = new GetShipment();\n        getShipmentmodel.shipmentIds = currentShipmentID;\n        props.buyLoadShipmentRequest({\n          query: getShipmentmodel.getRequestShipmentPayload(),\n          currentShipmentID,\n          module,\n          isPullToRefresh: false\n        });\n      });\n    }\n  };\n\n  const manageUserNotificationFlow = (notificationData: any) => {\n    if (notificationData && notificationData.type) {\n      if (notificationData.type === MANAGE_USER_REQUEST) {\n        const { requestedCarrierId: carrierId, carrierName, roles = '' } = notificationData;\n        const transfer = {\n          isRequested: true,\n          details: {\n            carrierId,\n            carrierName: carrierName || carrierId,\n            roles\n          }\n        };\n        props.transferRequest({ transfer });\n        push(notificationData.deepLinkURI, {\n          transfer\n        });\n        return true;\n      }\n      props.resetUsersLoaded();\n    }\n    push(deepLinkURI, { resetLoaded: true });\n    cleanNotification();\n  };\n  const navigate = async () => {\n    const { Browser } = Plugins;\n    await Browser.open({ url: 'https://schneidercarriers.com/' });\n    setShowCarrierAlert(false);\n    setRegistered(true);\n  };\n  const authService = useAuthService();\n  const azureLogout = async () => {\n    setMemberApiError();\n    if (isPlatform('capacitor')) {\n      GPSWrapper.details.stopGPS();\n    }\n    await clear();\n    await authService.logout();\n    const _clear = new LogIn();\n    _clear.clearToken();\n  };\n  return (\n    <>\n      <IonLoading\n        isOpen={loading}\n        spinner={null}\n        message={`<img src= 'assets/images/Schneider_Spinner-transparent.gif' className='loader-image' />`}\n        show-backdrop={false}\n        cssClass=\"loader-message\"\n      />\n      <Alert\n        title={props.alertTitle}\n        isOpen={props.isShowAlert}\n        message={props.alertMessage}\n        close={() => {\n          props.hideAlert();\n        }}\n        dismiss={() => {\n          props.hideAlert();\n        }}\n      />\n      {props.isShowPermissionAlert ? (\n        <PermissionAlert\n          title={props.permissionAlertTitle}\n          isOpen={props.isShowPermissionAlert}\n          message={props.permissionAlertMessage}\n          close={props.closePermissionAlert}\n        />\n      ) : null}\n      <IonToast\n        isOpen={!!props.apiError}\n        message={props.apiError}\n        duration={5000}\n        color=\"dark\"\n        onDidDismiss={() => {\n          props.clearApiResponseError();\n        }}\n      />\n      <IonAlert\n        isOpen={memberApiError}\n        message={MEMBER_API_ERROR_MESSAGE}\n        backdropDismiss\n        mode=\"ios\"\n        header=\"Alert!\"\n        cssClass=\"register-alert\"\n        buttons={[\n          {\n            text: 'ok',\n            role: 'ok',\n            handler: async () => {\n              azureLogout();\n            }\n          }\n        ]}\n      />\n\n      {isRegistered ? (\n        <RootLevelTabs isBarBottom={props.hiddenbarBottom} />\n      ) : (\n        <>\n          <IonAlert\n            isOpen={showCarrierAlert}\n            message={message}\n            backdropDismiss\n            header=\"Type of User\"\n            mode=\"ios\"\n            cssClass=\"carrier-alert\"\n            buttons={buttons}\n          />\n          <RegisterComponent\n            registerUser={registerUser}\n            showAlert={showAlert}\n            isNetworkAvailable={isNetworkAvailable}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  loading: getLoading(),\n  isShowPermissionAlert: getShowPermissionAlert(),\n  permissionAlertMessage: getPermissionAlertMessage(),\n  permissionAlertTitle: getPermissionAlertTitle(),\n  hiddenbarBottom: makeDriverAssign(),\n  deepLinkURI: getDeepLinkURI(),\n  data: makeSelectRecommended(),\n  userDetails: getUserDetails(),\n  deviceResult: getDeviceRegistrationResult(),\n  alertTitle: getAlertTitle(),\n  alertMessage: getAlertMessage(),\n  isShowAlert: getShowAlert(),\n  driverAssignedLoads: getDriverAssignedLoads(),\n  carrierAssignedLoads: getCarrierAssignedLoads(),\n  isNetworkAvailable: getNetworkStatus(),\n  getOfflineData: getOfflineData(),\n  getConfigParams: getConfigParams(),\n  getSearchParams: getSearchParams(),\n  getShipmentParams: getShipmentParams(),\n  getConfirmStartStatus: getRegisterUserStatusMessage(),\n  notificationData: getNotificationData(),\n  inTransitLoads: getInTransitLoads(),\n  apiError: getApiErrorMessage(),\n  recentLoadsData: makeRecent(),\n  favoriteLoadsData: makeFavorite(),\n  getRegisterUserStatus: getRegisterUserStatusMessage(),\n  memberApiError: getMemberApiError()\n});\n\nconst mapDispatchToProps = (dispatch: Function) => ({\n  updateGpsCoordinates: (data: any) => dispatch(updateGpsCoordinates(data)),\n  closePermissionAlert: () => dispatch(closePermissionAlert()),\n  showPermissionAlert: (data: any) => dispatch(showPermissionAlert(data)),\n  clearDeepLinkURI: () => dispatch(clearDeepLinkURI()),\n  getUserDetails: (token: string, data: any) => dispatch(fetchUserDetails({ token, body: data })),\n  initializeModule: (lastVer: string) => dispatch(initializeOfflineModule(lastVer)),\n  createOfflineJSON: (jsonObj: any) => dispatch(createOfflineJSON(jsonObj)),\n  updateOfflineContent: (updatedContent: any) => dispatch(updateOfflineContent(updatedContent)),\n  findSearchData: (carrierId: string, searchParams: any) =>\n    dispatch(findSearchData({ carrierId, searchParams })),\n  findShipmentInfo: (carrierId: string, searchParams: any) =>\n    dispatch(findShipmentInfo({ carrierId, searchParams })),\n  fetchDriverShipments: (query: any, isHideLoader = true, callback: any) =>\n    dispatch(driverAssignedLoadsFromPush({ query, isHideLoader, callback })),\n  fetchShipments: (details: any) => dispatch(fetchShipments(details, false)),\n  updateNetworkStatus: (data: any) => dispatch(updateNetworkStatus(data)),\n  hideAlert: () => dispatch(hideAlert()),\n  getMoreTabContent: (data: any) => dispatch(getMoreTabContent(data)),\n  showAlert: (data: any) => dispatch(showAlert(data)),\n  myLoadData: () => dispatch(MyLoadCard()),\n  recentLoads: (recentSearch: any, isHideLoader: boolean) =>\n    dispatch(GetrecentData(recentSearch, isHideLoader)),\n  favoriteLoads: (favoriteSearch: any, isHideLoader: boolean) =>\n    dispatch(getFavoriteData(favoriteSearch, isHideLoader)),\n  storeAccessToken: (token: any) => dispatch(storeAccessToken(token)),\n  registerUser: (token: string, data: any) => {\n    dispatch(registerUser({ token, body: data }));\n  },\n  shipmentForStartTrip: (shipment: any) => {\n    dispatch(shipmentForStartTrip(shipment));\n    dispatch(shipmentForStartTripTimestamp(new Date().getTime().toString()));\n  },\n  transferRequest: (payload: any) => dispatch(transferRequest(payload)),\n  resetUsersLoaded: () => dispatch(resetLoadedStatus()),\n  clearApiResponseError: () => {\n    dispatch(clearApiResponseError());\n  },\n  setMemberApiError: () => dispatch(showMemberApiError(false)),\n\n  buyLoadShipmentRequest: (payload: any, renderCallback: Function) =>\n    dispatch(buyLoadShipmentRequest(payload, renderCallback))\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\n\nconst withReducer = useInjectReducer({ key, reducer });\nconst favReducer = useInjectReducer({\n  key: 'Favorite',\n  reducer: favoriteReducer\n});\nconst recentInjectReducer = useInjectReducer({\n  key: 'recent',\n  reducer: recentReducer\n});\n\nconst withSaga = useInjectSaga({ key, saga });\nconst searchInjectSaga = useInjectSaga({ key: 'search', saga: searchSaga });\nconst myLoadInjectSaga = useInjectSaga({ key: 'myload', saga: myLoadSaga });\n\n//experimental fix is provided with the following statement.\nconst carrierAssignedSaga = useInjectSaga({ key: 'carrierAssigned', saga: carrierAssigned });\n\nexport default compose(\n  withSaga,\n  searchInjectSaga,\n  carrierAssignedSaga,\n  myLoadInjectSaga,\n  withReducer,\n  favReducer,\n  recentInjectReducer,\n  withConnect\n)(React.memo(App));\n","import {\n    Plugins,\n    PushNotification,\n    PushNotificationToken,\n    PushNotificationActionPerformed,\n} from '@capacitor/core';\n\nimport { getItem, setItem } from '../utils/common';\nimport { store } from \"../store\";\nimport { SaveDeepLinkURI } from '../actions/Login/action'\nimport { registerDeviceToken } from '../actions/App/action';\nimport { DeviceRegister } from '../models/home/DeviceRegister.model'\nexport const usePushNotification = () => {\n    const { PushNotifications, Device } = Plugins;\n    const { FCMPlugin } = Plugins;\n    let userDetails: { carrierId: String; email: String; mobileNumber: String; userPrincipalName: String };\n    let registerPush = (_userDetails: any) => {\n        userDetails = _userDetails;\n        // Register with Apple / Google to receive push via APNS/FCM\n        if (PushNotifications.requestPermissions)\n            PushNotifications.register();\n        else {\n            PushNotifications.requestPermission().then(() => {\n                PushNotifications.register();\n            })\n        }\n\n        addPushListeners();\n    }\n\n    let addPushListeners = async () => {\n        PushNotifications.removeAllListeners();\n        // On succcess, we should be able to receive notifications\n        PushNotifications.addListener('registration',\n            async (token: PushNotificationToken) => {\n\n                try {\n                    // 1. when app launch call GetDevice token method - getDeviceToken().\n                    let deviceToken = await getItem('deviceToken')\n                    let newToken: string = \"\";\n                    // if (isPlatform('android')) {\n                    //     newToken = token.value;\n                    // } else {\n                    //     await FCMPlugin.getToken().then((res: any) => {\n                    //         newToken = res.token;\n                    //         console.log(\"TOEKEN:\", newToken);\n                    //         setItem('deviceToken', res.token);\n                    //     });\n\n                    // }\n                    newToken = token.value;\n                    console.log(\"App Push Registration Done: device Token from Device\", deviceToken.value);\n\n                    if (deviceToken.value !== newToken) {\n                        console.log('App Push Registration Done.:First App Launch', newToken);\n                        let deviceID = await Device.getInfo();\n                        let __deviceRegister = new DeviceRegister();\n                        await setItem('deviceToken', newToken);// \n                        __deviceRegister.uuid = deviceID.uuid;\n                        __deviceRegister.upn = userDetails && userDetails.userPrincipalName || \"\";\n                        __deviceRegister.carrierId = userDetails && userDetails.carrierId//\"TruckStop11234\";\n                        __deviceRegister.deviceOs = deviceID.operatingSystem;\n                        __deviceRegister.deviceOsVersion = deviceID.osVersion;\n                        __deviceRegister.email = userDetails && userDetails.email;//\"abc@schneider.com\";\n                        __deviceRegister.phone = userDetails && userDetails.mobileNumber || \"\"\n                            && userDetails.mobileNumber.trim().replace('+', '') || \"\";//\"635214789\";\n                        __deviceRegister.deviceToken = newToken;\n\n                        // TODO : deviceID.uuid \n                        store.dispatch(registerDeviceToken(__deviceRegister.getRequestPayload()));\n                    }\n                    console.log('App Push Registration Done.:Sub Sequent App Launch')\n                    deviceToken = await getItem('deviceToken')\n                }\n                catch (e) {\n                    console.log('App Registration Catch Error.', e)\n                }\n\n            }\n        );\n\n        // Some issue with your setup and push will not work\n        PushNotifications.addListener('registrationError',\n            (error: any) => {\n            }\n        );\n\n        // Show us the notification payload if the app is open on our device\n        PushNotifications.addListener('pushNotificationReceived',\n            (notification: PushNotification) => {\n                console.log('pushNotificationReceived, token:' + JSON.stringify(notification));\n                presentAlertConfirm(notification)\n            }\n        );\n\n        // Method called when tapping on a notification\n        PushNotifications.addListener('pushNotificationActionPerformed',\n            (notification: PushNotificationActionPerformed) => {\n                console.log('pushNotificationActionPerformed, token: ' + JSON.stringify(notification.notification));\n                store.dispatch((SaveDeepLinkURI(notification.notification.data)));\n\n            }\n        );\n    }\n\n    const presentAlertConfirm = (notification: any) => {\n        const alert = document.createElement('ion-alert');\n        // alert.cssClass = 'my-custom-class';\n        alert.header = notification.title || \"Driver Assigned\";\n        alert.message = `${notification.body}`;\n        alert.buttons = [\n            {\n                text: 'View Now',\n                role: 'Ok',\n                cssClass: \"firstBtn\",\n                handler: () => {\n                    store.dispatch((SaveDeepLinkURI(notification.data)));\n                }\n            },\n            {\n                text: 'View Later',\n                role: 'Cancel',\n                cssClass: \"secondBtn\",\n                handler: () => {\n                }\n            }\n        ];\n\n        document.body.appendChild(alert);\n        return alert.present();\n    }\n    const unRegisterPush = () => {\n        PushNotifications.removeAllListeners();\n    }\n\n    return {\n        registerPush,\n        unRegisterPush\n    }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { isPlatform } from \"@ionic/react\";\nimport * as Constants from \"../../../../utils/constants\";\n\nconst SplashHOC: React.FC<any> = React.memo(({ WrappedComponent }) => {\n  const [splash, showSplash] = useState(true);\n  useEffect(() => {\n    if (isPlatform(\"capacitor\")) {\n      const timer = setTimeout(() => {\n        showSplash(false);\n      }, Constants.splashShowDuration);\n      return () => clearTimeout(timer);\n    } else {\n      showSplash(false);\n    }\n  }, []);\n\n  return splash ? (\n    <div>\n      <div className=\"splash_screen\">\n        <img src= {Constants.splashImage}/>\n      </div>\n    </div>\n  ) : WrappedComponent\n});\n\nexport default React.memo(SplashHOC);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { defineCustomElements } from '@ionic/pwa-elements/loader';\nimport { Provider } from \"react-redux\";\nimport { IonApp, isPlatform } from \"@ionic/react\";\n\n\n/* Core CSS required for Ionic components to work properly */\nimport \"@ionic/react/css/core.css\";\n\n/* Basic CSS for apps built with Ionic */\nimport \"@ionic/react/css/normalize.css\";\nimport \"@ionic/react/css/structure.css\";\nimport \"@ionic/react/css/typography.css\";\n\n/* Optional CSS utils that can be commented out */\nimport \"@ionic/react/css/padding.css\";\nimport \"@ionic/react/css/float-elements.css\";\nimport \"@ionic/react/css/text-alignment.css\";\nimport \"@ionic/react/css/text-transformation.css\";\nimport \"@ionic/react/css/flex-utils.css\";\nimport \"@ionic/react/css/display.css\";\n\n/* Theme variables */\nimport \"theme/variables.css\";\nimport { store } from \"./app/store\";\nimport { PrivateRoute } from './app/containers/PrivateRoute';\nimport { Bugsnag } from \"./app/utils/Bugsnag\";\nimport { App } from 'app';\nimport SplashHOC from './app/components/app/hoc/splash/SplashHOC';\nimport { GPSWrapper } from './app/utils/common';\n\nconst AppContainer: React.FC = () => {\n\n  const { ErrorBoundary } = Bugsnag();\n  \n  if (isPlatform(\"capacitor\")) {\n    GPSWrapper.details.initiateGPSconfig();\n  }\n  \n  return (\n    <ErrorBoundary>\n      <SplashHOC WrappedComponent={\n        <Provider store={store}>\n            <IonApp>\n              <PrivateRoute component={App} />\n            </IonApp>\n         </Provider>} />\n    </ErrorBoundary>\n  );\n};\n\nReactDOM.render(<AppContainer />, document.getElementById('root'));\ndefineCustomElements(window);\n","import React from 'react';\nimport bugsnag from '@bugsnag/js'\nimport bugsnagReact from '@bugsnag/plugin-react'\nimport { KEYS, APP_VERSION } from '../utils/constants';\n\n\nexport const Bugsnag = () => {\n\n    const bugsnagClient = bugsnag(\n        { \n            apiKey: KEYS.BUGSNAG_KEY, \n            appVersion: APP_VERSION,\n            releaseStage: KEYS.RELEASE\n        });\n    bugsnagClient.use(bugsnagReact, React);\n\n    const ErrorBoundary = bugsnagClient.getPlugin('react');\n\n    return { bugsnagClient, ErrorBoundary }\n}"],"sourceRoot":""}